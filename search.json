[{"title":"[qt] 静态编译","url":"/2020/03/27//articles/2020/03/27/1585316204000.html/","content":"\n<a href=\"https://blog.csdn.net/u012822903/article/details/62058287\" target=\"_blank\">Ubuntu14.04下静态编译Qt</a>\n\n(1)装g++\n```\nsudo apt-get install g++\n```\n\n(2)配置需要的安装包\n```\nsudo apt-get install -y build-essential libpcap0.8-dev libx11-dev libfreetype6-dev libavahi-gobject-dev libfontconfig1-dev\n```\n\n<details>\n<summary>(3)进入qt源码目录，采用root用户</summary>\n\n```\n./configure \\\n-static \\\n-v \\\n-prefix /opt/qt5.7.0_static \\\n-release \\\n-opensource \\\n-make libs \\\n-xplatform linux-arm-gnueabi-g++ \\\n-optimized-qmake \\\n-pch \\\n-qt-sql-sqlite \\\n-qt-zlib \\\n-qt-libpng \\\n-qt-libmng \\\n-qt-libjpeg \\\n-qt-sql-sqlite \\\n-skip qt3d \\\n-skip qtcanvas3d \\\n-skip qtpurchasing \\\n-no-opengl \\\n-no-sse2 \\\n-no-openssl \\\n-no-nis \\\n-no-cups \\\n-no-glib \\\n-no-iconv \\\n-nomake examples \\\n-nomake tools \\\n-nomake demos \\\n-skip qtvirtualkeyboard \\\n-I/opt/tslib1.4/include \\\n-L/opt/tslib1.4/lib\n```\n</details>\n\n(4)没问题之后，这一步时间较长\n```\nmake -j8\n```\n\n(5)没问题后安装\n```\nmake install\n```\n\n(6)配置环境变量，修改/etc/profile文件，结尾追加\n```\nQTDIR=/opt/qt5.7.0_static/\nPATH=$QTDIR/bin:$PATH\nMANPATH=$QTDIR/doc/man:$MANPATH\nLD_LIBRARY_PATH=$QTDIR/lib:$LD_LIBRARY_PATH\nexport QTDIR PATH MANPATH LD_LIBRARY_PATH\n\n/etc/profile\n```\n\n三、静态编译Qt程序\n(1)比如现在有一个test.cpp文件\n\n(2)生成.pro文件\n```\n/opt/qt5.7.0_static/bin/qmake -project\n```\n(3)修改.pro文件，在里面加上\n```\nCONFIG+=static\n```\n(4)生成Makefile文件\n```\n/opt/qt5.7.0_static/bin/qmake\n```\n(5)修改Makefile文件\n```\n在CXXflags选项后面加上 -static\n```\n(6)生成可执行二进制文件\n```\nmake\n```\n(7)查看可执行文件test，一般的代码会有十几兆\n```\nls -lh\n```\n","tags":["qt"]},{"title":"[android] 图片拍照上传","url":"/2020/03/27//articles/2020/03/27/1585304015000.html/","content":"<a href=\"https://www.jianshu.com/p/26d29e187f89\" target=\"_blank\">Android拍照或从本地选择图片上传</a>\n","tags":["android"]},{"title":"[android] gradle配置","url":"/2020/03/27//articles/2020/03/27/1585304014000.html/","content":"\n\n```\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-4.6-all.zip\n```\n\n{project}/gradle.properties\n```\nsystemProp.https.proxyHost=mirrors.neusoft.edu.cn\nsystemProp.http.proxyPort=80\n```\n\n```\nbuildscript {\n\n    repositories {\n        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}\n        google()\n        jcenter()\n    }\n\n}\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        mavenCentral()\n        maven { url \"https://jitpack.io\" }\n        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}\n    }\n}\n```","tags":["android"]},{"title":"[arm] 交叉编译opencv","url":"/2020/03/27//articles/2020/03/27/1585304013000.html/","content":"\n<a href=\"https://blog.csdn.net/qq_30155503/article/details/79983630\" target=\"_blank\">Ubuntu上交叉编译opencv及opencv_contrib并移植到ARM板之一</a>\n\n安装cmake及cmake-gui编译工具：\n```\nsudo apt-get install -y cmake cmake-qt-gui\n```\n\n其他依赖库：\n```\nsudo apt-get install -y build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libjasper-dev\n\nsudo apt-get install -y libtiff4-dev\n```\n\n\n```\nsudo cmake-gui\n```\n\n配置\n```\nwhere is the source code：\n/home/machine/work/opencv/opencv-3.4.3\n\nwhere is to build the binaries：\n/home/machine/work/opencv/opencv-3.4.3/build-arm\n```\n\n配置编译器：\n```\n点击Configure弹出CMakeSetup框\n\n\nOperating System 输入：\nLinux\n\nProcessor 输入：\narm\n\nC 输入arm-none-linux-gnueabi-gcc路径：\n/usr/local/arm/arm-2014.05/bin/arm-none-linux-gnueabi-gcc\n\nC++路径：\n/usr/local/arm/arm-2014.05/bin/arm-none-linux-gnueabi-g++\n\nTarget Root输入：\n/usr/local/arm/arm-2014.05/bin\n#/usr/local/arm/arm-2014.05/lib\n```\n\n\n勾上\n```\nBUILD_JPEG\nBUILD_PNG\n\nBUILD_ZLIB\n```\n\n配置安装目录\n```\nCMAKE_INSTALL_PREFIX\n\n/usr/local/arm/opencv-arm\n```\n\n执行配置，生成Makefile\n```\n配置完成，再次点击 Configure，点 Generate\n```\n\n```\ncd /home/machine/work/opencv/opencv-3.4.3/build-arm/\nsudo make -j16\n```\n\n修改编译目录下的 CMakeCache.txt 文件：\n```\n#第291行\nCMAKE_EXE_LINKER_FLAGS:STRING= -pthread -lrt -ldl\n```\n\n```\nsudo make install\n```\n\n安装依赖\n```\nsudo apt-get install -y build-essential checkinstall cmake pkg-config yasm gfortran git\nsudo apt-get install -y libjpeg8-dev libjasper-dev libpng12-dev\nsudo apt-get install -y libtiff5-dev\nsudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev\nsudo apt-get install -y libxine2-dev libv4l-dev\nsudo apt-get install -y libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev\nsudo apt-get install -y libqt4-dev libgtk2.0-dev libtbb-dev\nsudo apt-get install -y libatlas-base-dev\nsudo apt-get install -y libfaac-dev libmp3lame-dev libtheora-dev\nsudo apt-get install -y libvorbis-dev libxvidcore-dev\nsudo apt-get install -y libopencore-amrnb-dev libopencore-amrwb-dev\nsudo apt-get install -y x264 v4l-utils\nsudo apt-get install -y libprotobuf-dev protobuf-compiler\nsudo apt-get install -y libgoogle-glog-dev libgflags-dev\nsudo apt-get install -y libgphoto2-dev libeigen3-dev libhdf5-dev doxygen\n```\n\n<a href=\"https://github.com/opencv/opencv_contrib/releases/tag/3.4.3\" target=\"_blank\">安装opencv_contrib扩展库</a>\n```\nwget https://github.com/opencv/opencv_contrib/archive/3.4.3.tar.gz\ntar xvf 3.4.3.tar.gz;mv opencv_contrib-3.4.3 /home/machine/work/opencv/\n```\n\ncmake-gui配置opencv_contrib位置\n```\nOPENCV_EXTRA_MODULES_PATH\n\n/home/machine/work/opencv/opencv_contrib-3.4.3/modules\n```\n\n```\nmake\nmake install\n```\n\n人脸数据库\n```\nhttps://github.com/betars/Face-Resources\n```\n\n\n```\nls /usr/local/arm/opencv-arm/lib\n```\n","tags":["arm"]},{"title":"[vbox] 无法安装增强功能","url":"/2020/03/27//articles/2020/03/27/1585304012000.html/","content":"\n实测用：\nubuntu设置屏幕分辨率\n```\nxrandr --output Virtual1 --mode 1440x900\n```\n\n\n以下无用：\n```\nCould not mount the media/drive 'VBoxGuestAdditions.iso' (VERR_PDM_MEDIA_LOCKED).\n```\n\n先弹出VBoxGuestAdditions.iso，再手动挂载和安装\n```\nsudo mkdir -p /media/cdrom\nsudo mount -t auto /dev/cdrom /media/cdrom/\ncd /media/cdrom/\nsudo sh VBoxLinuxAdditions.run\n```\n\n运行VBoxLinuxAdditions.run，手动安装增强功能。安装成功后。可以建立共享目录了：\n```\n我的做法简单，与网络上大家方法差不多。\n1, 在Windows下建立一个文件夹 ShareToUbuntu\n2, 在Ubuntu下建立一个文件夹 ShareToWin\n3, Ubuntu下执行命令\nsudo mount -t vboxsf ShareToUbuntu ShareToWin\n\n```\n\n","tags":["vbox"]},{"title":"[ubuntu] 设置分辨率","url":"/2020/03/27//articles/2020/03/27/1585304011000.html/","content":"\nubuntu设置屏幕分辨率\n```\nxrandr --output Virtual1 --mode 1440x900\n```\n","tags":["ubuntu"]},{"title":"[qt] windows平台opencv","url":"/2020/03/27//articles/2020/03/27/1585304010000.html/","content":"\n<a href=\"https://www.jianshu.com/p/c244c9d01fe0\" target=\"_blank\">Qt+OpenCV环境搭建</a>\n\n","tags":["qt"]},{"title":"[qt] opencv图像文字识别","url":"/2020/03/27//articles/2020/03/27/1585304009000.html/","content":"\n<a href=\"https://blog.csdn.net/bingkuoluo/article/details/103793240#comments\" target=\"_blank\">OpenCV 文字识别（一）：图像预处理</a>\n\n\n<a href=\"https://blog.csdn.net/xuxunjie147/article/details/87178774\" target=\"_blank\">OpenCV 文字检测与识别模块</a>\n","tags":["qt"]},{"title":"[qt] opencv图片相似度对比","url":"/2020/03/27//articles/2020/03/27/1585304008000.html/","content":"\n<a href=\"https://blog.csdn.net/qq_33548747/article/details/88089575\" target=\"_blank\">判断两张图的相似度</a>\n\n\n<a href=\"https://blog.csdn.net/bingkuoluo/article/details/89318372\" target=\"_blank\">OpenCV（2）：用Vs+Qt制作一个显示两张图片的窗口程序</a>\n<a href=\"https://blog.csdn.net/bingkuoluo/article/details/89389035\" target=\"_blank\">OpenCV(3):用Vs+Qt制作一个查看图片相似度的窗口程序</a>\n\n\n","tags":["qt"]},{"title":"[opencv] 图片相似度对比","url":"/2020/03/27//articles/2020/03/27/1585304007000.html/","content":"\n<a href=\"https://blog.csdn.net/wangyaninglm/article/details/43853435\" target=\"_blank\">OpenCV进行图像相似度对比的几种办法</a>\n\n","tags":["opencv"]},{"title":"[nginx] 支持websocket","url":"/2020/03/27//articles/2020/03/27/1585304006000.html/","content":"\n```\nproxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection \"upgrade\";\nproxy_read_timeout; #表明连接成功以后等待服务器响应的时候，如果不配置默认为60s；\n```\n","tags":["nginx"]},{"title":"[android] opencv图片相似度对比","url":"/2020/03/27//articles/2020/03/27/1585304005000.html/","content":"\n<a href=\"https://blog.csdn.net/qq_27378951/article/details/101543122\" target=\"_blank\">android 使用opencv4 图片相似度对比</a>\n<a href=\"https://pan.baidu.com/s/1R1bJdPmqJkPue5pgryGAEw\" target=\"_blank\">OpenCv2.zip</a>\n```\n提取码：\nus1f\n```\n\n库\n```\nhttps://opencv.org/releases/\nhttps://sourceforge.net/projects/opencvlibrary/files/4.2.0/opencv-4.2.0-android-sdk.zip\n```\n\n<a href=\"https://www.jianshu.com/p/7aad275745e1\" target=\"_blank\">AndroidStudio+OpenCv开发环境搭建</a>\n\n","tags":["android"]},{"title":"[ubuntu] 安装opencv","url":"/2020/03/26//articles/2020/03/26/1585231059000.html/","content":"\n<a href=\"https://blog.csdn.net/ksws0292756/article/details/79511170\" target=\"_blank\">Ubuntu 16.04 安装opencv的各种方法（含opencv contrib扩展包安装方法）</a>\n\n选用3.4.3版本\n```\nhttps://github.com/opencv/opencv/releases\n\n下载opencv源码包\nhttps://opencv.org/releases.html\n```\n\n\n```\nsudo apt-get install -y libgtk2.0-dev pkg-config\n\n# 安装cmake\nsudo apt-get install -y cmake\n\n# 安装关联库\nsudo apt-get install -y python-dev python-opencv python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev\n```\n\n生成make文件\n```\nwget https://github.com/opencv/opencv/archive/3.4.3.zip\nunzip 3.4.3.zip;\n\nwget https://github.com/opencv/opencv/archive/3.4.3.tar.gz\ntar xvf 3.4.3.tar.gz;\n\n# 进入opencv文件夹\ncd opencv-3.4.3\n# 创建build文件夹\nmkdir build\n# 进入build文件夹\ncd build\n\n#cmake指令，如果没有特殊要求建议就选择默认的就可以\n#注意，后面的两个点千万不能省，代表了上级目录\ncmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..\n```\n\n编译安装\n```\nmake -j8\nsudo make install\n```\n\n配置\n```\nsudo vim /etc/ld.so.conf.d/opencv.conf\n#追加\n/usr/local/lib\n```\n接着执行\n```\nsudo ldconfig\n```\n\n```\nsudo vim /etc/bash.bashrc\n#在最末尾添加\nPKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig\nexport PKG_CONFIG_PATH\n```\n保存，执行如下命令使得配置生效\n```\nsource /etc/bash.bashrc\n```\n\n验证\n```\n进入源码目录->进入sample目录->进入cpp目录\n在这个目录会看到很多cpp文件，每一个文件都是一个demo，我们把其中一个文件通过g++编译出来，就可以直接运行来看结果了。\n例如，编译image.cpp文件，生成image目标文件\n\ng++ `pkg-config --cflags opencv` -o image image.cpp `pkg-config --libs opencv`\n\n./image\n```\n\n其它示例：\n```\ng++ `pkg-config opencv --cflags --libs opencv` -o test test.cpp -I /usr/local/include/opencv -L /usr/local/lib -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_objdetect -lopencv_imgcodecs\n```\n\n在QtCreator IDE下使用OpenCV\n1、新建一个Qt控制台工程\n\n2、在新建的工程中打开.pro文件，添加上以下代码：\n```\nINCLUDEPATH += /usr/local/include \\\n               /usr/local/include/opencv \\\n               /usr/local/include/opencv2\n\nLIBS += /usr/local/lib/libopencv*\n```\n3、在main.cpp中添加上一下代码：\n```\n#include <QCoreApplication>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n\n#include <opencv2/imgproc/imgproc.hpp>\n\nusing namespace cv;\nint main(int argc, char *argv[])\n{\n    namedWindow( \"src\", WINDOW_AUTOSIZE );\n    Mat src1 = imread(\"/home/machine/work/test.jpg\" );\n    while(1)\n    {\n        imshow( \"src\", src1 );\n        char c =  waitKey(30);\n        if( 27==c )\n            return 0;\n    }\n}\n```\n","tags":["ubuntu"]},{"title":"[springboot] jpa封装返回layui数据表","url":"/2020/03/26//articles/2020/03/26/1585231058000.html/","content":"\ncontroller\n```\n    @ResponseBody\n    @PostMapping(value = \"/findAll\")\n    public Object findAll(@RequestParam Map<String, Object> params) {\n        int page = Integer.parseInt(params.get(\"page\").toString());\n        int limit = Integer.parseInt(params.get(\"limit\").toString());\n        Pageable pageable = new PageRequest(page, limit);\n\n        return service.findAll(pageable);\n    }\n```\n\nservice\n```\n    public Map<String,Object> findAll(Pageable pageable) {\n        Page<MainControl> all = dao.findAll(pageable);\n\n        Map<String,Object> result = new HashMap<>();\n        result.put(\"totalElements\", all.getTotalElements());\n        result.put(\"content\", all.getTotalPages());\n\n        Map<String,Object> resultMap = new HashMap<>();\n        resultMap.put(\"code\", true);\n        resultMap.put(\"data\", result);\n        return resultMap;\n    }\n```\n\n```\ntable.render({\n    elem: '#dataTable',\n    url: '/mainControl/findAll/',\n    toolbar: '#toolbar',\n    method: 'post',\n    limit: 10,//注意：请务必确保 limit 参数（默认：10）是与你服务端限定的数据条数一致\n    page: true,\n    request: {\n        pageName: 'page',//页码的参数名称，默认：page\n        limitName: 'limit' //每页数据量的参数名，默认：limit\n    },\n    response: {\n        statusName: 'code',//规定数据状态的字段名称，默认：code\n        statusCode: true //规定成功的状态码，默认：0\n    },\n    parseData: function (res) { //res 即为原始返回的数据\n        return {\n            code: res.code,\n            data: res.data.content, //解析数据列表\n            count: res.data.totalElements\n        };\n    },\n});\n```\n","tags":["springboot"]},{"title":"[linux] 模拟can","url":"/2020/03/26//articles/2020/03/26/1585230861000.html/","content":"\n<a href=\"https://www.cnblogs.com/spoorer/p/6649303.html\" target=\"_blank\">CAN总线要点</a>\n\n<a href=\"https://blog.csdn.net/KingOfMyHeart/article/details/97241402\" target=\"_blank\">在机器上ubuntu 16.04装了一个虚拟的can,名字为vcan</a>\n```\nsudo ip link add dev vcan0 type vcan\nsudo ip link set dev vcan0 down\nsudo ip link set vcan0 mtu 72 \nsudo ip link set dev vcan0 up\nifconfig\n```\n\n<details>\n<summary>send.c</summary>\n\n```\n//发送数据\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n#include <net/if.h>\n#include <sys/ioctl.h>\n#include <sys/socket.h>\n#include <linux/can.h>\n#include <linux/can/raw.h>\n\nint main()\n{\n\tint s, nbytes;\n\tstruct sockaddr_can addr;\n\tstruct ifreq ifr;\n\tstruct can_frame frame[2] = {{0}};\n\ts = socket(PF_CAN, SOCK_RAW, CAN_RAW);//创建套接字\n\tstrcpy(ifr.ifr_name, \"vcan0\" );\n\tioctl(s, SIOCGIFINDEX, &ifr); //指定 can0 设备\n\taddr.can_family = AF_CAN;\n\taddr.can_ifindex = ifr.ifr_ifindex;\n\tbind(s, (struct sockaddr *)&addr, sizeof(addr));//将套接字与 can0 绑定\n\t//禁用过滤规则,本进程不接收报文,只负责发送\n\tsetsockopt(s, SOL_CAN_RAW, CAN_RAW_FILTER, NULL, 0);\n\t//生成两个报文\n\tframe[0].can_id = 0x11;\n\tframe[0]. can_dlc = 1;\n\tframe[0].data[0] = 'Y';\n\tframe[0].can_id = 0x22;\n\tframe[0]. can_dlc = 1;\n\tframe[0].data[0] = 'N';//循环发送两个报文\n\twhile(1)\n\t{\n\t\tnbytes = write(s, &frame[0], sizeof(frame[0]));\n\t\t//发送 frame[0]\n\t\tif(nbytes != sizeof(frame[0]))\n\t\t{\n\t\t\tprintf(\"Send Error frame[0]\\n!\");\n\t\t\tbreak; //发送错误,退出\n\t\t}\n\t\tsleep(1);\n\t\tnbytes = write(s, &frame[1], sizeof(frame[1]));\n\t\tif(nbytes != sizeof(frame[0]))\n\t\t{\n\t\t\tprintf(\"Send Error frame[1]\\n!\");\n\t\t\tbreak;\n\t\t}\n\tsleep(1);\n\t}\n\n\tclose(s);\n\treturn 0;\n}\n```\n</details>\n\n<details>\n<summary>receive.c</summary>\n\n```\n//接收数据\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n#include <net/if.h>\n#include <sys/ioctl.h>\n#include <sys/socket.h>\n#include <linux/can.h>\n#include <linux/can/raw.h>\n\nint main()\n{\n\tint s, nbytes;\n\tstruct sockaddr_can addr;\n\tstruct ifreq ifr;\n\tstruct can_frame frame;\n\tstruct can_filter rfilter[1];\n\ts = socket(PF_CAN, SOCK_RAW, CAN_RAW); //创建套接字\n\tstrcpy(ifr.ifr_name, \"vcan0\" );\n\tioctl(s, SIOCGIFINDEX, &ifr); //指定 can0 设备\n\taddr.can_family = AF_CAN;\n\taddr.can_ifindex = ifr.ifr_ifindex;\n\tbind(s, (struct sockaddr *)&addr, sizeof(addr)); //将套接字与 can0 绑定\n\t//定义接收规则,只接收表示符等于 0x11 的报文\n\trfilter[0].can_id= 0x11;\n\trfilter[0].can_mask = CAN_SFF_MASK;\n\t//设置过滤规则\n\tsetsockopt(s,SOL_CAN_RAW,CAN_RAW_FILTER,&rfilter,sizeof(rfilter));\n\twhile(1)\n\t{\n\t\tnbytes = read(s,&frame,sizeof(frame));\n\t\t//接收报文//显示报文\n\t\tif(nbytes > 0)\n\t\t{\n\t\t\tprintf(\"ID=0x%x DLC=%d data[0]=0x%x\\n\",frame.can_id,frame.can_dlc,frame.data[0]);\n\t\t}\n\t}\n\n\tclose(s);\n\treturn 0;\n}\n```\n</details>\n\n<details>\n<summary>cantool</summary>\n\n<a href=\"http://velep.com/wp-content/uploads/cantool.zip\" target=\"_blank\">cantool.zip</a>\n```\nwget http://velep.com/wp-content/uploads/cantool.zip;\nunzip cantool.zip;\n./cantool -p 2 -t 10 -g\n```\ncantool.c\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n#include <net/if.h>\n#include <sys/ioctl.h>\n#include <sys/socket.h>\n#include <linux/can.h>\n#include <linux/can/raw.h>\n\nint main(int argc, char **argv)\n{\n\n\tS_CanFrame sendframe, recvframe;\n\tbyte *psendframe = (byte *)&sendframe;\n\tbyte *precvframe = (byte *)&recvframe;\n\tu_canframe_data_t *psend_data = (u_canframe_data_t *)sendframe.data;\n\tconst int can_frame_len = sizeof(S_CanFrame);\n\n\tpid_t pid = -1;\n\n\tint   status;\n\n\tint  ret = 0;\n\n\tchar buf[128] = {0};\n\n\tbool carry_bit = false;// 进位标志\n\n\tint segment_id;//id for shared memo\n\n\n\tif (parse_options(argc, argv)) {\n\t\tusage();\n\t\treturn  0;\n\t}\n\n\n\tif (!find_can(port))\n\t{\n\t\tsprintf(buf, \"\\n\\t错误：CAN%d设备不存在\\n\\n\", port + 1);\n\t\tpanic(buf);\n\t\treturn  -1;\n\t}\n\n\tclose_can(port);// 必须先关闭CAN，才能成功设置CAN波特率\n\tset_bitrate(port, bitrate);// 操作CAN之前，先要设置波特率\n\topen_can(port, bitrate);\n\n\tsend_socket_fd = socket_connect(port);\n\trecv_socket_fd = socket_connect(port);\n\n    //printf(\"send_socket_fd = %d, recv_socket_fd = %d\\n\", send_socket_fd, recv_socket_fd);\n\tif (send_socket_fd < 0 || send_socket_fd < 0)\n\t{\n\t\tdisconnect(&send_socket_fd);\n\t\tdisconnect(&recv_socket_fd);\n\t\tpanic(\"\\n\\t打开socket can错误\\n\\n\");\n\t\treturn  -1;\n\t}\n\n\tset_can_filter();\n\tset_can_loopback(send_socket_fd, lp);\n\tprintf_head();\n\tmemset(&sendframe, 0x00, sizeof(sendframe));\n\tmemset(&recvframe, 0x00, sizeof(recvframe));\n\n\tif (extended_frame) // 指定发送帧类型：扩展帧或标准帧\n\t{\n\t\tsendframe.can_id = (send_frame_id & CAN_EFF_MASK) | CAN_EFF_FLAG;\n\t}\n\n\telse {\n\t\tsendframe.can_id = (send_frame_id & CAN_SFF_MASK);\n\t}\n\n\tsendframe.can_dlc = dlc;\n\tmemcpy(sendframe.data, send_frame_data, dlc);\n\n\tsegment_id = shmget(IPC_PRIVATE, sizeof(int), S_IRUSR | S_IWUSR);// allocate memo\n\tpframeno = (int *)shmat(segment_id, NULL, 0);// attach the memo\n\n\tif (pframeno == NULL) {\n\t\tpanic(\"\\n\\t创建共享内存失败\\n\\n\");\n\t\treturn  -1;\n\t}\n\n\t*pframeno = 1;\n\n\trun = true;\n\n\tpid = fork();\n\n\tif (pid == -1) {\n\t\tpanic(\"\\n\\t创建进程失败\\n\\n\");\n\t\treturn  -1;\n\t}\n\n\t// 子进程，用于发送CAN帧\n\telse if (pid == 0) {\n\t\twhile (run && (send_frame_times > 0))\n\t\t{\n\n\t\t\tret = send_frame(send_socket_fd, (char *)&sendframe, sizeof(sendframe));\n\n\t\t\tprintf_frame(\n\t\t\t    sendframe.can_id & CAN_EFF_MASK,\n\t\t\t    sendframe.data,\n\t\t\t    sendframe.can_dlc,\n\t\t\t    ((sendframe.can_id & CAN_EFF_FLAG) ? true : false),\n\t\t\t    ret > 0 ? true : false,\n\t\t\t    true);\n\n\t\t\tdelay_ms(send_frame_freq_ms);\n\n\t\t\tif (send_frame_id_inc_en) {\n\t\t\t\tsendframe.can_id++;\n\t\t\t\tif (extended_frame) {\n\t\t\t\t\tsendframe.can_id = (sendframe.can_id & CAN_EFF_MASK) | CAN_EFF_FLAG;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsendframe.can_id = (sendframe.can_id & CAN_SFF_MASK);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (send_frame_data_inc_en && dlc > 0) {\n\n\t\t\t\tif (dlc > 4 && psend_data->s.dl == ((__u32)0xFFFFFFFF))\n\t\t\t\t{\n\t\t\t\t\tcarry_bit = true;// 发生进位\n\t\t\t\t}\n\n\t\t\t\tpsend_data->s.dl++;\n\n\t\t\t\tif (dlc <= 4)\n\t\t\t\t{\n\t\t\t\t\tif (psend_data->s.dl >= (1 << (dlc * 8)))\n\t\t\t\t\t{\n\t\t\t\t\t\tpsend_data->s.dl = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse if (dlc <= 8)\n\t\t\t\t{\n\n\t\t\t\t\tif (carry_bit)\n\t\t\t\t\t{\n\t\t\t\t\t\tpsend_data->s.dh++;\n\t\t\t\t\t\tif (psend_data->s.dh >= (1 << ((dlc - 4) * 8)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpsend_data->s.dh = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcarry_bit = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsend_frame_times--;\n\t\t}\n\t\texit(0);\n\t}\n\n\t// 父进程，接收CAN帧\n\telse {\n\n\t\tinstall_sig();\n\n\t\twhile (run) {\n\n\t\t\tmemset(precvframe, 0x00, can_frame_len);\n\n\t\t\tret = recv_frame(recv_socket_fd, precvframe, can_frame_len, 5 * 1000);\n\n\t\t\tif (ret > 0) {\n\n\t\t\t\tprintf_frame(\n\t\t\t\t    recvframe.can_id & CAN_EFF_MASK,\n\t\t\t\t    recvframe.data,\n\t\t\t\t    recvframe.can_dlc,\n\t\t\t\t    ((recvframe.can_id & CAN_EFF_FLAG) ? true : false),\n\t\t\t\t    true,\n\t\t\t\t    false);\n\t\t\t}\n\t\t}\n\n\t\twhile (((pid = wait(&status)) == -1) && (errno == EINTR)) {\n\t\t\tdelay_ms(10);\n\t\t}\n\t}\n\n\n\tdisconnect(&send_socket_fd);\n\tdisconnect(&recv_socket_fd);\n\tshmdt(pframeno);// detach memo\n\tshmctl(segment_id, IPC_RMID, NULL);// remove\n\treturn  0;\n}\n```\n</details>\n\n<details>\n<summary>用C++实现一个SocketCan的通信：</summary>\n\nsocketcan.h\n```\n#pragma once\n#include \"data_adapter.h\"\n#include <iostream>\n#include <sys/socket.h>\n#include <ney/if.h>\n#include <sys/ioctl.h>\n#include <linux/can.h>\n#include <linux/can/raw.h>\n#include <unistd.h>\n#include \"toml_parser.h\"\n\n\ntypedef can_frame SockCanFrame;//message\ntypedef can_filter CanFilter;//filt\n\nclass SocketCan : public DataAdapter {\npublic:\n  SocketCan(TomlParser *conf, std::shared_ptr<cpptoml::table> table);\n  ~SocketCan();\n  bool Read(pb::can_msgs::CanMessageStamped &msg);\n  bool Write(const pb::can_msgs::CanMessageStamped &msg);\n\nprivate:\n  int sockfd_;\n  std::string can_name_; //can口\n  bool ready_;\n  \nprivate:\n  int Connect();\n  void Disconnect()\n  {\n    ready_ = false;\n    if (sockfd_ > 0) {\n      close(sockfd_);\n      sockfd_ = -1;\n    }\n  }\n};\n```\n</details>\n\n<details>\n<summary>socketcan.cpp</summary>\n\n```\n#include \"socketcan.h\"\nstatic const uint64_t KNanosecondPerSecond = 1000000000UL;\nstatic const uint16_t KNanosecondPerMicroSecond = 1000;\n\nconst unsigned int kMaxRetryTimes = 5;\nconst unsigned int kBindRetryInterval = 1;\nSocketCan::SocketCan(TomlParser *conf, std::shared_ptr<cpptoml::table> table):sockfd_(-1),ready_(false) {\n  assert(conf != nullptr);\n  assert(table != nullptr);\n  can_name_ =\n      conf->ParseStringsByTable(table, \"param\", \"device=can1\");\n}\n\n\n//create sockfd and  bind \nint SocketCan::Connect(){\n\n  sockfd_ = socket(PF_CAN, SOCK_RAW, CAN_RAW);\n  if (sockfd_ < 0) {\n    return sockfd_;\n  }\n  struct ifreq ifr;\n  strncpy(ifr.ifr_name, can_name_.c_str(), can_name_.length() + 1);\n  ioctl(sockfd_, SIOCGIFINDEX, &ifr);\n\n  struct sockaddr_can addr;\n  addr.can_family = AF_CAN;\n  addr.can_ifindex = ifr.ifr_ifindex;\n\n  int res = -1;\n  uint8_t count = 0;\n  while (count < kMaxRetryTimes) {\n    ++count;\n    res = bind(sockfd_, (struct sockaddr *)&addr, sizeof(addr));\n    if (-1 == res) {\n      sleep(kBindRetryInterval);\n      continue;\n    } else {\n      break;\n    }\n\n  }\n    if (-1 == res) {\n    close(sockfd_);\n    sockfd_ = -1;\n    return sockfd_;\n    }\n   ready_ = true;\n   return sockfd_;\n\n}\n\nSocketCan::~SocketCan() {\n  Disconnect();\n}\n\nbool SocketCan::Read(pb::can_msgs::CanMessageStamped &msg) {\n    if (Connect()<0){\n      return false;\n    }\n    SockCanFrame fram;\n    int nbytes = read(sockfd_,&fram,sizeof(fram));\n    if( nbytes < 0){\n      return false;\n    }\n    msg.mutable_msg()->set_id(fram.can_id);\n    msg.mutable_msg()->set_dlc(fram.can_dlc);\n    msg.mutable_msg()->set_extended(false);\n    msg.mutable_msg()->set_data(fram.data, sizeof(fram.data));\n    return true;\n}\n\nbool SocketCan::Write(const pb::can_msgs::CanMessageStamped &msg) {\n  if (Connect()<0){\n      return false;\n    }\n\n    SockCanFrame fram;\n    fram.can_id = msg.msg().id;\n    fram.can_dlc = msg.msg().dlc;\n    fram.data = msg.msg().data;\n\n    int nbytes = write(sockfd_,&fram,sizeof(fram));\n    if(nbytes != sizeof(fram)){\n      return false;\n    }\n    return true;\n}\n```\n</details>","tags":["linux"]},{"title":"[linux] jdk8","url":"/2020/03/26//articles/2020/03/26/1585230860000.html/","content":"\n<a href=\"https://pan.baidu.com/s/1GZnUwB3nraObgperKlmBCg\" target=\"_blank\">jdk-8u221-linux-x64.tar.gz</a>\n```\n提取码：\n17xx\n```\n\n<a href=\"https://pan.baidu.com/s/12ST8ti0zJ5spIGah8fbdpg\" target=\"_blank\">jdk-8u141-linux-x64.tar.gz</a>\n```\n提取码:\nhrjd\n```\n","tags":["linux"]},{"title":"[arm] qt5.7配置arm开发环境","url":"/2020/03/26//articles/2020/03/26/1585230859000.html/","content":"\n\n<a href=\"https://www.cnblogs.com/windfall/p/5405185.html\" target=\"_blank\">交叉编译安装ARM平台上的Qt</a>\n```\nsudo apt-get install libx11-dev libxext-dev libxtst-dev\n```\n\n<a href=\"https://blog.csdn.net/singleroot/article/details/54378078\" target=\"_blank\">QT5.7.0 arm开发环境搭建</a>\n\nQt Versions\n```\nQt5.7.0(qt5.7.0) /opt/qt5.7.0/bin/qmake\n```\n\n编译器\n```\n名称：GCC(arm)\n编译器路径：/usr/local/arm/arm-2014.05/bin/arm-none-linux-gnueabi-g++\n```\n\nDebuggers\n```\nName：arm(gdb)\nPath：/usr/local/arm/arm-2014.05/bin/arm-none-linux-gnueabi-gdb\n```\n\n构建套件（kit）\n```\n名称：arm\n设备类型：桌面\n设备：Local PC（桌面 类型的默认设备）\nSysRoot：/opt/qt5.7.0/bin\n编译器：GCC(arm)\nQt版本： Qt5.7.0(qt5.7.0)\nQt mkspec：\nCmake Tool：System CMake at /usr/bin/cmake\n```\n","tags":["arm"]},{"title":"[ubuntu] ubuntu16安装openjdk7","url":"/2020/03/22//articles/2020/03/22/1584808281000.html/","content":"\n<a href=\"https://www.cnblogs.com/bluestorm/p/5677625.html\" target=\"_blank\">Ubuntu16.04 安装openjdk-7-jdk</a>\n\noracle openjdk ppa source\n```\nsudo add-apt-repository ppa:openjdk-r/ppa\nsudo apt-get update\nsudo apt-get install openjdk-7-jdk\nsudo apt-get install openjdk-7-jre\n```\n","tags":["ubuntu"]},{"title":"[springboot] jpa建表指定charset","url":"/2020/03/22//articles/2020/03/22/1584808279000.html/","content":"<a href=\"https://blog.csdn.net/u011930705/article/details/89155489\" target=\"_blank\">1.关于jpa自动建表 DEFAULT CHARSET=latin1 的简单解决方法</a>\n```\n@Component\n@SuppressWarnings(\"deprecation\")\npublic class MysqlConfig extends MySQL5InnoDBDialect {\n\t@Override\n\tpublic String getTableTypeString() {\n\t\treturn \"ENGINE=InnoDB DEFAULT CHARSET=utf8\";\n\t}\n}\n```\n\n2.把application.properties文件中的下面第一句注释替换为上面新建类就可以了：\n```\n#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\nspring.jpa.properties.hibernate.dialect=com.neo.util.MysqlConfig\n```\n\n3.然后去mysql看看show create table 表名：\n```\nDEFAULT CHARSET=utf8\n```\n","tags":["springboot"]},{"title":"[springboot] docker+fastdfs","url":"/2020/03/22//articles/2020/03/22/1584808278000.html/","content":"\n拉取镜像\n```\ndocker pull morunchang/fastdfs\n```\n\n运行tracker\n```\ndocker run -d --name tracker -p 22122:22122 --restart=always --privileged=true --net=host --network=bridge morunchang/fastdfs sh tracker.sh\n```\n\n```\ndocker exec -it tracker /bin/bash\nps -ef|grep fdfs\n/data/fastdfs/tracker/fdfs_trackerd /etc/fdfs/tracker.conf\ncat /etc/fdfs/tracker.conf | grep -v \"#\" | grep -v \"^$\"\ncat /etc/fdfs/mod_fastdfs.conf | grep -v \"#\" | grep -v \"^$\"\n```\n\n用于查看tracker ip，方便storage指定tracker地址\n```\ndocker inspect -f='{{.Name}} {{.NetworkSettings.IPAddress}} {{.HostConfig.PortBindings}}' $(docker ps -aq)\n\n```\n\n\n运行storage\n```\ndocker run -d --name storage -p 18080:8080 --restart=always --privileged=true --net=host -e TRACKER_IP=<your tracker server address>:22122 -e GROUP_NAME=<group name> morunchang/fastdfs sh storage.sh\n```\n解释\n```\n<your tracker server address> is the tracker server's host\n<group name> is the storage server's group name\n```\n\n\n执行示例\n```\ndocker run -d --name storage -p 18080:8080 --restart=always --privileged=true --net=host --network=bridge -e TRACKER_IP=172.17.0.2:22122 -e GROUP_NAME=group1 morunchang/fastdfs sh storage.sh\n\ndocker exec -it storage /bin/bash\ncat /etc/fdfs/storage.conf | grep -v \"^#\" | grep -v \"^$\"\ncat /etc/fdfs/client.conf | grep -v \"^#\" | grep -v \"^$\"\ncat /etc/fdfs/http.conf | grep -v \"^#\" | grep -v \"^$\"\n\nps -ef|grep -v grep|grep nginx\n\nnetstat -anp|grep -v grep|grep nginx\nnetstat -anp|grep -v grep|grep 22122\nnetstat -anp|grep -v grep|grep 23000\n```\n\n<a href=\"https://www.funtl.com/zh/apache-dubbo-codeing/FastDFS-%E5%AE%89%E8%A3%85.html#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\" target=\"_blank\">基于 Docker 安装 FastDFS</a>\n<a href=\"https://blog.csdn.net/W_Meng_H/article/details/85402879\" target=\"_blank\">fastDFS+SpringBoot实现文件上传和下载(防盗链)</a>\n\n\n<a href=\"https://www.jianshu.com/p/1038b4d95912\" target=\"_blank\">基于 Docker 安装 FastDFS</a>\n<a href=\"http://www.ityouknow.com/springboot/2018/01/16/spring-boot-fastdfs.html\" target=\"_blank\">使用 Spring Boot 集成 FastDFS</a>\n<a href=\"https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-fastDFS\" target=\"_blank\">spring-boot-fastDFS</a>\n\n","tags":["springboot"]},{"title":"[mysql] 永久设置编码utf8","url":"/2020/03/22//articles/2020/03/22/1584808277000.html/","content":"\n```\nvim /etc/my.cnf\n[mysqld]\ncharacter_set_server=utf8  \ninit_connect='SET NAMES utf8'  \n\nservice mysqld restart\n\nmysql -uroot -p\nshow variables like '%char%';\n```","tags":["mysql"]},{"title":"[mysql] 修改数据库表格式","url":"/2020/03/22//articles/2020/03/22/1584808276000.html/","content":"\n<a href=\"https://blog.csdn.net/hai_chao/article/details/79209408\" target=\"_blank\">修改数据库表编码格式</a>\n\n============== 查看表\n\n查看数据库编码格式：\n```\nshow variables like 'character_set_database';\n```\n\n```\nshow variables like \"char%\";\n\n\nSET character_set_server='utf8';\nSET character_set_database='utf8';\n\nSET character_set_client='utf8';\nSET character_set_connection='utf8';\nSET character_set_database='utf8';\n\nSET character_set_results='utf8';\nSET character_set_server='utf8';\nSET character_set_system='utf8';\n```\n\n查看数据表的编码格式：\n```\nshow create table <表名>;\n```\n\n============== 数据库\n\n创建数据库时指定数据库的字符集：\n```\ncreate database <数据库名> character set utf8;\n```\n修改数据库的编码格式：\n```\nalter database <数据库名> character set utf8;\n```\n查看数据库编码格式\n```\nshow create database <数据库名>\n```\n\n\n============== 变更表\n\n创建数据表时指定数据表的编码格式：\n```\ncreate table tb_books (\n    name varchar(45) not null,\n    price double,\n    bookCount int,\n    author varchar(45)\n) default charset = utf8;\n```\n\n将具体表的编码格式转换为utf8：\n```\nalter table <表名> CONVERT TO CHARACTER SET utf8;\n```\n\n============== 字段\n\n修改字段编码格式：\n```\nalter table <表名> change <字段名> <字段名> <类型> character set utf8;\nalter table user change username username varchar(20) character set utf8 not null;\n```\n\n在JDBC链接数据库时转换编码格式：\n```\njdbc:mysql://localhost:3306/db_test?useUnicode=true&characterEncoding=UTF-8\n```\n\n","tags":["mysql"]},{"title":"[docker] 单机配置fastdfs","url":"/2020/03/22//articles/2020/03/22/1584808275000.html/","content":"\n<a href=\"https://www.huaweicloud.com/kunpeng/software/fastdfs.html\" target=\"_blank\">鲲鹏社区 FastDFS</a>\n```\ndocker run --name test-fastdfs -p 10080:80 -p 22122:22122 --restart=always --privileged=true -d -i -t centos /bin/bash\ndocker attach test-fastdfs\n```\n\n<a href=\"https://www.cnblogs.com/wswind/p/11751829.html\" target=\"_blank\">CentOS 8 换源，设置dnf / yum镜像</a>\n```\n#aliyun更新了centos8的说明\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo\n\ncd /etc/yum.repos.d\n#备份\ncp CentOS-Base.repo CentOS-Base.repo.bak\ncp CentOS-AppStream.repo CentOS-AppStream.repo.bak\ncp CentOS-Extras.repo CentOS-Extras.repo.bak\n\nsed -i 's/mirrorlist=/#mirrorlist=/g' CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo\nsed -i 's/#baseurl=/baseurl=/g' CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo\nsed -i 's/http:\\/\\/mirror.centos.org/https:\\/\\/mirrors.aliyun.com/g' CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo\n\nyum update -y\n```\n\n2.配置编译环境\n1)安装FastDFS依赖环境\n```\nyum install -y gcc-c++\nyum install -y pcre pcre-devel openssl openssl-devel perl-devel net-tools wget make vim\n```\n2)安装FastDFS依赖包libfastcommon\n```\ncd /usr/local/src\nwget https://github.com/happyfish100/libfastcommon/archive/V1.0.38.tar.gz\ntar -zxvf V1.0.38.tar.gz\ncd libfastcommon-1.0.38/\n./make.sh\n./make.sh install\n```\n3)安装FastDFS\n```\ncd /usr/local/src\nwget https://github.com/happyfish100/fastdfs/archive/V5.11.tar.gz\ntar -zxvf V5.11.tar.gz\ncd fastdfs-5.11/\n./make.sh\n./make.sh install\n```\n4)将配置文件复制到系统为fdfs预设的目录\n```\ncd /usr/local/src/fastdfs-5.11/conf\ncp mime.types http.conf /etc/fdfs/\n```\n5)查看安装FastDFS过程中产生的可执行文件\n```\nls -la /usr/bin/fdfs*\n```\n\n6)配置FastDFS\n分别对tracker，storage，client进行配置\n\na.创建目录\n```\nmkdir /home/fastdfs/tracker -p\nmkdir /home/fastdfs/storage -p\n\n```\nb.配置tracker\n```\ncd /etc/fdfs/\ncp tracker.conf.sample tracker.conf\n\nvim tracker.conf\nport=22122\nbase_path=/home/fastdfs/tracker\nthread_stack_size = 128KB\n```\nc.启动tracker\n```\n/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf start\n```\nd.配置storage\n```\nifconfig\ncd /etc/fdfs/\ncp storage.conf.sample storage.conf\n\nvim storage.conf\nbase_path=/home/fastdfs/storage\nstore_path0=/home/fastdfs/storage\ntracker_server=XX.XX.XX.XX:22122\n```\ne.启动storage\n```\n/usr/bin/fdfs_storaged /etc/fdfs/storage.conf start\n```\nf.查看storage启动日志\n```\ntail -f /home/fastdfs/storage/logs/storaged.log\n```\ng.配置client\n```\nifconfig\ncd /etc/fdfs/\ncp client.conf.sample client.conf\n\nvim client.conf\nbase_path=/home/fastdfs/tracker\ntracker_server=XX.XX.XX.XX:22122\n```\n\n7)安装和配置fastdfs-nginx-module\na.安装fastdfs-nginx-module\n```\ncd /usr/local/src\nwget https://github.com/happyfish100/fastdfs-nginx-module/archive/V1.20.tar.gz\ntar -zxvf V1.20.tar.gz\n```\nb.配置fastdfs-nginx-module的“config”文件\n```\ncd /usr/local/src/fastdfs-nginx-module-1.20/src/\n\nvim config\n    ...\n    ngx_module_incs=\"/usr/include/fastdfs /usr/include/fastcommon/\"\n    ...\n    CORE_INCS=\"$CORE_INCS /usr/include/fastdfs /usr/include/fastcommon/\"\n```\n\nc.配置fastdfs-nginx-module的“mod_fastdfs.conf”文件\n```\nifconfig\ncp /usr/local/src/fastdfs-nginx-module-1.20/src/mod_fastdfs.conf /etc/fdfs/\n\nvim /etc/fdfs/mod_fastdfs.conf\nbase_path=/home/fastdfs\ntracker_server=XX.XX.XX.XX:22122\nurl_have_group_name = true\nstore_path0=/home/fastdfs/storage\n```\n\n8)安装和配置Nginx\na.安装Nginx\n```\ncd /usr/local/src/\nwget http://nginx.org/download/nginx-1.15.2.tar.gz\ntar -zxvf nginx-1.15.2.tar.gz;cd nginx-1.15.2\n./configure --prefix=/usr/local/nginx --add-module=/usr/local/src/fastdfs-nginx-module-1.20/src/\nmake && make install\n```\n\nb.配置Nginx\n```\ncd /usr/local/nginx/conf/\n\ngrep -v \"#\" nginx.conf | grep -v \"^$\"\n\nvim nginx.conf\n\nworker_processes  1;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n\n    server {\n        listen       80;\n        server_name  localhost;\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n        location ~/M00 {\n            root   /home/fastdfs/storage/data;\n            ngx_fastdfs_module;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n}\n```\n\n3.测试已完成编译的软件\n1)启动nginx\n```\ncd /usr/local/nginx/sbin/\n./nginx\n```\n2)测试\na.生成测试文件\n```\ncd /usr/local/src\necho \"kungpeng test fastdfs ok!\" > a.txt\n```\nb.生成文件链接\n```\n/usr/bin/fdfs_upload_file /etc/fdfs/client.conf a.txt\n\nfdfs_test /etc/fdfs/client.conf upload a.txt\n\ncurl http://127.0.0.1:80/group1/M00/00/00/rBEAAl50zWSAQw3dAAAAGmbRVtQ766.txt\n```\nc.在浏览器中输入以下网址，查看返回的“a.txt”相关信息\n```\n#nginx地址\nhttp://192.168.99.103:10080/\n\nhttp://192.168.99.103:10080/group1/M00/00/00/rBEAAl50zWSAQw3dAAAAGmbRVtQ766.txt\n```\n\n查看\n```\n/usr/bin/fdfs_monitor /etc/fdfs/storage.conf\n```\n\n配置文件\n```\n/etc/fdfs/tracker.conf\n/etc/fdfs/storage.conf\n/etc/fdfs/client.conf\n/etc/fdfs/mod_fastdfs.conf\n#防盗链\n/etc/fdfs/http.conf\n```\n\nlog文件\n```\ntail -f /home/fastdfs/tracker/logs/trackerd.log\ntail -f /home/fastdfs/storage/logs/storaged.log\ntail -f /usr/local/nginx/logs/error.log\n```\n\n\n重启\n```\n#重新启动 tracker\nps -ef | grep fdfs_ | grep -v grep |awk '{print $2}'|xargs kill -9\n/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf start\n/usr/bin/fdfs_storaged /etc/fdfs/storage.conf start\n\n\n#重新启动nginx\nps -ef | grep nginx | grep -v grep |awk '{print $2}'|xargs kill -9\n/usr/local/nginx/sbin/nginx\n```\n\n<a href=\"https://www.cnblogs.com/xiaolinstudy/p/9341779.html\" target=\"_blank\">防盗链配置</a>\n```\nmkdir -p /home/fastdfs/fastdfs/conf/\nwget https://img.zcool.cn/community/016d2355e50e606ac7251df85a9695.jpg@2o.jpg\nmv *.jpg anti-steal.jpg\n\ncd /etc/fdfs/\ngrep -v \"#\" http.conf | grep -v \"^$\"\n\nvim /etc/fdfs/http.conf\nhttp.default_content_type = application/octet-stream\nhttp.mime_types_filename=mime.types\nhttp.anti_steal.check_token=false\nhttp.anti_steal.token_ttl=900\nhttp.anti_steal.secret_key=FastDFS1234567890\nhttp.anti_steal.token_check_fail=/home/fastdfs/fastdfs/conf/anti-steal.jpg\nhttp.multi_range.enabed = true\n\n/usr/local/nginx/sbin/nginx -s reload\n```\n\n","tags":["docker"]},{"title":"[docker] windows下docker追加端口映射","url":"/2020/03/22//articles/2020/03/22/1584808274000.html/","content":"\n<a href=\"https://www.cnblogs.com/richerdyoung/p/10154753.html\" target=\"_blank\">追加docker容器端口映射的方法</a>\n\n```\ndocker commit test-fastdfs test-fastdfs:v1\ndocker rm test-fastdfs\ndocker run -d --name=test-fastdfs -p 10080:80 test-fastdfs:v1\ndocker exec -it test-fastdfs /bin/bash\n```\n","tags":["docker"]},{"title":"[arm] itop6818+QtE5.7移植","url":"/2020/03/22//articles/2020/03/22/1584808273000.html/","content":"\n<a href=\"https://gitee.com/BrighterEyer/itop6818-QtE5.7-files\" target=\"_blank\">itop6818-QtE5.7-files</a>\n\n<details>\n<summary>安装编译器</summary>\n\n```\nsudo apt-get install lib32z1 lib32ncurses5\n\nwget -c http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\nmkdir -p /usr/local/arm\ntar jxvf arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 -C /usr/local/arm/\n\n#编辑.bashrc\nvim /etc/profile\nexport PATH=$PATH:/usr/local/arm/arm-2014.05/bin\nexport CROSS_COMPILE=arm-none-linux-gnueabi-\nsource /etc/profile\n\n#检验版本\narm-none-linux-gnueabi-gcc -v\n```\n</details>\n\n<details>\n<summary>itop6818-QtE5.7-files中的qt5.7+tslib1.4</summary>\n\n```\ntar xvf itop6818-QtE5.7-files/qt5.7+tslib1.4/qt5.7.tar.gz\nrm -rf /opt/qt5.7.0\nmv qt-5.7.0 /opt/qt5.7.0\n\ntar xvf itop6818-QtE5.7-files/qt5.7+tslib1.4/tslib1.4.tar.gz\nrm -rf /opt/tslib1.4\nmv tslib1.4 /opt/tslib1.4\n\nunzip itop6818-QtE5.7-files/fonts.zip\nmv fonts /opt/qt5.7.0/lib/\n\ncd /usr/local/arm/arm-2014.05/arm-none-linux-gnueabi/libc/usr/lib/\n\ncp libstdc++.a /opt/qt5.7.0/lib/\ncp libstdc++.so /opt/qt5.7.0/lib/\ncp libstdc++.so.6.0.19 /opt/qt5.7.0/lib/\n\ncd /opt/qt5.7.0/lib/\nln -s libstdc++.so.6.0.19 libstdc++.so.6\n\nsudo apt-get install -y lib32c-dev lib32stdc++6\n```\n</details>\n\n<details>\n<summary>解压源码 tslib-1.4.tar.gz</summary>\n\n```\nsudo apt-get install -y autoconf automake libtool\n\ngit clone https://gitee.com/BrighterEyer/itop6818-QtE5.7-files;cd itop6818-QtE5.7-files\ntar xvf tslib-1.4.tar.gz;cd tslib\n./autogen.sh\n./configure CC=arm-none-linux-gnueabi-gcc CXX=arm-none-linux-gnueabi-g++ --host=arm-none-linux-gnueabi --prefix=/opt/tslib1.4 ac_cv_func_malloc_0_nonnull=yes\nmake\nsudo make install\n\nsudo vim /opt/tslib1.4/etc/ts.conf\n#第一行\nmodule_raw input\n\n#追加宏：\nvim /opt/tslib1.4/include/tslib.h\n#define SYN_MT_REPORT           2\n#define ABS_MT_SLOT             0x2f    /* MT slot being modified */\n#define ABS_MT_TOUCH_MAJOR      0x30    /* Major axis of touching ellipse */\n#define ABS_MT_TOUCH_MINOR      0x31    /* Minor axis (omit if circular) */\n#define ABS_MT_WIDTH_MAJOR      0x32    /* Major axis of approaching ellipse */\n#define ABS_MT_WIDTH_MINOR      0x33    /* Minor axis (omit if circular) */\n#define ABS_MT_ORIENTATION      0x34    /* Ellipse orientation */\n#define ABS_MT_POSITION_X       0x35    /* Center X touch position */\n#define ABS_MT_POSITION_Y       0x36    /* Center Y touch position */\n#define ABS_MT_TOOL_TYPE        0x37    /* Type of touching device */\n#define ABS_MT_BLOB_ID          0x38    /* Group a set of packets as a blob */\n#define ABS_MT_TRACKING_ID      0x39    /* Unique ID of initiated contact */\n#define ABS_MT_PRESSURE         0x3a    /* Pressure on contact area */\n#define ABS_MT_DISTANCE         0x3b    /* Contact hover distance */\n#define ABS_MT_TOOL_X           0x3c    /* Center X tool position */\n#define ABS_MT_TOOL_Y           0x3d    /* Center Y tool position */\n```\n</details>\n\n<details>\n<summary>安装gcc指定版本</summary>\n\n<a href=\"https://blog.csdn.net/ZHUQIUSHI123/article/details/90670126\" target=\"_blank\">安装gcc指定版本</a>\n```\n# 查看ubuntu系统上g++的版本：\nls /usr/bin/g++*\n\n# 安装新版gcc和g++\nsudo apt-get install gcc-4.8 g++-4.8\n\n# 切换不同版本\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20\n\n# 同理修改g++的方式类似：\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20\n```\n</details>\n\n<details>\n<summary>qmake.conf</summary>\n\nqt-everywhere-opensource-src-5.7.0\n```\ncd ~/\nwget http://download.qt.io/new_archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz\ntar xvf qt-everywhere-opensource-src-5.7.0.tar.gz;cd qt-everywhere-opensource-src-5.7.0\n\nvim qtbase/mkspecs/linux-arm-gnueabi-g++/qmake.conf\n```\n\nqtbase/mkspecs/linux-arm-gnueabi-g++/qmake.conf\n```\n## qmake configuration for building with arm-linux-gnueabi-g++\n#\nMAKEFILE_GENERATOR = UNIX\nCONFIG += incremental\nQMAKE_INCREMENTAL_STYLE = sublib\nQT_QPA_DEFAULT_PLATFORM = linux #eglfs\nQMAKE_CFLAGS_RELEASE += -O2 -march=armv7-a\nQMAKE_CXXFLAGS_RELEASE += -O2 -march=armv7-a\ninclude(../common/linux.conf)\ninclude(../common/gcc-base-unix.conf)include(../common/g++-unix.conf)\n# modifications to g++.conf\nQMAKE_CC = arm-none-linux-gnueabi-gcc\nQMAKE_CXX = arm-none-linux-gnueabi-g++\nQMAKE_LINK = arm-none-linux-gnueabi-g++\nQMAKE_LINK_SHLIB = arm-none-linux-gnueabi-g++\n# modifications to linux.conf\nQMAKE_AR = arm-none-linux-gnueabi-ar cqs\nQMAKE_OBJCOPY = arm-none-linux-gnueabi-objcopy\nQMAKE_NM = arm-none-linux-gnueabi-nm -P\nQMAKE_STRIP = arm-none-linux-gnueabi-strip\nload(qt_config)\n```\n</details>\n\n<details>\n<summary>编译 QtE5.7 源码 之 autoconfigure.sh</summary>\n\n```\nsource /etc/profile\n```\n\n```\nsed -i 's/\\r$//' configure\n```\n\nqt-everywhere-opensource-src-5.7.0/autoconfigure.sh\n```\n#!/bin/sh\n./configure \\\n-v \\\n-prefix /opt/qt5.7.0 \\\n-release \\\n-opensource \\\n-make libs \\\n-xplatform linux-arm-gnueabi-g++ \\\n-optimized-qmake \\\n-pch \\\n-qt-sql-sqlite \\\n-qt-libjpeg \\\n-qt-zlib \\\n-no-opengl \\\n-skip qt3d \\\n-skip qtcanvas3d \\\n-skip qtpurchasing \\\n-no-sse2 \\\n-no-openssl \\\n-no-nis \\\n-no-cups \\\n-no-glib \\\n-no-iconv \\\n-nomake examples \\\n-nomake tools \\\n-skip qtvirtualkeyboard \\\n-I/opt/tslib1.4/include \\\n-L/opt/tslib1.4/lib\n```\n\n\n```sh\napt-get install -y python\nchmod 777 autoconfigure.sh\n./autoconfigure.sh\nmake\nmake install\nls /opt/qt5.7.0\n```\n</details>\n\n开发工具<a href=\"http://download.qt.io/new_archive/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run\" target=\"_blank\">qt-opensource-linux-x64-5.7.0.run</a>\n\n<a href=\"https://blog.csdn.net/u012902367/article/details/87876079\" target=\"_blank\">Linux下的Qt环境搭建(arm交叉编译）</a>\n<a href=\"https://www.cnblogs.com/emouse/archive/2013/01/29/2881721.html\" target=\"_blank\">qtcreator配置arm</a>","tags":["arm"]},{"title":"[AndroidStudio] 问题INSTALL_FAILED_NO_MATCHING_ABIS","url":"/2020/03/22//articles/2020/03/22/1584808272000.html/","content":"\nAndroidStudio 解决Installation failed with message INSTALL_FAILED_NO_MATCHING_ABIS\n```\n\nandroid {\n    defaultConfig {\n        ndk {\n            //设置支持的SO库架构\n            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'\n        }\n    }\n    splits {\n        abi {\n            enable true\n            reset()\n            include 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'\n            universalApk true\n        }\n    }\n}\n```\n\n<a href=\"https://blog.csdn.net/heijinbaitu/article/details/80504019\" target=\"_blank\">Error:In declare-styleable FontFamilyFont, unable to find attribute android:font</a>\n```\ngradle :app:dependencies --configuration compile\ngradlew build --debug\n\ncompile 'com.android.support:design:26.0.0-alpha1'\n```\n\n","tags":["AndroidStudio"]},{"title":"[android] 实现拍照上传","url":"/2020/03/22//articles/2020/03/22/1584808271000.html/","content":"\n<a href=\"https://blog.csdn.net/qq_37564086/article/details/80662101\" target=\"_blank\">Android实现拍照相册图片上传功能</a>\n\n<a href=\"https://www.cnblogs.com/andzhang/p/6075814.html\" target=\"_blank\">文件上传</a>\n","tags":["android"]},{"title":"[springboot] logging配置","url":"/2020/03/16//articles/2020/03/16/1584355559000.html/","content":"\n<a href=\"https://www.jianshu.com/p/1fa12b92d5c4\" target=\"_blank\">Spring Boot Logging 配置</a>\n```\nlogging.level.root= WARN\nlogging.level.org.springframework.security= DEBUG\nlogging.level.org.springframework.web= ERROR\nlogging.level.org.hibernate= DEBUG\nlogging.level.org.apache.commons.dbcp2= DEBUG\n```\n\n```\nlogging:\n  level:\n    root: WARN  \n    org:\n      springframework:\n        security: DEBUG\n        web: ERROR  \n      hibernate: DEBUG\n      apache:\n        commons:\n          dbcp2: DEBUG\n```\n","tags":["springboot"]},{"title":"[java] 封装返回结果集","url":"/2020/03/16//articles/2020/03/16/1584355558000.html/","content":"\n<a href=\"https://blog.csdn.net/weixin_34233856/article/details/85989773\" target=\"_blank\">java返回结果集封装</a>\n```\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.io.Serializable;\n\npublic class Result<T> implements Serializable {\n\n    /**\n     * 版本\n     */\n    private static final long serialVersionUID = 1L;\n\n    private final static ObjectMapper objectMapper = new ObjectMapper();\n\n    /**\n     * 返回状态码\n     */\n    private int code;\n\n    /**\n     * 返回信息\n     */\n    private String msg;\n\n    /**\n     * 返回数据\n     */\n    private T data;\n\n    public Result() {\n\n    }\n\n    //构造方法\n    public Result(int code, String msg, T data) {\n        this.code = code;\n        this.msg = msg;\n        this.data = data;\n    }\n\n    //如果返回数据直接成功\n    public Result(T data) {\n        this.code = 200;\n        this.data = data;\n        this.msg = \"OK\";\n    }\n\n    //失败调用\n    public Result(int code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n\n    //成功直接返回数据和状态\n    public static <T> Result<T> ok(T data) {\n        return new Result<T>(data);\n    }\n\n    //失败的时候调用\n    public static <T> Result<T> error(int code, String msg) {\n        return new Result<T>(code, msg);\n    }\n\n    //转为JSON\n    public static <T> String toJSON(Result<T> result) {\n        String jsonStr = null;\n        try {\n            jsonStr = objectMapper.writeValueAsString(result);\n        } catch (JsonProcessingException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        return jsonStr;\n    }\n\n    public Integer getCode() {\n        return code;\n    }\n\n    public void setCode(Integer code) {\n        this.code = code;\n    }\n\n    public String getMsg() {\n        return msg;\n    }\n\n    public void setMsg(String msg) {\n        this.msg = msg;\n    }\n\n    public T getData() {\n        return data;\n    }\n\n    public void setData(T data) {\n        this.data = data;\n    }\n}\n```\n","tags":["java"]},{"title":"[极光推送] springboot+react-native+android","url":"/2020/03/16//articles/2020/03/16/1584355562000.html/","content":"<a href=\"https://blog.csdn.net/x541211190/article/details/81123829\" target=\"_blank\">【使用】极光推送Springboot微服务搭建教程</a>\n<a href=\"https://github.com/yindz/jpush-spring-boot-starter\" target=\"_blank\">jpush-spring-boot-starter</a>\n引入依赖：\n```\n<dependency>\n    <groupId>com.apifan.framework</groupId>\n    <artifactId>jpush-spring-boot-starter</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n</dependency>\n```\n\n```\njpush:\n  app-key: 123456789\n  master-secret: 123456789\n```\n\n使用范例\n```\n@Autowired\nprivate JPushHelper jPushHelper;\n\npublic void push(){\n    //消息内容    \n    String content = \"这是一条测试消息！\";\n    \n    //附加业务参数\n    Map<String, String> extras = new HashMap<>();\n    extras.put(\"bizCode\", \"123\");\n    \n    //根据设备ID推送\n    List<String> deviceIdList = new ArrayList<>();\n    deviceIdList.add(\"asdfghjkl\");\n    jPushHelper.pushToDevices(deviceIdList, content, extras);\n    \n    //根据别名推送\n    List<String> aliasList = new ArrayList<>();\n    aliasList.add(\"poiuytreqw\");\n    jPushHelper.pushToAliases(aliasList, content, extras);\n    \n    //根据标签推送\n    List<String> tagsList = new ArrayList<>();\n    tagsList.add(\"test-tag1\");\n    jPushHelper.pushToTags(tagsList, content, extras);\n    \n    //推送给全部客户端\n    jPushHelper.pushToAll(content, extras);    \n}\n```\n\n<a href=\"https://blog.csdn.net/weixin_41888813/article/details/101534866\" target=\"_blank\">基于SpringBoot搭建极光推送 Android 和 IOS 消息的简单Demo</a>\n\n<a href=\"https://www.jianshu.com/p/ba2c56727c0e\" target=\"_blank\">Android集成JPush极光推送</a>\n<a href=\"https://github.com/duoheshui/JpushAndroid\" target=\"_blank\">github eclipse JpushAndroid</a>\n\n<a href=\"https://www.jianshu.com/p/a71512a8f921\" target=\"_blank\">React Native 集成极光推送 jpush-react-native</a>\n","tags":["极光推送"]},{"title":"[springboot] 验证码","url":"/2020/03/16//articles/2020/03/16/1584355561000.html/","content":"<a href=\"https://segmentfault.com/a/1190000018742857\" target=\"_blank\">springboot登陆页面图片验证码简单的web项目</a>\n<a href=\"https://github.com/charmsongo/pictureverifycode\" target=\"_blank\">pictureverifycode</a>\n","tags":["springboot"]},{"title":"[springboot] freemarker","url":"/2020/03/12//articles/2020/03/12/1584008546000.html/","content":"\n<a href=\"https://blog.csdn.net/u011197448/article/details/83901306\" target=\"_blank\">springboot整合Freemark模板(详尽版)</a>\n","tags":["springboot"]},{"title":"[springboot] redis配置","url":"/2020/03/12//articles/2020/03/12/1584007015000.html/","content":"\n<a href=\"https://blog.csdn.net/gwd1154978352/article/details/79630245\" target=\"_blank\">redis配置</a>\n\n```\n# REDIS (RedisProperties)\n# Redis数据库索引（默认为0）\nspring.redis.database=0\n# Redis服务器地址\nspring.redis.host=192.168.30.103\n# Redis服务器连接端口\nspring.redis.port=6379\n# Redis服务器连接密码（默认为空）\nspring.redis.password=\n# 连接池最大连接数（使用负值表示没有限制）\nspring.redis.jedis.pool.max-active=8\n# 连接池最大阻塞等待时间（使用负值表示没有限制）\nspring.redis.jedis.pool.max-wait=-1\n# 连接池中的最大空闲连接\nspring.redis.jedis.pool.max-idle=8\n# 连接池中的最小空闲连接\nspring.redis.jedis.pool.min-idle=0\n# 连接超时时间（毫秒）\nspring.redis.timeout=5000\n```\n","tags":["springboot"]},{"title":"[git] clone速度慢问题","url":"/2020/03/11//articles/2020/03/11/1583933085000.html/","content":"\n```\ngithub克隆到码云\n再从码云下载即可\n```\n\n<details>\n<summary>（作用不大）修改hosts方法</summary>\n\n<a href=\"https://blog.csdn.net/shahuhu000/article/details/83965642\" target=\"_blank\">git clone速度太慢的解决办法</a>\n```\n思路：\ngit clone特别慢是因为github.global.ssl.fastly.net域名被限制了。\n只要找到这个域名对应的ip地址，然后在hosts文件中加上ip–>域名的映射，刷新DNS缓存便可。\n\n\n在网站 https://www.ipaddress.com/ 分别搜索：\ngithub.global.ssl.fastly.net\ngithub.com\n\n\nC:\\Windows\\System32\\drivers\\etc\\hosts\n\n199.232.5.194 github.global-ssl.fastly.net\n192.30.253.113 github.com\n\nipconfig /flushdns\n```\n</details>\n","tags":["git"]},{"title":"[adb] 开启USB调试","url":"/2020/03/11//articles/2020/03/11/1583933050000.html/","content":"\n<a href=\"https://blog.csdn.net/huil0925/article/details/94883661\" target=\"_blank\">默认开启adb模式(USB调试)</a>\n\n```\n\\frameworks\\base\\services\\usb\\java\\com\\android\\server\\usb\\UsbDeviceManager.java下的\n\nSettings.Global.putInt(mContentResolver, Settings.Global.ADB_ENABLED, mAdbEnabled ? 1 : 0);\n```\n\n改为：\n```\nSettings.Global.putInt(mContentResolver, Settings.Global.ADB_ENABLED, 1);\n```\n","tags":["adb"]},{"title":"[刷机] 刷机帮","url":"/2020/03/10//articles/2020/03/10/1583837484000.html/","content":"\n<a href=\"http://www.shuajibang.net\" target=\"_blank\">刷机帮</a>\n","tags":["刷机"]},{"title":"[arm] itop6818+QtE4.7联网","url":"/2020/03/09//articles/2020/03/09/1583753704000.html/","content":"\n<a href=\"https://github.com/BrighterEyer/itop6818-mt6620-4g-files/tree/master/mt6620/itop6818_RT_Qt_wifi_mt6620\" target=\"_blank\">itop6818_RT_Qt_wifi_mt6620</a>\n```\ncp wpa_lib/* /lib/\ncp wpa_supplicant /usr/sbin\ncp 6620_launcher /usr/bin/\ncp wpa_drivers/* /lib/modules/mt6620/\ncp make_mt6620.sh /root/\n```\n\n开发板连接 WiFi\n在开发板执行下面的指令，更新 WiFi 开机启动脚本\n```\ncat << EOF > /etc/init.d/mt6620\n#!/bin/sh\n#support MT6620 WIFI Module\nmknod /dev/stpwmt c 190 0\nmknod /dev/stpgps c 191 0\nmknod /dev/fm c 193 0\nmknod /dev/wmtWifi c 194 0\ninsmod /lib/modules/mt6620/mtk_hif_sdio.ko\ninsmod /lib/modules/mt6620/mtk_stp_wmt.ko\ninsmod /lib/modules/mt6620/mtk_stp_uart.ko\ninsmod /lib/modules/mt6620/mtk_stp_gps.ko\n#insmod /lib/modules/mt6620/hci_stp.ko\n#insmod /lib/modules/mt6620/mt6620_fm_drv.ko\n#insmod /lib/modules/mt6620/mtk_fm_priv.ko\ninsmod /lib/modules/mt6620/mtk_wmt_wifi.ko WIFI_major=194\ninsmod /lib/modules/mt6620/wlan_mt6620.ko\nchmod 0666 /dev/stpwmt\nchmod 0666 /dev/stpgps\nchmod 0666 /dev/fm\nchmod 0666 /dev/wmtWifi\nchmod 0666 /dev/gps\nchmod 0660 /dev/ttySAC2\n/usr/bin/6620_launcher -m 1 -b 921600 -n /etc/firmware/mt6620_patch_hdr.bin -d /dev/ttySAC2 &\nsleep 4\necho 1 > /dev/wmtWifi\nwpa_supplicant -iwlan0 -Dnl80211 -c/etc/wpa_supplicant.conf &\nsleep 3\nudhcpc -i wlan0 >/var/udhcpc_log &\nEOF\n```\n\n```\nwpa_passphrase XXX \"YYY\" > /etc/wpa_supplicant.conf\n/etc/init.d/mt6620\nping www.baidu.com - c 4\n```\n","tags":["arm"]},{"title":"[ubuntu] ubuntu18内核降级","url":"/2020/03/08//articles/2020/03/08/1583665236000.html/","content":"\n\n```\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\n\nvi /etc/apt/sources.list\n\n在文件最后面增加一行并保存\ndeb http://security.ubuntu.com/ubuntu trusty-security main\n\napt-get update\n\napt-cache search linux-image\n\napt-get install -y linux-image-extra-4.4.0-109-generic\n\n#安装4.4版本内核\ndpkg -l |grep linux-image\n\n#查看是否安装成功\nvim /etc/default/grub\n\n#找到\nGRUB_DEFAULT=0\n#修改为：\nGRUB_DEFAULT=\"Advanced options for Ubuntu>Ubuntu, with Linux 4.4.0-109-generic\"\n\n#更新grub\nupdate-grub\n\nreboot\n\nuname -a\n```\n","tags":["ubuntu"]},{"title":"[zigbee] 终端采集发送到远程云服务器网页ONENET","url":"/2020/03/08//articles/2020/03/08/1583644251000.html/","content":"\nzigbee终端采集发送到远程云服务器网页ONENET 手机随时随地看数据\n```\n链接：\nhttps://pan.baidu.com/s/1QGzDqBgry-QNC_9ucb5yrg\n提取码：\ntn6g\n```\n","tags":["zigbee"]},{"title":"[zigbee] 开发板驱动ESP8266的WiFi模块","url":"/2020/03/08//articles/2020/03/08/1583644250000.html/","content":"\n\nzigbee开发板驱动ESP8266的WiFi模块\n```\n链接：\nhttps://pan.baidu.com/s/1GKHgJ7SG8lNYIDq9fBVLfg\n提取码：\n9nz2\n```\n","tags":["zigbee"]},{"title":"[zigbee] 原理与图解","url":"/2020/03/08//articles/2020/03/08/1583633565000.html/","content":"\n<a href=\"https://www.cnblogs.com/ALittleBee/p/7463239.html\" target=\"_blank\">一图读懂ZStack协议栈的核心思想与工作机理</a>\n","tags":["zigbee"]},{"title":"[springboot] jpa与tk.mybatis冲突","url":"/2020/03/07//articles/2020/03/07/1583574855000.html/","content":"\n排除tk.mybatis中的javax.persistence\n```\n       <dependency>\n            <groupId>tk.mybatis</groupId>\n            <artifactId>mapper-spring-boot-starter</artifactId>\n            <version>1.1.4</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>javax.persistence</groupId>\n                    <artifactId>persistence-api</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n```\n","tags":["springboot"]},{"title":"[mysql] 修改某表引擎和编码","url":"/2020/03/07//articles/2020/03/07/1583574854000.html/","content":"<a href=\"https://blog.csdn.net/zyb2017/article/details/79565741\" target=\"_blank\">Mysql修改表引擎</a>\n```\nshow engines;   -- 查看该数据库下支持的存储引擎\nshow variables like '%storage_engine%'; -- 查看当前默认的存储引擎\nALTER TABLE user ENGINE=InnoDB DEFAULT CHARSET=utf8;\n```\n","tags":["mysql"]},{"title":"[springboot] jsp+thymeleaf双视图","url":"/2020/03/07//articles/2020/03/07/1583567482000.html/","content":"\n<details>\n<summary>一、首先必须去除starter-web中的内置tomcat,并引入外部的tomcat包</summary>\n\npom.xml\n```\n<dependencies>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t<exclusions>\n\t\t\t<exclusion>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\n\t\t\t</exclusion>\n\t\t</exclusions>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\n\t\t<scope>provided</scope>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>org.apache.tomcat.embed</groupId>\n\t\t<artifactId>tomcat-embed-jasper</artifactId>\n\t\t<scope>provided</scope>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>javax.servlet</groupId>\n\t\t<artifactId>jstl</artifactId>\n\t\t<scope>provided</scope>\n\t</dependency>\n\t<dependency>\n\t\t<groupId>javax.servlet</groupId>\n\t\t<artifactId>javax.servlet-api</artifactId>\n\t\t<scope>provided</scope>\n\t</dependency> \n</dependencies>\n<build>\n\t<plugins>\n\t\t<plugin>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t<executions>\n\t\t\t\t<execution>\n\t\t\t\t\t<goals>\n\t\t\t\t\t\t<goal>repackage</goal>\n\t\t\t\t\t</goals>\n\t\t\t\t</execution>\n\t\t\t</executions>\n\t\t</plugin>\n\t</plugins>\n</build>\n```\n</details>\n\n<details>\n<summary>二、修改启动类</summary>\n\n以war部署必须实现org.springframework.boot.web.servlet.support.SpringBootServletInitializer的configure方法\n1.方式一，启动类继承SpringBootServletInitializer实现configure：\n```\n@SpringBootApplication\npublic class Application extends SpringBootServletInitializer {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n\n\t@Override\n\tprotected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n\t\treturn builder.sources(Application.class);\n\t}\n}\n```\n\n2.方式二，新增加一个类继承SpringBootServletInitializer实现configure：\n```\npublic class ServletInitializer extends SpringBootServletInitializer {\n\t@Override\n\tprotected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n\t\t//此处的Application.class为带有@SpringBootApplication注解的启动类\n\t\treturn builder.sources(Application.class);\n\t}\n}\n```\n</details>\n\n三、application.properties\n```\nserver.port=\nserver.servlet.context-path=\n```\n\n\n<details>\n<summary>四、配置多视图解析器</summary>\n\n\n```\npackage com.haiyu.manager.config;\n\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.ViewResolver;\nimport org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\nimport org.thymeleaf.spring5.SpringTemplateEngine;\nimport org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver;\nimport org.thymeleaf.spring5.view.ThymeleafViewResolver;\nimport org.thymeleaf.templateresolver.ITemplateResolver;\n\n@Configuration\n@EnableWebMvc\n@ComponentScan\npublic class WebViewConfig extends WebMvcConfigurerAdapter {\n\n    /**\n     * @Description: 注册jsp视图解析器\n     */\n    @Bean\n    public ViewResolver viewResolver() {\n        InternalResourceViewResolver resolver = new InternalResourceViewResolver();\n        resolver.setPrefix(\"classpath:/view/\"); //配置放置jsp文件夹\n        resolver.setSuffix(\".jsp\");\n        resolver.setViewNames(\"jsp/*\");  //重要 setViewNames 通过它识别为jsp页面引擎\n        resolver.setOrder(2);\n        return resolver;\n    }\n\n    /**\n     * @Description: 注册html视图解析器\n     */\n    @Bean\n    public ITemplateResolver templateResolver() {\n        SpringResourceTemplateResolver templateResolver = new SpringResourceTemplateResolver();\n        templateResolver.setTemplateMode(\"HTML\");\n        templateResolver.setPrefix(\"classpath:/templates/\");\n        templateResolver.setSuffix(\".html\");\n        templateResolver.setCharacterEncoding(\"utf-8\");\n        templateResolver.setCacheable(false);\n        return templateResolver;\n    }\n\n    /**\n     * @Description: 将自定义tml视图解析器添加到模板引擎并主持到ioc\n     */\n    @Bean\n    public SpringTemplateEngine templateEngine() {\n        SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n        templateEngine.setTemplateResolver(templateResolver());\n        return templateEngine;\n    }\n\n    /**\n     * @Description: Thymeleaf视图解析器配置\n     */\n    @Bean\n    public ThymeleafViewResolver viewResolverThymeLeaf() {\n        ThymeleafViewResolver viewResolver = new ThymeleafViewResolver();\n        viewResolver.setTemplateEngine(templateEngine());\n        viewResolver.setCharacterEncoding(\"utf-8\");\n        viewResolver.setViewNames(new String[]{\"thymeleaf\"});\n        viewResolver.setOrder(1);\n        return viewResolver;\n    }\n\n    @Override\n    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) {\n        configurer.enable();\n    }\n\n    /**\n     * @Description: 配置静态文件映射\n     */\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/**\").addResourceLocations(\"classpath:/static/\");\n    }\n\n}\n```\n</details>\n","tags":["springboot"]},{"title":"[window] 批量替换LF成CRLF","url":"/2020/03/07//articles/2020/03/07/1583556226000.html/","content":"\n<a href=\"https://blog.csdn.net/panda1234lee/article/details/89289097\" target=\"_blank\">批量转换 LF 和 CRLF 的小技巧</a>\n\n<a href=\"https://nchc.dl.sourceforge.net/project/dos2unix/dos2unix/7.4.1/dos2unix-7.4.1-win64.zip\" target=\"_blank\">系统环境变量的 Path 中添加它的bin路径</a>\n\ncd 到你想要转换的文件夹目录下\n\nLF -> CRLF\n```\nfor /R %G in (*.c *.cc *.h *.mk *.properties *.xml *.java *.sh *.txt *.conf *.ui *.user *.la *.cpp *.pro *.sh) do unix2dos \"%G\" # *.c *.cc *.h *.mk *.cfg *.properties *.xml *.java *.sh *.txt *.conf *.ui *.user *.la *.cpp *.pro *.sh\n```\n\n\nCRLF -> LF\n```\nfor /R %G in (*.c *.cc *.h *.mk) do dos2unix \"%G\" # *.c *.cc *.h *.mk\n```","tags":["window"]},{"title":"[arm] ubuntu12安装mosquito开发包","url":"/2020/03/07//articles/2020/03/07/1583547576000.html/","content":"\n```\napt-get install gcc libssl-dev g++ uuid-dev\napt-get install cmake g++ libssl-dev libc-ares-dev uuid-dev xsltproc docbook-xsl\n\nexport GIT_SSL_NO_VERIFY=1\n#\ngit config --global http.sslverify false\n\napt-get install --reinstall ca-certificates\n\napt-get install python-software-properties\n\nupdate-ca-certificates\napt-get remove curl\napt-get install curl\n```\n\n<a href=\"https://www.cnblogs.com/suiyueshentou/p/7798340.html\" target=\"_blank\">linux修改时间</a>\n```\n#同步网络时间\napt-get install ntp\nntpdate -dv ntp.api.bz\ndate -R\ndate -s \"2020-03-05 22:38:00\"\n```\n\n```\napt-add-repository ppa:mosquitto-dev/mosquitto-ppa\napt-get update\napt-get install mosquitto\n#安装mosquitto开发包\napt-get install libmosquitto-dev\n#安装mosquitto客户端\napt-get install mosquitto-clients\n```\n\n","tags":["arm"]},{"title":"[arm] QtE系统TF卡、SD卡热插拔","url":"/2020/03/07//articles/2020/03/07/1583547575000.html/","content":"\n```\ncp /proc/sys/kernel/hotplug /bin/\nchmod +x /bin/hotplug\n```\n\n```\ndf -h\nFilesystem                Size      Used Available Use% Mounted on\n/dev/root               393.7M    236.4M    157.3M  60% /\ndevtmpfs                932.6M         0    932.6M   0% /dev\n/dev/mmcblk1p1           13.1G    358.3M     12.8G   3% /mnt/sdcard/sd\n/dev/mmcblk1p2           13.1G    358.3M     12.8G   3% /mnt/sdcard/sd\n/dev/mmcblk1p3           13.1G    358.3M     12.8G   3% /mnt/sdcard/sd\n/dev/mmcblk1p7           13.1G    358.3M     12.8G   3% /mnt/sdcard/sd\ntmpfs                   932.7M         0    932.7M   0% /dev/shm\n\n#执行4次\numount /dev/mmcblk1p1\n\n#然后\ndf -h\nFilesystem                Size      Used Available Use% Mounted on\n/dev/root               393.7M    236.4M    157.3M  60% /\ndevtmpfs                932.6M         0    932.6M   0% /dev\ntmpfs                   932.7M         0    932.7M   0% /dev/shm\n\n\n#手动挂载tf卡\nmount /dev/mmcblk0p1 /mnt/sdcard\nls /mnt/sdcard\n```\n\n添加对热插拔事件响应\n```\ncat >> /etc/mdev.conf <<EOF\nsd[a-z][0-9]      0:0 666        @/etc/hotplug/usb/udisk_insert  \nsd[a-z]           0:0 666        $/etc/hotplug/usb/udisk_remove\nEOF\n\n#注释掉以下内容：\nsda1\t0:0 0600 =udisk * /bin/hotplug\n```\n\n\nudisk_insert\n```\nmkdir -p /etc/hotplug/usb\ncat > /etc/hotplug/usb/udisk_insert<<EOF\n#!/bin/sh  \necho \"usbdisk insert!\" > /dev/console  \nif [ -e \"/dev/$MDEV\"  ]  ; then  \n    mkdir -p /mnt/usbdisk/$MDEV  \n    mount /dev/$MDEV /mnt/usbdisk/$MDEV \n    echo \"/dev/$MDEV mounted in /mnt/usbdisk/$MDEV\">/dev/console\nfi  \nEOF\n```\n\nudisk_remove\n```\ncat > /etc/hotplug/usb/udisk_remove<<EOF\n#!/bin/sh\necho \"usbdisk remove!\" > /dev/console\numount -l /mnt/usbdisk/sd*\nrm -rf /mnt/usbdisk/sd*\nEOF\n\nchmod 755 /etc/hotplug/usb/*\n```\n\n```\n#插上 U 盘\nls /mnt/usbdisk/sda1\n```\n\n创建 U盘的设备节点\n```\nmknod /dev/sda1 b 8 1\n```\n\n插入 U 盘之后会弹出加载信息\n```\nmount /dev/sda1 /mnt/udisk/\nls /mnt/udisk\n```\n\n\nSD/TF 卡的自动挂载\n```\ncat >> /etc/mdev.conf <<EOF\nmmcblk1p[0-9]     0:0 666        @/etc/hotplug/sd/sd_insert  \nmmcblk1           0:0 666        $/etc/hotplug/sd/sd_remove\nEOF\n```\n\n创建 sd_insert 文件\n```\nmkdir -p /etc/hotplug/sd\ncat > /etc/hotplug/sd/sd_insert<<EOF\necho \"sd card insert!\" > /dev/console  \nif [ -e \"/dev/$MDEV\"  ]; then  \n    mkdir -p /mnt/sdcard/sd  \n    mount -rw /dev/$MDEV /mnt/sdcard/sd\n    echo \"/dev/$MDEV mounted in /mnt/sdcard/sd\" >/dev/console   \nfi\nEOF\n```\n\n创建 sd_remove 文件\n```\ncat > /etc/hotplug/sd/sd_remove<<EOF\n#!/bin/sh\necho \"sd card remove!\" > /dev/console\numount -l /mnt/sdcard/sd*\nrm -rf /mnt/sdcard/sd*\nEOF\n```\n\n```\nchmod 755 /etc/hotplug/sd/*\nls /mnt/sdcard\n```\n","tags":["arm"]},{"title":"[arm] itop6818声卡移植ALSA","url":"/2020/03/06//articles/2020/03/06/1583503267000.html/","content":"\n<a href=\"https://github.com/BrighterEyer/itop6818-linux-programs/tree/master/%E5%A3%B0%E5%8D%A1%E7%A7%BB%E6%A4%8DALSA\" target=\"_blank\">声卡移植ALSA</a>\n\n源码编译\n```\n/root/ALSA\ntar -xvf alsa-lib-1.1.5.tar.bz2;cd alsa-lib-1.1.5\nCC=arm-linux-gnueabihf-gcc ./configure --host=arm-linux --prefix=/root/ALSA/install/\nmake;make install\n\nls /root/ALSA/install/\n\ntar -xvf alsa-utils-1.1.5.tar.bz2;cd alsa-utils-1.1.5\nCC=arm-linux-gnueabihf-gcc ./configure --prefix=/root/ALSA/install/ --host=arm-linux --with-alsa-inc-prefix=/root/ALSA/install/include --with-alsa-prefix=/root/ALSA/install/lib --disable-alsamixer\n--disable-xmlto --disable-nls\nmake;cd aplay;ls;make\n#用 ls 命令可以看到生成的aplay可执行文件\n```\n\n```\ncp binary/* /bin/\n```\n\n\n在开发板上使用 ALSA，将 U 盘插到运行 qt 系统的开发板上\n```\nmount /dev/sda1 /mnt/disk\ncp /mnt/disk/ALSA/* /bin\n```\n\n插上耳机，使用以下命令检测耳机\n```\nspeaker-test -c 2 &\n\nkillall speaker-test\n```\n\n此时的 ALSA 并不完全，如果通过 apaly 直接播放音频的话会发现不能控制音量；\n创建了一个名为 'pcm' 的从设备，隶属于音量控制插件 primary，通过!default 选项将该插件设置成默认 PCM 输出设备\n```\nvi /etc/asound.conf\npcm.!default \"plug:primary\"\npcm.primary {\n\ttype softvol\n\tslave.pcm \"plughw:0\"\n\tcontrol.name \"master\"\n\tcontrol.card 0\n}\n```\n\n重启开发板\n```\nreboot\n```\n\n用 aplay 进行音频播放，音频文件放在/root 目录中\n```\naplay /root/VenusMars1.wav &\n\n#默认255，将音量设置为 100，音量值可取 0-255\namixer set 'master' 100\n```\n\n录音测试\n```\n#filename 用户自己指定，&不可省略\narecord filename &\n```\n\naplay 播放测试\n","tags":["arm"]},{"title":"[ubuntu] 找不到apt-get的解决办法","url":"/2020/03/05//articles/2020/03/05/1583413635000.html/","content":"\n<a href=\"https://blog.csdn.net/zhezhebie/article/details/100535405\" target=\"_blank\">下载apt.deb</a>\n```\nwget http://security.ubuntu.com/ubuntu/pool/main/a/apt/apt_1.9.3_amd64.deb\ndpkg -i apt_1.4_amd64.deb\napt-get install htop\n```\n\n","tags":["ubuntu"]},{"title":"[vbox] USB识别","url":"/2020/03/05//articles/2020/03/05/1583413635000.html/","content":"\n<a href=\"https://blog.csdn.net/wf19930209/article/details/73195055\" target=\"_blank\">virtualbox的USB识别</a>\n```\nvboxmanage -v\n6.0.10r132072\n```\n","tags":["vbox"]},{"title":"[ubuntu] sshd超时问题","url":"/2020/03/05//articles/2020/03/05/1583413634000.html/","content":"\n1配置服务器\n```\nvim /etc/ssh/sshd_config \n# 数值是秒，比如你设置为540，就是9分钟\nClientAliveInterval 540\n\n# 如果发现客户端没有相应，则判断一次超时，这个参数设置允许超时的次数 \nClientAliveCountMax 10\n\n#则代表允许超时 5400秒 = 90分钟\n```\n\nssh重启\n```\n/etc/init.d/ssh restart\n```\n\n2配置客户端 \n```\n/etc/ssh/ssh_config\n\nServerAliveInterval 540\n```\n\n","tags":["ubuntu"]},{"title":"[springboot] swagger2使用指南","url":"/2020/03/05//articles/2020/03/05/1583413634000.html/","content":"\n<a href=\"https://blog.csdn.net/sanyaoxu_2/article/details/80555328\" target=\"_blank\">Swagger使用指南</a>\n","tags":["springboot"]},{"title":"[springboot] QueryDSL动态投影","url":"/2020/03/05//articles/2020/03/05/1583413633000.html/","content":"\n<a href=\"https://blog.csdn.net/Phapha1996/article/details/83614975\" target=\"_blank\">SpringDataJPA+QueryDSL玩转态动条件/投影查询</a>\n","tags":["springboot"]},{"title":"[springboot] mybatis自动生成数据库表","url":"/2020/03/05//articles/2020/03/05/1583413632000.html/","content":"\n<a href=\"https://www.cnblogs.com/dreamyoung/p/11776426.html\" target=\"_blank\">Mybatis如何自动生成数据库表结构</a>\n","tags":["springboot"]},{"title":"[mysql] 列拼接","url":"/2020/03/05//articles/2020/03/05/1583413630000.html/","content":"<a href=\"https://www.cnblogs.com/liaokaichang/p/7457525.html\" target=\"_blank\">MYSQL实现列拼接，即同一个字段，多条记录拼接成一条</a>\n\nGROUP_CONCAT\n```\nSELECT\n    t1.*,GROUP_CONCAT(tag_name) tag_name,GROUP_CONCAT(tag_desc) tag_desc\nFROM\n    `article` t1\nLEFT JOIN article_tag t2 ON t1.id = t2.article_id\nLEFT JOIN tag t3 ON t2.tag_id = t3.id\nGROUP BY t1.id\n```","tags":["mysql"]},{"title":"[maven] 引用jar","url":"/2020/03/05//articles/2020/03/05/1583413629000.html/","content":"\n<a href=\"https://www.cnblogs.com/lukelook/p/8673778.html\" target=\"_blank\">在Maven项目中引入自己的jar包</a>\n\n```\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.3</version>\n            <configuration>\n                <source>1.8</source>\n                <target>1.8</target>\n                <encoding>UTF-8</encoding>\n                <compilerArguments>\n                    <extdirs>${project.basedir}/src/main/resources/lib</extdirs>\n                </compilerArguments>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n```\n","tags":["maven"]},{"title":"[linux] RFID卡","url":"/2020/03/05//articles/2020/03/05/1583413627000.html/","content":"\n<a href=\"https://www.cnblogs.com/topeet/p/9299591.html\" target=\"_blank\">iTOP-6818开发板-Android4.4系统下RFID射频模块测试例程</a>\n","tags":["linux"]},{"title":"[java] 默认时间","url":"/2020/03/05//articles/2020/03/05/1583413626000.html/","content":"\n<a href=\"https://blog.csdn.net/qq_35272054/article/details/90691896\" target=\"_blank\">JPA当中实现时间设置默认值(取当前时间)</a>\n```\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.hibernate</groupId>\n\t\t\t<artifactId>hibernate-core</artifactId>\n\t\t\t<version>5.2.1.Final</version>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>el-api</artifactId>\n\t\t\t\t\t<groupId>javax.el</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t</dependencies>\n```\n\n```\nimport lombok.Data;\nimport org.hibernate.annotations.CreationTimestamp;\nimport org.hibernate.annotations.UpdateTimestamp;\n\nimport javax.persistence.*;\nimport java.util.Date;\n\n@Entity\n@Table(name = \"test_data_time_default\")\n@Data\npublic class TestDateTimeDefault {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Integer id;\n\n    //默认创建时间\n    @Temporal(TemporalType.TIMESTAMP)\n    @Column(name = \"t_time\")\n    @CreationTimestamp\n    private Date time;\n\n    //默认更新时间\n    @Column(name = \"t_update_time\")\n    @UpdateTimestamp\n    @Temporal(TemporalType.TIMESTAMP)\n    private Date updateTime;\n}\n```\n","tags":["java"]},{"title":"[java] 加载dll文件","url":"/2020/03/05//articles/2020/03/05/1583413625000.html/","content":"\nspringboot加载dll文件\n```\n    static {\n        File tempLibraryFile = copyResourceToTempDirFile(\"/path/to/dll/in/JAR\", \"my.dll\");\n        System.load(tempLibraryFile.getAbsolutePath());\n    }\n\n    public static File copyResourceToTempDirFile(String resourcePath, String destinationFileName) {\n        File tempDir = new File(System.getProperty(\"java.io.tmpdir\"));\n        File tempDirFile = new File(tempDir, destinationFileName);\n        try (InputStream input = FaceVideo.class.getResourceAsStream(resourcePath);\n             OutputStream output = new FileOutputStream(tempDirFile)) {\n            IOUtils.copy(input, output);\n            tempDirFile.deleteOnExit();\n            return tempDirFile;\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n```\n\n","tags":["java"]},{"title":"[java] 对象转json","url":"/2020/03/05//articles/2020/03/05/1583413624000.html/","content":"\n```\n<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-databind</artifactId>\n    <version>2.8.3</version>\n</dependency>\n\n<dependency>\n    <groupId>net.sf.json-lib</groupId>\n    <artifactId>json-lib</artifactId>\n    <version>2.2.3</version>\n    <classifier>jdk15</classifier><!-- 指定jdk版本 -->\n</dependency>\n```\n\n```\npublic static String obj2Json(Object resultobj) {\n    if (resultobj != null) {\n        JSONObject obj = JSONObject.fromObject(resultobj);\n        return obj.toString();\n    }\n    return \"{}\";\n}\n\npublic static String list2Json(Object resultobj) {\n    if (resultobj != null) {\n        JSONArray obj = JSONArray.fromObject(resultobj);\n        return (obj.toString());\n    }\n    return \"[]\";\n}\n```\n\n\n```\n//json字符串转换为MAP\npublic static Map jsonStrToMap(String s) {\n    Map map = new HashMap();\n    //注意这里JSONObject引入的是net.sf.json\n    net.sf.json.JSONObject json = net.sf.json.JSONObject.fromObject(s);\n    Iterator keys = json.keys();\n    while (keys.hasNext()) {\n        String key = (String) keys.next();\n        String value = json.get(key).toString();\n        if (value.startsWith(\"{\") && value.endsWith(\"}\")) {\n            map.put(key, jsonStrToMap(value));\n        } else {\n            map.put(key, value);\n        }\n\n    }\n    return map;\n}\n\n// 将jsonArray字符串转换成List集合\npublic static List jsonToList(String json, Class beanClass) {\n    if (!StringUtils.isBlank(json)) {\n        //这里的JSONObject引入的是 com.alibaba.fastjson.JSONObject;\n        return JSONObject.parseArray(json, beanClass);\n    } else {\n        return null;\n    }\n}\n\n//List集合转换为json\npublic static JSON listToJson(List list) {\n    JSON json=(JSON)JSON.toJSON(list);\n    return json;\n}\n```\n\n","tags":["java"]},{"title":"[java] springbootsecurity拦截post请求","url":"/2020/03/05//articles/2020/03/05/1583413623000.html/","content":"<a href=\"https://bbs.csdn.net/topics/392172607\" target=\"_blank\">参考</a>\n```\nhttp.csrf().disable();\n```\n","tags":["java"]},{"title":"[html] input输入限制","url":"/2020/03/05//articles/2020/03/05/1583413622000.html/","content":"\n输入大于零\n```\n<input type=\"text\" onkeyup=\"this.value=this.value.replace(/^\\.+|[^\\d\\.]/g,'')\" onblur=\"if(this.value ==0||!/^\\d+(\\.\\d{1,2})?$/.test(this.value))this.value=''\">\n```\n\n<a href=\"https://www.cnblogs.com/yourName/p/10621740.html\" target=\"_blank\">input输入框限制（座机，手机号码）</a>\n当设type=\"number\"时，\"-\"能输入input框中但是提交数据时是空的<br>于是找到如下解决方式\n座机input输入框：\n```\n<input style=\"width:100px;\" id=\"tel\" type=\"text\" onkeyup=\"value=value.replace(/[^\\d\\-\\d]/g,'')\" maxlength=20></input>\n```\n\n手机input输入框：\n```\n<input style=\"width: 100px;\" id=\"mobile\" type=\"text\" onkeyup=\"value=value.replace(/[^\\d]/g,'')\" maxlength=11></input>\n```\n\n文本框只能输入数字代码（小数点也不能输入）\n```\n<input onkeyup=\"this.value=this.value.replace(/\\D/g,'')\" onafterpaste=\"this.value=this.value.replace(/\\D/g,'')\">\n```\n\ninput在标签内设置禁止输入空格\n```\n<input type=\"text\" onkeyup=\"this.value=this.value.replace(/\\s+/g,'')\">\n```\n\n去除前后空格\n```\n<input onkeyup=\"this.value=this.value.replace(/(^\\s*)|(\\s*$)/g,'')\">\n```\n\n\n只能输入数字（能输小数点）\n\n方法一\n```\n<input οnkeyup=\"if(isNaN(value))execCommand('undo')\" onafterpaste=\"if(isNaN(value))execCommand('undo')\">  \n```\n方法二\n```\n<input name=txt1 onchange=\"if(/\\D/.test(this.value)){alert('只能输入数字');this.value='';}\">  \n```\n方法三：\n```\n<input οnkeyup=\"this.value=this.value.replace(/[^\\d.]/g,'')\" onafterpaste=\"this.value=this.value.replace(/[^\\d.]/g,'')\" >  \n```\n只能输入数字和英文\n```\n<input onKeyUp=\"value=value.replace(/[^\\d|chun]/g,'')\">  \n```\n只能输入字母和中文\n```\n<input οnkeyup=\"value=value.replace(/[\\d]/g,'') \"onbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[\\d]/g,''))\" maxlength=10 name=\"Numbers\">  \n```\n只能输入字母和数字\n```\n<input οnkeyup=\"value=value.replace(/[^\\w\\.\\/]/ig,'')\">  \n```\n","tags":["html"]},{"title":"[C] makefile编写","url":"/2020/03/05//articles/2020/03/05/1583413621000.html/","content":"<a href=\"https://blog.csdn.net/NK_test/article/details/48181787\" target=\"_blank\">Makefile简单编写实例</a>\n```\n.PHONY:clean\nOBJECTS=01.o 02.o\nmain:$(OBJECTS)\n\tgcc -Wall -g $^ -o $@\n01.o:01.c\n\tgcc -Wall -g -c $< -o $@\n02.o:02.c\n\tgcc -Wall -g -c $< -o $@\nclean:\n\trm -f main $(OBJECTS)\n```\n","tags":["C"]},{"title":"[arm] itop6818基于web控制led","url":"/2020/02/23//articles/2020/02/23/1582469576000.html/","content":"\n```\napt-get install gcc-arm-linux-gnueabihf\n```\n\n<details>\n<summary>boa的移植和配置</summary>\n\n```\nwget http://www.boa.org/boa-0.94.13.tar.gz\nmkdir ~/work; tar xvf boa-0.94.13.tar.gz -C ~/work;cd ~/work/boa-0.94.13;\n\n#根据configure.in文件进行一系列的配置，生成config.status,configure和Makefile文件\nchmod 755 configure\n./configure\napt-get install -y byacc flex\n```\n\nvim src/compat.h\n```\n//#define TIMEZONE_OFFSET(foo) foo##->tm_gmtoff\n#define TIMEZONE_OFFSET(foo) (foo)->tm_gmtoff\n```\n\n```\ncat boa.conf|grep -v \"#\"|grep -v \"^$\"\n```\n\n```\nmkdir /usr/lib/boa/ /etc/boa/ /var/log/boa /www\n\ncat > /etc/boa/boa.conf<<EOF\nPort 80\nUser root\nGroup root\nErrorLog /var/log/boa/error_log\nAccessLog /var/log/boa/access_log\nDocumentRoot /www\nUserDir public_html\nDirectoryIndex index.html\nDirectoryMaker /usr/lib/boa/boa_indexer\nKeepAliveMax 1000\nKeepAliveTimeout 10\nMimeTypes /etc/mime.types\nDefaultType text/plain\nCGIPath /bin:/usr/bin:/usr/local/bin\nAlias /doc /usr/doc\nScriptAlias /cgi-bin/ /www/cgi-bin/\nServerName localhost\nEOF\n```\n\n```\ncd src;\nmake\narm-linux-gnueabihf-strip boa\n\ncp boa_indexer /usr/lib/boa/\ncp boa /etc/boa/\nchmod 755 -R /www\n\nvim log.c\n/*\n if (dup2(error_log, STDERR_FILENO) == -1) {\n  DIE(\"unable to dup2 the error log\");\n }\n*/\n\n\nvim boa.c\n/*\n if (setuid(0) != -1) {\n  DIE(\"icky Linux kernel bug!\");\n }\n*/\n\n#启动web服务\n./boa\n```\n</details>\n\n<details>\n<summary>cgic库移植和配置</summary>\n\n```\ngit clone https://github.com/boutell/cgic\ncd cgic\n\nvim Makefile\nCC=gcc 改成 CC=arm-linux-gnueabihf-gcc\n#CPP=gcc -E 改成 CCP=arm-linux-gnueabihf-gcc -E\nAR=ar 改成 AR=arm-linux-gnueabihf-ar\nRANLIB=ranlib 改成 RANLIB=arm-linux-gnueabihf-ranlib\ngcc cgictest.o -o cgictest.cgi ${LIBS} 改成 $(CC) $(CFLAGS) cgictest.o -o cgictest.cgi ${LIBS}\ngcc capture.o -o capture ${LIBS} 改成 $(CC) $(CFLAGS) capture.o -o capture ${LIBS}\n\nmake\n\n#来验证生成CGIC库的正确性\nCGIC库中的常用文件：\ncgic.h：头文件\ncgic.c：CGIC的源代码文件\ncgictest.c：CGIC库的作者提供的一个CGI程序例子\ncapture.c：用于调试CGI程序的工具\nMakefile：安装CGIC的脚本文件\n\n\nmkdir -p ~/work/cgictest;cd ~/work/cgictest\nls ~/work/cgic/\ncp ~/work/cgic/cgic.h .\ncp ~/work/cgic/cgic.c .\ncp ~/work/cgic/cgictest.c .\ncp ~/work/cgic/capture .\ncp ~/work/cgic/cgictest.cgi .\n#LIBS\ncp ~/work/cgic/libcgic.a .\n\nvim Makefile\nCFLAGS=-g -Wall\nCC=arm-linux-gnueabihf-gcc\nAR=arm-linux-gnueabihf-ar\nRANLIB=arm-linux-gnueabihf-ranlib\nLIBS=-L./ -lcgic\n\ntest.cgi:cgictest.c cgic.h cgic.c\n（这里必有一个tab符）$(CC) $(CFLAGS) cgictest.c cgic.c -o test.cgi ${LIBS}\n\nmkdir -p /www/cgi-bin\ncp capture /www/cgi-bin/\ncp test.cgi /www/cgi-bin/\n\napt-get install curl\ncurl http://127.0.0.1/cgi-bin/cgictest.cgi\n```\n</details>\n\n<details>\n<summary>cgictest.c</summary>\n\n```C\n#include <stdio.h>\n#include \"cgic.h\"\n#include <string.h>\n#include <stdlib.h>\nint cgiMain() {\n\tcgiHeaderContentType(\"text/html\");\n\tfprintf(cgiOut, \"<HTML><HEAD>\\n\");\n\tfprintf(cgiOut, \"<TITLE>My First CGI</TITLE></HEAD>\\n\");\n\tfprintf(cgiOut, \"<BODY><H1>Hello CGIC</H1></BODY>\\n\");\n\tfprintf(cgiOut, \"</HTML>\\n\");\n\treturn 0;\n}\n```\n</details>\n\n<details>\n<summary>myled.c</summary>\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n\n#include <unistd.h>\n\n#define MAX 10\n\nint main(void)\n{\n\tchar *data;\n\tint leds[2] = {0, 0};\n\tlong m, n;\n\tint exit = 0, i;\n\tprintf(\"Content-Type:text/html;charset=gb2312\\n\\n\");\n\tprintf(\"<html>\\n\");\n\tprintf(\"<body>\\n\");\n\tprintf(\"<title>iTOP-4412</title> \");\n\tprintf(\"<h3>iTOP-4412</h3> \");\n\tdata = getenv(\"QUERY_STRING\");\n\tprintf(\"<p>receive data:%s</p>\", data);\n\twhile (*data != '\\0')\n\t{\n\t\tif (*data == '=')\n\t\t\tswitch (*(data + 1))\n\t\t\t{\n\t\t\tcase '1': leds[0] = 1; break;\n\t\t\tcase '2': leds[1] = 1; break;\n\t\t\tdefault: exit = 1; break;\n\t\t\t}\n\t\tif (exit == 1)\n\t\t\tbreak;\n\t\tdata++;\n\t}\n\n\n\tint fd, LedOnOffTimes;\n\tchar gpio[MAX], cmd[MAX];\n\tchar *leds_ctl = \"/dev/leds_ctl\";\n\tLedOnOffTimes = MAX;\n\n\tprintf(\"leds_ctl light on and off 5 times \\r\\n\");\n\n\n\tif ((fd = open(leds_ctl, O_RDWR | O_NOCTTY | O_NDELAY)) < 0)\n\t\tprintf(\"open %s failed\\n\", leds_ctl);\n\telse\n\t{\n\t\tprintf(\"open %s success\\r\\n\", leds_ctl);\n\t\twhile (LedOnOffTimes--)\n\t\t{\n\t\t\tprintf(\"ioctl leds_ctl %d times\\n\", LedOnOffTimes);\n\t\t\tioctl(fd, 0, 0);\t//parameter 2 is cmd ,cmd = 1 leds on\n\t\t\tioctl(fd, 0, 1);\n\t\t\tsleep(1);\n\t\t\tioctl(fd, 1, 0);\n\t\t\tioctl(fd, 1, 1);\n\t\t\tsleep(1);\n\t\t}\n\t}\n\tioctl(fd, 0, 0);\n\tclose(fd);\n\n\treturn 0;\n}\n```\n</details>\n\n<details>\n<summary>myled.html</summary>\n\n```html\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <title>led 远程控制</title>\n    <style type=\"text/css\">\n    body {\n        background-color: #999900;\n        text-align: center;\n    }\n\n    .ziti {\n        font-size: 24px;\n    }\n\n    .juzhong {\n        text-align: center;\n    }\n\n    .hsz {\n        text-align: center;\n    }\n\n    .hsz td {\n        color: #00F;\n        font-size: 18px;\n    }\n\n    .hsz {\n        background-color: #FCC;\n    }\n\n    .juzhong table {\n        text-align: center;\n    }\n\n    .juzhong table tr {}\n\n    #h1 {\n        background-color: #0FC;\n    }\n\n    #h2 {\n        background-color: #FF9;\n    }\n\n    .h3 {\n        background-color: #0CF;\n    }\n\n    .ys1 {\n        font-size: 24px;\n    }\n\n    .STYLE1 {\n        font-size: 36px\n    }\n    </style>\n</head>\n\n<body class=\"juzhong\">\n    <table width=\"900\" border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\">\n        <tr>\n            <td>\n                <p class=\"STYLE1\">&nbsp;</p>\n                <p class=\"STYLE1\">iTOP-6818 WEB SERVER </p>\n            </td>\n        </tr>\n        <tr>\n            <td height=\"30\">&nbsp;</td>\n        </tr>\n        <tr>\n            <td>\n                <form action=\"/cgi-bin/myled.cgi\" method=\"get\" enctype=\"application/x-www-form-urlencoded\" name=\"form1\" target=\"_blank\" id=\"form1\">\n                    <table width=\"300\" border=\"1\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\">\n                        <tr>\n                            <td>Led1</td>\n                            <td><input name=\"led1\" type=\"checkbox\" id=\"led1\" value=\"1\" />\n                                <label for=\"led1\"></label></td>\n                        </tr>\n                        <tr>\n                            <td>Led2</td>\n                            <td><input name=\"led2\" type=\"checkbox\" id=\"led2\" value=\"2\" />\n                                <label for=\"led2\"></label></td>\n                        </tr>\n                        <tr>\n                            <td colspan=\"2\"><input type=\"submit\" name=\"submit\" id=\"submit\" value=\"submit\" /></td>\n                        </tr>\n                    </table>\n                </form>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <p>&nbsp;</p>\n            </td>\n        </tr>\n    </table>\n    <p>&nbsp;</p>\n</body>\n\n</html>\n```\n</details>\n\n\n编译：\n```\ngcc-arm-linux-gnueabihf-gcc –o myled.cgi myled.c\nmv myled.cgi /www/cgi-bin\n```\n\n在开发板上启动boa，开启web服务\n```\nmv myled.html /www/\n#在电脑上浏览器上输入，192.168.xxx.xxx/myled.html，开始测试\n```\n\n\n在虚拟机上安装nfs\n```\napt-get install -y portmap nfs-kernel-server\n```\n编辑exports文件\n```\nvi /etc/exports\n/nfs/arm *(rw,sync,no_root_squash)\n\nmkdir -p /nfs/arm\nchmod 755 -R /nfs\n```\n启动nfs\n```\n/etc/init.d/portmap start\n/ect/init.d/nfs start\n#检测nfs是否真的在运行\n/etc/init.d/portmap status\n```\n确定开发板和虚拟机linux的IP地址\n```\n虚拟机采用桥接方式\n\n修改开发板和虚拟机的IP地址，\n使在同一网段下可以在开发板或者虚拟机终端里ping对方IP,\n如果通则网络正常了\n```\n挂载NFS到开发板上\n```\nmount -t nfs 192.168.1.100:/www/cgi-bin /nfs/arm -o nolock\n```\n卸载\n```\numount /nfs/arm\n```\n\n<a href=\"https://www.jianshu.com/p/dafcf652baed\" target=\"_blank\">嵌入式设备web开发笔记：boa和cgic</a>\n<a href=\"https://www.cnblogs.com/xmnn1990/p/4704023.html\" target=\"_blank\">arm-linux挂载nfs文件系统</a>","tags":["arm"]},{"title":"[git] 下载一个仓库单个文件夹","url":"/2020/02/22//articles/2020/02/22/1582385680000.html/","content":"\n```\n# 新建仓库并进入文件夹\ngit init test && cd test\n# 设置允许克隆子目录\ngit config core.sparsecheckout true\n# 设置要克隆的仓库的子目录路径  空格别漏\necho 'tt*' >> .git/info/sparse-checkout\n# 这里换成你要克隆的项目和库\ngit remote add origin git@github.com:mygithub/test.git\n# 下载\ngit pull origin master\n```\n","tags":["git"]},{"title":"[ubuntu] linux查看已经连接的wifi的密码","url":"/2020/02/22//articles/2020/02/22/1582370137000.html/","content":"\nlinux查看已经连接的wifi的密码\n```\nls /etc/NetworkManager/system-connections\n```\n\n1.查看是否连接，也可查看网卡是否启动和网卡名\n```\nip addr \n```\n\n2.将wifi名和密码写入配置\n```\nwpa_passphrase wifi名 wifi密码 >> /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n3.加载配置文件\n```\nwpa_supplicant -i 网卡名 -c /etc/wpa_supplicant/wpa_supplicant.conf -B\n```\n\n4.自动分配ip地址,并检验是否成功分配到ip\n```\ndhclient 网卡名\n```\n\n","tags":["ubuntu"]},{"title":"[linux] 迅捷usb无线网卡驱动","url":"/2020/02/22//articles/2020/02/22/1582370136000.html/","content":"<a href=\"https://github.com/lincank/cntech/blob/4c1c4baf480976768d87c0ac435a8eab64e93401/source/_posts/2013-12-01-install-linux-driver-for-fast-fw150us.markdown\" target=\"_blank\">8188eu</a>\n```\nmake\n如没有出错，进行安装：\nsudo make install\n没出错的话，重启后就可以用了。\n\n不过也可以让它立刻生效：\nsudo modprobe 8188eu\n```\n\n<a href=\"https://github.com/minibear0523/RTL8188eu_deb\" target=\"_blank\">RTL8188eu_deb</a>\n\n","tags":["linux"]},{"title":"[arm] armhf源","url":"/2020/02/22//articles/2020/02/22/1582368954000.html/","content":"\n```\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ wily main restricted universe multiverse \ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ wily-updates main restricted universe multiverse \ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ wily-security main restricted universe multiverse \ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ wily-backports main restricted universe multiverse\n```\n\n```\ncat /etc/apt/sources.list\ndeb http://ports.ubuntu.com/ubuntu-ports/ precise main universe\ndeb-src http://ports.ubuntu.com/ubuntu-ports/ precise main universe\n\n\nmv /etc/apt/sources.list /etc/apt/sources.list.bak\n\ncat > /etc/apt/sources.list <<EOF\ndeb http://mirrors.ustc.edu.cn/ubuntu-ports/ precise main universe\ndeb-src http://mirrors.ustc.edu.cn/ubuntu-ports/ precise main universe\nEOF\n\n\nls /etc/apt/sources.list.d\n/etc/apt/sources.list.d/linaro-overlay-ppa.list\n\ncat /etc/apt/sources.list.d/linaro-overlay-ppa.list\ndeb http://ppa.launchpad.net/linaro-maintainers/overlay/ubuntu precise main\ndeb-src http://ppa.launchpad.net/linaro-maintainers/overlay/ubuntu precise main\n\nmv /etc/apt/sources.list.d/linaro-overlay-ppa.list /etc/apt/sources.list.d/linaro-overlay-ppa.list.bak\n\napt-get update\n```\n\n<a href=\"https://www.cnblogs.com/wylnii/p/Ubuntu-mirrors-armhf.html\" target=\"_blank\">Ubuntu 的国内源（armhf）</a>\n\n缺少linux kernel 头文件\n```\napt-get install linux-headers-generic\napt-get install linux-headers-$(uname -r)\napt-get install linux-source\n```\n\n更新内核\n```\ndo-release-upgrade\n```\n\narmhf编译驱动程序\n```\narm-linux-gnueabihf-gcc -o hello hello.c -static\n```\n\narm-linux-gcc的安装：\n```\napt-get install gcc-arm-linux-gnueabihf\n```\n\narm-linux-g++的安装：\n```\napt-get install g++-arm-linux-gnueabihf\n```\n\narm-linux-gcc-4.4.3.tar.gz\n```\nhttp://www.arm9.net/download.asp\n```\n\n<a href=\"https://blog.csdn.net/lg1259156776/article/details/52281323\" target=\"_blank\">arm-linux-gnueabihf-gcc下载</a>\n<a href=\"https://launchpad.net/linaro-toolchain-binaries/trunk/2013.10/+download/gcc-linaro-arm-linux-gnueabihf-4.8-2013.10_linux.tar.xz\" target=\"_blank\">gcc-linaro-arm-linux-gnueabihf-4.8-2013.10_linux.tar.xz</a>\n<a href=\"http://pan.baidu.com/s/1o6HW8bS\" target=\"_blank\">gcc-linaro-arm-linux-gnueabihf-4.9-2014.07_linux.tar.xz</a>\n","tags":["arm"]},{"title":"[linux] 安装arm交叉编译工具","url":"/2020/02/22//articles/2020/02/22/1582348152000.html/","content":"\n```\n#下载arm-none-linux-gnueabi-gcc安装包\ngit clone https://github.com/BrighterEyer/arm-none-linux-gnueabi-gcc-files\n\n#wget -c http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2009q1-203-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\n\n\n#解压arm-none-linux-gnueabi-gcc安装包\ncp arm-2009q1-203-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 /usr/local\ntar -jxvf arm-2009q1-203-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\n\n#添加交叉编译工具路径\nvi /etc/bash.bashrc\nexport PATH=$PATH:/usr/local/arm-2009q1/bin/\nsource /etc/bash.bashrc\n```\n","tags":["linux"]},{"title":"[ubuntu] wlan0配置","url":"/2020/02/21//articles/2020/02/21/1582286067000.html/","content":"\n安装 wireless_tools 和 madwifi\n```\npacman -S wireless_tools madwifi\n\nlsusb\n\niwconfig\n```\n\n2.查看自己的网卡类型\n```\nlspci\n```\n\n3.激活网卡\n```\nifconfig wlan0 up\n```\n\n4.扫描网络\n```\niwlist wlan0 scan\n```\n\n5.配置 wpa_supplicant\n```\ncat /etc/wpa_supplicant/wpa_supplicant.conf\n\nctrl_interface=/var/run/wpa_supplicant\n\nnetwork={\n\tssid=\"MERCURY_233\"\n\tpsk=\"bluedolagon\"\n}\n```\n\n6.连接wlan0到网络，并以daemon方式运行\n```\nwpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf\n```\n\n7.设置IP地址\n```\nifconfig wlan0 192.168.1.153 netmask 255.255.255.0\n```\n\n8.加入网关到路由\n```\nroute add default gw 192.168.1.1 dev wlan0\n```\n\n9.设置完毕\n```\nwpa_supplicant -B -i wlan0 -c /etc/my_wpa_supplicant.conf \nifconfig wlan0 192.168.1.131\nroute add default gw 192.168.1.1 dev wlan0\n```\n\n10.相关命令\n```\n# 关闭连接\nwpa_cli terminate\n# 连接状态\nwpa_cli status\n```\n\n11./etc/network/interfaces\n```\ncat > /etc/network/interfaces<<EOF\n\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\naddress 192.168.1.100\nnetmask 255.255.255.0\ngateway 192.168.1.1\ndns-nameserver 114.114.114.114\n\nauto wlan0\niface wlan0 inet dhcp\nwpa-ssid xxxxxx\nwpa-psk yyyyyy\n\nEOF\n\ncat /etc/network/interfaces\n```\n\n12.设置开机启动无线网络\n```\nvim /etc/rc.local\n/sbin/ifconfig wlan0 up\n/etc/init.d/networking restart\nexit 0\n```\n\n","tags":["ubuntu"]},{"title":"[ubuntu] eth0配置","url":"/2020/02/21//articles/2020/02/21/1582286066000.html/","content":"\n配置网卡\n```\nifconfig eth0 192.168.1.153 netmask 255.255.255.0\nroute add default gw 192.168.1.1\n#ifconfig eth0 down\nifconfig eth0 up\nroute -n\n\n```\n\n\n```\ncat > /etc/network/interfaces<<EOF\n\nauto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\naddress 192.168.1.153\nnetmask 255.255.255.0\ngateway 192.168.1.1\ndns-nameserver 114.114.114.114\n\nEOF\n\ncat /etc/network/interfaces\n```\n\n配置永久DNS(追加)\n```\ncat > /etc/resolvconf/resolv.conf.d/base <<EOF\nnameserver 114.114.114.114\nnameserver 8.8.8.8\nnameserver 8.8.4.4\nEOF\n\nresolvconf -u\ncat /etc/resolv.conf\n```\n\n```\ncat > /etc/resolv.conf <<EOF\nnameserver 114.114.114.114\nnameserver 8.8.8.8\nnameserver 8.8.4.4\nEOF\n```\n\n重启服务\n```\n/etc/init.d/networking restart\n```\n\n```\nping www.baidu.com\n```\n\n```\nwpa_supplicant -B -iwlan0 -c /etc/wpa_supplicant.conf -Dwext dhcp 2>/dev/null\nwpa_cli -a /etc/wpa_action.sh -B\n```\n\n","tags":["ubuntu"]},{"title":"[arm] itop6818QtE移植wifi_mt6620","url":"/2020/02/21//articles/2020/02/21/1582286065000.html/","content":"<a href=\"https://github.com/BrighterEyer/itop6818-mt6620-4g-files\" target=\"_blank\">itop6818-mt6620-4g-files</a>\n\n\n移植OpenSSL\n```\nwget --no-check-certificate http://www.openssl.org/source/openssl-1.1.0g.tar.gz\ntar xvf openssl-1.1.0g.tar.gz\ncd openssl-1.1.0g\n./config no-asm shared --prefix=$(pwd)/__install\n```\n\n\nvim Makefile\n```\n搜索 CFLAG\n删除上图中红框中的“-m64”\n\nSHARED_LIBS=libcrypto.so libssl.so\nSHLIB_TARGET=linux-shared\n\n找到 CFLAG 变量，在变量的最后加上：-DOPENSSL_NO_STATIC_ENGINE 保存退出\n```\n\n```\nmake CROSS_COMPILE=/usr/local/arm/4.3.2/bin/arm-none-linux-gnueabi-\nmake install\n```\n\n```\nmkdir ~/work\ncp -r __install/lib ~/work\n```\n\n移植libnl\n```\nwget --no-check-certificate https://github.com/tgraf/libnl-1.1-stable/archive/libnl1_1_4.tar.gz\ntar xvf libnl1_1_4.tar.gz;mv libnl-1.1-stable-libnl1_1_4 libnl-1.1.4;cd libnl-1.1.4\n./configure --prefix=$(pwd)/__install --enable-shared --enable-static\nmake CC=/usr/local/arm/4.3.2/bin/arm-none-linux-gnueabi-gcc\nmake install\n```\n\nlibnl下的lib文件夹\n```\ncp -r __install/lib ~/work\n```\n\n移植wpa_supplicant\n```\nwget http://w1.fi/releases/wpa_supplicant-2.9.tar.gz\ntar xvf wpa_supplicant-2.9.tar.gz;cd wpa_supplicant-2.9/wpa_supplicant;\n```\n\n```\ncp defconfig .config\n\nvim Makefile\n\n将ifndef CC CC=gcc endif 修改为：\n\nCFLAGS += -I../../libnl-1.1.4/__install/include/\nCFLAGS += -I../../openssl-1.1.0g/__install/include/\nLIBS += -L../../libnl-1.1.4/__install/lib/\nLIBS += -L../../openssl-1.1.0g/__install/lib/\n#ifndef CC\nCC=/usr/local/arm/4.3.2/bin/arm-none-linux-gnueabi-gcc\n#endif\n\nmake\nls wpa_supplicant\n#将编译好的 wpa_supplicant 工具拷贝到开发板上的“/usr/sbin”目录即可\n```\n\n```\n复制 ~/lollipop-5.1.1_r6/qt_system/system/lib、~/lollipop-5.1.1_r6/qt_system/system/usr/lib、~/work/lib 文件夹中的库文件到开发板的 /lib 目录\n\n复制 ~/lollipop-5.1.1_r6/qt_system/system/sbin、~/lollipop-5.1.1_r6/qt_system/system/usr/sbin 文件夹中的文件到开发板的 /usr/sbin 目录\n\n复制 ls ~/lollipop-5.1.1_r6/qt_system/system/usr/bin/6620_launcher 到开发板的 /usr/bin 目录下\n\n复制 ~/lollipop-5.1.1_r6/qt_system/system/lib/modules/mt6620/ 中的所有文件到 /lib/modules/mt6620/ 目录\n\n复制 make_mt6620.sh 到开发板的任意目录\n```\n\n开发板连接WiFi\n```\n#在开发板执行下面的指令，更新 WiFi开机启动脚本\n\ncat << EOF > /etc/init.d/mt6620\n#!/bin/sh\n#support MT6620 WIFI Module\nmknod /dev/stpwmt c 190 0\nmknod /dev/stpgps c 191 0\nmknod /dev/fm c 193 0\nmknod /dev/wmtWifi c 194 0\n\ninsmod /lib/modules/mt6620/mtk_hif_sdio.ko\ninsmod /lib/modules/mt6620/mtk_stp_wmt.ko\ninsmod /lib/modules/mt6620/mtk_stp_uart.ko\ninsmod /lib/modules/mt6620/mtk_stp_gps.ko\n#insmod /lib/modules/mt6620/hci_stp.ko\n#insmod /lib/modules/mt6620/mt6620_fm_drv.ko\n#insmod /lib/modules/mt6620/mtk_fm_priv.ko\ninsmod /lib/modules/mt6620/mtk_wmt_wifi.ko WIFI_major=194\ninsmod /lib/modules/mt6620/wlan_mt6620.ko\n\nchmod 0666 /dev/stpwmt\nchmod 0666 /dev/stpgps\nchmod 0666 /dev/fm\nchmod 0666 /dev/wmtWifi\nchmod 0666 /dev/gps\nchmod 0660 /dev/ttySAC2\n\n/usr/bin/6620_launcher -m 1 -b 921600 -n /etc/firmware/mt6620_patch_hdr.bin -d /dev/ttySAC2 &\n\nsleep 4\necho 1 > /dev/wmtWifi\n\nwpa_supplicant -iwlan0 -Dnl80211 -c/etc/wpa_supplicant/wpa_supplicant.conf &\nsleep 3\nudhcpc -i wlan0 >/var/udhcpc_log &\nEOF\n```\n\n或者在开发板上执行\n```\nmake_mt6620.sh\n```\n\n\n然后执行以下指令\n```\nwpa_passphrase XXX \"YYY\" > /etc/wpa_supplicant/wpa_supplicant.conf\n\n#执行命令“ ./etc/init.d/mt6620 ”即可连接到 WiFi 网络，配置时间大约 30 秒左右\n./etc/init.d/mt6620\n```\n\n","tags":["arm"]},{"title":"[arm] 看云","url":"/2020/02/19//articles/2020/02/19/1582105141000.html/","content":"<a href=\"https://www.kancloud.cn/lichee/lpi0/418897\" target=\"_blank\">移植tslib</a>\n","tags":["arm"]},{"title":"[arm] ubuntu.img","url":"/2020/02/19//articles/2020/02/19/1582105140000.html/","content":"<a href=\"http://cdimage.ubuntu.com/ubuntu-base/releases/\" target=\"_blank\">ubuntu core下载网址</a>\n<a href=\"https://www.jianshu.com/p/7453d52f0324\" target=\"_blank\">移植ubuntu-base到ARM/AARCH64</a>\n\n1、下载、解压ubuntu core\n```\nmkdir /root/ubuntu;cd /root/ubuntu\nwget http://cdimage.ubuntu.com/ubuntu-base/releases/16.04.1/release/ubuntu-base-16.04.2-base-arm64.tar.gz\ntar -xpf ubuntu-base-16.04.2-base-arm64.tar.gz;mv ubuntu-base-16.04.2-base-arm64 ubuntu-base-16;\n```\n\n2、安装qemu模拟器\n```\napt-get install -y qemu-user-static\n```\n\n3、配置Ubuntu\n1）拷贝qemu-arm-static 到ubuntu core的usr/bin/\n```\ncp /usr/bin/qemu-arm-static usr/bin/\n```\n2）拷贝主机的resolv.conf 到ubuntu core的etc/\n```\ncp -b /etc/resolv.conf etc/resolv.conf\n```\n3）修改目标ubuntu的下载软件源\n```\ncat >> /etc/apt/sources.list <<EOF\ndeb http://ports.ubuntu.com/ubuntu-ports/ xenial main universe\ndeb-src http://ports.ubuntu.com/ubuntu-ports/ xenial main universe\nEOF\n```\n4）配置串口调试服务\n```\ncp etc/init/tty1.conf etc/init/ttyS2.conf\nsudo vi etc/init/ttyS2.conf\n\ncat >> etc/rc.local<<EOF\nstart ttyS2\nEOF\n```\n5）以太网配置\n```\ncat >> etc/network/interfaces<<EOF\nauto eth0  \niface eth0 inet dhcp hwaddress ether 7e:8d:a5:3a:ce:9e\n```\n6）修过主机名\n```\nvi etc/hostname\n```\n\n4、启动模拟器，安装组件\n（1）用附件中的ch-mount.sh脚本，拷贝到前面的创建ubuntu的上级目录\n```\nchmod +x ch-mount.sh\n./ch-mount.sh -m ubuntu/\n```\n\n-m 创建home目录 （不加这个要手动添加目录，不然开机时，会出现No directory,Logging in with HOME=/ ）\n```\nuseradd -s '/bin/bash' -m -G adm,sudo daluotuo\n```\n（2）修过密码\n```\npasswd daluotuo\n```\n（3）安装常用工具\n```\napt-get install -y vim git openssh-server\napt-get install -y sudo\napt-get install -y net-tools\napt-get install -y iputils-ping\napt-get install -y wireless-tools\napt-get install -y htop\napt-get install -y rsyslog\napt-get install -y network-manager\napt-get install -y ifupdown\napt-get install -y ethtool\n```\n可以根据需要，安装各种组件。\n（4）退出chroot\n用exit 命令，退出chroot\n（5）用脚本载缷载退出根文件系统\n```\n./ch-mount.sh -u ubuntu/\n```\n\n4、制作镜像\n1）用dd工具创建镜像文件：\n```\ndd if=/dev/zero of=ubuntu.img  bs=1M count=1000\n```\n2）格式化镜像文件，并加入linuxroot卷标：\n```\nsudo mkfs.ext4 -F -L linuxroot ubuntu.img\n```\n3）拷贝文件系统到 镜像文件\n```\nmkdir ubuntu-mount\nsudo mount  ubuntu.img ubuntu-mount\nsudo cp -rfp ubuntu/* ubuntu-mount\n```\n4）缷载镜像：\n```\nsudo umount ubuntu-mount\n```\n5）检查镜像\n```\nsudo e2fsck -p -f ubuntu.img\n```\n6）减少镜像大小\n```\nsudo resize2fs -M ubuntu.img\ndu -sh ubuntu.img\nubuntu, arm, rk3288\n```\n\n","tags":["arm"]},{"title":"[arm] qemu+u-boot","url":"/2020/02/19//articles/2020/02/19/1582105139000.html/","content":"\n\n<a href=\"http://ftp.denx.de/pub/u-boot/\" target=\"_blank\">u-boot</a>\n```\ncd /root\nwget https://ftp.denx.de/pub/u-boot/u-boot-2015.10.tar.bz2;\ntar xvf u-boot-2015.10.tar.bz2;cd u-boot-2015.10;\nmake ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- vexpress_ca9x4_defconfig\nmake ARCH=arm CROSS_COMPILE=arm-linux-gnueabi-\n```\n\n```\nqemu-system-arm -M vexpress-a9 \\\n     -kernel u-boot \\\n     -nographic \\\n     -m 512M\n```\n","tags":["arm"]},{"title":"[arm] 编译ubuntu","url":"/2020/02/18//articles/2020/02/18/1582027314000.html/","content":"<a href=\"https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/\" target=\"_blank\">[docker] ubuntu+ssh</a>\n\n```\napt update\napt upgrade -y\n```\n\ndebootstrap最小化系统\n```\napt-get install -y debootstrap\ndebootstrap --arch=arm64 xenial /media/ubuntu/ http://mirrors.ustc.edu.cn/ubuntu-ports\n```\n\nchroot进入ubuntu最小系统\n```\nmkdir -p /media/ubuntu/dev\nmkdir -p /media/ubuntu/proc\nmkdir -p /media/ubuntu/sys\nmkdir -p /media/ubuntu/bin\nmkdir -p /media/ubuntu/lib\nmkdir -p /media/ubuntu/lib64\nmkdir -p /media/ubuntu/usr/bin\nmkdir -p /media/ubuntu/usr/lib\n\nmount -o bind /dev /media/ubuntu/dev\nmount -o bind /proc /media/ubuntu/proc\nmount -o bind /sys /media/ubuntu/sys\nmount -o bind /bin /media/ubuntu/bin\nmount -o bind /lib /media/ubuntu/lib\nmount -o bind /lib64 /media/ubuntu/lib64\nmount -o bind /usr/bin /media/ubuntu/usr/bin\nmount -o bind /usr/lib /media/ubuntu/usr/lib\n```\n\n\n```\ndpkg --add-architecture i386\napt-update\napt install -y bash:i386\n\nldd /bin/bash\n        linux-vdso.so.1 (0x00007ffdd45e1000)\n        libtinfo.so.5 => /lib/x86_64-linux-gnu/libtinfo.so.5 (0x00007faacb58d000)\n        libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007faacb389000)\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007faacaf98000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007faacbad1000)\n\ncp /bin/bash /media/ubuntu/bin/\nmkdir /media/ubuntu/lib/x86_64-linux-gnu/\nmkdir /media/ubuntu/lib64\ncp /lib/x86_64-linux-gnu/{libtinfo.so.5,libdl.so.2,libc.so.6} /media/ubuntu/lib/x86_64-linux-gnu/\ncp /lib64/ld-linux-x86-64.so.2 /media/ubuntu/lib64/\n```\n\n```\nchroot /media/ubuntu /bin/bash -l\n```\n\n注意这里chroot命令执行后，就进入ubuntu最小化系统环境了\n```\napt-get update\napt-get install -y sudo\npasswd\n```\n\n网络工具安装（包含ifconfig命令、dhcp服务）\n```\napt-get install -y net-tools dhcpcd5\n```\n\nlocales配置（字符编码配置–可选）\n```\napt-get install -y locales\ndpkg-reconfigure locales\n```\n\n退出chroot环境，直接输入 exit 命令即可，退出后解绑系统资源\n```\nexit\numount /media/ubuntu/dev\numount /media/ubuntu/proc\numount /media/ubuntu/sys\n```\n\n/media/ubuntu/etc/fstab\n```\n/dev/sda1 /boot         ext4  defaults          0 2\n/dev/sda2 /             ext4  errors=remount-ro 0 1\n/dev/sda3 none          swap  sw                0 0\n```\n\n用户\n```\necho 'uuu' > /media/ubuntu/etc/hostname\necho '127.0.1.1 uuu' >> /media/ubuntu/etc/hosts\n```\n\n/etc/resolv.conf\n```\nsearch domain\nnameserver 127.0.0.1\nnameserver 114.114.114.114\n```\n\n\n```\nperl -e 'print crypt(\"123\",q(zzz)),\"\\n\"'\nzzpru5Cch2iTk\nchroot /media/ubuntu/ /bin/bash -c \"useradd -m -d /home/zzz -s /bin/bash -p zzpru5Cch2iTk zzz\"\nchroot /media/ubuntu/ /bin/bash -c \"addgroup zzz adm\"\nchroot /media/ubuntu/ /bin/bash -c \"addgroup zzz sudo\"\n```\n\nmkfs.ext4\n```\nmkfs.ext4 /dev/sdb1  #如果是fat分区: mkfs.vfat\nmount /dev/sdb1 /mnt\nrsync -a /boot/* /mnt\numount /mnt\n```\n\nroot分区\n```\nmkfs.ext4 /dev/sdb2 \nmount /dev/sdb2 /mnt\nrsync -a /media/ubuntu/* /mnt\numount /mnt\n```\n\n完善系统 \n```\napt-get update\napt-get upgrade -y\n```\n\n安装图形化界面（推荐用xfce4）\n```\napt-get -y install xfce4\napt-get -y install xfce4-goodies\napt-get -y install ttf-wqy-zenhei  #中文字体\napt-get -y install slim            #登录管理\napt-get -y install xscreensaver    #屏保\napt-get -y install firefox         #火狐浏览器\n```\n\n<a href=\"https://blog.csdn.net/westlor/article/details/78982649\" target=\"_blank\">构建安装ARM Ubuntu系统</a>\n","tags":["arm"]},{"title":"[arm] 编译android","url":"/2020/02/18//articles/2020/02/18/1582024060000.html/","content":"<a href=\"https://www.jianshu.com/p/367f0886e62b\" target=\"_blank\">自己动手编译Android源码(超详细)</a>\n<a href=\"https://www.cnblogs.com/pengdonglin137/p/10888727.html\" target=\"_blank\">将linux和uboot集成到Android编译框架中</a>\n<a href=\"http://androidxref.com/\" target=\"_blank\">androidxref.com</a>\n\n<a href=\"https://lug.ustc.edu.cn/wiki/mirrors/help/aosp\" target=\"_blank\">AOSP(Android) 镜像</a>\n```\ndocker run --privileged --name android -itd -p 5022:22 ubuntu\n```\n\n```\napt update;apt upgrade -y\napt install -y curl python3 git vim\n\ngit config --global user.email \"test@test.com\"\ngit config --global user.name \"test\"\n```\n\nrepo工具下载及安装\n```\nmkdir ~/bin\nPATH=~/bin:$PATH\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\nchmod a+x ~/bin/repo\n\ncurl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o ~/bin/repo\nchmod +x ~/bin/repo\n\nvim ~/.bashrc\nexport REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo'\nsource ~/.bashrc\n```\n\n建立源码文件夹\n```\nmkdir source\ncd source\n```\n\n\n```\napt install -y gnupg gnupg-agent rng-tools\n```\n\n初始化仓库\n```\nrepo init -u https://aosp.tuna.tsinghua.edu.cn/mirror/manifest\n#或\nrepo init -u git://aosp.tuna.tsinghua.edu.cn/aosp/platform/manifest\n```\n\n如果提示无法连接到 gerrit.googlesource.com，请参照<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/git-repo\" target=\"_blank\">git-repo</a>的帮助页面的更新一节。\n\n```\n#如果提示无法连接到 gerrit.googlesource.com，那么需要编辑\nvim ~/bin/repo\nREPO_URL = 'https://gerrit-google.tuna.tsinghua.edu.cn/git-repo'\n```\n\n同步源码到本地\n```\nrepo sync\n\nmkdir -p /tmp\nmkdir -p /usr/tmp\nmkdir -p /source\nmkdir -p /var/tmp\n```\n\n```\napt-get install software-properties-common\nadd-apt-repository ppa:openjdk-r/ppa\napt-get update\napt-get -y install openjdk-8-jdk\n```\n\njdk版本切换:\n```\nupdate-alternative --config java\nupdate-alternative --config javac\n```\n\n```\napt-get install -y libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib\napt-get install -y git flex bison gperf build-essential libncurses5-dev:i386\napt-get install -y tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386\napt-get install -y dpkg-dev libsdl1.2-dev libesd0-dev\napt-get install -y git-core gnupg flex bison gperf build-essential\napt-get install -y zip curl zlib1g-dev gcc-multilib g++-multilib\napt-get install -y libc6-dev-i386\napt-get install -y lib32ncurses5-dev x11proto-core-dev libx11-dev\napt-get install -y libgl1-mesa-dev libxml2-utils xsltproc unzip m4\napt-get install -y lib32z-dev ccache\n```\n\n初始化编译环境\n```\nsource build/envsetup.sh\n```\n\n选择编译目标\n```\nlunch aosp_arm64-eng\n```\n\n开始编译\n```\nmake -j8\n```\n\n\n<a href=\"https://blog.csdn.net/hunter___/article/details/80972878\" target=\"_blank\">自己动手编译Android源码</a><br>\n<a href=\"https://blog.csdn.net/lincyang/article/details/48197787\" target=\"_blank\">Android5.1.1源代码编译与烧写</a><br>\n\n<a href=\"https://blog.csdn.net/u010659887/article/details/89096465\" target=\"_blank\">csdn s5p4418 android5.1编译</a><br>\n<a href=\"http://www.pianshen.com/article/4275344965/\" target=\"_blank\">程序员大本营 s5p4418 android5.1编译</a><br>\n\n<a href=\"https://www.jianshu.com/p/80a40e2bf0b2\" target=\"_blank\">编译Android5.1.1源码</a><br>\n<a href=\"http://androidxref.com/5.1.1_r6/\" target=\"_blank\">5.1.1_r6</a><br>\n","tags":["arm"]},{"title":"[docker] kail","url":"/2020/02/17//articles/2020/02/17/1581947550000.html/","content":"<a href=\"https://blog.csdn.net/xiyuliuyang/article/details/91445855\" target=\"_blank\">docker安装kali linux</a>\n\n```\n#开始部署\ndocker search kali\n\ndocker pull kalilinux/kali-linux-docker\ndocker run --name kali -it -p 6022:22 kalilinux/kali-linux-docker /bin/bash exit\ndocker ps -a\ndocker start kali\ndocker attach kali\n\n#修改密码\npasswd root 123456\n```\n\nsources.list软件源文件\n```\ncp /etc/apt/sources.list /etc/apt/sources.list.bak\nvi /etc/apt/sources.list\n\ndeb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\ndeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib\ndeb http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free\ndeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free\ndeb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free\ndeb-src http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free\n```\n\n```\napt-get update\napt-get install -y net-tools\nnetstat -ant\n```\n\n```\napt-get install -y openssh-server\nvi /etc/ssh/sshd_config\n#PermitRootLogin prohibit-password\nPermitRootLogin yes\n\nservice ssh start\n```\n\n```\n#安装tree直接运行\napt-get install -y sqlmap\n\n#安装kali所有的工具(10G左右)\napt-get install -y kali-linux-all\n```\n","tags":["docker"]},{"title":"[arm] gdb-multiarch调试arm程序","url":"/2020/02/17//articles/2020/02/17/1581945980000.html/","content":"<a href=\"https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/\" target=\"_blank\">docker+ubuntu</a>\n\n交叉编译工具arm-linux-gnueabihf-gcc\n```\napt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf\narm-linux-gnueabihf-gcc -v\n```\n\n安装qemu\n```\napt-get install -y qemu\n```\n安装gdb-multiarch\n```\napt-get install -y gdb-multiarch\n```\n\n安装arm文件所需要的动态库\n```\napt-get install -y gcc-multilib-arm-linux-gnueabi gcc-armhf-cross\n\nln -s /usr/arm-linux-gnueabihf/lib/ld-linux-armhf.so.3 /lib/ld-linux-armhf.so.3\n\nvim /etc/profile\nexport LD_LIBRARY_PATH=/usr/arm-linux-gnueabihf/lib/:$LD_LIBRARY_PATH\nsource /etc/profile\n```\n\narm程序的编译运行\n\nhello.c\n```\n#include <stdio.h>\n\nint main(void){\n\tprintf(\"hello world\");\n\n\treturn 0;\n}\n```\n编译：\n```\narm-linux-gnueabihf-gcc -o hello-arm hello.c\n```\n运行：\n```\nqemu-arm hello-arm\n```\n\n在1234端口上开启调试模式，并运行arm程序\n```\nqemu-arm -g 1234 hello-arm\n```\n\n用gdb打开待调试文件\n```\ngdb-multiarch hello-arm\n```\n\n在gdb中连接调试端口\n```\ntarget remote 1234\n```\n\n<a href=\"http://blog.binpang.me/2018/07/26/qemu-arm/\" target=\"_blank\">gdb-multiarch调试arm程序</a>\n<a href=\"https://www.jianshu.com/p/dc8e263d6466\" target=\"_blank\">Linux下ARM程序的编译运行及调试</a>\n","tags":["arm"]},{"title":"[arm] buildroot+qemu+vexpress","url":"/2020/02/17//articles/2020/02/17/1581936999000.html/","content":"<a href=\"https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/\" target=\"_blank\">docker+ubuntu</a>\n\n配置工作环境：\n```\napt install -y gcc build-essential bison flex gettext tcl sharutils libncurses-dev zlib1g-dev exuberant-ctags g++ texinfo patch vim libtool bc git\n```\n安装qemu工具：\n```\napt install -y qemu-system-arm\n```\n下载buildroot：\n<a href=\"https://buildroot.org/downloads/buildroot-2017.05.2.tar.gz\" target=\"_blank\">buildroot-2017.05.2.tar.gz</a>\n```\ngit clone https://github.com/arnoldlu/buildroot.git -b arnoldlu_2017_05_2;cd buildroot\n```\n\n解决：\n```\n# lzo安装：\nwget http://www.oberhumer.com/opensource/lzo/download/lzo-2.06.tar.gz\ntar xzvf lzo-2.06.tar.gz;cd lzo-2.06\n./configure --enable-shared\nmake;make install\n\n# lzop安装：\nwget 'http://www.lzop.org/download/lzop-1.03.tar.gz'\ntar xzvf lzop-1.03.tar.gz;cd lzop-1.03\n./configure\n```\n\n配置编译buildroot：\n```\napt install -y cpio python unzip rsync lzop\nmake qemu_arm_vexpress_defconfig\nmake\n#编译zImage，module以及dtb\nls output/images\n#zImage vexpress-v2p-ca9.dtb rootfs.ext2\n\n# zImage：内核\n# vexpress-v2p-ca9.dtb：DeviceTree文件\n# rootfs.ext2：文件系统\n```\n启动：\n```\nqemu-system-arm -M vexpress-a9 -smp 4 -m 1024M -kernel output/images/zImage -append \"root=/dev/mmcblk0 console=ttyAMA0 loglevel=8\" -dtb output/images/vexpress-v2p-ca9.dtb -sd output/images/rootfs.ext2 -nographic\n```\n停止qemu：\n```\nkillall qemu-system-arm\n```\n\n<a href=\"https://www.cnblogs.com/arnoldlu/p/9689585.html\" target=\"_blank\">buildroot+qemu+vexpress</a>\n<a href=\"https://www.cnblogs.com/microxiami/articles/9746979.html\" target=\"_blank\">Qemu搭建ARM vexpress开发环境(一)</a>\n<a href=\"https://www.cnblogs.com/microxiami/p/11093241.html\" target=\"_blank\">Qemu搭建ARM vexpress开发环境(二)----通过u-boot启动Linux内核</a>\n","tags":["arm"]},{"title":"[arm] 移植QtE4.8","url":"/2020/02/17//articles/2020/02/17/1581936652000.html/","content":"<a href=\"https://www.kancloud.cn/lichee/lpi0/428123\" target=\"_blank\">QtE4.8</a>\n\n```\ndocker run --name qte4 -itd -p 8022:22 ubuntu\napt-get update;apt-get upgrade -y\ndocker attach qte4\n```\n\n<a href=\"https://www.linuxidc.com/Linux/2013-07/87576.htm\" target=\"_blank\">Linux系统下Qt环境搭建</a>\n```\napt-get install -y build-essential\n#openGL相关\napt-get install -y libx11-dev libxau-dev libxaw7-dev libxcb1-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev\napt-get install -y libxext-dev libxfixes-dev libxfont-dev libxft-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev\napt-get install -y libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev\napt-get install -y libglib2.0-dev\napt-get install -y libssl-dev\napt-get install -y libgtk2.0-dev\napt-get install -y libcups2-dev\napt-get install -y libgl1-mesa-dev libglu1-mesa-dev\napt-get install -y libgstreamer0.10-dev\napt-get install -y ia32-libs libc6-i386\napt-get install -y libc6-i386\napt-get install -y automake libtool\napt-get install -y ia32-libs\napt-get install -y lib32ncurses5 lib32bz2-1.0\napt-get install -y vim\napt-get install -y libc6-dev\napt-get install -y build-essential \napt-get install -y --reinstall binutils\napt-get install -y lib32stdc++6\napt-get install -y lib32z1 lib32ncurses5\n```\n\n安装automake、libtool 和主机上的 Qt 工具：\n```\napt-get install -y git vim wget unzip automake\n\napt-get install -y automake autoconf libtool m4\napt-get install -y libX11-dev libXext-dev libXtst-dev libXrender-dev \napt-get install -y libqt4-core libqt4-dev libqt4-webkit qt4-demos\n\napt-get install -y pkg-config\napt-get install -y gcc\napt-get install -y libc6-dev\napt-get install -y linux-libc-dev\napt-get install -y build-essential\napt-get install -y libpcre3\napt-get install -y libpcre3-dev\napt-get install -y openssl\napt-get install -y libssl-dev\napt-get install -y lib32ncurses5\napt-get install -y lib32z1\napt-get install -y gcc-multilib\napt-get install -y g++-multilib\napt-get install -y gdb\n\napt-get install -y libglib2.0-dev libxrender-dev libfontconfig1-dev libxext-dev\n```\n\n安装arm-none-linux-gnueabi-gcc\n<a href=\"http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\" target=\"_blank\">arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</a>\n```\ncd /usr/local\nwget http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\ntar xvf arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\nls arm-2010q1;\n\n# PATH添加交叉编译器路径：\nvim /etc/profile\nexport PATH=$PATH:/usr/local/arm-2010q1/bin\nsource /etc/profile\n```\n\n<a href=\"https://www.kancloud.cn/lichee/lpi0/418897\" target=\"_blank\">移植tslib</a>\n```\n# 建立工作目录\ncd ~\nmkdir /usr/local/tslib\nmkdir /usr/local/qt4.8.5-arm\nmkdir qt;cd qt\n\n# 下载与解压\nwget https://github.com/libts/tslib/archive/master.zip;\nunzip master.zip;cd tslib-master\n\napt-get install -y libtool automake autogen autoconf libsysfs-dev pkg-config\napt-get install -y lib32z1 lib32ncurses5 lib32stdc++6\n\n# 解决方法\nvi src/tslib.h\n#加入下面这行定义\n#define EVIOCGPROP(len)          _IOC(_IOC_READ, 'E', 0x09, len)\n\nvim config.h.in\n//#undef malloc\n//#undef realloc\n\n# 编译\n./autogen.sh\n./configure CC=arm-none-linux-gnueabi-gcc CXX=arm-none-linux-gnueabi-g++ --host=arm-none-linux-gnueabi  --prefix=/usr/local/tslib ac_cv_func_malloc_0_nonnull=yes --enable-static=yes --with-gnu-ld\n\n# 安装\nmake -j32;make install\n\nls /usr/local/tslib\n\nvim /usr/local/tslib/etc/ts.conf\nmodule_raw input\n```\n\n4 编译安装qt\n```\n# 解压\nmkdir ~/qt-arm;cd ~/qt-arm\nwget http://download.qt-project.org/archive/qt/4.8/4.8.5/qt-everywhere-opensource-src-4.8.5.tar.gz\ntar xvf qt-everywhere-opensource-src-4.8.5.tar.gz;cd qt-everywhere-opensource-src-4.8.5\n\n# 指定交叉编译器\nsed -i \"s/arm-linux-/arm-none-linux-gnueabi-/g\" mkspecs/qws/linux-arm-g++/qmake.conf\n\nvim mkspecs/qws/linux-arm-g++/qmake.conf\n#加上 -lts\n# modifications to g++.conf\nQMAKE_CC = arm-none-linux-gnueabi-gcc -lts\nQMAKE_CXX = arm-none-linux-gnueabi-g++ -lts\nQMAKE_LINK = arm-none-linux-gnueabi-g++ -lts\nQMAKE_LINK_SHLIB = arm-none-linux-gnueabi-g++ -lts\n# modifications to linux.conf\nQMAKE_AR = arm-none-linux-gnueabi-ar cqs\nQMAKE_OBJCOPY = arm-none-linux-gnueabi-objcopy\nQMAKE_STRIP = arm-none-linux-gnueabi-strip\n\n\nmkdir /usr/local/qt4.8.5-arm;\n\n# 查看参数的详细说明\n#./configure --help\n```\n\n<details>\n<summary>配置Qt</summary>\n\n```\n./configure \\\n--prefix=/usr/local/qt4.8.5-arm \\\n-opensource \\\n-release \\\n-shared \\\n-Declarative \\\n-importdir /opt/imports \\\n-fast \\\n-no-largefile \\\n-qt-sql-sqlite \\\n-qt3support \\\n-exceptions \\\n-xmlpatterns \\\n-no-glib \\\n-no-phonon \\\n-no-mmx \\\n-no-3dnow \\\n-no-sse \\\n-no-sse2 \\\n-svg \\\n-no-webkit \\\n-qt-zlib \\\n-qt-libtiff \\\n-qt-libpng \\\n-qt-libjpeg \\\n-make libs \\\n-make tools \\\n-nomake examples \\\n-nomake docs \\\n-nomake demo \\\n-no-nis \\\n-no-cups \\\n-iconv \\\n-no-dbus \\\n-xplatform qws/linux-arm-g++ \\\n-embedded arm \\\n-little-endian \\\n-qt-freetype \\\n-depths 16,24,32 \\\n-qt-gfx-linuxfb \\\n-qt-gfx-transformed \\\n-qt-gfx-multiscreen \\\n-no-gfx-vnc \\\n-no-gfx-qvfb \\\n-qt-kbd-linuxinput \\\n-no-kbd-qvfb \\\n-armfpa \\\n-no-mouse-qvfb \\\n-qt-mouse-linuxtp \\\n-qt-mouse-tslib \\\n-DQT_QLOCALE_USES_FCVT \\\n-DQT_NO_QWS_CURSOR \\\n-no-pch \\\n-I/usr/local/tslib/include \\\n-L/usr/local/tslib/lib \\\n-confirm-license \\\n-no-openssl\n```\n</details>\n\n编译安装\n```\nmake -j32;make install\nls /usr/local/qt4.8.5-arm\n```\n\n5 配置主机Qt\n（1）设置环境变量\n```\nvim /etc/profile\nexport PATH=$PATH:/usr/local/qt4.8.5-arm/bin\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/qt4.8.5-arm/lib\n\nsource /etc/profile\n```\n\n6 移植Qt到开发板\n```\n开发板上要使用的东西就2个，一个是编译后的tslib，一个是编译后qt目录下的lib目录\n```\n（1）打包lib\n我们Qt 安装完成之后，为解决符号链接的问题，可以利用先打包，然后直接解压到开发板的做法：\n```\ncd /usr/local/qt4.8.5-arm;tar -zcf lib.tar.gz lib;mv lib.tar.gz /root/\n\ncd /usr/local;tar -zcf tslib.tar.gz tslib;mv tslib.tar.gz /root/\n\ncd /root;\nls lib.tar.gz tslib.tar.gz\n```\n\n连接开发板，在终端助手上执行\n（1）将打包好的压缩文件 lib.tar.gz 和 tslib.tar.gz 复制到开发板，然后解压：\n```\nmkdir -p /usr/local/qt4.8.5-arm\ntar xzvf lib.tar.gz -C /usr/local/qt4.8.5-arm\ntar xzvf tslib.tar.gz -C /usr/local\n```\n（2）设置开发板上的环境变量\n```\nvi setqtenv\nexport LD_LIBRARY_PATH=/lib:$LD_LIBRARY_PATH\nexport QTDIR=/usr/local/qt4.8.5-arm\nexport T_ROOT=/usr/local/tslib\nexport PATH=$T_ROOT/bin:$PATH\nexport LD_LIBRARY_PATH=$T_ROOT/lib:$QTDIR/lib:$LD_LIBRARY_PATH\nexport TSLIB_CONSOLEDEVICE=none\nexport TSLIB_FBDEVICE=/dev/fb0\nexport TSLIB_TSDEVICE=/dev/input/event0\nexport TSLIB_PLUGINDIR=$T_ROOT/lib/ts\nexport TSLIB_CONFFILE=$T_ROOT/etc/ts.conf\nexport TSLIB_CALIBFILE=/etc/pointercal\nexport QWS_KEYBOARD=USB:/dev/input/event1\nexport QWS_MOUSE_PROTO=Tslib:/dev/ input/event0\nexport QT_QWS_FONTDIR=$QTDIR/lib/fonts\n```\n（3）执行以下命令设置好qt环境变量的设置：\n```\nsource setqtenv\n```\n","tags":["arm"]},{"title":"[docker] 保存镜像、容器","url":"/2020/02/17//articles/2020/02/17/1581936651000.html/","content":"\n保存镜像\n```\ndocker save ID > xxx.tar\ndocker load < xxx.tar\n```\n\n保存容器\n```\ndocker export ID >xxx.tar\ndocker import xxx.tar containr:v1\n# 运行\ndocker run -it containr:v1 bash\n```\n\n","tags":["docker"]},{"title":"[docker] ubuntu+ssh","url":"/2020/02/17//articles/2020/02/17/1581936650000.html/","content":"<a href=\"https://blog.csdn.net/qq_43914736/article/details/90608587\" target=\"_blank\">Docker Ubuntu上安装ssh和连接ssh</a>\n```\ndocker pull ubuntu\ndocker run --privileged --name qemu -itd -p 8022:22 ubuntu\n\ndocker attach qemu\napt-get update;apt-get upgrade -y\napt-get install -y vim openssh-server\n\n#设置一个root密码\npasswd\n\n#修改配置文件\nvim /etc/ssh/sshd_config\n#PermitRootLogin prohibit-password\nPermitRootLogin yes\n\n/etc/init.d/ssh restart\n```\n\n<a href=\"https://blog.csdn.net/gezhonglei2007/article/details/51627821\" target=\"_blank\">Docker network命令</a>\n<a href=\"https://www.cnblogs.com/jimmyhe/p/11310861.html\" target=\"_blank\">虚拟网卡与docker</a>\n<a href=\"https://www.cnblogs.com/gispathfinder/p/5871043.html\" target=\"_blank\">Docker的4种网络模式</a>\n\n","tags":["docker"]},{"title":"[arm] buildroot+qemu+mini2440","url":"/2020/02/17//articles/2020/02/17/1581936649000.html/","content":"相关文件\n```\ngit clone https://github.com/BrighterEyer/qemu-mini2440-files\n```\n\n下载qemu for mini2440：\n```\napt-get install -y git vim zlib1g-dev libsdl-dev\n\n#方式(1)\ncd /root;wget http://repo.or.cz/w/qemu/mini2440.git/snapshot/HEAD.tar.gz\ntar xvf HEAD.tar.gz;mv mini2440-HEAD* mini2440;cd mini2440\n\n#方式(2)\n#git clone git://repo.or.cz/qemu/mini2440.git mini2440;cd mini2440\n```\n\n<a href=\"https://www.cnblogs.com/pengdonglin137/p/5004784.html\" target=\"_blank\">configure打补丁</a>\nconfigure.patch\n```\n--- configure.orig 2013-06-13 10:56:41.516276000 +0100\n+++ configure 2013-06-13 11:20:26.010368566 +0100\n@@ -1362,7 +1362,7 @@\n cat > $TMPC <<EOF\n #include\n #include\n-int main(void) { clockid_t id; return clock_gettime(id, NULL); }\n+int main(void) { struct itimerspec v; timer_t t; return timer_gettime (t, &v); }\n EOF\n \n rt=no\n```\n\n执行(实测无用)\n```\npatch configure configure.patch\n```\n\n或者修改Makefile.target(实测有用)\n```\ncat >> Makefile.target <<EOF\nLIBS+=-lz -lrt -lm\nEOF\n```\n\n```\n./configure --target-list=arm-softmmu --prefix=$HOME/work/mini2440\nmake -j4;make install\nls $HOME/work/mini2440\n\n#git clone git://repo.or.cz/u-boot-openmoko/mini2440.git uboot\n```\n\n安装完后，添加环境变量：\n```\nsudo vim /etc/bash.bashrc\nexport PATH=$PATH:$HOME/work/mini2440/bin\nsource /etc/bash.bashrc\nqemu-system-arm --version\n```\n\n使用buildroot一键生成uboot和linux内核及根文件系统：\n```\ngit clone https://github.com/arnoldlu/buildroot.git -b arnoldlu_2017_05_2\n```\n\n```\nwget http://buildroot.org/downloads/buildroot-2012.05.tar.gz\ntar xvf buildroot-2012.05.tar.gz;mv buildroot-2012.05 buildroot;cd buildroot\nsudo apt-get install -y libncurses5-dev g++ bison flex gettext patch git-core xz-utils automake\n\n#打补丁\n#wget https://raw.githubusercontent.com/BrighterEyer/qemu-mini2440-files/master/configure.patch\n#patch configure < ./configure.patch\n\ncat >> Makefile.target <<EOF\nLIBS+=-lz -lrt -lm\nEOF\n\n#make mini2440_defconfig\nmake defconfig\n\n#注意要最大化命令行窗口\n#make ARCH=arm menuconfig\n\napt-get install -y gcc-arm-linux-gnueabi\narm-linux-gnueabi -v\n```\n\n修改bug：\n```\n#注释掉：_GL_WARN_ON_USE (gets, \"gets is a security hole - use fgets instead\"）所在行\n\n#第165行\nvim output/build/host-m4-1.4.16/lib/stdio.in.h\n\n#第477行\nvim output/build/host-m4-1.4.16/lib/stdio.h\n```\n\nmenuconfig选择\n```\n- Toolchain ：我选上了GDB和GDBServer方便调试。\n- Package Selection for the target ： Busybox已经包含在里面了，我们也可以选择更多的项目，比如 Qt， EFL， directfb之类的图形库。在 Graphic libraries and application子目录里选择。 \n- Filesystem images ：在 Flash Type这项，改为 NAND flash with 512B Page and 16 KB erasesize 。 \n- Kernel ：内核版本改选为 3.3.7版本 \n```\n\n```\napt-get install -y cpio python unzip rsync\nmake all\n\nls output/images/\n#u-boot.bin uImage rootfs.jffs2 rootfs.tar\n```\n\n安装texinfo 4.13：\n```\nwget http://ftp.gnu.org/gnu/texinfo/texinfo-4.13a.tar.gz\ntar -zxvf texinfo-4.13a.tar.gz;mv texinfo-4.13 texinfo;cd texinfo\n./configure;make;make install\n```\n\nflashimg制作nand.bin并启动系统：\n<a href=\"https://gitorious.org/flashimg/flashimg.git\" target=\"_blank\">flashimg网址</a>\n<a href=\"https://gitorious.org/flashimg/flashimg?p=flashimg:flashimg.git;a=snapshot;h=fb97139a0d50ad7f2cd2b2348f5b10312da3ed5b;sf=tgz\" target=\"_blank\">flashimgflashimg-fb97139.tar.gz</a>\n```\n#git clone https://github.com/cailiwei/flashimg;cd flashimg;\n\nwget -O flashimg.tar.gz --no-check-certificate \"https://gitorious.org/flashimg/flashimg?p=flashimg:flashimg.git;a=snapshot;h=fb97139a0d50ad7f2cd2b2348f5b10312da3ed5b;sf=tgz\"\ntar xvf flashimg.tar.gz;mv flashimgflashimg* flashimg;cd flashimg\n\n#如果没有sudo，注意从文件中去掉\n./autogen.sh\n./configure;make;make install\n```\n\n```\nls ../buildroot/out/images\n#u-boot.bin uImage rootfs.jffs2 rootfs.tar\ncp ../buildroot/out/images/* ./\n./flashimg -s 64M -t nand -f nand.bin -p uboot.part -w boot,u-boot.bin -w kernel,uImage -w root,rootfs.jffs2 -z 512\n```\n\n启动方法：\n```\nqemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse\n```\n\n加载内核和根文件系统：\n```\nnboot kernel \nsetenv bootargs root=/dev/mtdblock3 rootfstype=jffs2 console=ttySAC0,115200\nsaveenv\nbootm\n```\n\n```\n#输入默认密码root\n\n#查看是否有网络配置\nifconfig\n```\n\nNFS挂在根文件系统：\n```\n#安装nfs服务\nsudo apt-get install -y nfs-kernel-server\n\n#然后配置nfsroot目录\nsudo vi /etc/exports\n~/work/nfsroot *(rw,sync,no_root_squash,no_subtree_check)\n\nsudo /etc/init.d/nfs-kernel-server restart\n\n#新建nfsroot目录\nmkdir ~/work/nfsroot;cd ~/work/nfsroot/\nwget https://github.com/BrighterEyer/qemu-mini2440-files/raw/master/rootfs_qtopia_qt4-20140103.tar.gz\ntar xvf rootfs_qtopia_qt4-20140103.tar.gz;ls rootfs_qtopia_qt4;\n\n#用nfs挂载之前需要把网卡的初始化过程取消\nrm /etc/init.d/if-config\n\nsudo chmod -R 777 ./\ncd rootfs_qtopia_qt4\ncd etc/init.d/\nrm ifconfig-eth0\n\n#创建虚拟网卡并配置ip\nsudo apt-get install -y uml-utilities #运行tunctl必须的工具\nsudo tunctl -u $USER -t tap0\nsudo ifconfig tap0 192.168.42.1\n\n#带网络方式启动qemu\ncd /root/flashimg\n\nqemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse -kernel uImage -net nic,vlan=0 -net tap,vlan=0,ifname=tap0,script=no,downscript=no\n\n#启动后进入uboot模式，此时的qemu还不能显示，输入下面指令加载内核和根文件系统\nset bootargs noinitrd root=/dev/nfs rw nfsroot=192.168.42.1:~/work/nfsroot/rootfs_qtopia_qt4/,proto=tcp,nfsvers=3,nolock ip=192.168.42.2:192.168.42.1::255.255.255.0 console=ttySAC0,115200\nbootm\n```\n\n安装交叉编译工具链：\n```\n#arm-linux-gcc-4.4.3.tar.gz\napt-get install -y lib32stdc++6 lib32z1\n```\n\n<a href=\"https://blog.csdn.net/maxwell_nc/article/details/44279553\" target=\"_blank\">嵌入式linux：通过qemu模拟mini2440开发环境</a>\n<a href=\"https://blog.csdn.net/leon1741/category_9278077.html\" target=\"_blank\">玩转mini2440开发板</a>\n<a href=\"https://github.com/kangear/MINI2440-NO_OS\" target=\"_blank\">MINI2440程序</a>\n\n","tags":["arm"]},{"title":"[docker] nginx+vue+express","url":"/2020/02/17//articles/2020/02/17/1581936648000.html/","content":"<a href=\"http://dockone.io/article/8834\" target=\"_blank\">手把手教你使用 Docker 部署 Vue.js 项目</a>\n\n```\nvue create vueclidemo\nyarn serve / npm run serve\n```\n\n访问\n<a href=\"http://localhost:8081\" target=\"_blank\">http://localhost:8081</a>\n\n修改vueclidemo/App.vue\n```\nimport axios from 'axios';\n//……\naxios.get('/api/json', {\n\tparams: {}\n}).then(\n\tres => {\n\t\tconsole.log(res);\n\t}\n).catch(\n\terror => {\n\t\tconsole.log(error);\n\t}\n);\n```\n\n```\nyarn build / npm run build\n```\n\n```\ndocker pull nginx\n```\n\ndefault.conf\n```\nserver {\n\tlisten       80;\n\tserver_name  localhost;\n\n\t#charset koi8-r;\n\taccess_log  /var/log/nginx/host.access.log  main;\n\terror_log  /var/log/nginx/error.log  error;\n\n\tlocation / {\n\t    root   /usr/share/nginx/html;\n\t    index  index.html index.htm;\n\t}\n\n\t#error_page  404              /404.html;\n\n\t# redirect server error pages to the static page /50x.html\n\t#\n\terror_page   500 502 503 504  /50x.html;\n\tlocation = /50x.html {\n\t    root   /usr/share/nginx/html;\n\t}\n} \n```\n\nDockerfile\n```\nFROM nginx\nCOPY dist/ /usr/share/nginx/html/\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\n```\n\n```\ndocker build -t vuenginxcontainer .\ndocker image ls | grep vuenginxcontainer\n```\n\n```\ndocker run \\\n-p 3000:80 \\\n-d --name vueApp \\\nvuenginxcontainer\n```\n\nServer.js\n```\n'use strict';\n\nconst express = require('express');\nconst PORT = 8080;\nconst HOST = '0.0.0.0';\n\nconst app = express();\napp.get('/', (req, res) => {\n\tres.send('Hello world\\n');\n});\n\napp.get('/json', (req, res) => {\n\tres.json({\n\t    code: 0,\n\t    data :'This is message from node container'\n\t})\n});\n\napp.listen(PORT, HOST);\nconsole.log(`Running on http://${HOST}:${PORT}`);\n```\n\n获取 Node 镜像\n```\ndocker pull node\n```\n\nDockerfile\n```\nFROM node\n\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"npm\", \"start\" ]\n```\n.dockerignore\n```\nnode_modules\nnpm-debug.log\n```\n\n构建 NodeWebServer 镜像\n```\ndocker build -t nodewebserver .\n```\n\n启动 NodeServer 容器\n```\ndocker run \\\n-p 5000:8080 \\\n-d --name nodeserver \\\nnodewebserver\n```\n\n访问\n```\nhttp://localhost:5000/json\n```","tags":["docker"]},{"title":"[arm] 交叉编译相关文件下载链接","url":"/2020/02/17//articles/2020/02/17/1581936647000.html/","content":"<a href=\"http://www.arm9.net/download.asp\" target=\"_blank\">Linux嵌入式交叉编译相关文件</a>\n\n<a href=\"ftp://ftp.denx.de/pub/u-boot/\" target=\"_blank\">u-boot</a>\n\n<a href=\"http://112.124.9.243/arm9net/mini2440/linux/arm-linux-gcc-4.4.3-20100728.tar.gz\" target=\"_blank\">arm-linux-gcc-4.4.3-20100728.tar.gz</a>\n<a href=\"http://112.124.9.243/arm9net/mini2440/linux/arm-linux-gcc-4.3.2.tgz\" target=\"_blank\">arm-linux-gcc-4.3.2.tgz</a>\n<a href=\"http://112.124.9.243/arm9net/linux/arm-qtopia-20100108.tar.gz\" target=\"_blank\">arm-qtopia-20100108.tar.gz</a>\nQtopia-2.2.0和QtE-4.6.3双图形系统，可以自由切换运行\n<a href=\"http://112.124.9.243/arm9net/mini2440/linux/rootfs_qtopia_qt4-20100816.tar.gz\" target=\"_blank\">rootfs_qtopia_qt4-20100816.tar.gz</a>\n\nLinux应用编程示例代码，包含串口，PWM，I2C，LED, 线程，数学库等示例\n<a href=\"http://112.124.9.243/arm9net/linux/examples-20100108.tar.gz\" target=\"_blank\">examples-20100108.tar.gz</a>\n\n\n<a href=\"ftp://ftp.arm.linux.org.uk/pub/linux/arm/toolchain/cross-2.95.3.tar.bz2\" target=\"_blank\">cross-2.95.3.tar.bz2</a>\n\n<a href=\"ftp://ftp.qtopia.org.cn/mirror/ftp.trolltech.com/qtopia/source/qtopia-free-src-2.2.0.tar.gz\" target=\"_blank\">qtopia-free-src-2.2.0.tar.gz</a>\n<a href=\"http://www.qtopia.org.cn/ftp/mirror/ftp.trolltech.com/qtopia/source/qtopia-free-src-2.2.0.tar.gz\" target=\"_blank\">qtopia-free-src-2.2.0.tar.gz</a>\n<a href=\"ftp://ftp.trolltech.com/pub/qt/source/qtopia-free-src-2.2.0.tar.gz\" target=\"_blank\">qtopia-free-src-2.2.0.tar.gz</a>\n\n<a href=\"http://nchc.dl.sourceforge.net/sourceforge/e2fsprogs/e2fsprogs-1.39.tar.gz\" target=\"_blank\">e2fsprogs-1.39.tar.gz</a>\n<a href=\"http://superb-east.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.14.tar.bz2\" target=\"_blank\">jpegsrc.v6b.tar.gz</a>\n<a href=\"http://superb-east.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.14.tar.bz2\" target=\"_blank\">libpng-1.2.14.tar.bz2</a>\n<a href=\"http://mail.pdaxrom.org/download/1.1.0beta4/src/tslib-1.3.tar.bz2\" target=\"_blank\">tslib-1.3.tar.bz2</a>(触摸屏校正工具：也可以用QT自带的，这样就不必下载)\n<a href=\"http://www.zlib.net/zlib-1.2.3.tar.gz\" target=\"_blank\">zlib-1.2.3.tar.bz2</a>\n","tags":["arm"]},{"title":"[arm] itop6818+Qtopia2.2.0","url":"/2020/02/17//articles/2020/02/17/1581936644000.html/","content":"docker+ubuntu\n```\ndocker pull ubuntu\ndocker run --privileged --name qtopia2 -itd -p 8023:22 ubuntu\n\ndocker attach qtopia2\napt-get update;apt-get upgrade -y\napt-get install -y vim openssh-server\n\n#设置一个root密码\npasswd\n\n#修改配置文件\nvim /etc/ssh/sshd_config\n#PermitRootLogin prohibit-password\nPermitRootLogin yes\n\n/etc/init.d/ssh restart\n```\n\n<a href=\"https://pan.baidu.com/s/12V6yl21PeEdhKNiYFHKRnw\" target=\"_blank\">文件资料</a>提取码：8n1e\n\n文件清单\n```\narm-linux-4.4.1.tar.gz\n```\n\n<a href=\"https://pan.baidu.com/s/1AeqzkboWkJDJjU9HxtXhrA\" target=\"_blank\">arm-linux-gcc-5.4.0.tar.gz</a>提取码：uzup\n源码方式\n```\nmkdir /usr/local/arm;cd /usr/local/arm;\ntar xvf arm-linux-4.4.1.tar.gz;ls 4.4.1;\nvim /etc/profile\n#export PATH=$PATH:/usr/local/arm/arm-2009q3/bin\nexport PATH=$PATH:/usr/local/arm/4.4.1/bin\nsource /etc/profile\narm-none-linux-gnueabi-gcc -v\n```\napt-get方式\n```\napt-get install -y libx11-dev libxext-dev libxtst-dev\napt-get install -y gcc-arm-linux-gnueabi\narm-linux-gnueabi-gcc -v\n```\n\n<a href=\"https://pan.baidu.com/s/1PUxi_DejVo-bgChQH5bzmA\" target=\"_blank\">rootfs_qtopia_qt4-20140103.tar.gz</a>\n```\n提取码：\n2dkz\n```\n\nQtopia2.2.0 源码\n```\nmkdir /root/yizhi;cd /root/yizhi\ntar xvf rootfs_qtopia_qt4-20140103.tar.gz\nls qtopia-free-src-2.2.0.tar.gz;ls build\n```\n\n触摸的库文件<a href=\"https://github.com/libts/tslib/releases\" target=\"_blank\">tslib</a>\n```\ncd /usr/local/arm\nwget https://github.com/libts/tslib/releases/download/1.21/tslib-1.21.tar.gz\ntar xvf tslib-1.21.tar.gz;mv tslib-1.21 tslib;ls tslib\n```\n\n02-Qtopia 补丁包\n```\ncp \\\nlibXext.so.6.4.0 \\\nlibXmu.so.6.2.0 \\\nlibSM.so.6.0.1 \\\nlibICE.so.6.3.0 \\\nlibXt.so.6.0.0 \\\nlibuuid.so.1.3.0 \\\n/usr/lib32/\n\nln -s libXext.so.6.4.0 libXext.so.6\nln -s libXext.so.6 libXext.so\nln -s libXmu.so.6.2.0 libXmu.so.6\nln -s libXmu.so.6 libXmu.so\nln -s libSM.so.6.0.1 libSM.so.6\nln -s libSM.so.6 libSM.so\nln -s libICE.so.6.3.0 libICE.so.6\nln -s libICE.so.6 libICE.so\nln -s libXt.so.6.0.0 libXt.so.6\nln -s libXt.so.6 libXt.so\n```\n\n\n```\nmkdir /lib32\nln -s libuuid.so.1.3.0 libuuid.so.1\nln -s libuuid.so.1 libuuid.so\n```\n\n编译 Qtopia2.2.0 源码\n```\ncd /root/yizhi\n./build\nls qtopia-free-2.2.0\n```\n\n处理一下字库文件\n```\ncp -r /root/yizhi/qtopia-free-2.2.0/qt2/lib/fonts/helvetica* /root/yizhi/qtopia-free-2.2.0/qtopia/image/opt/Qtopia/lib/fonts/\n```\n\nQtopia\n```\ncp -r /root/yizhi/qtopia-free-2.2.0/qtopia/image/opt/Qtopia /opt\n```\n\n打包工具的安装\n```\ncd /\ntar xvf linux_tools.tgz\nls /usr/local/bin/\nsudo apt-get install -y uboot-mkimage\n```\n\n生成文件系统\n```\ncd lollipop-5.1.1_r6/qt_system/system/opt;ls;\ncp -r /root/yizhi/qtopia-free-2.2.0/qtopia/image/opt/Qtopia ~/lollipop-5.1.1_r6/qt_system/system/opt\ncd ~/lollipop-5.1.1_r6;\nbuild_android.sh qt\n```\n\n<a href=\"https://www.cnblogs.com/wenyihu/articles/7380144.html\" target=\"_blank\">迅为6818开发板Qtopia2.2.0开发环境搭建以及编译镜像</a>\n","tags":["arm"]},{"title":"[arm] itop6818-linux程序汇总","url":"/2020/02/17//articles/2020/02/17/1581936643000.html/","content":"\n<a href=\"https://blog.csdn.net/mucheni/article/details/84848135\" target=\"_blank\">iTOP-4418/6818开发板-QtE4.7WIFI_MT6620热点</a>\n\n<a href=\"https://blog.csdn.net/mucheni/article/details/84381893\" target=\"_blank\">iTOP-6818开发板-Android5.1修改uboot和内核开机LOGO</a>\n\n```\nls lollipop-5.1.1_r6_20170512/device/nexell/s5p6818_drone/boot\n\n#塑料框 7 寸：logo_800_1280.bmp\n9.7 寸、金属框 7 寸、金属框 10.1 寸、4.3 寸：logo.bmp\n```\n\n<a href=\"https://blog.csdn.net/mucheni/article/details/81232374\" target=\"_blank\">iTOP-4418-MiniLinux-GPS_V1.0</a>\n```\n./topeet_gpstest /dev/ttyAMA3 &\n```","tags":["arm"]},{"title":"[arm] itop6818+gps","url":"/2020/02/17//articles/2020/02/17/1581936642000.html/","content":"\n```\n./gps_test /dev/ttyAMA3 &\n```\n\n<details>\n<summary>gps_test.c</summary>\n\n```C\n#include <stdio.h>      /*标准输入输出定义*/\n#include <stdlib.h>     /*标准函数库定义*/\n#include <unistd.h>     /*Unix 标准函数定义*/\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <errno.h>\n#include <string.h>\n#include <fcntl.h>\n#include <termios.h>\n\n#define  BUFF_SIZE 512\n#define  MAX_COM_NUM 3\n\nint  SectionID = 0, i = 0;\n\nstruct data\n{\n\tchar GPS_time[20];          //UTC时间\n\tchar GPS_sv;               //使用卫星\n\tchar GPS_wd[12];           //纬度\n\tchar GPS_jd[12];           //经度\n\t//char GPS_warn;             //定位警告\n\tchar GPS_speed[5];         //速度\n\tchar GPS_date[8];          //UTC日期\n\n} GPS_DATA;\n\n\n\nint set_com_config(int fd, int baud_rate, int data_bits, char parity, int stop_bits)\n{\n\tstruct termios new_cfg, old_cfg;\n\tint speed;\n\t//保存并测试现有串口参数设置，在这里如果串口号出错，会有相关的出错信息\n\n\tif (tcgetattr(fd, &old_cfg) != 0)\n\t{\n\t\tperror(\"tcgetattr\");\n\t\treturn -1;\n\t}\n\ttcflush(fd, TCIOFLUSH);\n\tnew_cfg = old_cfg;\n\tcfmakeraw(&new_cfg);//配置为原始模式\n\tnew_cfg.c_cflag &= ~CSIZE;\n\n\t//设置波特率\n\tswitch (baud_rate)\n\t{\n\tcase 2400:\n\t{\n\t\tspeed = B2400;\n\t\tbreak;\n\t}\n\tcase 4800:\n\t{\n\t\tspeed = B4800;\n\t\tbreak;\n\t}\n\tcase 9600:\n\t{\n\t\tspeed = B9600;\n\t\tbreak;\n\t}\n\tcase 19200:\n\t{\n\t\tspeed = B19200;\n\t\tbreak;\n\t}\n\tcase 38400:\n\t{\n\t\tspeed = B38400;\n\t\tbreak;\n\t}\n\tcase 115200:\n\t{\n\t\tspeed = B115200;\n\t\tbreak;\n\t}\n\n\n\t}\n\tcfsetispeed(&new_cfg, speed);\n\tcfsetospeed(&new_cfg, speed);\n\t//设置数据位\n\n\tswitch (data_bits)\n\t{\n\tcase 7:\n\t{\n\t\tnew_cfg.c_cflag |= CS7;\n\t\tbreak;\n\t}\n\n\tcase 8:\n\t{\n\t\tnew_cfg.c_cflag |= CS8;\n\t\tbreak;\n\t}\n\n\t}\n\n\t//设置停止位\n\tswitch (stop_bits)\n\t{\n\tcase 1:\n\t{\n\t\tnew_cfg.c_cflag &= ~CSTOPB;\n\t\tbreak;\n\t}\n\n\tcase 2:\n\t{\n\t\tnew_cfg.c_cflag |= CSTOPB;\n\t\tbreak;\n\t}\n\n\n\t}\n\n\t//设置奇偶校验位\n\tswitch (parity)\n\t{\n\tcase 'o':\n\tcase 'O':\n\t{\n\t\tnew_cfg.c_cflag |= (PARODD | PARENB);\n\t\tnew_cfg.c_iflag |= (INPCK | ISTRIP);\n\t\tbreak;\n\t}\n\tcase 'e':\n\tcase 'E':\n\t{\n\t\tnew_cfg.c_cflag |= PARENB;\n\t\tnew_cfg.c_cflag &= ~PARODD;\n\t\tnew_cfg.c_iflag |= (INPCK | ISTRIP);\n\t\tbreak;\n\t}\n\tcase 's':\n\tcase 'S':\n\t{\n\t\tnew_cfg.c_cflag &= ~PARENB;\n\t\tnew_cfg.c_cflag &= ~CSTOPB;\n\t\tbreak;\n\t}\n\n\tcase 'n':\n\tcase 'N':\n\t{\n\t\tnew_cfg.c_cflag &= ~PARENB;\n\t\tnew_cfg.c_iflag &= ~INPCK;\n\t\tbreak;\n\t}\n\n\t}\n\n\tnew_cfg.c_cc[VTIME] = 10;\n\tnew_cfg.c_cc[VMIN] = 5;\n\t//处理未接收字符\n\ttcflush(fd, TCIFLUSH);\n\n\tif ((tcsetattr(fd, TCSANOW, &new_cfg)) != 0)\n\t{\n\t\tperror(\"tcsetattr\");\n\t\treturn -1;\n\t}\n\n\treturn 0;\n}\n\n\n//打开串口函数\nint open_port(char* com_port)\n{\n\tint fd;\n\tchar* dev = com_port;\n\t//打开串口\n\tif ((fd = open(dev, O_RDWR | O_NOCTTY | O_NDELAY)) < 0)\n\t{\n\t\tperror(\"open serial port\");\n\t\treturn -1;\n\t}\n\t//恢复串口为堵塞状态\n\tif (fcntl(fd, F_SETFL, 0) < 0 )\n\t{\n\t\tperror(\"fcntl F_SETFL\\n\");\n\t\treturn -1;\n\n\t}\n\t//测试是否为终端设备\n\tif (isatty(STDIN_FILENO) == 0)\n\t{\n\t\tperror(\"standard input is not a terminal device\");\n\t}\n\treturn fd;\n}\n\nvoid print_info(void)\n{\n\t//打印选择界面，即引导的字符号\n\tprintf(\"Now the receive time is %s\\n\", GPS_DATA.GPS_time);\n\tprintf(\"The star is %c 3\\n\", GPS_DATA.GPS_sv);\n\tprintf(\"The earth latitude is :%s\\n\", GPS_DATA.GPS_wd);\n\tprintf(\"The earth longitude is :%s\\n\", GPS_DATA.GPS_jd);\n\tprintf(\"The train speed is:%s km/h\\n\", GPS_DATA.GPS_speed);\n\tprintf(\"The date is:%s\\n\", GPS_DATA.GPS_date);\n\n}\n\n\nvoid GPS_resolve_GPRMC(char data)\n{\n//$GPRMC,092427.604,V,4002.1531,N,11618.3097,E,0.000,0.00,280812,,E,N*08\n\n\n\tif (data == ',')\n\t{\n\t\t++SectionID;\n\t\ti = 0;\n\t}\n\telse\n\t{\n\t\tswitch (SectionID)\n\t\t{\n\t\tcase 1://02:48:13\n\t\t\tGPS_DATA.GPS_time[i++] = data;\n\t\t\tif (i == 2 || i == 5)\n\t\t\t{\n\t\t\t\tGPS_DATA.GPS_time[i++] = ':';\n\t\t\t}\n\t\t\tGPS_DATA.GPS_time[8] = '\\0';\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif (data == 'A')\n\t\t\t\tGPS_DATA.GPS_sv = '>';\n\t\t\telse\n\t\t\t\tGPS_DATA.GPS_sv = '<';\n\t\t\tbreak;\n\t\tcase 3://3158.4608\n\t\t\tGPS_DATA.GPS_wd[++i] = data;\n\t\t\tGPS_DATA.GPS_wd[12] = '\\0';\n\t\t\tbreak;\n\n\t\tcase 4:\n\t\t\tif (data == 'N')\n\t\t\t\tGPS_DATA.GPS_wd[0] = 'N';\n\t\t\telse if (data == 'S')\n\t\t\t\tGPS_DATA.GPS_wd[0] = 'S';\n\n\t\t\tbreak;\n\t\tcase 5://11848.3737,E\n\n\t\t\tGPS_DATA.GPS_jd[++i] = data;\n\t\t\tGPS_DATA.GPS_jd[12] = '\\0';\n\t\t\tbreak;\n\n\t\tcase 6:\n\t\t\tif (data == 'E')\n\t\t\t\tGPS_DATA.GPS_jd[0] = 'E';\n\t\t\telse if (data == 'W')\n\t\t\t\tGPS_DATA.GPS_jd[0] = 'W';\n\n\t\t\tbreak;\n\t\tcase 7://10.05\n\t\t\tGPS_DATA.GPS_speed[i++] = data;\n\t\t\tGPS_DATA.GPS_speed[4] = '\\0';\n\t\t\tbreak;\n\t\tcase 9://15-07-06 -> 06-07-15\n\t\t\tGPS_DATA.GPS_date[i++] = data;\n\t\t\tif (i == 2 || i == 5)\n\t\t\t{\n\t\t\t\tGPS_DATA.GPS_date[i++] = '-';\n\t\t\t}\n\t\t\tGPS_DATA.GPS_date[8] = '\\0';\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n\nvoid read_data(int fd)\n{\n\tchar buffer[BUFF_SIZE], dest[1024];\n\tchar array[10] = \"$GPRMC\";\n\tint  res, i = 0, j = 0, k;\n\tint data = 1, len = 0;\n\tmemset(dest, 0, sizeof(dest));\n\n\tdo\n\t{\n\t\tmemset(buffer, 0, sizeof(buffer));\n//$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50\n\t\tif (res = read(fd, buffer, 1) > 0)\n\t\t{\n\t\t\t//此处源源不断传入参数，一次读到数据可能为（$GPRMC,024），res为读到长度，现在把每一位传入函数处理；\n\t\t\tstrcat(dest, buffer);\n\t\t\tif (buffer[0] == '\\n')\n\t\t\t{\n\t\t\t\ti = 0;\n\t\t\t\tif (strncmp(dest, array, 6) == 0)\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%s\", dest);\n\t\t\t\t\tlen = strlen(dest);\n\t\t\t\t\tfor (k = 0; k < len; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tGPS_resolve_GPRMC(dest[k]);\n\t\t\t\t\t}\n\t\t\t\t\tSectionID = 0;\n\n\t\t\t\t\tprint_info();\n\t\t\t\t}\n\t\t\t\tbzero(dest, sizeof(dest));\n\t\t\t}\n\n\t\t}\n\t} while (1);\n\tclose(fd);\n\n}\n\nint main(int argc, char*argv[])\n{\n\tint fd = 0;\n\tchar* HOST_COM_PORT = argv[1];\n\tif (2 != argc)\n\t{\n\t\tprintf(\"Usage:  gps_test [uart port]\\r\\n\");\n\t\treturn;\n\t}\n\tfd = open_port(HOST_COM_PORT);\n\tif (fd < 0)\n\t{\n\t\tperror(\"open fail!\");\n\t}\n\tprintf(\"open sucess!\\n\");\n\tif ((set_com_config(fd, 9600, 8, 'N', 1)) < 0)\n\t{\n\t\tperror(\"set_com_config fail!\\n\");\n\t}\n\tprintf(\"The received worlds are:\\n\");\n\tread_data(fd);\n\treturn 0;\n}\n```\n</details>\n","tags":["arm"]},{"title":"[arm] itop6818+android串口测试","url":"/2020/02/17//articles/2020/02/17/1581936641000.html/","content":"<a href=\"https://blog.csdn.net/mucheni/article/details/82378400\" target=\"_blank\">iTOP-4418/6818开发板-Android-串口测试文档（升级版）</a>\n","tags":["arm"]},{"title":"[arm] OpenJTAG+openocd烧写环境","url":"/2020/02/17//articles/2020/02/17/1581936640000.html/","content":"<a href=\"https://blog.csdn.net/techping/article/details/53159844\" target=\"_blank\">在Ubuntu下搭建ARM处理器 arm-linux-gcc 交叉编译环境以及OpenJTAG + openocd 烧写环境</a>\n\n```\napt install -y gcc-arm-linux\n```\n\nMakefile（点亮led的例子）\n```\nled.bin:start.o\n        arm-linux-ld -Ttext 0 -o led.elf start.o\n        arm-linux-objcopy -O binary led.elf led.bin\n        arm-linux-objdump -D led.elf > led.dis\nstart.o:start.s\n        arm-linux-gcc -o start.o start.s -c\n```\n\n生成文件 led.bin\n\nOpenJTAG可以用在Windows、Linux、MAC下，而JLink只能用在Windows\n```\napt install -y libusb-dev\n./configure\nmake\nsudo make install\n```\n\n```\napt install -y libconfuse-dev\n```\n\n```\nopenocd是一个开源的JTAG上位机程序，目前支持很多种芯片了，并且支持的芯片还在不断增加中。\n当然，由于源代码都是公开的，并且可以自己编译，所以增加自定义的工具驱动程序也是相当容易的。 \n```\n\n安装openocd\n```\nsudo apt-get install -y git\ngit clone git://openocd.git.sourceforge.net/gitroot/openocd/openocd\ncd openocd;\nsudo ./bootstrap\nsudo ./configure --enable-ftdi --enable-usb_blaster_libftdi --enable-openjtag_ftdi --enable-maintainer-mode --enable-legacy-ft2232_libftdi\nsudo make\nsudo make install\n```\n\n```\n./configure --help\n```\n\n版本信息\n```\nopenocd -v\n```\n\n配置 openocd.cfg (具体视硬件而定)\n```\n...\n```\n\n将开发板连接的OpenJTAG的USB接口接入PC，启动openocd，在终端输入：\n```\nopenocd -f openocd.cfg\n```\n\n成功接入之后，打开另一个终端，输入：\n```\ntelnet localhost 4444\n```\n\n进入操控指令方式\n```\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nOpen On-Chip Debugger\n> \n\n# 输入 poll ，显示开发板当前信息\n# 输入 halt ，暂停\n# 输入 resume ，恢复\n# 输入 reset ，复位\n```\n\n以烧写以个点亮LED的程序为例子：\n```\nhalt   #先暂停当前程序的运行\n\nnand probe 0   #识别出Nand Flash\n\nnand erase 0 0 0x20000   #擦除0地址开始的128K内容\n\nnand write 0 led.bin 0   #写入LED.bin\n\nreset   #复位\n```\n\n然后就可以看到LED亮了！","tags":["arm"]},{"title":"[docker-compose] 分布式websocket","url":"/2020/02/15//articles/2020/02/15/1581738699000.html/","content":"<a href=\"https://gitee.com/holynyll/dockerWeb/blob/master/webapp/docker/docker-compose.yml\" target=\"_blank\">分布式websocket</a>\n","tags":["docker-compose"]},{"title":"[docker] mysql主从复制","url":"/2020/02/15//articles/2020/02/15/1581738699000.html/","content":"\nmaster(主)：\n```\ndocker run -p 3339:3306 --name mysql-master -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7\n```\n\nslave(从)：\n```\ndocker run -p 3340:3306 --name mysql-slave -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7\n```\n\nmaster(主)：\n```\ndocker exec -it mysql-master /bin/bash\n\napt-get update;apt-get -y install vim\n\ncd /etc/mysql\n\nvi my.cnf\n[mysqld]\n## 同一局域网内注意要唯一\nserver-id=100  \n## 开启二进制日志功能，可以随便取（关键）\nlog-bin=mysql-bin\n\nservice mysql restart\n\ndocker start mysql-master;docker exec -it mysql-master /bin/bash\n\nmysql -uroot -p123456\nCREATE USER 'slave'@'%' IDENTIFIED BY '123456';\nGRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'slave'@'%';\nflush privileges;\n```\n\nslave(从)：\n```\ndocker exec -it mysql-slave /bin/bash\n\napt-get update;apt-get -y install vim\n\ncd /etc/mysql\n\nvi my.cnf\n[mysqld]\n## 设置server_id,注意要唯一\nserver-id=101\n## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用\nlog-bin=mysql-slave-bin\n## relay_log配置中继日志\nrelay_log=edu-mysql-relay-bin\n\nservice mysql restart\n\ndocker start mysql-slave;docker exec -it mysql-slave /bin/bash\n\nmysql -uroot -p123456\n```\n\nmaster(主)：\n```\n#为防止出现错误： Got fatal error 1236 from master when reading data from binary log\n#需记下 File, Position\nflush logs;\nshow master status;\n```\n\nslave(从)：\n```\nCHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000002',MASTER_LOG_POS=154;\nslave start;\nshow slave status \\G;\n```\n\n查看master ip\n```\ndocker inspect --format='{{.NetworkSettings.IPAddress}}' mysql-master\n```\n\nslave(从)：\n```\nchange master to master_host='172.17.0.3', master_user='slave', master_password='123456', master_port=3306, master_log_file='mysql-bin.000002', master_log_pos=154, master_connect_retry=30;\n```\n命令说明：\n```\nmaster_host ：Master的地址，指的是容器的独立ip,可以通过docker inspect --format='{{.NetworkSettings.IPAddress}}' 容器名称|容器id查询容器的ip\n\nmaster_port：Master的端口号，指的是容器的端口号\n\nmaster_user：用于数据同步的用户\n\nmaster_password：用于同步的用户的密码\n\nmaster_log_file：指定 Slave 从哪个日志文件开始复制数据，即上文中提到的 File 字段的值\n\nmaster_log_pos：从哪个 Position 开始读，即上文中提到的 Position 字段的值\n\nmaster_connect_retry：如果连接失败，重试的时间间隔，单位是秒，默认是60秒\n```\n\nslave(从)，开启主从同步：\n```\n#开启主从复制过程\nstart slave;\n\nshow slave status \\G\n\n#SlaveIORunning 和 SlaveSQLRunning 都是Yes，说明主从复制已经开启\n```\n\nslave(从)：\n```\nstop slave;\n```\n\n测试\n\nmaster(主)：\n```\ncreate database test;\n```\n\nslave(从)：\n```\nshow databases;\n```\n\n<a href=\"https://www.cnblogs.com/songwenjie/p/9371422.html\" target=\"_blank\">基于Docker的Mysql主从复制搭建</a>\n<a href=\"https://lanjingling.github.io/2015/10/26/mysql-replication-master-slave/\" target=\"_blank\">Mysql 主从复制</a>\n","tags":["docker"]},{"title":"[springboot] MQTT之mosquitto","url":"/2020/02/15//articles/2020/02/15/1581731864000.html/","content":"\nubuntu源码安装mosquitto\n```\napt-get install -y openssl libssl-dev libssl-dev libc-ares-dev uuid-dev\nwget -c https://mosquitto.org/files/source/mosquitto-1.6.8.tar.gz\ntar xvf mosquitto-1.6.8.tar.gz;cd mosquitto-1.6.8\n```\n安装\n```\nmake;make install\n```\n创建链接\n```\nln -s /usr/local/lib/libmosquitto.so.1 /usr/lib/libmosquitto.so.1\n```\n更新链接\n```\nldconfig\n```\n\n配置\n/etc/mosquitto/mosquitto.conf\n```\npid_file /var/run/mosquitto.pid\n\n# 消息持久存储\npersistence true\npersistence_location /var/lib/mosquitto/\n\n# 日志文件\nlog_dest file /var/log/mosquitto/mosquitto.log\n\n# 其他配置\ninclude_dir /etc/mosquitto/conf.d\n\n# 禁止匿名访问\nallow_anonymous false\n# 认证配置\npassword_file /etc/mosquitto/pwfile\n# 权限配置\nacl_file /etc/mosquitto/aclfile\n```\n\n使用\n```\nmkdir -p /var/log/mosquitto/\ntouch /var/log/mosquitto/mosquitto.log\nchmod a+w /var/log/mosquitto/mosquitto.log\n\nadduser admin\nadduser mosquitto\n\n# 创建admin用户\nmosquitto_passwd -c /etc/mosquitto/pwfile admin\n# 创建mosquitto用户\nmosquitto_passwd -c /etc/mosquitto/pwfile mosquitto\n\n\nvim /etc/mosquitto/aclfile\nuser admin\ntopic write test/#\ntopic read $SYS/#\n\nuser mosquitto\ntopic read test/#\n\n\n#指定并开启\nmosquitto -c /etc/mosquitto/mosquitto.conf -v\n#mosquitto -c /etc/mosquitto/mosquitto.conf -d -v\nps -ef|grep mosquitto\n```\n\n测试\n```\nmosquitto_sub -t test -u mosquitto -P 123456 -v\nmosquitto_pub -t test -u admin -P 123456 -m \"hello world\"\n\n\nmosquitto_sub -h 127.0.0.1 -p 1883 -t test -u mosquitto -P 123456 -v\nmosquitto_pub -h 127.0.0.1 -p 1883 -t test -u mosquitto -P 123456 -m \"hello world\"\n```\n\n停止mosquitto\n```\ntasklist|findstr mosquitto\n\ntaskkill /im mosquitto.exe\n\ntaskkill /PID 5204 /F\n```\n通过端口kill进程\n```\nnetstat -ano | findstr 1883\n```\n\n<a href=\"https://blog.csdn.net/qhdcsj/article/details/44630201\" target=\"_blank\">订阅mosquitto服务器状态各主题</a>\n```\nmosquitto_sub -h 127.0.0.1 -p 1883 -u mosquitto -P 123456 -v -t \\$SYS/broker/bytes/received\n```\n\n$SYS中各主题说明如下：\n```\n# 自服务器启动以来共接收的字节数\n$SYS/broker/bytes/received\n\n# 自服务器启动以来共发送的字节数\n$SYS/broker/bytes/sent\n\n\n# 当前连接的客户端数量\n$SYS/broker/clients/connected\n# (1.4版本已取消)\n$SYS/broker/clients/active\n\n# 超过有效期被断开连接的客户端数量，有效期通过persistent_client_expiration参数设置。\n$SYS/broker/clients/expired\n\n# 注册到服务器上的持久连接（clean seesion为假)但当前断开的客户端数量\n$SYS/broker/clients/disconnected\n# (1.4版本已取消)\n$SYS/broker/clients/inactive\n\n# 服务器同一时间连接的最大客户端数量\n$SYS/broker/clients/maximum\n\n# 有效和无效连接、注册到服务器上的总数。\n$SYS/broker/clients/total\n\n$SYS/broker/connection/#\n如果服务器设置了桥接，系统会提供一个主题来标识连接状态，默认使用$SYS/broker/connection/如果主题值为１表示连接激活，如果为０表示连接没有激活。\n\n# Mosquitto正在使用的堆内存大小。注意这个主题是否可以使用取决于系统编译时的相关参数设置。\n$SYS/broker/heap/current size\n\n# Mosquitto使用的最大堆内存。这个参数是否有效也取决于系统编译时的相关参数设置。\n$SYS/broker/heap/maximum size\n\n# 不同时间段内服务器接收到的connections包的平均数。最后的“+”可是１min,5min,15min。分别表示１分钟，５分钟，15分钟的平均数。\n$SYS/broker/load/connections/+\n\n# 不同时间段内服务器接收数据的平均字节数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/bytes/received/+\n\n# 不同时间段内服务器发送数据的平均字节数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/bytes/sent/+\n\n# 不同时间段内服务器接收到的所有类型消息的平均数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/messages/received/+\n\n# 不同时间段内服务器发送的所有类型的消息的平均数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/messages/sent/+\n\n# 不同时间段内服务器丢弃的消息的平均数，这表明了那些持久连接但与服务器断开的客户端失去消息的速率。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/publish/dropped/+\n\n# 不同时间段内服务器接收的发布消息的平均数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/publish/received/+\n\n# 不同时间段内服务器发送的发布消息的平均数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/publish/sent/+\n\n# 不同时间段内服务器打开的socket连接的平均数。最后的“+”可是１min,5min,15min。\n$SYS/broker/load/sockets/+\n\n# 等待确认的Qos>0的消息的数量。\n$SYS/broker/messages/inflight\n\n# 自服务器启动以来接收的所有类型的消息总数。\n$SYS/broker/messages/received\n\n# 自服务器启动以来发送的所有类型的消息总数。\n$SYS/broker/messages/sent\n\n# 服务器存储的消息的总数，包括保留消息和持久连接客户端的消息队列中的消息数。\n$SYS/broker/messages/stored\n\n# 由于inflight/queuing限制而直接丢弃的消息的总数，相关设置请查看mosquitto.conf中max_inflight_messages和max_queued_messages参数。\n$SYS/broker/publish/messages/dropped\n\n# 自服务器启动以来接收的发布消息的总数。\n$SYS/broker/publish/messages/received\n\n# 自服务器启动以来发送的发布消息的总数。\n$SYS/broker/publish/messages/sent\n\n# 服务器保留的消息总数。\n$SYS/broker/retained messages/count\n\n# 服务器订阅主题总数。\n$SYS/broker/subscriptions/count\n\n# Mosquitto软件build的详细时间（Static）。\n$SYS/broker/timestamp\n\n# Mosquitto启动时长（单位：秒）。\n$SYS/broker/uptime\n\n# Mosquitto软件版本号（Static）。\n$SYS/broker/version\n```\n\n<a href=\"https://www.jianshu.com/p/9e3cb7042a2e\" target=\"_blank\">Mosquitto 搭建及配置</a>\n<a href=\"https://blog.csdn.net/sxpsxp12/article/details/77870109\" target=\"_blank\">windows平台Mosquitto使用</a>\n<a href=\"https://segmentfault.com/a/1190000017811919\" target=\"_blank\">SpringBoot集成MQTT</a>\n\n\n<a href=\"https://github.com/braincs/mqtt-protobuf-server\" target=\"_blank\">mqtt-protobuf-server</a>\n","tags":["springboot"]},{"title":"[arm] QEMU模拟mini2440开发环境","url":"/2020/02/15//articles/2020/02/15/1581731060000.html/","content":"<a href=\"https://www.cnblogs.com/zwxwill/p/9431774.html\" target=\"_blank\">嵌入式linux：通过qemu模拟mini2440开发环境</a>\n\n编译安装QEMU\n\n首先下载qemu for mini2440\n```\nwget http://repo.or.cz/w/qemu/mini2440.git/snapshot/HEAD.tar.gz\nsudo apt-get install zlib1g-dev\nsudo apt-get install libsdl-dev\n./configure --target-list=arm-softmmu --prefix=$HOME/work/mini2440\nmake -j4\nmake install\n```\n\n安装完后，添加环境变量:\n```\nsudo vim /etc/bash.bashrc\nexport PATH=$PATH:$HOME/work/mini2440/bin\nsource /etc/bash.bashrc\n```\n\n测试是否正常:\n```\nqemu-system-arm --version\n```\n\n使用buildroot一键生成uboot和linux内核及根文件系统\n```\nwget http://buildroot.org/downloads/buildroot-2012.05.tar.gz\ntar xvf buildroot-2012.05.tar.gz;mv buildroot-2012.05 buildroot;cd buildroot;\nsudo apt-get install -y libncurses5-dev\npatch configure <../configure.patch    /* 需要修改源码 打补丁 */\nmake mini2440_defconfig\nmake menuconfig\n\nsudo apt-get install -y g++ bison flex gettext patch git-core xz-utils automake\ntar -zxvf texinfo-4.13a.tar.gz\ncd texinfo-4.13\n./configure\nmake\nsudo make install\n```\n\n```\n#修改bug（注释下面文件中：_GL_WARN_ON_USE (gets,.......  这行代码）:\n\nvim output/build/host-m4-1.4.16/lib/stdio.in.h\nvim output/build/host-m4-1.4.16/lib/stdio.h\n```\n\n在安装 时间比较长（可以先用我提供的安装文件放到buildroot-2012.05/dl目录下，这样省去下载时间）\n```\n链接：\nhttps://pan.baidu.com/s/1PUxi_DejVo-bgChQH5bzmA\n密码：\n2dkz\n```\n\nFlashimg制作nand.bin并启动系统：\n```\n# 下载flashimg源码 \ngit clone http://gitorious.org/flashimg/flashimg.git\ncd flashimg;\n./autogen.sh  #（要求autoconf版本大于2.67）\n./configure \nmake\nsudo make install\n```\n\n然后把我们生成的三个文件：\n```\nu-boot.bin\nuImage\nrootfs.jffs2\nflashimg\n```\n\n```\n./flashimg -s 64M -t nand -f nand.bin -p uboot.part -w boot,u-boot.bin -w kernel,uImage -w root,rootfs.jffs2 -z 512 \n即可生成nand.bin\n```\n\n启动方法为：\n```\nqemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse\n```\n（若出现错误：浮点数例外启动不了qemu，请全屏最大化终端，再次执行，这是由于分辨率问题造成）\n\n输入下面指令加载内核和根文件系统：\n```\nnboot kernel \nsetenv bootargs root=/dev/mtdblock3 rootfstype=jffs2 console=ttySAC0,115200 \nsaveenv \nbootm\n```\n\n启动后，输入默认密码root，即可成功登录，此时还没有配置网络。ifconfig发现没有网卡。\n4 NFS挂在根文件系统\n首先安装nfs服务\n```\nsudo apt-get install nfs-kernel-server \n# 新建nfsroot文件夹\nmkdir ~work/nfsroot \n# 然后配置nfs目录 \nsudo vi /etc/exports \n# 添加一行\n/home/zwx/work/nfsroot *(rw,sync,no_root_squash,no_subtree_check\n# 然后执行：\nsudo /etc/init.d/nfs-kernel-server restart\n# 进入NFS共享目录：\ncd /home/zwx/work/nfsroot/ \n# 修改权限\nsudo chmod -R 777 ./ \n# 解压根文件系统\ntar xvzf rootfs_qtopia_qt4-20140103.tar.gz\n注意：友善之臂提供的qtopia文件系统在挂载时会初始化网卡，但我们是由nfs挂载的文件系统，这会导致nfs连接中断，挂载失败，所以用nfs挂载之前需要把网卡的初始化过程取消，对应的文件是/etc/init.d/if-config，只需把该文件内容删除即可（删除文件也可以）。\n\nsudo chmod -R 777 ./ \ncd rootfs_qtopia_qt4\ncd etc/init.d/\nrm ifconfig-eth0\n创建虚拟网卡并配置ip\n\nsudo apt-get install uml-utilities //运行tunctl必须的工具\nsudo tunctl -u $USER -t tap0\nsudo ifconfig tap0 192.168.42.1\n带网络方式启动qemu\n\ncd /home/zwx/work/qemu/flashimgflashimg-fb97139\nqemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse -kernel uImage -net nic,vlan=0 -net tap,vlan=0,ifname=tap0,script=no,downscript=no\n启动后进入uboot模式，此时的qemu还不能显示，输入下面指令加载内核和根文件系统。\n\nset bootargs noinitrd root=/dev/nfs rw nfsroot=192.168.42.1:/home/zwx/work/nfsroot/rootfs_qtopia_qt4/,proto=tcp,nfsvers=3,nolock  ip=192.168.42.2:192.168.42.1::255.255.255.0 console=ttySAC0,115200\nbootm\n然后就可以启动了\n\n 5 安装交叉编译工具链：\n\narm-linux-gcc-4.4.3.tar.gz \n安装库：\n```\nsudo apt-get install lib32stdc++6\nsudo apt-get install lib32z1\n```\n","tags":["arm"]},{"title":"[arm] C语言实现MQTT客户端","url":"/2020/02/15//articles/2020/02/15/1581731059000.html/","content":"<a href=\"https://www.jianshu.com/p/d309de966379\" target=\"_blank\">C语言实现MQTT客户端</a>\n\n<a href=\"https://pan.baidu.com/s/1S1pT_ZZURg21DF5mIBg3pw\" target=\"_blank\">mqtt.rar</a>\n```\n密码：\ntqgh\n```\n\n<a href=\"https://d11.baidupcs.com/file/fada27557853c8302f21c77a45e4ae34?bkt=en-9917cc7abd88e3cb55911c6a71bdeb39b5939b2039db9c2c052ee4537f2c2068a118379e5e163269903753b718d1060fc4515b78a300bab8707fa75b7e1fad07&xcode=8e99d166e44d324f4432763491238b6238345e6f8c78da06394cd546e4a8f611f72214a19b28b7e9a1cdde04df6ff5f83dc35a89c1f2d779&fid=3680693024-250528-838572210121299&time=1581827271&sign=FDTAXGERLQlBHSKf-DCb740ccc5511e5e8fedcff06b081203-vLQsY7DPMNr0kQFEwTog9eWZUxk%3D&to=d11&size=53910&sta_dx=53910&sta_cs=1507&sta_ft=rar&sta_ct=7&sta_mt=7&fm2=MH%2CQingdao%2CAnywhere%2C%2Cguangdong%2Ccnc&ctime=1536202005&mtime=1536202005&resv0=-1&resv1=0&resv2=rlim&resv3=5&resv4=53910&vuk=1310677397&iv=0&htype=&randtype=&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-bbb5749a9b9f3af2baafc39b353bd5ea41c25c231635bf23c7f1b6f760814ee407b07b1f1a5b4c9bf7d0aef386766c4face4d23606e80fe6305a5e1275657320&sl=68616270&expires=8h&rt=sh&r=907057816&vbdid=1344347567&fin=mqtt.rar&fn=mqtt.rar&rtype=1&dp-logid=1078914879964644065&dp-callid=0.1&hps=1&tsl=200&csl=200&fsl=-1&csign=GWi3CtPKSSyB8b%2FWlP%2FsxelxRRA%3D&so=0&ut=6&uter=4&serv=0&uc=738096701&ti=34c17094e7d5a0c972457cf7e65d6c489863bd1c89ef3a1f&reqlabel=250528_f_22296a95af88adac14005d60d860113d_-1_53981c99d3aec0dcecff3c1aa7e032d6&by=themis\">mqtt.rar</a>\n\n","tags":["arm"]},{"title":"[linux] 程序员","url":"/2020/02/15//articles/2020/02/15/1581730500000.html/","content":"<a href=\"https://segmentfault.com/blog/wuyangchun\" target=\"_blank\">segmentfault Linux程序员</a>\n","tags":["linux"]},{"title":"[shell] linux之shell程序","url":"/2020/02/14//articles/2020/02/14/1581687043000.html/","content":"<a href=\"https://github.com/fengyuhetao/shell\" target=\"_blank\">shell</a>\n<a href=\"https://blog.csdn.net/weixin_34205076/article/details/91592459\" target=\"_blank\">Linux之Shell小程序（持续更新中）</a>\n","tags":["shell"]},{"title":"[arm] ubuntu+QEMU","url":"/2020/02/14//articles/2020/02/14/1581683031000.html/","content":"<a href=\"https://github.com/xianjimli/qemu-arm-linux\" target=\"_blank\">qemu-arm-linux</a>\n\n<a href=\"https://www.veryarm.com/116658.html\" target=\"_blank\">Qemu跑helloworld程序</a>\nhello.c\n```\n#include <stdio.h>\nint main() {\n  printf(\"hello linux world!!!\");\n  return 0;\n}\n```\n编译程序:\n```\narm-linux-gnueabi-gcc hello.c -o hello;sudo chmod +x hello\n```\n将程序拷到rootfs目录下,然后执行如下:\n```\ncp hello rootfs/\nsudo mount -t ext3 rootfs.ext3 tmpdir/ -o loop\nsudo cp -r rootfs/* tmpdir/\nsudo umount tmpdir\nsudo ./start-qemu.sh\n```\n\n<a href=\"https://my.oschina.net/u/3258476/blog/1550537\" target=\"_blank\">用qemu运行一个小小Linux系统</a>\n<a href=\"https://www.cnblogs.com/pengdonglin137/p/12194548.html\" target=\"_blank\">用QEMU模拟运行uboot从SD卡启动Linux</a>\n加载sd卡运行虚拟机\n```\nqemu-system-arm -M vexpress-a9 -m 512M -kernel ./linux/arch/arm/boot/zImage -nographic -append \"root=/dev/mmcblk0 console=ttyAMA0\" -sd a9rootfs.ext3\n```\n\n","tags":["arm"]},{"title":"[arm] QEMU+vexpress","url":"/2020/02/14//articles/2020/02/14/1581683031000.html/","content":"<a href=\"https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/\" target=\"_blank\">docker+ubuntu</a>\n\n预料docker commit问题\n```\nno space left on device\n```\n执行\n```\ndocker system df\ndocker system prune\n```\n\nmount、umount操作用到\n```\ndocker commit qemu qemu:v1\ndocker stop qemu\ndocker rm qemu\ndocker images\ndocker run --name qemu --privileged -itd -p 8022:22 qemu:v1\ndocker attach qemu\n```\n\n快速安装Qemu：\n```\napt install -y qemu\n```\n\nQemu源码编译安装：\n```\ncd ~/\ngit clone git://git.qemu-project.org/qemu.git\n./configure --target-list=arm-softmmu --audio-drv-list=\nmake\nmake install\n```\n\n安装arm的交叉编译工具链：\n```\napt-get install -y gcc-arm-linux-gnueabi\n```\n\n解压Linux内核\n```\ncd ~/\nwget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.214.tar.xz\ntar xvf linux-4.4.214.tar.xz;cd linux-4.4.214;\n\napt-get install -y gcc build-essential bison flex gettext tcl sharutils libncurses-dev zlib1g-dev exuberant-ctags g++ texinfo patch vim libtool bc git libglib2.0-0\n```\n\nvi Makefile（忽略）\n```\n#ARCH ?= $(SUBARCH)\nARCH ?= arm\n```\n\n编译Linux内核：\n```\nmake CROSS_COMPILE=arm-linux-gnueabi- ARCH=arm vexpress_defconfig\nmake CROSS_COMPILE=arm-linux-gnueabi- ARCH=arm\nmake zImage -j4\nmake modules -j4\nmake dtbs\n```\n\n得到编译文件：\n```\nls arch/arm/boot/zImage\nls include/config/modules\nls arch/arm/boot/dts/*.dtb\n```\n\n试运行\n```\nqemu-system-arm --version\nqemu-system-arm -M help\nqemu-system-arm -M vexpress-a9 -m 512M -kernel arch/arm/boot/zImage -dtb arch/arm/boot/dts/vexpress-v2p-ca9.dtb -nographic -append \"console=ttyAMA0\"\n```\n\n下载、编译和安装busybox：\n```\ncd ~/\nwget http://www.busybox.net/downloads/busybox-1.20.2.tar.bz2\ntar xvf busybox-1.20.2.tar.bz2;cd busybox-1.20.2;\n\napt-cache search libc\napt-cache search glibc\napt-cache search libcrypt\napt-get -y install libc-dev-bin glibc-source libcryptsetup-dev\ncp /usr/include/mtd/ include/mtd/ -a\n\nreadelf -d busybox | grep NEEDED\n\nvim include/libbb.h\n#添加一行引用\n#include <sys/resource.h>\n\nmake defconfig\nmake CROSS_COMPILE=arm-linux-gnueabi-\nmake install CROSS_COMPILE=arm-linux-gnueabi-\nmake menuconfig CROSS_COMPILE=arm-linux-gnueabi-\n```\n\n1.创建rootfs目录（根目录），根文件系统内的文件全部放到这里\n```\nmkdir -p rootfs/{dev,etc/init.d,lib}\n```\n2.拷贝busybox命令到根目录下\n```\ncp ./_install/* -r rootfs/\n```\n3.从工具链中拷贝运行库到lib目录下\n```\ncp -P /usr/arm-linux-gnueabi/lib/* rootfs/lib/\n```\n4.创建4个tty端终设备\n```\nmknod rootfs/dev/tty1 c 4 1\nmknod rootfs/dev/tty2 c 4 2\nmknod rootfs/dev/tty3 c 4 3\nmknod rootfs/dev/tty4 c 4 4\n```\n\n制作根文件系统镜像\n1.生成32M大小的镜像\n```\ndd if=/dev/zero of=a9rootfs.ext3 bs=1M count=32\n```\n2.格式化成ext3文件系统\n```\nmkfs.ext3 a9rootfs.ext3\n```\n3.将文件拷贝到镜像中\n```\nmkdir tmpfs\nmount -t ext3 a9rootfs.ext3 tmpfs/ -o loop\ncp -r rootfs/* tmpfs/\numount tmpfs\n```\n\n```\ncp a9rootfs.ext3 ../linux-4.4.214/;cd ../linux-4.4.214\n```\n\n启动qemu来模拟vexpress开发板\n```\nqemu-system-arm \\\n-M vexpress-a9 \\\n-m 512M -kernel \\\narch/arm/boot/zImage -dtb \\\narch/arm/boot/dts/vexpress-v2p-ca9.dtb -nographic \\\n-append \"root=/dev/mmcblk0 console=ttyAMA0\" \\\n-sd a9rootfs.ext3\n```\n\n无init程序问题\n```\n#---[ end Kernel panic - not syncing: No working init found.  Try passing init= option to kernel. See Linux Documentation/init.txt for guidance.\n```\n\n使用 busybox 作为 init 程序\n```\nmake defconfig\nmake menuconfig\n```\n\nqemu退出方法(卡住则无用)\n```\nctrl + A 按 X\n```\n\n<a href=\"https://blog.csdn.net/linyt/article/details/42504975\" target=\"_blank\">从零使用qemu模拟器搭建arm运行环境</a>\n\n解决无init程序问题\n<a href=\"https://www.cnblogs.com/hellogc/p/7482066.html\" target=\"_blank\">使用 qemu 搭建内核开发环境</a>\n","tags":["arm"]},{"title":"[springboot] jqgrid","url":"/2020/02/14//articles/2020/02/14/1581643665000.html/","content":"<a href=\"https://gitee.com/z77z/springboot_mybatisplus\" target=\"_blank\">springboot_mybatisplus</a>\n","tags":["springboot"]},{"title":"[spring] Spring+JPA+jqGrid","url":"/2020/02/14//articles/2020/02/14/1581643664000.html/","content":"<a href=\"https://blog.csdn.net/u010096984/article/details/84012585\" target=\"_blank\">Spring+JPA+jqGrid</a>\n\nMaven命令行创建java或javaWeb项目\n```\n#1.命令行创建普通java项目\nmvn archetype:generate -DgroupId=com.fxust -DartifactId=demo -DarchetypeArtifactId=maven-archetype-quickstart\n\n#2.命令行创建javaWeb项目\nmvn archetype:generate -DgroupId=com.fxust.codelab -DartifactId=myweb -DarchetypeArtifactId=maven-archetype-webapp\n```\n\n命令创建web工程\n```\nmvn archetype:generate -DgroupId=trent.yang.springjpa -DartifactId=example -DarchetypeArtifactId=maven-archetype-webapp\n```\n\n目录、文件结构\n```\nwebapp/WEB-INF/config/spring/application-context.xml\nwebapp/WEB-INF/config/spring/spring-servlet.xml\nwebapp/WEB-INF/config/jpa/persistence.xml\nwebapp/WEB-INF/config/database.properties\n\nresources/css/\nresources/js/\n\nresources/log4j.properties\n```\n\n<details>\n<summary>pom.xml</summary>\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>trent.yang.springjpa</groupId>\n    <artifactId>example</artifactId>\n    <version>1.0</version>\n    <packaging>war</packaging>\n    <properties>\n        <spring.version>3.0.5.RELEASE</spring.version>\n        <slf4j.version>1.6.1</slf4j.version>\n    </properties>\n    <dependencies>\n        <!-- Spring -->\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context</artifactId>\n            <version>${spring.version}</version>\n            <exclusions>\n                <!-- Exclude Commons Logging in favor of SLF4j -->\n                <exclusion>\n                    <groupId>commons-logging</groupId>\n                    <artifactId>commons-logging</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-orm</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-aop</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-test</artifactId>\n            <version>${spring.version}</version>\n            <scope>test</scope>\n        </dependency>\n\n        <!-- Hibernate -->\n        <dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-entitymanager</artifactId>\n            <version>3.6.0.Final</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.validation</groupId>\n            <artifactId>validation-api</artifactId>\n            <version>1.0.0.GA</version>\n        </dependency>\n        <dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-validator</artifactId>\n            <version>4.1.0.Final</version>\n        </dependency>\n\n        <!-- MySql Connector -->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.13</version>\n        </dependency>\n\n        <!-- C3P0 Pool -->\n        <dependency>\n            <groupId>c3p0</groupId>\n            <artifactId>c3p0</artifactId>\n            <version>0.9.1.2</version>\n        </dependency>\n\n        <!-- Jackson JSON Processor -->\n        <dependency>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>jackson-mapper-asl</artifactId>\n            <version>1.8.1</version>\n        </dependency>\n\n        <!-- AspectJ -->\n        <dependency>\n            <groupId>org.aspectj</groupId>\n            <artifactId>aspectjrt</artifactId>\n            <version>1.6.9</version>\n        </dependency>\n\n        <!-- Logging -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>${slf4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jcl-over-slf4j</artifactId>\n            <version>${slf4j.version}</version>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>${slf4j.version}</version>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.16</version>\n            <scope>runtime</scope>\n        </dependency>\n\n        <!-- Junit -->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.7</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>2.3.2</version>\n                <configuration>\n                    <source>1.5</source>\n                    <target>1.5</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>tomcat-maven-plugin</artifactId>\n                <version>1.1</version>\n                <configuration>\n                    <server>tomcat</server>\n                    <path>/example</path>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n```\n</details>\n\n<details>\n<summary>web.xml</summary>\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" \n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\" \n    version=\"2.5\">\n\n    <display-name>Spring+JPA+jqGrid</display-name>\n\n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>/WEB-INF/config/spring/application-context.xml</param-value>\n    </context-param>\n\n    <listener>\n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n    </listener>\n\n    <filter>\n        <filter-name>encodingFilter</filter-name>\n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n        <init-param>\n            <param-name>encoding</param-name>\n            <param-value>UTF-8</param-value>\n        </init-param>\n        <init-param>\n            <param-name>forceEncoding</param-name>\n            <param-value>true</param-value>\n        </init-param>\n    </filter>\n\n    <filter-mapping>\n        <filter-name>encodingFilter</filter-name>\n        <url-pattern>/</url-pattern>\n    </filter-mapping>\n\n    <servlet>\n        <servlet-name>spring-servlet</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <param-value>/WEB-INF/config/spring/spring-servlet.xml</param-value>\n        </init-param>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>spring-servlet</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n\n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n    </welcome-file-list>\n</web-app>\n```\n</details>\n\n<details>\n<summary>spring-servlet.xml</summary>\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:mvc=\"http://www.springframework.org/schema/mvc\" \n    xmlns:context=\"http://www.springframework.org/schema/context\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd\n        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n\n    <context:component-scan base-package=\"trent.yang.springjpa.example.controller\" />\n\n    <mvc:annotation-driven />\n\n    <mvc:resources mapping=\"/resources/css/**\" location=\"/resources/css/\" />\n    <mvc:resources mapping=\"/resources/js/**\" location=\"/resources/js/\" />\n    <mvc:resources mapping=\"/*.html\" location=\"/\" />\n\n</beans>\n```\n</details>\n\n<details>\n<summary>application-context.xml</summary>\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:tx=\"http://www.springframework.org/schema/tx\" \n    xmlns:aop=\"http://www.springframework.org/schema/aop\"\n    xmlns:context=\"http://www.springframework.org/schema/context\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"\n        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\n        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd\n        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd\n        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\">\n\n    <!--  Database Start -->\n    <context:property-placeholder location=\"/WEB-INF/config/database.properties\" />\n\n    <bean id=\"dataSource\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\">\n        <property name=\"driverClass\" value=\"${connection.driverClass}\" />\n        <property name=\"jdbcUrl\" value=\"${connection.url}\" />\n        <property name=\"user\" value=\"${connection.user}\" />\n        <property name=\"password\" value=\"${connection.password}\" />\n        <property name=\"acquireIncrement\" value=\"${c3p0.acquireIncrement}\" />\n        <property name=\"idleConnectionTestPeriod\" value=\"${c3p0.idleConnectionTestPeriod}\" />\n        <property name=\"initialPoolSize\" value=\"${c3p0.initialPoolSize}\" />\n        <property name=\"minPoolSize\" value=\"${c3p0.minPoolSize}\" />\n        <property name=\"maxPoolSize\" value=\"${c3p0.maxPoolSize}\" />\n        <property name=\"maxStatements\" value=\"${c3p0.maxStatements}\" />\n    </bean>\n\n    <bean id=\"hibernateJpaVendorAdapter\" class=\"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter\">\n        <property name=\"databasePlatform\" value=\"${hibernate.dialect}\" />\n    </bean>\n\n    <bean id=\"entityManagerFactory\"\n        class=\"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean\">\n        <property name=\"persistenceXmlLocation\" value=\"/WEB-INF/config/jpa/persistence.xml\" />\n        <property name=\"persistenceUnitName\" value=\"examplePersistenceUnit\" />\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <property name=\"jpaVendorAdapter\" ref=\"hibernateJpaVendorAdapter\" />\n        <property name=\"jpaProperties\">\n            <props>\n                <prop key=\"hibernate.show_sql\">${hibernate.show_sql}</prop>\n                <prop key=\"hibernate.format_sql\">${hibernate.format_sql}</prop>\n            </props>\n        </property>\n    </bean>\n\n    <!--  Database End -->\n\n    <!-- Transaction Start -->\n    <bean id=\"transactionManager\" class=\"org.springframework.orm.jpa.JpaTransactionManager\">\n        <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\" />\n    </bean>\n     <!-- \n    <tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n        <tx:attributes>\n            <tx:method name=\"*\" />\n        </tx:attributes>\n    </tx:advice>\n\n    <aop:config>\n        <aop:pointcut id=\"servicePointcut\" expression=\"execution(* trent.yang.springjpa.example.service.*.*(..))\" />\n        <aop:advisor pointcut-ref=\"servicePointcut\" advice-ref=\"txAdvice\" />\n    </aop:config>\n    -->\n    <tx:annotation-driven transaction-manager=\"transactionManager\" />\n    <!-- Transaction End -->\n\n\n    <!-- Service Start -->\n    <context:component-scan base-package=\"trent.yang.springjpa.example.service.impl\" />\n    <!-- Service End -->\n\n    <!-- DAO Start -->\n    <context:component-scan base-package=\"trent.yang.springjpa.example.dao.impl\" />\n    <!-- DAO End -->\n\n</beans>\n```\n</details>\n\n<details>\n<summary>database.properties</summary>\n\n```\n#Mysql database connection setting\nconnection.driverClass=com.mysql.jdbc.Driver\nconnection.url=jdbc:mysql://localhost:3306/example?zeroDateTimeBehavior=convertToNull\nconnection.user=root\nconnection.password=root\n\n#Hibernate setting\nhibernate.dialect=org.hibernate.dialect.MySQLDialect\nhibernate.show_sql=true\nhibernate.format_sql=true\n\n#c3p0 connection pool setting\nc3p0.acquireIncrement=1\nc3p0.idleConnectionTestPeriod=200\nc3p0.initialPoolSize=1\nc3p0.minPoolSize=1\nc3p0.maxPoolSize=5\nc3p0.maxStatements=0\n```\n</details>\n\n<details>\n<summary>persistence.xml</summary>\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\n    version=\"1.0\">\n    <persistence-unit name=\"examplePersistenceUnit\">\n        <!--<provider>org.hibernate.ejb.HibernatePersistence</provider>-->\n        <!-- <jar-file>/WEB-INF/lib/example-model*.jar</jar-file> -->\n        <class>trent.yang.springjpa.example.model.Product</class>\n        <exclude-unlisted-classes>true</exclude-unlisted-classes>\n    </persistence-unit>\n</persistence>\n```\n</details>\n\n<details>\n<summary>log4j.properties</summary>\n\n```\nlog4j.rootLogger=DEBUG,CONSOLE\nlog4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\nlog4j.appender.CONSOLE.Threshold=INFO\nlog4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CONSOLE.layout.ConversionPattern=[%d] {%t} [%p] [%c] : %m%n\n```\n</details>\n\n<a href=\"http://www.jq22.com/jquery-info122\" target=\"_blank\">jquery</a>\n<a href=\"https://jqueryui.com/download/all/\" target=\"_blank\">jqueryui</a>\n<a href=\"https://github.com/tonytomov/jqGrid\" target=\"_blank\">jqGrid</a>\n<a href=\"https://blog.mn886.net/jqGrid/\" target=\"_blank\">jqGrid演示</a>\n\n<details>\n<summary>index.html</summary>\n\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en-gb\" lang=\"en-gb\" >\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n    <title>Spring+JPA+jqGrid</title>\n    <link href=\"resources/css/ui-lightness/jquery-ui-1.8.16.custom.css\" type=\"text/css\" rel=\"stylesheet\" />\n    <link href=\"resources/css/ui.jqgrid.css\" media=\"screen\" type=\"text/css\" rel=\"stylesheet\" />\n    <script type=\"text/javascript\" src=\"resources/js/jquery-1.6.2.js\"></script>\n    <script type=\"text/javascript\" src=\"resources/js/jquery-ui-1.8.16.custom.js\"></script>\n    <script type=\"text/javascript\" src=\"resources/js/i18n/grid.locale-en.js\"></script>\n    <script type=\"text/javascript\" src=\"resources/js/jquery.jqGrid.src.js\"></script>\n    <script type=\"text/javascript\">\n    $(document).ready(function($) {\n        $(\"#list\").jqGrid({\n            url: 'products', \n            datatype: \"json\", \n            colNames: ['Product Id','Product Name', 'Product Description'], \n            colModel: [ \n                  {name: 'id', index: 'id', width: 100}, \n                  {name: 'name', index: 'name', width: 120},\n                  {name: 'description', index: 'description', width: 200}\n            ], \n            jsonReader: {repeatitems: false, id: \"0\"},\n            rowNum: 10, \n            rowList: [10, 20, 30], \n            pager: '#pager', \n            sortname: 'id', \n            viewrecords: true,\n            sortorder: \"desc\", \n            caption: \"Products\" \n        }); \n        $(\"#list\").jqGrid('navGrid','#pager', {edit: false, add: false, del: false, search: false});\n    });\n    </script>\n  </head>\n  <body>\n    <div>\n      <table id=\"list\"></table>\n      <div id=\"pager\"></div> \n    </div>\n  </body>\n</html>\n```\n</details>\n\n","tags":["spring"]},{"title":"[linux] 虚拟网络设备之tun/tap","url":"/2020/02/14//articles/2020/02/14/1581643663000.html/","content":"<a href=\"https://segmentfault.com/a/1190000009249039\" target=\"_blank\">Linux虚拟网络设备之tun/tap</a>\n\n<details>\n<summary>tun.c</summary>\n\n```C\n#include <net/if.h>\n#include <sys/ioctl.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <string.h>\n#include <sys/types.h>\n#include <linux/if_tun.h>\n#include<stdlib.h>\n#include<stdio.h>\n\nint tun_alloc(int flags)\n{\n\n    struct ifreq ifr;\n    int fd, err;\n    char *clonedev = \"/dev/net/tun\";\n\n    if ((fd = open(clonedev, O_RDWR)) < 0) {\n        return fd;\n    }\n\n    memset(&ifr, 0, sizeof(ifr));\n    ifr.ifr_flags = flags;\n\n    if ((err = ioctl(fd, TUNSETIFF, (void *) &ifr)) < 0) {\n        close(fd);\n        return err;\n    }\n\n    printf(\"Open tun/tap device: %s for reading...\\n\", ifr.ifr_name);\n\n    return fd;\n}\n\nint main()\n{\n\n    int tun_fd, nread;\n    char buffer[1500];\n\n    /* Flags: IFF_TUN   - TUN device (no Ethernet headers)\n     *        IFF_TAP   - TAP device\n     *        IFF_NO_PI - Do not provide packet information\n     */\n    tun_fd = tun_alloc(IFF_TUN | IFF_NO_PI);\n\n    if (tun_fd < 0) {\n        perror(\"Allocating interface\");\n        exit(1);\n    }\n\n    while (1) {\n        nread = read(tun_fd, buffer, sizeof(buffer));\n        if (nread < 0) {\n            perror(\"Reading from interface\");\n            close(tun_fd);\n            exit(1);\n        }\n\n        printf(\"Read %d bytes from tun/tap device\\n\", nread);\n    }\n    return 0;\n}\n```\n</details>\n\n执行\n```\ngcc tun.c -o tun\nsudo ./tun\n```\n","tags":["linux"]},{"title":"[linux] 上网配置","url":"/2020/02/14//articles/2020/02/14/1581643662000.html/","content":"<a href=\"https://www.cnblogs.com/xishaohui/p/8728848.html\" target=\"_blank\">Linux网络配置</a>\n```\nifconfig\n#查看当前虚拟机的IP\nip addr\n\n#如果虚拟机的ip是127.0.0.1的话，需要修改配置文件\ncd /etc/sysconfig/network-scripts/\n\nvi ifcfg-ens33\nONBOOT=yes\n\n#重启网卡\nservice network restart\n\nping www.baidu.com\n```\n\nifcfg-eth0\n```\ncd /etc/sysconfig/network-scripts\nvim ifcfg-eth0\n\nDEVICE=eth0\n#重启生效\nONBOOT=yes\n#设置为静态IP\nBOOTPROTO=static\n\n#ip地址\nIPADDR=10.23.57.227\n#子网掩码\nNETMASK=255.255.255.0\n#网关\nGATEWAY=10.23.57.2\n#DNS1\nDNS1=8.8.8.8\n#DNS2\nDNS2=4.4.4.4\n```\n","tags":["linux"]},{"title":"[linux] tunctl添加虚拟网卡与brctl添加网桥","url":"/2020/02/14//articles/2020/02/14/1581643661000.html/","content":"<a href=\"https://blog.csdn.net/zhaihaifei/article/details/23168621\" target=\"_blank\">tunctl添加虚拟网卡TUN/TAP与brctl添加网桥</a>\n\n<a href=\"https://www.iteye.com/blog/fp-moon-1468650\" target=\"_blank\">Linux 网桥配置命令：brctl</a>\n```\nsudo apt-get install -y bridge-utils\n```\n\nLinux添加虚拟网卡三种方法\n\n方法1:\n```\n#ifconfig命令创建\\删除虚拟网卡\nifconfig eth0:0 192.168.1.10 netmask 255.255.255.0 up\n\n#删除虚拟网卡:\nifconfig eth0:0 down\n```\n\ntunctl安装与使用\n```\nsudo apt-get install -y uml-utilities\n```\n\n创建和配置虚拟网卡\n```\n#确认是否有tunctl命令,如果没有通过yum安装即可\nsudo apt-get install -y uml-utilities tunctl\n\n#创建虚拟网卡设备\ntunctl -t tap0 -u root\n\n#设置虚拟网卡\nifconfig tap0 192.168.0.1 netmask 255.255.255.0 promisc\n```\n","tags":["linux"]},{"title":"[maven] 命令行构建多模块项目","url":"/2020/02/14//articles/2020/02/14/1581643521000.html/","content":"<a href=\"https://www.jianshu.com/p/61837ae06d22\" target=\"_blank\">maven 命令行构建多模块项目</a>\n```\n分层大概如下图：\n　odin-parent\n　　　　|----pom.xml\n　　　　|----odin-domain\n　　　　　　　　|----pom.xml\n　　　　|----odin-dao\n　　　　　　　　|----pom.xml\n　　　　|----odin-service\n　　　　　　　　|----pom.xml\n　　　　|----odin-web\n　　　　　　　　|----pom.xml\n```\n\nodin-parent\n```\nmvn archetype:generate -DgroupId=com.java.odin -DartifactId=odin-parent -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false -Dpackaging=pom\n```\n\n```\ncd odin-parent\nmkdir domain dao service web\n```\n\n```\ncd domain\nmvn archetype:generate -DgroupId=com.java.odin -DartifactId=odin-domain -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n```\n\n```\ncd ../dao\nmvn archetype:generate -DgroupId=com.java.odin -DartifactId=odin-dao -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n```\n\n```\ncd ../service\nmvn archetype:generate -DgroupId=com.java.odin -DartifactId=odin-service -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n```\n","tags":["maven"]},{"title":"[maven] 命令创建java工程","url":"/2020/02/14//articles/2020/02/14/1581643520000.html/","content":"```\nmvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false\n```\n","tags":["maven"]},{"title":"[ubuntu] Eclipse+GDB+OpenOCD+STlink搭建STM32开发环境","url":"/2020/02/14//articles/2020/02/14/1581643519000.html/","content":"<a href=\"https://blog.csdn.net/qq_33641919/article/details/83860531\" target=\"_blank\">基于Ubuntu+Eclipse+GDB+OpenOCD+STlink搭建STM32开发环境</a>\n\n<a href=\"https://pan.baidu.com/s/1fgH5CuE76xAIF59FWqD1VA\" target=\"_blank\">VMware.zip</a>\n```\n提取码：\nxfk4\n```\n\n<a href=\"https://pan.baidu.com/s/1vZObrb1842WpOohwASTQ5A\" target=\"_blank\">ST-LINK驱动.zip</a>\n```\n提取码：\nvp5f\n```\n\n```\n#打开Ubuntu终端（alt+ctrl+t）输入\nlsusb\n\n#安装openocd 打开Ubuntu终端（alt+ctrl+t）输入\nsudo apt install openocd\n\n# 查看版本信息\nopenocd\n```\n\nGDB工具链\n<a href=\"https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads\" target=\"_blank\">gcc-arm-none-eabi 选择linux-64bit版</a>\n<a href=\"https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2\" target=\"_blank\">gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2</a>\n\n```\ntar xvf gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2\n./arm-none-eabi-gdb\n```\n\n<a href=\"https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2018-09/R/eclipse-cpp-2018-09-linux-gtk-x86_64.tar.gz\" target=\"_blank\">eclipse-cpp-2018-09-linux-gtk-x86_64.tar.gz</a>\n<a href=\"https://pan.baidu.com/s/1ohiUXdMRPvViT4jJOXLdNA\" target=\"_blank\">stm32 MDK移植demo程序</a>\n```\n提取码：\nehjc\n```\n","tags":["ubuntu"]},{"title":"[arm] ubuntu+eclipse嵌入式开发","url":"/2020/02/14//articles/2020/02/14/1581643518000.html/","content":"\n第一步：安装arm-linux-gcc\n```\nsudo apt-get install -y default-jdk arm-linux-gcc\n```\n\n第二步：安装、配置Eclipse\n<a href=\"http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/galileo/SR2/eclipse-cpp-galileo-SR2-linux-gtk.tar.gz\" target=\"_blank\">eclipse-cpp-galileo-SR2-linux-gtk.tar.gz</a>\n<a href=\"http://sourceforge.net/projects/gnuarmeclipse/\" target=\"_blank\">eclipse插件：GNU ARM Eclipse Plug-in</a>\n<a href=\"http://download.eclipse.org/eleases/indigo/\" target=\"_blank\">CDT下载</a>\n\n第三步：编译、配置GDB Server & GDB Client\n安装ARM-GCC组件\n```\n打开instll New Software\n点击添加输入网址：\nhttp://gnuarmeclipse.sourceforge.net/updates\n```\n","tags":["arm"]},{"title":"[arm] itop4412开发板资料","url":"/2020/02/14//articles/2020/02/14/1581643355000.html/","content":"<a href=\"https://pan.baidu.com/s/1YgSqs-HeQAoQjNKYfDCpow\" target=\"_blank\">iTOP-4412开发板视频教程及其相关</a>\n```\n提取码：\nekxx\n```\n\n<a href=\"https://pan.baidu.com/s/1y4Qrev9PGCl-KvRzAqOHeA\" target=\"_blank\">iTOP-4412精英版光盘资料</a>\n```\n提取码：\n3kbi\n```","tags":["arm"]},{"title":"[android] 编译makefile","url":"/2020/02/14//articles/2020/02/14/1581643354000.html/","content":"<a href=\"https://www.cnblogs.com/hesiming/archive/2011/03/15/1984444.html\" target=\"_blank\">android编译系统makefile(Android.mk)写法</a>\n","tags":["android"]},{"title":"[android] JNI与NDK","url":"/2020/02/14//articles/2020/02/14/1581643352000.html/","content":"<a href=\"https://blog.csdn.net/u011418943/article/details/79449108\" target=\"_blank\">这是一篇让你少走弯路的 JNI/NDK 实例教程</a>\n\n<a href=\"https://github.com/LillteZheng/JniDemo.git\" target=\"_blank\">JniDemo</a>\n\nndk-build任务\n```\nandroid{\n    defaultConfig {\n//        externalNativeBuild {\n//            cmake {\n//                cppFlags \"-std=c++11 -frtti -fexceptions\"\n//            }\n//        }\n        ndk {\n            moduleName \"rfid\"\n//            abiFilters \"armeabi-v7a\", \"x86\"\n        }\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'\n        }\n\n    }\n    sourceSets {\n        main {\n            jni.srcDirs = []\n            jniLibs.srcDir \"src/main/libs\"\n        }\n    }\n\n    task ndkBuild(type: Exec) {\n        commandLine \"C:\\\\Users\\\\Mechrevo\\\\AppData\\\\Local\\\\Android\\\\Sdk\\\\ndk-bundle\\\\ndk-build.cmd\", '-C', file('src/main/jni').absolutePath\n    }\n\n    tasks.withType(JavaCompile) {\n        compileTask -> compileTask.dependsOn ndkBuild\n    }\n}\n```\n\n```\n   defaultConfig {\n        ndk {\n            moduleName \"MyLibrary\"\n        }\n    }\n\n    sourceSets {\n        main {\n            jni.srcDirs = []\n            jniLibs.srcDir \"src/main/libs\"\n        }\n    }\n```\n","tags":["android"]},{"title":"[android] AndroidStudio设置代理","url":"/2020/02/14//articles/2020/02/14/1581643351000.html/","content":"<a href=\"https://blog.csdn.net/u010164190/article/details/53168905\" target=\"_blank\">Android Studio设置HTTP代理（可用）</a> \n```\nandroid SDK下载：http://www.androiddevtools.cn\n1. 禁止第一次启动\n    到AS安装目录，打开bin目录，编辑idea.properties, 在文件末尾添加:\n    disable.android.first.run=true\n \n2.设置HTTP代理\n   点击 --->File\n         --->Settings\n           --->System Settings\n            --->HTTP Proxy进行设置\nHost name: mirrors.neusoft.edu.cn\nPort number：80\n \n3.找到SDK Manager即可下载\n```\n\n<a href=\"https://www.jianshu.com/p/6ba60be77855\" target=\"_blank\">android studio设置Http Proxy</a>","tags":["android"]},{"title":"[arm] linux嵌入式编程","url":"/2020/02/14//articles/2020/02/14/1581643162000.html/","content":"<a href=\"https://www.veryarm.com/arm\" target=\"_blank\">arm</a>\n<a href=\"https://www.cnblogs.com/wanghuaijun/p/9416641.html\" target=\"_blank\">Linux下的串口编程实例</a>\n<a href=\"https://github.com/buchenglei/linux-c-study\" target=\"_blank\">linux-c-study</a>\n","tags":["arm"]},{"title":"[zigbee] 专栏","url":"/2020/02/12//articles/2020/02/12/1581506202000.html/","content":"<a href=\"http://www.cnblogs.com/zjutlitao/p/5652058.html\" target=\"_blank\">3、ZigBee基础实验——GPIO输出控制实验-控制Led亮灭</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5652058.html\" target=\"_blank\">4、ZigBee基础实验——中断</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5658644.html\" target=\"_blank\">5、ZigBee基础实验——图文与代码详解定时器1（16位定时器）（长文）</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5671921.html\" target=\"_blank\">6、ZigBee基础实验——定时器3和定时器4（8 位定时器）</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5675169.html\" target=\"_blank\">7、ZigBee之UART剖析（ONLY串口发送）</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5676675.html\" target=\"_blank\">8、ZigBee之UART剖析·二（串口收发）</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5677624.html\" target=\"_blank\">9、ZigBee之AD剖析——AD采集CC2530温度串口显示</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5683177.html\" target=\"_blank\">10、ZigBee之睡眠定时器</a>\n<a href=\"https://www.cnblogs.com/zjutlitao/p/5686488.html\" target=\"_blank\">11、ZigBee之睡眠定时器二</a>\n<a href=\"https://www.cnblogs.com/zjutlitao/p/5686834.html\" target=\"_blank\">12、ZigBee之看门狗定时器——饿了就咬人的GOOD DOG</a>\n<a href=\"https://www.cnblogs.com/zjutlitao/p/5693720.html\" target=\"_blank\">13、ZigBee基础阶段性回顾与加深理解——用定时器1产生PWM来控制LED亮度（七色灯）</a>\n<a href=\"http://www.cnblogs.com/zjutlitao/p/5652025.html\" target=\"_blank\">ZigBee开发环境搭建</a>\n","tags":["zigbee"]},{"title":"[vmware] 设置NAT模式上网","url":"/2020/02/12//articles/2020/02/12/1581506201000.html/","content":"<a href=\"https://blog.csdn.net/lavendyu/article/details/80373708\" target=\"_blank\">VMware 虚拟机如何连接网络</a>\n","tags":["vmware"]},{"title":"[vmware] 扩展硬盘空间","url":"/2020/02/12//articles/2020/02/12/1581506200000.html/","content":"<a href=\"https://blog.csdn.net/Nonpc123/article/details/90098267\" target=\"_blank\">VMware 虚拟机扩展Ubuntu系统磁盘空间</a>\n```\n#查看添加的新的硬盘 /dev/sdb\nfdisk -l\n\n#把新添加的硬盘格式化成 ext3\nmkfs -t ext3 /dev/sdb\n\n#在/home 目录下建立 work 文件夹\nmkdir /home/work\nmount /dev/sdb work/\n\n#设置开机启动自动挂载\nvim /etc/fstab\n/dev/sdb /home/work ext3 defaults 0 0\n```\n","tags":["vmware"]},{"title":"[ubuntu14] 更新源","url":"/2020/02/12//articles/2020/02/12/1581506199000.html/","content":"\n(1)备份原来的源列表文件\n```\ncd /etc/apt/\nmv sources.list sources.list.bak\n```\n\n(2)\nnano sources.list\n```\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n```\n\n```\nrm -r /var/lib/apt/lists/*\n```\n\n更新源文件\n```\napt-get update\n```\n","tags":["ubuntu14"]},{"title":"[springboot] jsp登录注册","url":"/2020/02/12//articles/2020/02/12/1581506198000.html/","content":"<a href=\"https://blog.csdn.net/qq_35280367/article/details/79700970\" target=\"_blank\">使用命令构建（Maven）Spring Boot项目</a>\n```\nmvn archetype:generate -DinteractiveMode=false -DgroupId=com.code -DartifactId=demo -Dversion=1.0.0-SNAPSHOT\n```\n\n<a href=\"https://www.jb51.net/article/110203.htm\" target=\"_blank\">SpringBoot创建JSP登录页面功能实例代码</a>\n","tags":["springboot"]},{"title":"[linux] 查看挂载情况","url":"/2020/02/12//articles/2020/02/12/1581506197000.html/","content":"\nlinux查看挂载\n```\nlsblk\n#或\nlsblk -f\n```\n\n<a href=\"https://www.cnblogs.com/sword03/p/9818957.html\" target=\"_blank\">Linux查看设备命令</a>\n```\n#查看所有启动时检测到的硬件信息\ndmesg\n\nlspci -tv # 显示外设信息\nlsusb -tv # 列出所有USB设备\n\n#查看USB设备：\ncat /proc/bus/usb/devices\n\n#查看键盘和鼠标:\ncat /proc/bus/input/devices\n\n#查看系统硬盘信息和使用情况：\nfdisk & disk – l & df\n\n#查看各设备的中断请求(IRQ):\ncat /proc/interrupts\n\n#用硬件检测程序kuduz探测新硬件：\nservice kudzu start\nservice kudzu restart\n```\n","tags":["linux"]},{"title":"[arm] ubuntu18.04+嵌入式Linux开发环境+嵌入式Qt5.6开发环境","url":"/2020/02/12//articles/2020/02/12/1581506196000.html/","content":"<a href=\"https://blog.csdn.net/Ningjianwen/article/details/87879668\" target=\"_blank\">从0开始在ubuntu18.04上搭建嵌入式Linux开发环境以及嵌入式Qt5.6开发环境</a>\n\n<a href=\"https://pan.baidu.com/s/10r4kku8C0bt8vLampOyvWQ\" target=\"_blank\">文件</a>\n\n<a href=\"https://blog.csdn.net/ywueoei/article/details/83795755\" target=\"_blank\">Ubuntu16.04与ARM的NFS配置、挂载和卸载</a>\n<a href=\"https://blog.csdn.net/Ningjianwen/article/details/87879668\" target=\"_blank\">Ubuntu16.04与ARM的NFS配置、挂载和卸载</a>\n","tags":["arm"]},{"title":"[arm] itop6818最小linux-c系统","url":"/2020/02/12//articles/2020/02/12/1581505786000.html/","content":"<a href=\"https://github.com/BrighterEyer/itop6818-minilinux-files\" target=\"_blank\">itop6818-minilinux-files</a>\n\n文件清单\n```\nlollipop-5.1.1_r6_20170512.tar.gz\nsystem_6818_minilinux.tar.gz\n```\n<details>\n<summary>busybox-1.21.1.tar.bz2</summary>\n\n```\ntar -xvf busybox-1.21.1.tar.bz2;cd busybox-1.21.1\n\n#=====================  配置busybox start  =========================\nmake menuconfig\n\n（1）选中“Busybox Settings”，\n然后按“回车”进入到“Busybox Settings”\n\n（2）第一个是“Build Optiions-> Cross Compiler prefix”, \n输入 “arm-none-linux-gnueabi-”，\nok回车返回\n\n（3）使用键盘的“左右”方向按键，\n选中“Exit”，\n“回车”回到“Busybox Settings”设置界面\n\n（4）选中“Installation Options”，\n然后选择“Select”，\n按“回车”进入“Installation Options”配置界面\n\n（5）选中“BusyBox installation prefix (NEW)”，\n然后按“回车”进入“BusyBox installation prefix”配置界面，\n删除“./_install”，\n输入“../system”，\n按“回车”回到“Installation Options”\n\n（6）键盘“向右”的方向键移动光标到“Exit”，\n按“回车”返回到“Busybox Settings”\n\n（7）移动光标到“Exit”，\n按“回车”返回到“Busybox Configuration”\n\n（8）移动光标到“Exit”，\n按“回车”，弹出保存配置界面，\n选择“Yes”，按“回车”保存配置，退出配置界面\n\nmake\nmake install\n\ncd ../system\nls\nmkdir dev etc lib mnt proc sys tmp var\n\n#=====================  配置busybox end  =========================\n\nchmod 755 ~/work/itop6818-minilinux-files/etc/eth0-setting\nchmod 755 ~/work/itop6818-minilinux-files/etc/init.d/ifconfig-eth0\nchmod 755 ~/work/itop6818-minilinux-files/etc/init.d/rcS\nchmod 755 ~/work/itop6818-minilinux-files/etc/rc.d/init.d/netd\ncp -r ~/work/itop6818-minilinux-files/etc/* ../etc/\n\n#=====================  lib start  =========================\ncp -r /usr/local/arm/arm-2009q3/arm-none-linux-gnueabi/lib/* ./lib/\n#=====================  lib end  =========================\n\ncd var\nmkdir lib lock log run tmp\ncd ../../\n```\n</details>\n\n<details>\n<summary>arm-2009q3.tar.bz2</summary>\n\n```\nsudo su\n\nmkdir /usr/local/arm/\ntar xvf arm-2009q3.tar.bz2 -C /usr/local/arm/\n\nvim /root/.bashrc\nexport PATH=$PATH:/usr/local/arm/arm-2009q3/bin\nsource /root/.bashrc\n\n#Ubuntu 命令行中输入命令\narm\n```\n</details>\n\n<details>\n<summary>linux_tools.tgz安装打包软件和编译</summary>\n\n```\n#安装一下make_ext4fs工具\ncd /\ntar xvf linux_tools.tgz\n\n#生成system.img文件系统镜像\nmake_ext4fs -s -l 314572800 -a root -L linux system.img systemd\n```\n</details>\n\n<details>\n<summary>生成最小linux镜像</summary>\n\n```\nrm -r ~/lollipop-5.1.1_r6/qt_system/system/*\ntar xvf system_6818_minilinux.tar.gz -C ~/lollipop-5.1.1_r6/qt_system/system\ncd ~/lollipop-5.1.1_r6;\n./build_android.sh qt\n```\n</details>\n\n\nhelloworld.c\n```\n#include <stdio.h>\n\nint main(void){\n\tprintf(\"hello world\");\n}\n```\n\n编译helloworld程序\n```\narm-none-linux-gnueabi-gcc -o helloworld helloworld.c -static\n```\n\nOTG烧写镜像\n```\nfastboot.exe flash system system.img\nfastboot.exe reboot\n```\n\n```\nmkdir /data\n#拷贝程序到开发板\nchmod 777 /data\n\n\n#开启允许 USB 调试，fastboot目录下\nadb push helloworld /data\n\n#超级终端中，输入命令\ncd /data\n./helloworld\n```\n\n<a href=\"https://blog.csdn.net/a568713197/article/details/88095014\" target=\"_blank\">最小Linux系统的搭建、tftp服务器搭建与测试、搭建NFS文件系统</a>\n<a href=\"https://www.oschina.net/question/2371345_2187748\" target=\"_blank\">嵌入式开发板学习从零建立Linux最小系统</a>\n","tags":["arm"]},{"title":"[arm] itop6818-linux-c程序","url":"/2020/02/12//articles/2020/02/12/1581505785000.html/","content":"<a href=\"https://github.com/BrighterEyer/itop6818Demos/tree/master/linux-c\" target=\"_blank\">linux-c</a>\n","tags":["arm"]},{"title":"[arm] itop6818使用TF卡启动","url":"/2020/02/12//articles/2020/02/12/1581468037000.html/","content":"\n烧写 Uboot 到 TF 卡\n```\n#将 TF 卡从 windows 接入 Ubuntu\n\n#查看盘符\ndf -l\n\ncd /home/6818/lollipop-5.1.1_r6/result\nls u-boot-Top-6818.bin\n\n./mkuboot /dev/sdx\n```\n\nTF 卡引导 uboot\n```\n拨码开关编号 1 2 3\nEMMC 启动 1 0 1\nTF 卡启动 1 0 0\n```\n\nTF 卡烧写 Android\n```\n#在 TF 卡中建立目录“sdupdate”，然后将 Android 的镜像拷贝到“sdupdate”目录下\n\nboot.img\ncache.img\nsystem.img\nu-boot-iTOP-6818.bin\nuserdata.img\n\n#recovery.img\n\n\n#将 TF 卡接到开发板，将开发板设置为 TF 卡启动，上电启动开发板，进入 uboot 模式\nsdfuse flashall\n\nsetenv bootsystem android\nsaveenv\n```\n\nTF 卡烧写 Qt\n```\n#在 TF 卡中建立目录“sdupdate”，然后将 QT 的镜像拷贝到“sdupdate”目录下\n\nboot.img\nsystem.img\nu-boot-iTOP-6818.bin\n\n#将 TF 卡接到开发板，将开发板设置为 TF 卡启动，上电启动开发板，进入 uboot 模式\nsdfuse flashall\n\nsetenv bootsystem qt\nsaveenv\n```\n","tags":["arm"]},{"title":"[docker] oracle数据库","url":"/2020/02/10//articles/2020/02/10/1581341852000.html/","content":"<a href=\"https://blog.csdn.net/qq_38380025/article/details/80647620\" target=\"_blank\">Docker 拉取 oracle 11g镜像配置(镜像6.8G)</a>\n<a href=\"https://www.cnblogs.com/maoxianfei/p/9083426.html\" target=\"_blank\">Docker oracle部署使用</a>\n\n<details>\n<summary>拉取和设置</summary>\n\n```\ndocker pull registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\ndocker run -d -p 1521:1521 --name oracle11g registry.cn-hangzhou.aliyuncs.com/helowin/oracle_11g\ndocker start oracle11g\ndocker exec -it oracle11g bash\n\n#切换root\nsu root\n#密码：\nhelowin\n\n#编辑profile文件配置ORACLE环境变量\nvi /etc/profile\nexport ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/dbhome_2\nexport ORACLE_SID=helowin\nexport PATH=$ORACLE_HOME/bin:$PATH\nsource /etc/profile\n\n#创建软连接\nln -s $ORACLE_HOME/bin/sqlplus /usr/bin\n\n#从root切换到oracle 用户\nsu - oracle\n\n#登录sqlplus\nsqlplus /nolog\nconn /as sysdba\n\n#查看用户\nselect username,password from dba_users;\n\n#修改sys、system用户密码\nalter user system identified by system;\nalter user sys identified by sys;\n\n#连接测试\nconnect system/system;\n\n#创建用户\ncreate user test identified by test;\n#并给用户赋予权限\ngrant connect,resource,dba to test;\n\nalter database open;\nalter database mount;\nalter database open;\nALTER PROFILE DEFAULT LIMIT PASSWORD_LIFE_TIME UNLIMITED;\nexit\n```\n</details>\n\n查询ORACLE数据库的实例名和服务名\n```\n#1.实例名：\nselect instance_name from v$instance;\n#显示\nhelowin\n\n#2.服务名：\nselect global_name from global_name;\n#显示\nHELOWIN\n```\n\noracle 查看sid和服务名\n```\n#匿名管理员登陆\nconn /as sysdba\n#查看SID\nselect instance_name from v$instance;\n\n#查看用户名\nselect * from dba_users; --查看数据库里面所有用户，前提是你是有dba权限的帐号，如sys,system\nselect * from all_users;  --查看你能管理的所有用户！\nselect * from user_users; --查看当前用户信息 ！\n```\n\nnavicat连接oracle\n```\n主机：\n192.168.99.103\n\n端口：\n1521\n\n服务名：\nHELOWIN\n\n用户名：\nsystem\n\n密码：\nsystem\n```\n\n\n<a href=\"https://blog.csdn.net/dongyuxu342719/article/details/81670837\" target=\"_blank\">Linux新建Oracle用户和数据库</a>\n```\ncreate table classinfo(\n       classid number(2) primary key,\n       classname varchar(10) not null   \n);\n```\n\n<a href=\"https://www.cnblogs.com/garyzhuang/p/9670411.html\" target=\"_blank\">oracle基础之增删改查（基础版）</a>\n\n<a href=\"https://blog.csdn.net/dongyuxu342719/article/details/81670837\" target=\"_blank\">Linux新建Oracle用户和数据库</a>\n\n<details>\n<summary>Linux新建Oracle用户和数据库</summary>\n\n```\n#1、切换到Oracle用户\nsu – oracle\n\n#2、登录sys用户\nsqlplus / as sysdba\n\n#3、创建表空间\n#查询用户表空间文件的路径\nselect name from v$datafile;\n\nCREATE TABLESPACE customerchat LOGGING DATAFILE '/home/oracle/app/oracle/oradata/helowin/customerchat.dbf' \nSIZE 100M AUTOEXTEND ON NEXT 32M MAXSIZE 500M EXTENT MANAGEMENT LOCAL;\n\n#4、创建临时表空间\nselect name from v$tempfile;\ncreate temporary tablespace customerchat_temp tempfile '/home/oracle/app/oracle/oradata/helowin/customerchat_temp.dbf'\nsize 100m autoextend on next 32m maxsize 500m extent management local;\n\n#5、创建用户密码与上面创建的文件形成映射关系\ncreate user customerchat identified by customerchat default tablespace customerchat temporary tablespace customerchat_temp;\n\n#6、为用户添加权限\n初始建立的用户没有任何权限，不能执行任何数据库操作，因此必须为用户设置权限或者角色。\n\n被赋予了某个角色的用户将拥有该角色所具备的权限，常被用到的系统预定义角色：\nCONNECT、RESOURCE、DBA、EXP_FULL_DATABASE、IMP_FULL_DATABASE。\n\n其中，CONNECT、RESOURCE、DBA主要用于数据库管理，数据库管理员需要被授予这三个角色。\n一般的数据库开发人员，需要被授予CONNECT、RESOURCE角色即可。\n\nEXP_FULL_DATABASE、IMP_FULL_DATABASE角色分别用于操作数据库导出、导入相关的操作。\n为用户授予角色：\ngrant connect,resource,create session,dba to customerchat;\n\n#7、查询已创建的用户\nselect username from dba_users;\n\n#8、修改用户密码，将用户的密码设置为123456\nalter user customerchat identified by 123456;\n\n#9、有时用户会处于锁定状态，解锁用户：\nalter user customerchat account unlock;\n```\n</details>","tags":["docker"]},{"title":"[win10] 启用或关闭Windows功能","url":"/2020/02/09//articles/2020/02/09/1581239792000.html/","content":"<a href=\"https://www.cnblogs.com/telwanggs/p/10770496.html\" target=\"_blank\">启用或关闭Windows功能</a>\n","tags":["win10"]},{"title":"[sql] oracle常用sql","url":"/2020/02/09//articles/2020/02/09/1581239791000.html/","content":"<a href=\"https://blog.csdn.net/yk10010/article/details/89513731\" target=\"_blank\">Oracle 常用SQL</a>\n\ndocker安装oracle数据库\n```\ndocker search oracle\ndocker volume create exeed-db\ndocker run -d --name exeed-db -p 1521:1521 -p 8080:8080 --shm-size=1g --restart=always -e ORACLE_PWD=XXX -v exeed-db:/u01/app/oracle/oradata zerda/oracle-database:11.2.0.2-xe\n```\n\nHost\n```\ndocker-machine ls\ndocker-machine ip\n```\n\nSID\n```\nXE\n```\n\nUser\n```\nsys as sysdba\n```\n\nPassword\n```\nXXX\n```\n\n<a href=\"https://www.cnblogs.com/telwanggs/p/10770496.html\" target=\"_blank\">windows10启用或关闭Windows功能</a>\n<a href=\"https://docs.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v\" target=\"_blank\">windows10安装hyper-v</a>\n","tags":["sql"]},{"title":"[linux] 用户及权限分配","url":"/2020/02/08//articles/2020/02/08/1581162770000.html/","content":"<a href=\"https://www.cnblogs.com/snail90/p/11427181.html\" target=\"_blank\">linux用户及权限分配</a>\n","tags":["linux"]},{"title":"[qt] 自带opencv库","url":"/2020/02/08//articles/2020/02/08/1581150603000.html/","content":"<a href=\"https://gitee.com/liuzhichao_rain/opencv-label\" target=\"_blank\">使用qt+opencv去水印</a>\n","tags":["qt"]},{"title":"[qt] 移动设备实时投屏软件","url":"/2020/02/08//articles/2020/02/08/1581150602000.html/","content":"<a href=\"https://blog.csdn.net/rankun1/article/details/87970523\" target=\"_blank\">基于Qt ffmpeg opengl开发跨平台安卓实时投屏软件</a>\n<a href=\"https://gitee.com/Barryda/QtScrcpy/releases\" target=\"_blank\">gitee QtScrcpy</a>\n\n<a href=\"https://pan.baidu.com/s/1C4OVUj4FAHnQSMyzNhBgvA\" target=\"_blank\">QtScrcpy.zip(不含adb devices命令)</a>\n```\n提取码：\na5nr\n```\n\n<a href=\"https://www.cnblogs.com/tangsong41/p/11069125.html\" target=\"_blank\">利用adb查看手机设备ip和连接手机的两种方式</a>\n```\nadb devices\nadb shell netcfg\nadb shell ifconfig wlan0\nadb connect 192.168.1.101:5555\n```\n","tags":["qt"]},{"title":"[qt] 物联网工具箱","url":"/2020/02/08//articles/2020/02/08/1581150601000.html/","content":"<a href=\"https://gitee.com/zyzp/qt_suptoolbox\" target=\"_blank\">QT 程序员集成工具箱</a>\n```\n1、串口调试\n2、Ymodem 升级\n3、GPRS、NBIOT 调试\n4、网络调试\n5、MQTT调试\n6、CRC modebus校验等工具\n```\n","tags":["qt"]},{"title":"[qt] 视频播放","url":"/2020/02/08//articles/2020/02/08/1581150600000.html/","content":"<a href=\"https://blog.csdn.net/liji_digital/article/details/83691035\" target=\"_blank\">qt实现视频播放器</a>\n\n<a href=\"https://www.cnblogs.com/zhangyi-studio/p/8596837.html\" target=\"_blank\">QT-简易视频播放器</a>\n","tags":["qt"]},{"title":"[qt] 封装网络请求","url":"/2020/02/08//articles/2020/02/08/1581150599000.html/","content":"<a href=\"https://gitee.com/BlueBuger/qthttp_request_auxiliary_class\" target=\"_blank\">QT之Http请求</a>\n\ntcp请求\n<a href=\"https://gitee.com/ShaShiDiZhuanLan/Demo_Network\" target=\"_blank\">Demo_Network</a>\n\n","tags":["qt"]},{"title":"[qt] windows资源信息之rc文件","url":"/2020/02/08//articles/2020/02/08/1581150598000.html/","content":"<a href=\"https://www.cnblogs.com/findumars/p/5682687.html\" target=\"_blank\">Qt之Windows资源文件（.rc文件）</a>\n","tags":["qt"]},{"title":"[qt] unsigned_int强制类型转换问题","url":"/2020/02/08//articles/2020/02/08/1581150597000.html/","content":"```\nunsigned int\nuintptr_t\n```\n","tags":["qt"]},{"title":"[qt] sqlite+excel+sqlitecipher.dll","url":"/2020/02/08//articles/2020/02/08/1581150596000.html/","content":"<a href=\"https://www.devbean.net/2018/07/qtciphersqliteplugin-v1_0/\" target=\"_blank\">Qt SQLite加密插件QtCipherSqlitePlugin</a>\n\n<a href=\"https://gitee.com/devbean/QtCipherSqlitePlugin\" target=\"_blank\">QtCipherSqlitePlugin</a>\n```\ngit clone https://github.com/devbean/QtCipherSqlitePlugin.git\ncd QtCipherSqlitePlugin\ngit checkout 1.0\n```\n\n放置qt目录\n```\n64\\plugins\\sqldrivers\n```\n\n<a href=\"\" target=\"_blank\"></a>\n```\nhttps://github.com/VilasWang/QtSqliteExcelViewer\nhttps://github.com/impressJay/QT5.7SQLITE\n```\n","tags":["qt"]},{"title":"[qt] dll的生成及使用","url":"/2020/02/08//articles/2020/02/08/1581150594000.html/","content":"<a href=\"https://www.jianshu.com/p/2851c0f7f4a9\" target=\"_blank\">QT中dll的生成及使用</a>\n\n<a href=\"https://blog.csdn.net/qq_29542611/article/details/86664781\" target=\"_blank\">Qt：Windows编程—DLL注入与卸载</a>\n<a href=\"https://github.com/licongxing/DLLInject\" target=\"_blank\">github DLLInject</a>\n\n简单注入\n<a href=\"https://github.com/changeofpace/Simple-Injector\" target=\"_blank\">Simple-Injector</a>\n","tags":["qt"]},{"title":"[hexo] 使用github搭建博客","url":"/2020/02/08//articles/2020/02/08/1581150593000.html/","content":"<a href=\"https://www.jianshu.com/p/4f56cf990bba\" target=\"_blank\">使用github搭建博客</a>\n","tags":["hexo"]},{"title":"[docker] 私有maven仓库","url":"/2020/02/08//articles/2020/02/08/1581150592000.html/","content":"<a href=\"https://www.jianshu.com/p/77af52a75ad8\" target=\"_blank\">使用docker搭建nexus并配置docker私有仓库</a>\n```\n#查找镜像\ndocker search nexus\n\n#选取使用次数较多是镜像 拉取镜像\ndocker pull sonatype/nexus3\n\n#查看拉取的镜像\ndocker images\n\n#启动容器\ndocker run -d --name nexus3 \\\n--restart=always \\\n-p 8081:8081 \\\n-p 8082:8082  \\\n-p 8083:8083  \\\n-p 8084:8084  \\\n-p 8085:8085   \\\n-v /opt/nexus-data:/nexus-data \\\nsonatype/nexus3\n\n#查看容器日志\ndocker logs nexus3\n\n#登录配置\n确保正常启动后，使用浏览器访问\nhttp://服务器ip:8081\n\n#点击右上角登录\n账号密码：\nadmin/admin123\n```\n","tags":["docker"]},{"title":"[docker] toolbox切换源","url":"/2020/02/08//articles/2020/02/08/1581150591000.html/","content":"\n镜像加速地址\n```\nhttps://registry.docker-cn.com\nhttps://docker.mirrors.ustc.edu.cn\nhttp://hub-mirror.c.163.com\nhttps://docker.mirrors.ustc.edu.cn\nhttps://cr.console.aliyun.com/\n```\n\n```\ndocker-machine ssh default\nsudo sed -i \"s|EXTRA_ARGS='|EXTRA_ARGS='--registry-mirror=https://registry.docker-cn.com |g\" /var/lib/boot2docker/profile\nexit\ndocker-machine restart default\n```\n\n\n创建docker-machine\n```\ndocker-machine.exe create --driver virtualbox --virtualbox-boot2docker-url=boot2docker.iso default\n```\n","tags":["docker"]},{"title":"[adb] 查看android设备ip","url":"/2020/02/08//articles/2020/02/08/1581150589000.html/","content":"<a href=\"https://www.cnblogs.com/tangsong41/p/11069125.html\" target=\"_blank\">利用adb查看手机设备ip和连接手机的两种方式</a>\n```\nadb devices\nadb shell netcfg\nadb shell ifconfig wlan0\nadb connect 192.168.1.101:5555\n```\n","tags":["adb"]},{"title":"[vue] idea+vue","url":"/2020/02/06//articles/2020/02/06/1580970899000.html/","content":"<a href=\"https://www.cnblogs.com/maggieq8324/p/11458752.html\" target=\"_blank\">IntelliJ IDEA支持.vue文件</a>\n```\nnpm i -g cnpm --registry=https://registry.npm.taobao.org\nnpm i -g vue-cli\nvue -V\ncnpm install -g webpack\nvue init webpack demo\ncd demo\nnpm install\nnpm run dev\n```\n","tags":["vue"]},{"title":"[vue] demos","url":"/2020/02/06//articles/2020/02/06/1580970898000.html/","content":"<a href=\"https://www.jianshu.com/p/237d49c7cf78\" target=\"_blank\">vue项目demo</a>\n<a href=\"https://github.com/BugMyGod/mxProject\" target=\"_blank\">github mxProject</a>\n\n<a href=\"https://blog.csdn.net/world_kun/article/details/99632463\" target=\"_blank\">vue-demo示例</a>\n\n从零构建vue2 + vue-router + vuex 开发环境到入门，实现基本的登录退出功能\n<a href=\"https://github.com/lzxb/vue2-demo\" target=\"_blank\">vue2-demo</a>\n","tags":["vue"]},{"title":"[vue] cordova+vue实现android","url":"/2020/02/06//articles/2020/02/06/1580970897000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\nnpm install -g express\nnpm install -g webpack\nnpm install -g vue-cli\n```\n\n<a href=\"https://blog.csdn.net/saucxs/article/details/93715133\" target=\"_blank\">cordova混合App开发：Cordova+Vue实现Android APP开发（一）</a> \n\n<a href=\"https://blog.csdn.net/litchiflesh/article/details/85096649\" target=\"_blank\">IDEA 的 plugins 搜不到任何的东西</a> \n```\nSettings -> Appearance & Behavior -> System Settings -> Updates -> 不勾选use secure connection\n\n保存退出后，重新点击Setting\n\n点击 Plugins  进行搜索\n```\n\n\n```\nadb logcat\n```\n\n基于vue全家桶开发的一款移动端音乐播放器webapp\n```\n#前端：vue全家桶，es6，sass，axios，jsonp，better-scroll\nhttps://github.com/wwenj/web-music-player.git\n```\n\n<a href=\"https://github.com/dujingya/blueDevice/blob/master/blueDevice.md\" target=\"_blank\">vue+蓝牙</a> \n<a href=\"https://github.com/Meituan-Dianping/mpvue\" target=\"_blank\">mqvue</a> \n<a href=\"https://www.cnblogs.com/weichen913/p/9439203.html\" target=\"_blank\">基于mpvue搭建小程序项目框架</a> \n\n<a href=\"https://blog.csdn.net/bing103425/article/details/81381041\" target=\"_blank\">Vue项目使用Cordova实现调取原生摄像头并实现裁剪功能</a>\n1.新建Cordova项目，在项目目录里添加插件\n```\ncordova plugin add cordova-plugin-camera \ncordova plugin add --save cordova-plugin-crop\n```\n\n2.在Vue项目的index.html中引入Cordova.js并添加设备监听函数\n```\n  <body>\n    <div id=\"app\"></div>\n    <script type=\"text/javascript\" src=\"cordova.js\"></script> \n    <script>\n      document.addEventListener('deviceready', function() {\n \n      }, false);\n    </script>\n  </body>\n```\n\n要把引入和监听函数注释掉，因为这样在PC端跑不起来，在手机里才可以\n```\nnpm run dev\n```\n\n3.在需要调取摄像头的地方加入代码\n比如在一个“打开相机”的按钮上点击事件绑定了一个函数，叫getCamera，代码如下\n```\n    getCamera: function(){\n        //打开照相机\n        navigator.camera.getPicture(function(imageURI){\n                    //打开摄像头成功的回调\n                  plugins.crop(function success (imageURI) {\n                    //裁剪成功的回调\n                    console.log(imageURI)\n                }, function fail () {\n                    //裁剪失败的回调\n                }, imageURI,  {quality: 30})  //quality为照片质量\n            },function(){\n                //打开摄像头失败的回调\n            }, {\n            quality: 50,\n            destinationType: Camera.DestinationType.FILE_URI \n    });\n```\n","tags":["vue"]},{"title":"[vue] better-scroll","url":"/2020/02/06//articles/2020/02/06/1580970896000.html/","content":"<a href=\"https://www.jianshu.com/p/5214d4979ff2\" target=\"_blank\">在Vue中用better-scroll实现横向滚动</a>\n<a href=\"http://www.imooc.com/article/272021\" target=\"_blank\">使用vue+better-scroll实现横向滚动效果</a>\n\n<a href=\"https://github.com/CruxF/Vue-base\" target=\"_blank\">github Vue-base</a>\n\n<a href=\"https://www.cnblogs.com/mhtss/p/11245132.html\" target=\"_blank\">当 better-scroll 遇见 Vue</a>\n","tags":["vue"]},{"title":"[vue] axios+axios封装成http","url":"/2020/02/06//articles/2020/02/06/1580970895000.html/","content":"<a href=\"https://segmentfault.com/a/1190000013128858\" target=\"_blank\">vue全局使用axios的方法</a>\n\n<a href=\"https://www.cnblogs.com/nogodie/p/9853660.html\" target=\"_blank\">axios封装成http</a>\n```\nvar Ajax = {\n    get: function(url,fn){\n        // XMLHttpRequest对象用于在后台与服务器交换数据\n        var xhr=new XMLHttpRequest();\n        xhr.open('GET',url,false);\n        xhr.onreadystatechange=function(){\n            // readyState == 4说明请求已完成\n            if(xhr.readyState==4){\n                if(xhr.status==200 || xhr.status==304){\n                    console.log(xhr.responseText);\n                    fn.call(xhr.responseText);\n                }\n            }\n        }\n        xhr.send();\n    },\n\n    // data应为'a=a1&b=b1'这种字符串格式，在jq里如果data为对象会自动将对象转成这种字符串格式\n    post: function(url,data,fn){\n        var xhr=new XMLHttpRequest();\n        xhr.open('POST',url,false);\n        // 添加http头，发送信息至服务器时内容编码类型\n        xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');\n        xhr.onreadystatechange=function(){\n            if (xhr.readyState==4){\n                if (xhr.status==200 || xhr.status==304){\n                    // console.log(xhr.responseText);\n                    fn.call(xhr.responseText);\n                }\n            }\n        }\n        xhr.send(data);\n    }\n}\n```\n","tags":["vue"]},{"title":"[sublime] 微信小程序的sublime插件","url":"/2020/02/06//articles/2020/02/06/1580970894000.html/","content":"<a href=\"https://github.com/Lee66/tc-weapp-snippets\" target=\"_blank\">微信小程序 sublime 插件</a>\n\n","tags":["sublime"]},{"title":"[sublime] sublime text3注册码","url":"/2020/02/06//articles/2020/02/06/1580970893000.html/","content":"sublime text3 的注册码\n打开sublime text3 点击 help -> enter license 输入下面注册码\n```\n----- BEGIN LICENSE -----\nZYNGA INC.\n50 User License\nEA7E-811825\n927BA117 84C9300F 4A0CCBC4 34A56B44\n985E4562 59F2B63B CCCFF92F 0E646B83\n0FD6487D 1507AE29 9CC4F9F5 0A6F32E3\n0343D868 C18E2CD5 27641A71 25475648\n309705B3 E468DDC4 1B766A18 7952D28C\nE627DDBA 960A2153 69A2D98A C87C0607\n45DC6049 8C04EC29 D18DFA40 442C680B\n1342224D 44D90641 33A3B9F2 46AADB8F\n\n----- END LICENSE -----\n```\n","tags":["sublime"]},{"title":"[qt] 学生管理系统","url":"/2020/02/06//articles/2020/02/06/1580970892000.html/","content":"<a href=\"https://github.com/suvvm/StudentManagementSystem_Qt/tree/master/StudentManagementSystem_Qt_5(all)\" target=\"_blank\">Qt教程——从零开始的学生管理系统（文件）</a>\n","tags":["qt"]},{"title":"[qt] 天气","url":"/2020/02/06//articles/2020/02/06/1580970891000.html/","content":"<a href=\"https://gitee.com/Barryda/Weather\" target=\"_blank\">Weather</a>\n","tags":["qt"]},{"title":"[qt] 数据库操作","url":"/2020/02/06//articles/2020/02/06/1580970890000.html/","content":"<a href=\"https://blog.csdn.net/y____xiang/article/details/80412247\" target=\"_blank\">MySQL数据库</a>\n\n<a href=\"https://blog.csdn.net/qq_43333395/article/details/91126477\" target=\"_blank\">静态数据库（.db）</a>\n","tags":["qt"]},{"title":"[qt] 沙师弟的github","url":"/2020/02/06//articles/2020/02/06/1580970889000.html/","content":"<a href=\"https://github.com/ShaShiDiZhuanLan?utf8=%E2%9C%93&tab=repositories&q=&type=&language=c%2B%2B\" target=\"_blank\">沙师弟专栏</a>\n```\nDemo_BaslerCamera_Qt\nDemo_HalconAshing_Qt\nDemo_LoadWebView_Qt\nDemo_Http_Qt\nDemo_SlideApp_Qt\nDemo_TcpSocket_Qt\nDemo_MessageChat_Qt\nDemo_VLC_Qt\n```\n","tags":["qt"]},{"title":"[qt] 启动问题","url":"/2020/02/06//articles/2020/02/06/1580970888000.html/","content":"<a href=\"https://blog.csdn.net/qq_37633082/article/details/100565144\" target=\"_blank\">解决This application failed to start because no Qt platform plugin could be initialized问题</a>\n\n删除环境变量\n```\nQT_QPA_PLATFORM_PLUGIN_PATH\n```\n\n原指向\n```\nQT_QPA_PLATFORM_PLUGIN_PATH\nG:\\Python\\Python37\\Lib\\site-packages\\PyQt5\\Qt\\plugins\n```\n\n","tags":["qt"]},{"title":"[qt] 解决编译android报错","url":"/2020/02/06//articles/2020/02/06/1580970887000.html/","content":"<a href=\"https://developer.android.google.cn/ndk/downloads\" target=\"_blank\">最新NDK下载地址</a>\n\n<a href=\"https://developer.android.google.cn/ndk/downloads/older_releases.html\" target=\"_blank\">历史NDK下载地址</a>\n\n<a href=\"https://www.jianshu.com/p/b0fad74d64e1\" target=\"_blank\">Linux下Clang交叉编译protobuffer库供Qt on Android使用</a>\n```\nCommand does not exist:  .../llvm/prebuilt/windows-x86_64/bin/llvm-strip.exe\n需要的ndk版本在18以上\n```\n","tags":["qt"]},{"title":"[qt] 断点续传","url":"/2020/02/06//articles/2020/02/06/1580970886000.html/","content":"<a href=\"https://github.com/BrighterEyer/qtDemos/tree/master/MinGW/SingleDownloadManager\" target=\"_blank\">SingleDownloadManager</a>\n","tags":["qt"]},{"title":"[qt] 独立opencv","url":"/2020/02/06//articles/2020/02/06/1580970885000.html/","content":"<a href=\"https://github.com/hanxi/check_system\" target=\"_blank\">人脸识别签到Qt+OpenCV</a>\n\n<a href=\"https://github.com/KellyGui/FaceCV\" target=\"_blank\">FaceCV</a>\n```\nOpenCV+QT小例子\nface_detection:人脸检测\nface_recognition:人脸识别\nface_whitening:人脸美白\n路径名不能包含中文 人脸识别用到扩展包需自行编译opencv\n```\n","tags":["qt"]},{"title":"[qt] ubuntu+clang环境","url":"/2020/02/06//articles/2020/02/06/1580970884000.html/","content":"\n安装clang++\n```\nsudo apt-get install -y clang build-essential libqt4-dev mesa-libGL-devel libssl-dev\nsudo apt-get install -y libssl-dev\nsudo apt-get install -y opencv\n```\n\nubuntu安装opencv\n```\nsudo apt install pkg-config\npkg-config --modversion opencv\nsudo apt-get -y install cmake\nsudo apt-get -y install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg.dev libtiff4.dev libswscale-dev libjasper-dev\n```\n\n<a href=\"https://www.jianshu.com/p/f646448da265\" target=\"_blank\">环境配置—Ubuntu 16.04 安装Opencv 3.4.3</a>\n\n","tags":["qt"]},{"title":"[qt] QML+Android投屏","url":"/2020/02/06//articles/2020/02/06/1580970883000.html/","content":"<a href=\"https://gitee.com/Barryda/QtScrcpy\" target=\"_blank\">QtScrcpy可以通过USB(或通过TCP/IP)连接Android设备，并进行显示和控制。不需要root权限</a>\n<a href=\"https://github.com/barry-ran/QtScrcpy/blob/master/README_zh.md\" target=\"_blank\">README_zh</a>\n\n","tags":["qt"]},{"title":"[qt] QML+Android","url":"/2020/02/06//articles/2020/02/06/1580970882000.html/","content":"<a href=\"https://www.jianshu.com/p/6d806c25cb1b\" target=\"_blank\">Qt for Android中调用百度地图</a>\n\n<a href=\"https://github.com/luoyayun361/QtAndroidAlbum\" target=\"_blank\">QML for Android 实现手机相册浏览功能</a>\n\n<a href=\"https://github.com/luoyayun361/QML-Android-ScanCode\" target=\"_blank\">QML for Android 实现二维码扫描功能（QML+QZXing）</a>\n\n<a href=\"https://github.com/luoyayun361/Qt-QML-Example\" target=\"_blank\">Qt、QML 示例集合</a>\n<a href=\"https://github.com/luoyayun361/Qt-WritingBoard\" target=\"_blank\">Qt实现画板，支持多点画线，线条平滑、无折线，重点体现书写效率</a>\n\n<a href=\"https://github.com/Iktwo/QuteLauncher\" target=\"_blank\">QML Android Launcher（英文）</a>\n\n\n<a href=\"https://gitee.com/Barryda/QtScrcpy\" target=\"_blank\">QtScrcpy可以通过USB(或通过TCP/IP)连接Android设备，并进行显示和控制。不需要root权限</a>\n<a href=\"https://github.com/barry-ran/QtScrcpy/blob/master/README_zh.md\" target=\"_blank\">README_zh</a>\n\n\n<a href=\"https://github.com/RStravinsky/CarsAndroid\" target=\"_blank\">Car rental in company. C++/Qt for Android/QML/MySQL</a>\n\n<a href=\"https://github.com/FalsinSoft/QtExamples\" target=\"_blank\">QtExamples</a>\n```\nC++\nAndroidApkAssetsFiles\nAndroidRequestAppPermissions\nResourcesLibrary\n\nQML\nAndroidApkInfo\nAndroidBatteryLevel\nAndroidKeyboardSize\nAndroidNativeSplashScreen\nAndroidScreenOrientation\nAndroidSignalStrength\nDescriptionControls\nEmboss\nMixedAndroidNativeQMLSplashScreen\nSplashScreen\n```\n","tags":["qt"]},{"title":"[python] 沙师弟的github","url":"/2020/02/06//articles/2020/02/06/1580970881000.html/","content":"<a href=\"https://github.com/ShaShiDiZhuanLan?utf8=%E2%9C%93&tab=repositories&q=&type=&language=python\" target=\"_blank\">沙师弟的python</a>\n","tags":["python"]},{"title":"[nodejs] npm_install报错","url":"/2020/02/06//articles/2020/02/06/1580970880000.html/","content":"<a href=\"https://www.jianshu.com/p/fd3b19cacd99\" target=\"_blank\">gyp ERR! stack Error: Can't find Python executable 'python'</a>\n```\nnpm install --global --production windows-build-tools\nnpm install --global node-gyp\n```\n\n\n```\n#npm config set python python3.7\n\nnpm config set python \"D:\\Python\\Python37\\python.exe\"\n\nnpm config set msvs_version 2017\n```\n\n","tags":["nodejs"]},{"title":"[microsoft] vs2017","url":"/2020/02/06//articles/2020/02/06/1580970879000.html/","content":"<a href=\"https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes\" target=\"_blank\">vs2017</a>\n","tags":["microsoft"]},{"title":"[MFC] 入门+demos","url":"/2020/02/06//articles/2020/02/06/1580970878000.html/","content":"<a href=\"https://www.jianshu.com/p/0324359b567c\" target=\"_blank\">MFC 快速入门</a>\n\n<a href=\"http://www.it1352.com/OnLineTutorial/mfc/mfc_windows_fundamentals.html\" target=\"_blank\">MFC - Windows基础版</a>\n\n<a href=\"https://github.com/vpoet/MFC-based-on-CWebPage-and-of-the-third-party-map-API-development-example\" target=\"_blank\">基于MFC百度地图开发Demo</a>\n\n<a href=\"https://github.com/MrVirus/MFC\" target=\"_blank\">MFC</a>\n\n基于MFC实现的一个截图demo\n<a href=\"https://github.com/JeanPenty/ScreenCaptureDemo\" target=\"_blank\">ScreenCaptureDemo</a>\n","tags":["js"]},{"title":"[js] 原生ajax","url":"/2020/02/06//articles/2020/02/06/1580970877000.html/","content":"```\nvar Ajax = {\n    get: function(url,fn){\n        // XMLHttpRequest对象用于在后台与服务器交换数据\n        var xhr=new XMLHttpRequest();\n        xhr.open('GET',url,false);\n        xhr.onreadystatechange=function(){\n            // readyState == 4说明请求已完成\n            if(xhr.readyState==4){\n                if(xhr.status==200 || xhr.status==304){\n                    console.log(xhr.responseText);\n                    fn.call(xhr.responseText);\n                }\n            }\n        }\n        xhr.send();\n    },\n\n    // data应为'a=a1&b=b1'这种字符串格式，在jq里如果data为对象会自动将对象转成这种字符串格式\n    post: function(url,data,fn){\n        var xhr=new XMLHttpRequest();\n        xhr.open('POST',url,false);\n        // 添加http头，发送信息至服务器时内容编码类型\n        xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');\n        xhr.onreadystatechange=function(){\n            if (xhr.readyState==4){\n                if (xhr.status==200 || xhr.status==304){\n                    // console.log(xhr.responseText);\n                    fn.call(xhr.responseText);\n                }\n            }\n        }\n        xhr.send(data);\n    }\n}\n```\n","tags":["js"]},{"title":"[idea] 加载不了插件的解决办法","url":"/2020/02/06//articles/2020/02/06/1580970876000.html/","content":"<a href=\"https://blog.csdn.net/LyjNice66/article/details/87888709\" target=\"_blank\">参考</a>\n\n解决方法：\n```\nSetting -> Appearance & Behavior -> Syetem Setting -> Updates -> 取消勾选Use secure connection -> 重新搜索plugins\n```\n","tags":["idea"]},{"title":"[html] 2019-nCoV 全国新型肺炎疫情每日动态趋势可视图","url":"/2020/02/06//articles/2020/02/06/1580970875000.html/","content":"<a href=\"https://blog.csdn.net/admans/article/details/104107248\" target=\"_blank\">2019-nCoV 全国新型肺炎疫情每日动态趋势可视图</a>\n\n<a href=\"https://github.com/JackieZheng/2019-nCoV\" target=\"_blank\">github 2019-nCoV</a>\n<a href=\"https://jackiezheng.github.io/2019-nCoV/web/index.html\" target=\"_blank\">演示网址</a>\n\n<a href=\"https://blog.csdn.net/qq_38832501/article/details/104112260\" target=\"_blank\">新型冠状病毒全国疫情接口Api</a>\n<a href=\"https://blog.csdn.net/WildSky_/article/details/104092131\" target=\"_blank\">关于新型冠状病毒肺炎疫情追踪的可视化数据的采集、处理</a>\n\n","tags":["html"]},{"title":"[docker] redis","url":"/2020/02/06//articles/2020/02/06/1580970874000.html/","content":"\n```\ndocker pull redis\ndocker run --name redis -p 6379:6379 -d redis:latest redis-server\ndocker-machine ip\n```\n","tags":["docker"]},{"title":"[docker] idea+zookeeper","url":"/2020/02/06//articles/2020/02/06/1580970873000.html/","content":"<a href=\"https://blog.csdn.net/qq_26641781/article/details/80886831\" target=\"_blank\">Docker安装Zookeeper并进行操作</a>\n\nDocker安装Zookeeper\n```\ndocker pull zookeeper\n```\n\n启动容器并添加映射\n```\ndocker run --privileged=true -d --name zookeeper --publish 2181:2181  -d zookeeper:latest\n```\n\n查看容器是否启动\n```\ndocker ps\n```\n\nZooKeeper\n```\nSettings –> Other Settings –> ZooKeeper\n```\n","tags":["docker"]},{"title":"[docker] cas中央认证服务+sso单点登录","url":"/2020/02/06//articles/2020/02/06/1580970872000.html/","content":"<a href=\"https://www.cnblogs.com/zhzhlong/p/11551361.html\" target=\"_blank\">cas sso docker部署service</a>\n\n1.拉取镜像\n```\ndocker pull apereo/cas:latest\n```\n\n2.制作SSL证书\n```\nkeytool -genkey -alias tomcat -keypass changeit -keyalg RSA -keystore server.keystore\n```\n\n3.把证书copy到容器内部\n```\ndocker cp server.keystore cas:/etc/cas/thekeystore\n```\n\n4.启动容器\n```\ndocker run  --name cas -p 8443:8443 -p 8878:8080  apereo/cas:v5.3.10 /bin/sh /cas-overlay/bin/run-cas.sh\n```\n\n5.浏览器访问\n```\nhttps://192.168.1.100:8443/cas/login\n```\n\n6.使用官方默认账户和密码测试登录\n```\n用户名：\ncasuser\n密码：\nMellon\n```\n\n```\nhttps://gitee.com/Kawhi-Carl/sso\nhttps://kawhii.github.io/sso/\n```\n\n打造一个单点登录平台，其中包括以下子系统\n```\nCAS SERVER\n配置中心\n服务管理系统\n监控平台\n客户端集成(cas client、pac4j、shiro)\n```\n\n特性\n```\nDocker快速启动\nGitHub授权登录\nCas Clint、Shiro Pac4j Client集成\njdbc用户密码加密\n自定义主题\n配置统一管理\n根据官网5.1.x新版本迭代\n各阶段发布博客教程\n密码管理\n一键启动\n第三方登录接入(QQ,WeChat,CSDN,GitHub)\n绑定用户\n验证码输出\n自定义校验器\n多属性返回\n验证码发送、校验（注册发送邮箱验证码）\n服务监控检测\n校验码登录\n单用户登录\n```\n\nDocker 快速启动\n```\n#目前仅部署了配置中心及cas服务到docker环境中\ndocker run -d --restart=always -p 8443:8443 kawhii/sso\n```\n\n模块介绍\n```\n模块名\t模块介绍\t端口情况\t必须https\tpath\t启动循序\nsso-server\tcas服务\t8443\t√\tcas\t2\nsso-config\t配置中心\t8888\t×\tconfig\t1\nsso-management\tservice管理\t8081\t×\tcas-management\t3\nsso-cas-client-demo\tcas-client-demo\t8080\t×\t/sample\t4\nsso-client-shiro-demo\tshiro-client-demo\t8083\t×\t/\t5\nsso-client-proxy-demo\tOAuth2代理转发客户端\t8808\t×\t/\t6\nsso-monitor\t监控服务\t8444\t×\t/\t7\n```\n","tags":["docker"]},{"title":"[arm] qt串口工具","url":"/2020/02/06//articles/2020/02/06/1580970871000.html/","content":"<a href=\"https://blog.csdn.net/qq_16607605/article/details/85253035\" target=\"_blank\">Qt编写串口通信、调试的小工具</a>\n\n<a href=\"https://github.com/yangyingle/SerialPorttAssistant\" target=\"_blank\">SerialPorttAssistant</a>\n","tags":["arm"]},{"title":"[arm] itop6818使用QtE4.7","url":"/2020/02/06//articles/2020/02/06/1580970869000.html/","content":"<a href=\"https://pan.baidu.com/s/12V6yl21PeEdhKNiYFHKRnw\" target=\"_blank\">文件资料</a>提取码：8n1e\n\n<a href=\"https://github.com/BrighterEyer/itop6818-QtE4.7-files\" target=\"_blank\">itop6818-QtE4-files</a>\n\n文件清单\n```\narm-linux-gcc-4.3.2.tar.gz\nqt-everywhere-opensource-src-4.7.1.tar.gz\nlollipop-5.1.1_r6\nlinux_tools.tgz\nandroid_env.tgz\n```\n<a href=\"http://master.qt.io/archive/qt/5.3/5.3.2/qt-opensource-linux-x64-android-5.3.2.run\" target=\"_blank\">qt-opensource-linux-x64-android-5.3.2.run</a>\n\n```\n拨码开关编号 1 2 3\nEMMC 启动 1 0 1\nTF 卡启动 1 0 0\n```\n\n```\n#tar xvf android_env.tgz -C /\n#cd /android_env/ubuntu\n#./install-devel-packages.sh\n#sudo apt-get install -y default-jre default-jdk realpath\nsudo apt-get install -y autoconf automake libtool\nsudo apt-get install -y lib32c-dev lib32stdc++6\n```\n\n交叉编译器编译工具arm-none-linux-gnueabi-gcc-4.3.2\n```\nmkdir /usr/local/arm;\ntar xvf arm-linux-gcc-4.3.2.tar.gz -C /usr/local/arm\n```\n\n交叉编译器编译工具arm-none-linux-gnueabi-gcc-4.3.2环境变量\n```\nsudo apt-get install -y libx11-dev libxext-dev libxtst-dev lib32z1\n\nvim /etc/profile\nexport PATH=$PATH:/usr/local/arm/4.3.2/bin\nsource /etc/profile\n\n#输入arm + tab\n#出现编译器“arm-none-linux-gnueabi-gcc-4.3.2”，这就说明编译器路径设置正确\n\napt-get install -y uboot-mkimage\n```\n\n编译QtE4.7\n```\nmkdir /root/yizhi;cd /root/yizhi\ntar -vxf qt-everywhere-opensource-src-4.7.1.tar.gz;\n```\n\nbuild-all\n```\n#/bin/bash\n\nexport PATH=/usr/local/arm/4.3.2/bin:$PATH\nexport PKG_CONFIG_PREFIX=$TOOLCHAIN/arm-none-linux-gnueabi\nexport TB_CC_PREFIX=arm-linux-\nexport TOOLCHAIN=/usr/local/arm/4.3.2\n\nrm -fr qt-everywhere-opensource-src-4.7.1\nrm -fr /opt/qt-4.7.1\n\ntar xfvz qt-everywhere-opensource-src-4.7.1.tar.gz\n\ncd qt-everywhere-opensource-src-4.7.1\n\necho yes | ./configure -opensource -embedded arm -xplatform qws/linux-arm-g++  -no-webkit -qt-libtiff -qt-libmng  -qt-mouse-tslib -qt-mouse-pc -qt-gfx-transformed -no-mouse-linuxtp -prefix /opt/qt-4.7.1   -I /usr/local/tslib/include -L /usr/local/tslib/lib\n\nmake 2>&1 | tee ../qte4.7.1Makelog && make install\n```\n\n执行编译\n```\nchmod 777 build-all\n./build-all\n\n#编译完成后\nls /opt/qt-4.7.1\n\n#拷贝qt-4.7.1\ncd ~/lollipop-5.1.1_r6/qt_system/system/opt\ncp -r /opt/qt-4.7.1 ./\n\ncd ~/lollipop-5.1.1_r6/kernel\n#缺省文件配置\nsudo cp -r config_for_iTOP6818_linux .config\n\ncd ~/lollipop-5.1.1_r6\nsudo ./build_android.sh qt\n\nls result\nboot.img  sd_fusing_uboot.sh  system.img  u-boot-iTOP-6818.bin\nmkuboot   system              u-boot.bin\n```\n\n打开窗口目录\n```\nxdg-open ~/lollipop-5.1.1_r6/result\n```\n\n生成所需的文件、目录\n```\nls ~/lollipop-5.1.1_r6/result/u-boot-iTOP-6818.bin\nls ~/lollipop-5.1.1_r6/result/boot.img\nls ~/lollipop-5.1.1_r6/result/system.img\n```\n\nQt/E4.7 和 Qtopia 的切换\n```\nvim ~/lollipop-5.1.1_r6/qt_system/system/etc/init.d/rcS\n#最后一行改为\n#/bin/qtopia &\n/bin/qt4 &\n```\n\nQt/E4.7 和 Qtopia2.2.0 的触摸校准\n```\n如果用户烧写镜像后，第一次运行正常，断电重启后，文件系统出现:\nSegmentation fault\n\nrm -rf /etc/point*\nreboot\n```\n\n\n切换到 Qt/E4.7\n```\n#超级终端中找出和 Qtopia2.2.0 文件系统相关的 ID 号\n\nps|grep /opt/Qtopia/\n\nkill <ID>\n\n#切换到 Qt/E4.7\nqt4\n\nps|grep qt\n```\n\n切换到Qtopia2.2.0\n```\nps|grep qt\n\nkill <ID>\n\n#切换到 Qtopia2.2.0\nqtopia\n```\n\nQtE 库的编译配置选项简介（build-all）\n```\ncd ~/yizhi/;ls\n./build-all\n\n./configure \\\n-opensource \\\n-embedded \\\n-xplatform qws/linux-arm-g++ \\\n-no-webkit \\\n-qt-libtiff \\\n-qt-libmng \\\n-qt-mouse-tslib \\\n-qt-mouse-pc \\\n-no-mouse-linuxtp \\\n-I/usr/local/tslib/include \\\n-L/usr/local/tslib/lib \\\n-verbose \\\n-static\n```\n","tags":["arm"]},{"title":"[android] 语音对话","url":"/2020/02/06//articles/2020/02/06/1580970868000.html/","content":"<a href=\"https://blog.csdn.net/weixin_40595516/article/details/94563519\" target=\"_blank\">对讲机实时语音对话</a>\n\n<a href=\"https://gitee.com/HyZhan/AudioDemo\" target=\"_blank\">android AudioDemo</a>\n<a href=\"https://gitee.com/HyZhan/AudioServer\" target=\"_blank\">java AudioServer</a>\n\n<a href=\"https://www.jianshu.com/p/83824ed21bfd\" target=\"_blank\">局域网内的Android语音通话实践</a>\n<a href=\"https://github.com/mars-ma/CallMe\" target=\"_blank\">局域网内语音对话</a>\n","tags":["android"]},{"title":"[android] NDK+jni开发","url":"/2020/02/06//articles/2020/02/06/1580970867000.html/","content":"<a href=\"https://www.jianshu.com/p/8adf85732ca0\" target=\"_blank\">Android Studio NDK之——环境配置</a>\n<a href=\"https://gitee.com/dawnling/NdkBuildDemo\" target=\"_blank\">NdkBuildDemo</a>\n\n<a href=\"https://www.jianshu.com/p/87ce6f565d37\" target=\"_blank\">Android JNI(一)——NDK与JNI基础</a>\n\n<a href=\"https://www.jianshu.com/p/0f34c097028a\" target=\"_blank\">Android JNI学习(五)——Demo演示</a>\n<a href=\"https://github.com/gebilaolitou/Jnidemo\" target=\"_blank\">github Jnidemo</a>\n\n<a href=\"https://blog.csdn.net/wzhseu/article/details/79683045\" target=\"_blank\">Android Studio开发JNI示例</a>\n","tags":["android"]},{"title":"[单片机] 51单片机专栏","url":"/2020/02/06//articles/2020/02/06/1580970910000.html/","content":"<a href=\"https://www.cnblogs.com/ghostwu/category/1228994.html\" target=\"_blank\">51单片机专栏</a>\n","tags":["单片机"]},{"title":"[vue] 音乐播放器","url":"/2020/02/06//articles/2020/02/06/1580970909000.html/","content":"<a href=\"https://segmentfault.com/a/1190000009324947\" target=\"_blank\">使用Vue2.0制作音乐播放器</a>\n<a href=\"https://github.com/921227965/vue-musicApp\" target=\"_blank\">github vue-musicApp</a>\n<a href=\"https://lxyisme.github.io/\" target=\"_blank\">使用Vue2.0制作音乐播放器</a>\n","tags":["vue"]},{"title":"[vue] 移动端适配","url":"/2020/02/06//articles/2020/02/06/1580970908000.html/","content":"<a href=\"http://hjingren.cn/2017/06/16/%E5%9F%BA%E4%BA%8Evue-cli%E9%85%8D%E7%BD%AE%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94/\" target=\"_blank\">基于vue-cli配置移动端自适应</a>\n\n","tags":["vue"]},{"title":"[vue] 移动端框架","url":"/2020/02/06//articles/2020/02/06/1580970907000.html/","content":"<a href=\"https://www.jianshu.com/p/1e05c8d68407\" target=\"_blank\">vue移动端框架</a>\n","tags":["vue"]},{"title":"[vue] 效果","url":"/2020/02/06//articles/2020/02/06/1580970906000.html/","content":"<a href=\"https://www.jianshu.com/u/5294c349f0f1\" target=\"_blank\">誰在偷偷学Vue</a>\n","tags":["vue"]},{"title":"[vue] 图表","url":"/2020/02/06//articles/2020/02/06/1580970905000.html/","content":"<a href=\"https://v-charts.js.org/#/\" target=\"_blank\">v-charts</a>\n\n<a href=\"https://www.cnblogs.com/tuspring/p/9803349.html\" target=\"_blank\">vue-echarts</a>\n","tags":["vue"]},{"title":"[vue] 时钟","url":"/2020/02/06//articles/2020/02/06/1580970904000.html/","content":"<a href=\"https://www.cnblogs.com/JHCan333/p/11542607.html\" target=\"_blank\">一个基于vue的钟表demo</a>\n","tags":["vue"]},{"title":"[vue] webpack+vuex","url":"/2020/02/06//articles/2020/02/06/1580970903000.html/","content":"<a href=\"https://www.jianshu.com/p/237d49c7cf78\" target=\"_blank\">vue项目demo</a>\n\n<a href=\"https://github.com/BugMyGod/mxProject\" target=\"_blank\">github mxProject</a>\n\n<a href=\"https://blog.csdn.net/world_kun/article/details/99632463\" target=\"_blank\">vue-demo示例</a>\n<a href=\"https://github.com/lzxb/vue2-demo\" target=\"_blank\">从零构建vue2 + vue-router + vuex 开发环境到入门，实现基本的登录退出功能</a>\n\n<a href=\"https://www.cnblogs.com/SRH151219/p/10442022.html\" target=\"_blank\">vue----webpack模板----vuex使用流程</a>\n","tags":["vue"]},{"title":"[vue] Vue+ElementUI+Webpack+VueRouter","url":"/2020/02/06//articles/2020/02/06/1580970902000.html/","content":"<a href=\"https://blog.csdn.net/larger5/article/details/82026862\" target=\"_blank\">使用 Vue + ElementUI + Webpack + VueRouter 做后台管理、RESTful 交互</a>\n","tags":["vue"]},{"title":"[vue] MQTT","url":"/2020/02/06//articles/2020/02/06/1580970901000.html/","content":"<a href=\"https://blog.csdn.net/qq_32168087/article/details/88883936\" target=\"_blank\">VUE连接MQTT即时通讯</a>\nnpm安装\n```\nnpm install mqtt\n```\n\nmqtt服务器连接参数配置：\nutil/sysconstant.js\n```\nexport const MQTT_SERVICE = 'ws://172.80.5.222:8083/mqtt'\nexport const MQTT_USERNAME = 'admin'\nexport const MQTT_PASSWORD = 'admin123'\n```\n\n实现代码：\n```\n<template>\n    <div>\n        <div>测试数据:{{ msg }}</div>\n    </div>\n</template>\n\n<script>\nimport mqtt from 'mqtt'\nimport { MQTT_SERVICE, MQTT_USERNAME, MQTT_PASSWORD } from '../util/sysconstant.js'\nvar client\nconst options = {\n  connectTimeout: 40000,\n  clientId: 'mqtitId-Home',\n  username: MQTT_USERNAME,\n  password: MQTT_PASSWORD,\n  clean: true\n}\nclient = mqtt.connect(MQTT_SERVICE, options)\nexport default {\n  name: 'viewtest',\n  data () {\n    return {\n      msg: ''\n    }\n  },\n  created () {\n    this.mqttMSG()\n  },\n  methods: {\n    mqttMSG () {\n      // mqtt连接\n      client.on('connect', (e) => {\n        console.log('连接成功:')\n        client.subscribe('/World1234', { qos: 1 }, (error) => {\n          if (!error) {\n            console.log('订阅成功')\n          } else {\n            console.log('订阅失败')\n          }\n        })\n      })\n      // 接收消息处理\n      client.on('message', (topic, message) => {\n        console.log('收到来自', topic, '的消息', message.toString())\n        this.msg = message.toString()\n      })\n      // 断开发起重连\n      client.on('reconnect', (error) => {\n        console.log('正在重连:', error)\n      })\n      // 链接异常处理\n      client.on('error', (error) => {\n        console.log('连接失败:', error)\n      })\n    }\n  }\n}\n</script>\n```\n\n\n<a href=\"https://github.com/nik-zp/Vue-Mqtt-Example\" target=\"_blank\">Vue-Mqtt-Example</a>\n<a href=\"https://github.com/nik-zp/Vue-Mqtt\" target=\"_blank\">Vue-Mqtt</a>\n\n<a href=\"https://github.com/sky-xsk/vue-mqtt-mqttws31.js-\" target=\"_blank\">vue+mqtt（mqttws31.js） 简单实例</a>\n","tags":["vue"]},{"title":"[vue] layui做后台管理+RESTful交互","url":"/2020/02/06//articles/2020/02/06/1580970900000.html/","content":"<a href=\"https://blog.csdn.net/larger5/article/details/81943525\" target=\"_blank\">vue+layui</a>\n\n<a href=\"https://github.com/larger5/CRUD_Vue_LayUI.git\" target=\"_blank\">前端代码</a>\n<a href=\"https://github.com/larger5/springboot_Vue.git\" target=\"_blank\">后台代码</a>\n\n","tags":["vue"]},{"title":"[qt] Qt5编写MQTT客户端","url":"/2020/02/06//articles/2020/02/06/1580966729000.html/","content":"<a href=\"https://blog.csdn.net/qq_28877125/article/details/78357510\" target=\"_blank\">MQTT--Qt5编写MQTT-client客户端</a>\n\n<a href=\"https://www.cnblogs.com/yexiaopeng/p/8542894.html\" target=\"_blank\">Qt官方MQTT库的使用，附一个MqttClient例子</a>\n<a href=\"https://files-cdn.cnblogs.com/files/yexiaopeng/QMqttClientTool.zip\" target=\"_blank\">QMqttClientTool.zip</a>\n\n<a href=\"https://www.jianshu.com/p/fd70929661d5\" target=\"_blank\">Qt(三) - Windows下MQTT通信</a>\n<a href=\"https://github.com/mooncoder1997/Qt-Projects/tree/master/MQTT_Client\" target=\"_blank\">MQTT_Client</a>\n","tags":["qt"]},{"title":"[qt] error_cannot_find_-lc++","url":"/2020/02/06//articles/2020/02/06/1580966728000.html/","content":"QT 编译android工程报错 cannot find lc++\n\n<a href=\"https://blog.csdn.net/X_Nazgul/article/details/93525780\" target=\"_blank\">原因</a>\n```\nNDK R18 之后对 库的 LN链接名字进行了修改，而QT还没有做相应的改动，导致了找不到对应的库，R17版本是可以的，所以修改库的名称即可 都是指向 libc++_shared.so 的\n```\n\n<a href=\"https://blog.csdn.net/chenjk10/article/details/99056917\" target=\"_blank\">办法参考</a>\n第一种：\n```\n在 .pro 中添加\nQMAKE_LINK += -nostdlib++\n```\n\n第二种：修改Qt\\Qt5.13.0\\5.13.0\\android_armv7\\mkspecs\\android-clang\\qmake.conf\n```\nQMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libatomic.a\n#修改为\nQMAKE_LINK    = $$QMAKE_CXX $$QMAKE_CFLAGS -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libatomic.a -nostdlib\n```\n","tags":["qt"]},{"title":"[qt] android获取Wifi列表","url":"/2020/02/06//articles/2020/02/06/1580966727000.html/","content":"<a href=\"https://www.cnblogs.com/hbrw/p/7058939.html\" target=\"_blank\">Qt for android 获取 Wifi 列表</a>\n","tags":["qt"]},{"title":"[android_tv] 遥控器","url":"/2020/02/06//articles/2020/02/06/1580966726000.html/","content":"<a href=\"https://blog.csdn.net/u013347784/article/details/78329221\" target=\"_blank\">Android机顶盒 adb命令模拟遥控器操作</a>\n```\nadb shell input keyevent 数字\n\n每个数字与keycode对应表如下：\n\n0 -->  \"KEYCODE_UNKNOWN\"\n1 -->  \"KEYCODE_MENU\"\n2 -->  \"KEYCODE_SOFT_RIGHT\"\n3 -->  \"KEYCODE_HOME\"\n4 -->  \"KEYCODE_BACK\"\n5 -->  \"KEYCODE_CALL\"\n6 -->  \"KEYCODE_ENDCALL\"\n7 -->  \"KEYCODE_0\"\n8 -->  \"KEYCODE_1\"\n9 -->  \"KEYCODE_2\"\n10 -->  \"KEYCODE_3\"\n11 -->  \"KEYCODE_4\"\n12 -->  \"KEYCODE_5\"\n13 -->  \"KEYCODE_6\"\n14 -->  \"KEYCODE_7\"\n15 -->  \"KEYCODE_8\"\n16 -->  \"KEYCODE_9\"\n17 -->  \"KEYCODE_STAR\"\n18 -->  \"KEYCODE_POUND\"\n19 -->  \"KEYCODE_DPAD_UP\"\n20 -->  \"KEYCODE_DPAD_DOWN\"\n21 -->  \"KEYCODE_DPAD_LEFT\"\n22 -->  \"KEYCODE_DPAD_RIGHT\"\n23 -->  \"KEYCODE_DPAD_CENTER\"\n24 -->  \"KEYCODE_VOLUME_UP\"\n25 -->  \"KEYCODE_VOLUME_DOWN\"\n26 -->  \"KEYCODE_POWER\"\n27 -->  \"KEYCODE_CAMERA\"\n28 -->  \"KEYCODE_CLEAR\"\n29 -->  \"KEYCODE_A\"\n30 -->  \"KEYCODE_B\"\n31 -->  \"KEYCODE_C\"\n32 -->  \"KEYCODE_D\"\n33 -->  \"KEYCODE_E\"\n34 -->  \"KEYCODE_F\"\n35 -->  \"KEYCODE_G\"\n36 -->  \"KEYCODE_H\"\n37 -->  \"KEYCODE_I\"\n38 -->  \"KEYCODE_J\"\n39 -->  \"KEYCODE_K\"\n40 -->  \"KEYCODE_L\"\n41 -->  \"KEYCODE_M\"\n42 -->  \"KEYCODE_N\"\n43 -->  \"KEYCODE_O\"\n44 -->  \"KEYCODE_P\"\n45 -->  \"KEYCODE_Q\"\n46 -->  \"KEYCODE_R\"\n47 -->  \"KEYCODE_S\"\n48 -->  \"KEYCODE_T\"\n49 -->  \"KEYCODE_U\"\n50 -->  \"KEYCODE_V\"\n51 -->  \"KEYCODE_W\"\n52 -->  \"KEYCODE_X\"\n53 -->  \"KEYCODE_Y\"\n54 -->  \"KEYCODE_Z\"\n55 -->  \"KEYCODE_COMMA\"\n56 -->  \"KEYCODE_PERIOD\"\n57 -->  \"KEYCODE_ALT_LEFT\"\n58 -->  \"KEYCODE_ALT_RIGHT\"\n59 -->  \"KEYCODE_SHIFT_LEFT\"\n60 -->  \"KEYCODE_SHIFT_RIGHT\"\n61 -->  \"KEYCODE_TAB\"\n62 -->  \"KEYCODE_SPACE\"\n63 -->  \"KEYCODE_SYM\"\n64 -->  \"KEYCODE_EXPLORER\"\n65 -->  \"KEYCODE_ENVELOPE\"\n66 -->  \"KEYCODE_ENTER\"\n67 -->  \"KEYCODE_DEL\"\n68 -->  \"KEYCODE_GRAVE\"\n69 -->  \"KEYCODE_MINUS\"\n70 -->  \"KEYCODE_EQUALS\"\n71 -->  \"KEYCODE_LEFT_BRACKET\"\n72 -->  \"KEYCODE_RIGHT_BRACKET\"\n73 -->  \"KEYCODE_BACKSLASH\"\n74 -->  \"KEYCODE_SEMICOLON\"\n75 -->  \"KEYCODE_APOSTROPHE\"\n76 -->  \"KEYCODE_SLASH\"\n77 -->  \"KEYCODE_AT\"\n78 -->  \"KEYCODE_NUM\"\n79 -->  \"KEYCODE_HEADSETHOOK\"\n80 -->  \"KEYCODE_FOCUS\"\n81 -->  \"KEYCODE_PLUS\"\n82 -->  \"KEYCODE_MENU\"\n83 -->  \"KEYCODE_NOTIFICATION\"\n84 -->  \"KEYCODE_SEARCH\"\n85 -->  \"TAG_LAST_KEYCODE\"\n```\n\n\n<a href=\"https://github.com/Tamicer/MouseView_TV\" target=\"_blank\">MouseView_TV</a>","tags":["android_tv"]},{"title":"[android_tv] 播放器","url":"/2020/02/06//articles/2020/02/06/1580966725000.html/","content":"<a href=\"https://www.jianshu.com/p/2de8b3841b29\" target=\"_blank\">[译]简介--Android TV 应用开发教程一</a>\n<a href=\"https://github.com/corochann/AndroidTVappTutorial\" target=\"_blank\">AndroidTVappTutorial</a>\n\n<a href=\"https://www.jianshu.com/c/3f0ab61a1322\" target=\"_blank\">简书 - Android TV</a>\n\n\n<a href=\"https://github.com/hejunlin2013/TVSample\" target=\"_blank\">TVSample</a>\n\n\n<a href=\"https://blog.csdn.net/hejjunlin/article/details/52792562\" target=\"_blank\">Android TV开发总结（一）构建一个TV app前要知道的事儿</a>\n\n<a href=\"https://blog.csdn.net/hejjunlin/article/details/52854131\" target=\"_blank\">Android TV开发总结（四）通过RecycleView构建一个TV app列表页（仿腾讯视频TV版）</a>\n\n","tags":["android_tv"]},{"title":"[android_tv] tv投屏","url":"/2020/02/06//articles/2020/02/06/1580966724000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=android+%E6%8A%95%E5%B1%8F&ref=simplesearch\" target=\"_blank\">android 投屏</a>\n\n<a href=\"https://github.com/zaneCC/AndroidUPnPDemo\" target=\"_blank\">AndroidUPnPDemo</a>\n```\n发现设备\n\n发现设备\n发现设备监听\n操作功能：\n\n播放\n暂停\n停止\n进度拖拽\n音量调节\n设置静音\n```\n\n<a href=\"https://github.com/jijiangrui/AndroidDLNA\" target=\"_blank\">AndroidDLNA</a>\n\n<a href=\"https://github.com/TMLAndroid/MiniCapAndMiniTouch\" target=\"_blank\">MiniCapAndMiniTouch</a>\n","tags":["android_tv"]},{"title":"[android] pc投屏","url":"/2020/02/06//articles/2020/02/06/1580966723000.html/","content":"<a href=\"https://github.com/deepsadness/MediaProjectionDemo/blob/master/blog/article_imagereader_socket.md\" target=\"_blank\">Android PC投屏简单尝试</a>\n<a href=\"https://github.com/deepsadness/MediaProjectionDemo\" target=\"_blank\">MediaProjectionDemo</a>\n","tags":["android"]},{"title":"[qt] sqlite","url":"/2020/02/06//articles/2020/02/06/1580966722000.html/","content":"<a href=\"https://blog.csdn.net/weixin_41656968/article/details/80473137\" target=\"_blank\">QT5中使用SQLite</a>\n\n<a href=\"https://blog.csdn.net/lms1008611/article/details/81271712\" target=\"_blank\">QT读写Sqlite数据库的三种方式</a>\n\n<a href=\"https://github.com/katecpp/sql_with_qt\" target=\"_blank\">SQLite with Qt Application</a>\n\n<a href=\"https://github.com/LonelySilen/QSQLite/blob/master/sqlite.cpp\" target=\"_blank\">sqlite封装</a>\n","tags":["qt"]},{"title":"[arm] qt+mqtt","url":"/2020/01/17//articles/2020/01/17/1579261847000.html/","content":"<a href=\"https://github.com/yexiaopeng/QEmbeddedMqttTest\" target=\"_blank\">在Qt中使用嵌入式Mqtt</a>\n","tags":["arm"]},{"title":"[docker] svn服务","url":"/2020/01/16//articles/2020/01/16/1579179637000.html/","content":"<a href=\"https://www.jianshu.com/p/a25fac7e7811\" target=\"_blank\">docker安装svn</a>\n\n1、docker创建svn容器\n```\ndocker search svn\ndocker pull docker.io/garethflowers/svn-server\ndocker run --name svn-server -p 3690:3690 --privileged=true -e SVN_REPONAME=repository -d docker.io/garethflowers/svn-server\n```\n\n2、进入容器容器进行配置\n```\n##进入容器内部\ndocker exec -it svn-server /bin/sh  \n## 创建仓库  创建了一个为repository 的仓库\nsvnadmin create /var/opt/svn/repository\n##进入仓库配置文件路径\ncd /var/opt/svn/repository/conf\n```\n\n3、vi svnserve.conf\n```\nanon-access = read\nauth-access = write\n\npassword-db = passwd\n\nauth-db = authz\n```\n\n4、vi passwd\n```\n[users]\nuser1=123\nuser2=123\n```\n\n5、vi authz\n```\n[aliases]\n\n[groups]\nadmin = user1,user2\n\n[repository:/]\n@admin=rw\n\n```\n\n6、重启docker的svn服务\n```\ndocker restart svn-server\n```\n\n7、访问\n```\ndocker-machine ip\n\nurl为：\nsvn://ip地址/repository\n\n用户为\nuser1\n\n密码为\n123\n```","tags":["docker"]},{"title":"[ubuntu] 安装glib","url":"/2020/01/16//articles/2020/01/16/1579177562000.html/","content":"<a href=\"https://www.cnblogs.com/pcat/p/5520317.html\" target=\"_blank\">glib源码安装使用方法</a>\n\n```\nsudo apt-get install -y autoconf libglib2.0-dev zlib1g-dev build-essential\n```\n\n1、<a href=\"https://sourceforge.net/projects/pcre/files/pcre/\" target=\"_blank\">pcre</a>\n<a href=\"https://nchc.dl.sourceforge.net/project/pcre/pcre/8.41/pcre-8.41.tar.gz\" target=\"_blank\">pcre-8.41.tar.gz</a>\n```\n./configure --enable-utf8 --enable-unicode-properties\nmake\nmake install\npcretest -C\n\nln -s /usr/local/lib/libpcre.so.1 /lib\nln -s /usr/local/lib/libpcreposix.so.0 /lib\n```\n\n2、<a href=\"https://pkg-config.freedesktop.org/releases/\" target=\"_blank\">pkg-config</a>\n<a href=\"https://pkg-config.freedesktop.org/releases/pkg-config-0.29.1.tar.gz\" target=\"_blank\">pkg-config-0.29.1.tar.gz</a>\n```\n./configure --with-internal-glib\nmake\nmake install\n```\n\n3、<a href=\"http://sourceware.org/libffi/\" target=\"_blank\">libffi</a>\n<a href=\"ftp://sourceware.org/pub/libffi/libffi-3.0.11.tar.gz\" target=\"_blank\">libffi-3.0.11.tar.gz</a>\n```\n./configure\nmake\nmake install\n```\n\n4、<a href=\"http://www.zlib.net\" target=\"_blank\">zlib</a>\n<a href=\"http://www.zlib.net/zlib-1.2.11.tar.gz\" target=\"_blank\">zlib-1.2.11.tar.gz</a>\n```\n./configure\nmake\nmake install\n```\n\n5、<a href=\"http://ftp.acc.umu.se/pub/GNOME/sources/glib/\" target=\"_blank\">glib</a>\n<a href=\"http://ftp.acc.umu.se/pub/GNOME/sources/glib/2.48/glib-2.48.1.tar.xz\" target=\"_blank\">glib-2.48.1.tar.xz</a>\n```\n./configure\nmake\nmake install\n```\n\n","tags":["ubuntu"]},{"title":"[qt] 工具类封装+飞扬青云","url":"/2020/01/16//articles/2020/01/16/1579177561000.html/","content":"<a href=\"https://gitee.com/feiyangqingyun\" target=\"_blank\">飞扬青云</a>\n\n<a href=\"https://blog.csdn.net/GoForwardToStep/article/details/52704464\" target=\"_blank\">Qt 之 HTTP 请求下载（支持断点续传）</a>\n<a href=\"https://gitee.com/feiyangqingyun/QWidgetDemo/blob/master/nettool/main.cpp\" target=\"_blank\">nettool/main.cpp</a>\n<a href=\"https://github.com/elumalai-git/QT_Samples/tree/master/SingleDownloadManager\" target=\"_blank\">downloadmanager.cpp</a>\n\n<a href=\"https://www.cnblogs.com/xupeidong/p/9506739.html\" target=\"_blank\">http get、post方法+调用</a>\n\n<a href=\"https://www.cnblogs.com/feiyangqingyun/p/6985569.html\" target=\"_blank\">Qt 数据库封装</a>\n\n<a href=\"https://www.cnblogs.com/xupeidong/p/9401519.html\" target=\"_blank\">QT使用websocket进行长连接</a>\n\n\n<a href=\"https://gitee.com/goodlucky2019/QT\" target=\"_blank\">QT 串口调试小助手+动态折线统计图</a>\n<a href=\"https://github.com/ninehills/serialtool\" target=\"_blank\">Qt 串口</a>\n<a href=\"https://gitee.com/feiyangqingyun/QWidgetDemo/blob/master/comtool/main.cpp\" target=\"_blank\">Qt 串口调试助手</a>\n\n\n<a href=\"https://blog.csdn.net/king16304/article/details/52275447\" target=\"_blank\">CAN总线开发实例</a>\n<a href=\"https://blog.csdn.net/z609932088/article/details/84061467\" target=\"_blank\">Qt can数据传输</a>\n<details>\n<summary>Get_CAN_Data</summary>\n\n```\nclass Get_CAN_Data : public QThread\n{\n    Q_OBJECT\n\npublic:\n    bool run_state = true;\n    virtual void run();\n    void close_Device();\n    void init(DWORD EQU_Type,DWORD EQU_Index,DWORD EQU_Number);\nsignals:\n    void signal_CanData(QString ThreadID,QString ID,QString TimeStamp,QString TimeFlag,QString SendType,QString RemoteFlag,\n                        QString ExternFlag,QString DataLen,QString Data,QString Reserved);\n    void signal_Error(int error);\nprivate:\n    DWORD EQU_Type;              //设备类型\n    DWORD EQU_Index;             //设备索引\n    DWORD EQU_Number;            //设备通道\n};\n```\n</details>\n\n<details>\n<summary>Get_CAN_Data::run()</summary>\n\n```\n/*\n * 获取CAN数据\n */\nvoid Get_CAN_Data::run()\n{\n    static VCI_INIT_CONFIG init_config;\n    init_config.AccCode = 0x00000000;\n    init_config.AccMask = 0xffffffff;\n    init_config.Filter = 0;\n    init_config.Timing0 = 0x00;\n    init_config.Timing1 = 0x1c;\n    init_config.Mode = 0;\n    if(VCI_InitCAN(EQU_Type,EQU_Index,EQU_Number,&init_config) == STATUS_OK)\n    {\n        if(VCI_StartCAN(EQU_Type,EQU_Index,EQU_Number) == STATUS_OK)\n        {\n            qDebug() << \"打开设备\" << EQU_Type << EQU_Index<<EQU_Number;\n \n            static VCI_CAN_OBJ frameinfo;\n            static VCI_ERR_INFO errinfo;\n            static int len=1;\n            while (1)\n            {\n                msleep(25);\n                if(run_state)\n                {\n \n                    len=VCI_Receive(EQU_Type,EQU_Index,EQU_Number,&frameinfo,50,200);\n                    if(len<=0)\n                    {\n                        //注意：如果没有读到数据则必须调用此函数来读取出当前的错误码，\n                        //千万不能省略这一步（即使你可能不想知道错误码是什么）\n                        VCI_ReadErrInfo(EQU_Type,EQU_Index,EQU_Number,&errinfo);\n                        //qDebug()<<\"接收失败\";\n                    }\n                    else\n                    {\n                        QString CID;\n                        if(frameinfo.ID < 16)\n                        {\n                            CID = \"0\"+QString::number(frameinfo.ID,16).toUpper();\n                        }\n                        else\n                        {\n                            CID = QString::number(frameinfo.ID,16).toUpper();\n                        }\n                        QString CTimeStamp;\n                        if(frameinfo.TimeStamp < 16)\n                        {\n                            CTimeStamp = \"0\"+QString::number(frameinfo.TimeStamp,16).toUpper();\n                        }\n                        else\n                        {\n                            CTimeStamp = QString::number(frameinfo.TimeStamp,16).toUpper();\n                        }\n                        QString CTimeFlag= \"0\"+QString::number(frameinfo.TimeFlag,16).toUpper();\n                        QString CSendType= \"0\"+QString::number(frameinfo.SendType,16).toUpper();\n                        QString CRemoteFlag= \"0\"+QString::number(frameinfo.RemoteFlag,16).toUpper();\n                        QString CExternFlag= \"0\"+QString::number(frameinfo.ExternFlag,16).toUpper();\n                        QString CDataLen= \"0\"+QString::number(frameinfo.DataLen,16).toUpper();\n \n                        QString CData;\n                        for(int i = 0;i<frameinfo.DataLen;i++)\n                        {\n                            if(frameinfo.Data[i] <16)\n                            {\n                                CData += \"0\";\n                            }\n                            CData += QString::number(frameinfo.Data[i],16).toUpper()+\" \";\n                        }\n                        QString CReserved;\n                        for(int j = 0;j<3;j++)\n                        {\n                            if(frameinfo.Reserved[j] <16)\n                            {\n                                CData += \"0\";\n                            }\n                            CReserved += QString::number(frameinfo.Reserved[j],16).toUpper()+\" \";\n                        }\n                        emit signal_CanData(QString::number(EQU_Number,16),CID,CTimeStamp,CTimeFlag,CSendType,CRemoteFlag,\n                                            CExternFlag,CDataLen,CData,CReserved);\n                    }\n                }\n                else\n                {\n                    break;\n                }\n            }\n \n            emit signal_Error(2);\n        }\n    }\n    else\n    {\n        emit signal_Error(1);\n    }\n}\n\n/*\n * 关闭CAN设备\n */\nvoid Get_CAN_Data::close_Device()\n{\n    run_state = ! run_state;\n}\n \n/*\n * 初始化CAN设备\n */\nvoid Get_CAN_Data::init(DWORD EQU_Type, DWORD EQU_Index, DWORD EQU_Number)\n{\n    run_state = true;\n    this->EQU_Type = EQU_Type;\n    this->EQU_Index = EQU_Index;\n    this->EQU_Number = EQU_Number;\n}\n```\n</details>\n\n<a href=\"https://github.com/jiangyerui/PowerMonitor-Tcp.git\" target=\"_blank\">消防设备电源主机程序-加UDP通信</a>\n```\nCanMoudle\nDevInfo\nGlobalData\nGpioChip\nGpioControl\nHostInfo\nImage\nImframe\nKeyboard\nManager\nMoudle\nMyPrint\nMySqlite\nRecord\nScreenSaver\nSelfCheck\nSystemSet\nTcpServer\nUserLogin\nmylabel\nwatchdog\n\n```\n","tags":["qt"]},{"title":"[路由器] 桥接配置","url":"/2020/01/16//articles/2020/01/16/1579174015000.html/","content":"<a href=\"https://jingyan.baidu.com/article/066074d6ff30eec3c21cb0ef.html\" target=\"_blank\">路由桥接配置</a>\n\n","tags":["路由器"]},{"title":"[docker] network基础","url":"/2020/01/16//articles/2020/01/16/1579174014000.html/","content":"\n<a href=\"https://www.cnblogs.com/jsonhc/p/7823286.html\" target=\"_blank\">docker network基础</a>\n```\n通过容器间的选项--link指定容器名称进行不同容器间的通信（--link container_name或者将container_name取一个别名）\n\n现在使用另外一种方式替代--link来达到容器间的通信：docker network\n```\n\n查看local的网络信息：\n```\ndocker network ls\n\n#创建一个网络名为mynetwork且driver为bridge的网络，默认为bridge\n\ndocker network create --driver bridge --subnet 172.60.0.0/16 mynetwork\ndocker network rm mynetwork\ndocker network inspect mynetwork\n```\n","tags":["docker"]},{"title":"[arm] itop6818使用fastboot烧写+程序运行","url":"/2020/01/16//articles/2020/01/16/1579174013000.html/","content":"\n确保通过RS232已经进入fastboot模式，接上OTG线（即usb线）\n```\n拨码开关\n1、3 on\n2 off\n```\n\n<details>\n<summary>烧写android</summary>\n\n```\nfastboot.exe flash uboot u-boot-iTOP-6818.bin\nfastboot.exe flash boot boot.img\nfastboot.exe flash cache cache.img\nfastboot.exe flash system system.img\nfastboot.exe flash userdata userdata.img\nfastboot.exe flash recovery recovery.img\nfastboot reboot\n\nsetenv bootsystem android\nsetenv lcdtype 4.3\nsaveenv\nreset\n\nadb devices\nadb push <deviceId> helloworld /data\n```\n</details>\n\n<details>\n<summary>烧写qt</summary>\n\n```\nfastboot.exe flash uboot u-boot-iTOP-6818.bin\nfastboot.exe flash boot boot.img\nfastboot.exe flash system system.img\nfastboot reboot\n\nsetenv bootsystem qt\nsetenv lcdtype 4.3\nsaveenv\nreset\n```\n</details>\n\n【注意】烧写 Uboot 到 TF 卡，TF卡文件格式一定要是FAT32\n```\n#查看盘符\ndf -l\n```\n\n<details>\n<summary>TF 卡烧写 Android</summary>\n\n一、烧写 Uboot 到 TF 卡\n```\n#查看盘符\ndf -l\n\n#如果没有 uboot 镜像则拷贝“光盘目录\\03 镜像_Android5.1文件系统\\u-boot-iTOP-6818.bin”到这个目录下\nls lollipop-5.1.1_r6/result/\nmkuboot u-boot-iTOP-6818.bin\n\n./mkuboot /dev/sdx\n```\n\n二、拨码开关设置为 TF 卡启动\n```\n将 TF 卡接入开发板，将拨码开关设置为 TF 卡启动，进入 uboot 模式\n```\n\n三、\n```\nTF 卡中建立目录“sdupdate”，sdupdate中放置boot.img、cache.img、system.img、u-boot-iTOP-6818.bin、userdata.img\n#一次性烧写\nsdfuse flashall\n\n#分别烧写\n#单独烧写 uboot 镜像\nsdfuse flash uboot u-boot-iTOP-6818.bin\n#单独烧写内核镜像\nsdfuse flash boot boot.img\n#单独烧写 Android 文件系统镜像\nsdfuse flash cache cache.img\nsdfuse flash system system.img\nsdfuse flash userdata userdata.img\n\nsetenv bootsystem android\nsetenv lcdtype 4.3\n#设置参数和命令\nsaveenv\n\n```\n\n四、设置拨码开关为 emmc 启动，取下 tf 卡\n```\nreset\n```\n</details>\n\n<details>\n<summary>TF 卡烧写 Qt</summary>\n\n```\nTF 卡中建立目录“sdupdate”，sdupdate中放置boot.img、system.img、u-boot-iTOP-6818.bin\n#一次性烧写\nsdfuse flashall\n\n#分别烧写----\n#单独烧写 uboot 镜像\nsdfuse flash uboot u-boot-iTOP-6818.bin\n#单独烧写内核镜像\nsdfuse flash boot boot.img\n#单独烧写 Android 文件系统镜像\nsdfuse flash system system.img\n\nsetenv bootsystem qt\nsetenv lcdtype 4.3\n#设置参数和命令\nsaveenv\n#设置拨码开关为 emmc 启动，取下 tf 卡\nreset\n```\n</details>\n\n<details>\n<summary>查看设备与执行程序</summary>\n\n```\nls /dev/u*\nls /dev/mm*\n\nmkdir /mnt/udisk\nmount /dev/udisk /mnt/udisk/\nls /mnt/udisk/\nchmod 777 helloworld\nhelloworld -qws\n```\n</details>","tags":["arm"]},{"title":"[arm] itop6818烧写ubuntu12+上网","url":"/2020/01/16//articles/2020/01/16/1579174011000.html/","content":"\n文件清单\n<a href=\"http://www.diskgenius.cn/\" target=\"_blank\">DiskGenius</a>将TF卡转成FAT32格式\n<a href=\"http://www.pc0359.cn/downinfo/52244.html\" target=\"_blank\">ATTO Disk Benchmark 32位/64位(硬盘速度测试软件)</a>\n```\niTOP6818 开发板资料汇总（不含光盘内容）\\05_iTOP-6818开发板Ubuntu系统\\01_Ubuntu 镜像\\iTOP4412_ubuntu_12.04_for_LCD_20141230.tar.gz\n\niTOP6818 开发板资料汇总（不含光盘内容）\\05_iTOP-4418 开发板Ubuntu系统\\02_Ubuntu12.04系统升级目录\\iTOP_6818_ubuntu_20180320.tgz\n\niTOP-6818 光盘资料\\05 镜像_QT文件系统\\u-boot-iTOP-6818.bin\niTOP-6818 光盘资料\\05 镜像_QT文件系统\\boot.img\n```\n\n<a href=\"https://pan.baidu.com/s/12V6yl21PeEdhKNiYFHKRnw\" target=\"_blank\">文件资料</a> 提取码：8n1e\n\n将 TF 卡接入 PC 机，打开硬盘速度测试软件软件，设置一下参数：\n```\n“驱动器”选择接入 PC 的 TF 卡”\n“数据包大小”选择\n“1024->1024”\n“总长度”选择“32mb”\n单击按钮“开始”测试，结束后，会显示 TF 卡的测试结果\n若显示写入速度不够 5MB/秒，不能用于烧写 Ubuntu\n```\n\nTF卡分区\n```\n#先在 TF 卡接入虚拟机Ubuntu 之前查看盘符\ndf -l\n\n\nTF 卡分三个区\n1、指定分区前面的自由空间大小为 32M\n2、新区大小为 2048M，“Linux Ext3”格式\n3、新区设置为 FAT32 格式\n```\n\n查看盘符\n```\ndf -l\n```\n\n解压到TF卡2G的盘符\n```\ncd /media/NEW\\ VOLUME_/\nrm -rf *\nls -a\n#ubuntu 解压到 2G 的盘符\nsudo tar zxvf iTOP_6818_ubuntu_20180320.tgz -C /media/NEW\\ VOLUME_/\n\n#ubuntu压缩包放到 fat32 的盘符\niTOP_6818_ubuntu_20180320.tgz\n```\n\nfastboot目录下放置镜像\n```\n#烧写 uboot 和 kernel 镜像\niTOP-6818 光盘资料\\05 镜像_QT 文件系统\\2G\\u-boot-iTOP-6818.bin\niTOP-6818 光盘资料\\05 镜像_QT 文件系统\\2G\\boot.img\n```\n\n\n（在终端助手执行）将 TF 卡接到开发板上，开发板烧写QT镜像文件\n```\nfastboot\n```\n\n接上OTG\n```\nfastboot flash uboot u-boot-iTOP-6818.bin\nfastboot flash boot boot.img\nfastboot reboot\n```\n\n设置 TF 启动\n```\nsetenv bootsystem ubuntu_tf\nsaveenv\nreset\n```\n\n（在终端助手执行）查看盘符\n```\ndf -l\n#ls /dev/sd*\nls /dev/mmcblk1p*\n```\n\n\n将 Ubuntu 压缩包拷贝到 emmc 中\n```\n#emmc位置\ncd /media/57f8f4bc-abf4-655f-bf67-946fc0f9f25b_/\nrm -rf *\nls\ntar vxf /media/NEW\\ VOLUME/iTOP_6818_ubuntu_20180320.tgz -C ./\n\n#解压完成之后，开发板断电，拔掉 TF 卡（注意一定要拔掉 TF 卡），然后启动开发板，进入 uboot 模式\n```\n\n（在终端助手执行）设置emmc启动\n```\nsetenv bootsystem ubuntu_emmc\nsaveenv\nreset\n```\n\n\n<a href=\"https://blog.csdn.net/wf19930209/article/details/73195055\" target=\"_blank\">virtualbox的USB识别</a>\n```\nvboxmanage -v\n6.0.10r132072\n```\n\n<a href=\"https://bbs.21ic.com/icview-1630956-1-3.html\" target=\"_blank\">学习4412开发板烧写Ubuntu系统</a>\n<a href=\"https://blog.csdn.net/liboxiu/article/details/81772391\" target=\"_blank\">迅为itop4412烧写ubuntu，脱离tf卡启动</a>\n\n关键文件\n```\n/usr/bin/6620_launcher\ninsmod /lib/modules/mt6620/mtk_hif_sdio.ko\ninsmod /lib/modules/mt6620/mtk_stp_wmt.ko\ninsmod /lib/modules/mt6620/mtk_stp_uart.ko\ninsmod /lib/modules/mt6620/mtk_stp_gps.ko\n#insmod /lib/modules/mt6620/hci_stp.ko\n#insmod /lib/modules/mt6620/mt6620_fm_drv.ko\n#insmod /lib/modules/mt6620/mtk_fm_priv.ko\ninsmod /lib/modules/mt6620/mtk_wmt_wifi.ko WIFI_major=194\ninsmod /lib/modules/mt6620/wlan_mt6620.ko\nwpa_supplicant\n```\n\n<details>\n<summary>/etc/init.d/mt6620</summary>\n\n```sh\n#!/bin/sh\n#support MT6620 WIFI Module\nmknod /dev/stpwmt c 190 0\nmknod /dev/stpgps c 191 0\nmknod /dev/fm c 193 0\nmknod /dev/wmtWifi c 194 0\n\ninsmod /lib/modules/mt6620/mtk_hif_sdio.ko\ninsmod /lib/modules/mt6620/mtk_stp_wmt.ko\ninsmod /lib/modules/mt6620/mtk_stp_uart.ko\ninsmod /lib/modules/mt6620/mtk_stp_gps.ko\n#insmod /lib/modules/mt6620/hci_stp.ko\n#insmod /lib/modules/mt6620/mt6620_fm_drv.ko\n#insmod /lib/modules/mt6620/mtk_fm_priv.ko\ninsmod /lib/modules/mt6620/mtk_wmt_wifi.ko WIFI_major=194\ninsmod /lib/modules/mt6620/wlan_mt6620.ko\n\nchmod 0666 /dev/stpwmt\nchmod 0666 /dev/stpgps\nchmod 0666 /dev/fm\nchmod 0666 /dev/wmtWifi\nchmod 0660 /dev/ttySAC2\nchmod 0666 /dev/gps\n\n/usr/bin/6620_launcher -m 1 -b 921600 -n /etc/firmware/mt6620_patch_hdr.bin -d /dev/ttySAC2 &\n\nsleep 4\n\necho 1 > /dev/wmtWifi\n\nifconfig eth0 down\n\nsleep 2\n\nwpa_supplicant -iwlan0 -Dnl80211 -c/etc/wpa_supplicant.conf -dd >/var/wifi_log &\n\nsleep 15\nudhcpc -i wlan0 >/var/udhcpc_log &\n```\n</details>\n\n<details>\n<summary>setwifi_6818.sh</summary>\n\n```sh\n#!/bin/bash\nmknod /dev/stpwmt c 190 0\nmknod /dev/stpgps c 191 0\nmknod /dev/fm c 193 0\nmknod /dev/wmtWifi c 194 0\n\ninsmod /system/lib/modules/mtk_hif_sdio.ko\ninsmod /system/lib/modules/mtk_stp_wmt.ko\ninsmod /system/lib/modules/mtk_stp_uart.ko\ninsmod /system/lib/modules/mtk_stp_gps.ko\n\ninsmod /system/lib/modules/mtk_wmt_wifi.ko WIFI_major=194\ninsmod /system/lib/modules/wlan_mt6620.ko\n\nchmod 0666 /dev/stpwmt\nchmod 0666 /dev/stpgps\nchmod 0666 /dev/fm\nchmod 0666 /dev/wmtWifi\nchmod 0660 /dev/ttySAC2\nchmod 0666 /dev/gps\n\n/system/bin/6620_launcher -m 1 -b 921600 -n /system/etc/firmware/mt6620_patch_hdr.bin -d /dev/ttySAC2 &\n\nsleep 3\noput=`echo 1 > /dev/wmtWifi`\nwpa_supplicant -iwlan0 -Dnl80211 -c/etc/wpa_supplicant.conf  &\npid=$!\nsleep 2\n\nkill $pid\nwpa_supplicant  -i wlan0 -Dwext -c /etc/wpa_supplicant.conf &\ndhclient wlan0 &\n```\n</details>\n\n<details>\n<summary>pppd_conf.sh</summary>\n\n```sh\n#!/bin/sh\npwd\ncd `dirname $0` || exit 0\npwd\npppd call wcdma  | tee  /usr/ppp.log &\nsleep 4\nvgw=`tail /usr/ppp.log |   grep  'remote IP address' | grep -m 1 -o '\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}'`\nvnamenserver=`tail /usr/ppp.log |  grep  primary | grep -m 1 -o '\\([0-9]\\{1,3\\}\\.\\)\\{3\\}[0-9]\\{1,3\\}'`\necho $vgw\necho $vnamenserver\necho \"nameserver $vnamenserver\" > /etc/resolv.conf\nroute add default gw $vgw\n```\n</details>\n\n<details>\n<summary>wifi_instart.sh</summary>\n\n```\n#!/bin/bash\nyellow() {\n    echo  \"\\033[33m $1 \\033[0m\"\n}\n\necho\nyellow 'setting up wlan_mt6620...'\ncat << ED > /etc/init.d/itop-set\n#!/bin/bash\n\n\n  #turn on 4.3 inch screen\n  echo 60 > /sys/class/gpio/export\n  echo out > /sys/class/gpio/gpio60/direction\n  echo 1 > /sys/class/gpio/gpio60/value\n\n  #Configure audio route as :-\n  amixer cset numid=7 127\n  amixer cset numid=8 1\n  amixer cset numid=40 1\n  amixer cset numid=45 1\n\n  #chown root:tty /dev/ttySAC*\n  #chmod 777 /dev/ttySAC*\n\n  echo 0 > /proc/sys/kernel/hung_task_timeout_secs\n\n#################################################################################################################\n######################### support MT6620 WIFI Module ########################\n#!/bin/sh\n  mknod /dev/stpwmt c 190 0\n  mknod /dev/stpgps c 191 0\n  mknod /dev/fm c 193 0\n  mknod /dev/wmtWifi c 194 0\n\n  insmod /system/lib/modules/mtk_hif_sdio.ko\n  insmod /system/lib/modules/mtk_stp_wmt.ko\n  insmod /system/lib/modules/mtk_stp_uart.ko\n  insmod /system/lib/modules/mtk_stp_gps.ko\n\n  insmod /system/lib/modules/mtk_wmt_wifi.ko WIFI_major=194\n  insmod /system/lib/modules/wlan_mt6620.ko\n\n  chmod 0666 /dev/stpwmt\n  chmod 0666 /dev/stpgps\n  chmod 0666 /dev/fm\n  chmod 0666 /dev/wmtWifi\n  chmod 0660 /dev/ttySAC2\n  chmod 0666 /dev/gps\n\n  /system/bin/6620_launcher -m 1 -b 921600 -n /system/etc/firmware/mt6620_patch_hdr.bin -d /dev/ttySAC2 &\n\n  sleep 3\n  oput=\\`echo 1 > /dev/wmtWifi\\`\n  wpa_supplicant -iwlan0 -Dnl80211 -c/etc/wpa_supplicant.conf  &\n  pid=$!\n  sleep 2\n\n  kill $pid\n  wpa_supplicant  -i wlan0 -Dwext -c /etc/wpa_supplicant.conf &\n  dhclient wlan0 &\n\n\n######################## end support ########################\n\n#################################################################################################################\n######################## support ath6kl wifi module ########################\n\n#   insmod /lib/firmware/ath6k/AR6003/hw2.1.1/cfg80211.ko\n#   insmod /lib/firmware/ath6k/AR6003/hw2.1.1/ath6kl_sdio.ko\n\n#   sleep 1\n############################ endf support ############################\n\nED\necho\nyellow 'done'\necho\necho ' use \"wpa_passphrase ssid [passphrase] /etc/wpa_supplicant.conf\" to preset wifi'\necho\nyellow  'then reboot or run \"sh /etc/init.d/itop-set\" to set up wifi'\n```\n</details>\n\n\nMT6620 WiFi 测试\n```\n# 配置上网名称和密码\nwpa_passphrase XXX \"YYY\" > /etc/wpa_supplicant.conf\n\n# 设置时间大约 15 秒，设置完成后就可上网\nsh setwifi_6818.sh\n\n# 发现网卡节点\nifconfig\n\n# 若上一步没有问题，设置 WiFi 开机启动\nsh wifi_instart.sh\n```\n\nEC20 4G 测试\n```\n# 插上天线以及 SIM 卡\nsh /root/pppd_conf.sh\n\n# 发现 4G 的节点\nifconfig\n```\n","tags":["arm"]},{"title":"[arm] itop6818烧写android","url":"/2020/01/16//articles/2020/01/16/1579174010000.html/","content":"\n<a href=\"https://pan.baidu.com/s/12V6yl21PeEdhKNiYFHKRnw\" target=\"_blank\">文件资料</a> 提取码：8n1e\n\n文件清单\n```\n#安装 JDK 和库文件等\niTOP6818 开发板资料汇总（不含光盘内容）\\02_iTOP-6818 开发板编译系统所需要的工具包等\\03-tools\\linux_tools.tgz\niTOP6818 开发板资料汇总（不含光盘内容）\\02_iTOP-6818 开发板编译系统所需要的工具包等\\04-JDK以及库文件安装脚本\\android_env.tar.gz\niTOP-6818光盘资料\\04 源码_Android5.1文件系统\\lollipop-5.1.1_r6_20170512.tar\n```\n\n放置文件\n```\nlinux_tools.tgz、android_env.tar.gz放到ubuntu系统“/”目录下\nlollipop-5.1.1_r6_20160801.tar.gz 放 “~/” 目录下\n```\n\n编译步骤\n```\ncd /\ntar -vxf linux_tools.tgz\ntar -vxf android_env.tar.gz\n\napt-get install -y default-jre default-jdk realpath\ncd /android_env/ubuntu/\n./install-devel-packages.sh\n\n\ntar -vxf lollipop-5.1.1_r6_20160801.tar.gz -C ~/;cd ~/lollipop-5.1.1_r6/u-boot\ncp nsih-2G16b-6818.txt nsih.txt\ncp -r config_for_iTOP6818_android .config\nexport ARCH=arm\ncd ..\n\n\n#保证给 Ubuntu 系统提供 6G 以上内存\n./build_android.sh\n\n#在 result 目录下生成镜像\nls result\n```\n\n确保通过RS232已经进入fastboot模式，接上OTG线（即usb线）\n```\n拨码开关\n1、3 on\n2 off\n```\n\n文件清单\n```\niTOP-6818光盘资料\\03 镜像_Android5.1文件系统\niTOP-6818光盘资料\\03 镜像_Android5.1文件系统\\2G\n```\n\n烧写android\n```\nfastboot.exe flash uboot u-boot-iTOP-6818.bin\nfastboot.exe flash boot boot.img\nfastboot.exe flash cache cache.img\nfastboot.exe flash system system.img\nfastboot.exe flash userdata userdata.img\nfastboot.exe flash recovery recovery.img\nfastboot reboot\n\nsetenv bootsystem android\nsetenv lcdtype 4.3\nsaveenv\nreset\n\nadb devices\nadb push <deviceId> helloworld /data\n```\n","tags":["arm"]},{"title":"[arm] arm平台交叉编译Qt5源代码+iMX6Q","url":"/2020/01/16//articles/2020/01/16/1579174009000.html/","content":"<a href=\"https://www.eefocus.com/toradex/blog/19-07/437561_8e24f.html\" target=\"_blank\">嵌入式 ARM 平台交叉编译Qt5源代码</a>\n","tags":["arm"]},{"title":"[android] 热更新","url":"/2020/01/16//articles/2020/01/16/1579174008000.html/","content":"<a href=\"https://www.jianshu.com/p/03b1ac6e964e\" target=\"_blank\">带你一步一步手动实现Android热更新</a>\n\nDemo的地址\n<a href=\"https://github.com/lxbnjupt/HotFixDemo\" target=\"_blank\">HotFixDemo</a>\n\n热更新 Bugly Android SDK 使用例子\n<a href=\"https://github.com/BuglyDevTeam/Bugly-Android-Demo\" target=\"_blank\">Bugly-Android-Demo</a>\n","tags":["android"]},{"title":"[软件] AffinityDesigner","url":"/2020/01/14//articles/2020/01/14/1579000590000.html/","content":"<a href=\"http://www.ddooo.com/softdown/110697.htm\">affinity designer windows破解版 v1.6.0.89中文版</a>\n<a href=\"http://big1.ddooo.com/affinitydesigner_110697.rar\" target=\"_blank\">affinitydesigner_110697.rar</a>\n\n","tags":["软件"]},{"title":"[vbox] 菜单栏被隐藏的解决办法","url":"/2020/01/14//articles/2020/01/14/1579000589000.html/","content":"```\n一定要是右边的Ctrl+C\n```\n","tags":["vbox"]},{"title":"[stm32] 使用malloc函数注意事项","url":"/2020/01/14//articles/2020/01/14/1579000588000.html/","content":"关于keil-MDK环境中STM32使用malloc函数\n对于malloc和free对内存堆栈块的空间操作，在keilMDK中需要满足下面几个条件：\n\n1、使用的代码文件中需要包含头文件\n```\n<stdlib.h>\n```\n\n2、勾选 工程属性中的 Use MicroLIB 选项\n\n3、startup_stm32f429_439xx.s文件位置\n```\n工程名\\Libraries\\CMSIS\\Device\\ST\\STM32F4xx\\Source\\Templates\\arm\\startup_stm32f429_439xx.s\n```\n\n4、startup_stm32f429_439xx.s文件中的 Stack_Size 、Heap_Size\n```\nStack_Size      EQU     0x00000400\n\n                AREA    STACK, NOINIT, READWRITE, ALIGN=3\nStack_Mem       SPACE   Stack_Size\n__initial_sp\n\n\n; <h> Heap Configuration\n;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>\n; </h>\n\nHeap_Size       EQU     0x00000200\n```\n\n5、修改Heap_Size\n```\n这时候原则上就可以使用空间申请和释放的两个操作函数了，但是由于STM32在startup_stm32f429_439xx.s中分配的堆空间只有0x00000200个字节，所以很多时候调用malloc函数时如果申请空间超过0X200则返回了NULL，这时候就需要到该文件对这个值进行设置。\n \n上面工作完成后，我们就可以愉快地尽情使用malloc和free两个函数了！！\n```\n","tags":["stm32"]},{"title":"[arm] windows平台交叉编译+arm+QT5.7","url":"/2020/01/14//articles/2020/01/14/1579000587000.html/","content":"<a href=\"https://blog.csdn.net/qq_41068712/article/details/89672143\" target=\"_blank\">Windows平台交叉编译Arm Linux平台的QT5.7库（1）</a>\n<a href=\"https://www.cnblogs.com/qinwanlin/p/6956833.html\" target=\"_blank\">Windows平台交叉编译Arm Linux平台的QT5.7库（2）</a>\n\n\n1、Qt库源代码\n<a href=\"http://download.qt.io/archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.zip\" target=\"_blank\">qt-everywhere-opensource-src-5.7.0.zip</a>\n<details>\n<summary>修改qmake.conf</summary>\n\n```\nqtbase\\mkspecs\\linux-arm-gnueabi-g++\\qmake.conf\n\n#\n# qmake configuration for building with arm-linux-gnueabi-g++\n#\n\nMAKEFILE_GENERATOR      = UNIX\nCONFIG                 += incremental\nQMAKE_INCREMENTAL_STYLE = sublib\n\n#QT_QPA_DEFAULT_PLATFORM = linux #eglfs\n#QMAKE_CFLAGS_RELEASE += -O2 -march=armv7-a\n#QMAKE_CXXFLAGS_RELEASE += -O2 -march=armv7-a\n\ninclude(../common/linux.conf)\ninclude(../common/gcc-base-unix.conf)\ninclude(../common/g++-unix.conf)\n\n# modifications to g++.conf\nQMAKE_CC                = arm-linux-gnueabihf-gcc\nQMAKE_CXX               = arm-linux-gnueabihf-g++\nQMAKE_LINK              = arm-linux-gnueabihf-g++\nQMAKE_LINK_SHLIB        = arm-linux-gnueabihf-g++\n\n# modifications to linux.conf\nQMAKE_AR                = arm-linux-gnueabihf-ar cqs\nQMAKE_OBJCOPY           = arm-linux-gnueabihf-objcopy\nQMAKE_NM                = arm-linux-gnueabihf-nm -P\nQMAKE_STRIP             = arm-linux-gnueabihf-strip\nload(qt_config)\n```\n</details>\n\n修改kernel.pri\n```\nqtbase\\src\\corelib\\kernel\\kernel.pri\n\nSOURCES += \\\nkernel/qpoll.cpp \\\nkernel/qcore_unix.cpp \\\n```\n\n2、Perl\n<a href=\"https://www.cr173.com/soft/14302.html\" target=\"_blank\">ActivePerl-5.26.1</a>\n```\n将其bin目录添加到环境变量PATH中\n```\n\n3、Python2.7以上\n<a href=\"https://www.python.org/downloads/\" target=\"_blank\">Python</a>\n\n4、MinGW开发工具集（没用到）\n<a href=\"https://sourceforge.net/projects/mingw/\" target=\"_blank\">mingw-32</a>\n<a href=\"https://sourceforge.net/projects/mingw-w64/files/mingw-w64/\" target=\"_blank\">mingw-w64</a>\n```\n将其bin目录添加到环境变量PATH中\n```\n\n5、交叉编译器\n<a href=\"http://releases.linaro.org/archive/14.07/components/toolchain/binaries/gcc-linaro-arm-linux-gnueabihf-4.9-2014.07-20140726_win32.exe\" target=\"_blank\">gcc-linaro-arm-linux-gnueabihf-4.9-2014.07-20140726_win32.exe</a>\n<a href=\"https://blog.csdn.net/guodeqiangde/article/details/78239408\" target=\"_blank\">（可不下载）arm-none-linux-gnueabi</a>\n<a href=\"https://www.veryarm.com/12506.html\" target=\"_blank\">【Linux开发】arm-linux-gnueabihf-gcc下载</a>\n<a href=\"http://releases.linaro.org/archive/14.07/components/toolchain/binaries/\" target=\"_blank\">文件列表</a>\n```\n将其bin目录添加到环境变量PATH中\n```\n\n6、安装qt opensource\n```\ncd qt-everywhere-opensource-src-5.7.0\n\nconfigure.bat -release -opensource -prefix X:\\Qt\\Qt5.7.0_ARM_Linux -nomake tests -nomake examples -no-opengl -skip qtvirtualkeyboard  -xplatform linux-arm-gnueabi-g++\n\nmingw32-make\nmingw32-make install\n\n#可选\nqmake.exe程序所在目录增加一个qt.conf配置文件，内容为：\n[Paths]\nPrefix=..\n```\n\n7、Qt Creator + ARM设置\n<a href=\"https://download.qt.io/archive/qt/5.12/5.12.2/qt-opensource-windows-x86-5.12.2.exe\" target=\"_blank\">qt-opensource-windows-x86-5.12.2.exe</a>\n```\n(1)\n工具(Tools) -> 选项(options) -> Kits -> 编译器 -> Manual -> 添加，选GCC -> arm-linux-gnueabihf-g++\n\n(2)\nCMake -> Manual -> 点击Add -> 找到minGW安装目录bin里的 mingw32-make.exe，取个名后添加\n\n(3)调试功能\nQt Versions -> 手动设置 -> 点击添加... -> 找到Qt库安装目录bin里的qmake.exe，取名Qt5.70 for linux_armv7 后添加\n\n版本名称: Qt %{Qt:Version} for linux_armv7\n```\n","tags":["arm"]},{"title":"[arm] itop6818使用QtE5.7","url":"/2020/01/14//articles/2020/01/14/1579000586000.html/","content":"\n<a href=\"https://gitee.com/BrighterEyer/itop6818-QtE5.7-files\" target=\"_blank\">itop6818-QtE5.7-files</a>\n<details>\n<summary>文件清单</summary>\n\n<a href=\"https://pan.baidu.com/s/12V6yl21PeEdhKNiYFHKRnw\" target=\"_blank\">lollipop-5.1.1_r6_20170512.tar.gz</a> 提取码：8n1e\n\n<a href=\"http://download.qt.io/new_archive/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run\" target=\"_blank\">qt-opensource-linux-x64-5.7.0.run</a>\n<a href=\"http://download.qt.io/new_archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz\" target=\"_blank\">qt-everywhere-opensource-src-5.7.0.tar.gz</a>\n<a href=\"http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\" target=\"_blank\">arm-2014.05-29-arm-none-Linux-gnueabi-i686-pc-linux-gnu.tar.bz2</a>\n<a href=\"https://github.com/libts/tslib/releases/download/1.4/tslib-1.4.tar.bz2\" target=\"_blank\">tslib-1.4.tar.bz2</a>\n```\nlinux_tools.tgz 中的 mkimage、make_ext_4fs\n```\n</details>\n\n\n<a href=\"https://blog.csdn.net/ZHUQIUSHI123/article/details/90670126\" target=\"_blank\">安装gcc指定版本</a>\n```\n# 查看ubuntu系统上g++的版本：\nls /usr/bin/g++*\n\n# 安装新版gcc和g++\nsudo apt-get install gcc-4.8 g++-4.8\n\n# 切换不同版本\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 20\n\n# 同理修改g++的方式类似：\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 20\n```\n\n```\n#tar xvf android_env.tgz -C /\n#cd /android_env/ubuntu\n#./install-devel-packages.sh\n#sudo apt-get install -y default-jre default-jdk realpath\nsudo apt-get install -y autoconf automake libtool\nsudo apt-get install -y lib32c-dev lib32stdc++6 lib32z1 lib32ncurses5\n```\n\n```\napt-get install -y u-boot-tools\nmkimage -v\n```\n\n<a href=\"https://blog.csdn.net/kwame211/article/details/83902851\" target=\"_blank\">ubuntu16.04镜像下载</a>\n```\napt-get install -y default-jre default-jdk gcc python\napt-get install -y vim g++ lzop u-boot-tools autoconf automake make libtool libstdc++6 lib32c-dev lib32stdc++6 lib32z1 lib32ncurses5\n\n#Qt Creator报“/usr/bin/ld: error: cannot find -lGL” 问题\napt-get -y install libgl1-mesa-dev\n```\n\nuboot、kernel、Android 镜像的编译\n```\ntar xvf lollipop-5.1.1_r6_20170512.tar.gz -C ~/\n\n#uboot\ncd ~/lollipop-5.1.1_r6/u-boot\ncp nsih-2G16b-6818.txt nsih.txt\ncd ../kernel\ncp -r config_for_iTOP6818_android .config\nexport ARCH=arm\ncd ..\n./build_android.sh\nls result\n#显示 u-boot-iTOP-6818.bin\n\n#kernel\ncd kernel\ncp -r config_for_iTOP6818_linux .config\n\n#qt\ncd ..\n./build_android.sh qt\n\nls result\n#u-boot-iTOP-6818.bin、boot.img、system.img\n\nls ~/lollipop-5.1.1_r6/qt_system/system/opt\n```\n\niTOP6818 Qt 镜像编译\n```\ntar xvf linux_tools.tgz -C /\ncd ~/lollipop-5.1.1_r6/kernel\ncp -r config_for_iTOP6818_linux .config\ncd ..\n./build_android.sh qt\n```\n\n安装arm-none-linux-gnueabi-gcc\n```\nwget -c http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2\nmkdir -p /usr/local/arm\ntar jxvf arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 -C /usr/local/arm/\n\n#编辑.bashrc\nvim /etc/profile\nexport PATH=$PATH:/usr/local/arm/arm-2014.05/bin\nexport CROSS_COMPILE=arm-none-linux-gnueabi-\nsource /etc/profile\n\n#检验版本\narm-none-linux-gnueabi-gcc -v\n```\n\n\nitop6818-QtE5.7-files中的qt5.7+tslib1.4\n```\ntar xvf itop6818-QtE5.7-files/qt5.7+tslib1.4/qt5.7.tar.gz\nrm -rf /opt/qt5.7.0\nmv qt-5.7.0 /opt/qt5.7.0\n\ntar xvf itop6818-QtE5.7-files/qt5.7+tslib1.4/tslib1.4.tar.gz\nrm -rf /opt/tslib1.4\nmv tslib1.4 /opt/tslib1.4\n\nunzip itop6818-QtE5.7-files/fonts.zip\nmv fonts /opt/qt5.7.0/lib/\n\ncd /usr/local/arm/arm-2014.05/arm-none-linux-gnueabi/libc/usr/lib/\n\ncp libstdc++.a /opt/qt5.7.0/lib/\ncp libstdc++.so /opt/qt5.7.0/lib/\ncp libstdc++.so.6.0.19 /opt/qt5.7.0/lib/\n\ncd /opt/qt5.7.0/lib/\nln -s libstdc++.so.6.0.19 libstdc++.so.6\n\nsudo apt-get install -y lib32c-dev lib32stdc++6\n```\n\n<details>\n<summary>tslib-1.4.tar.gz安装和配置</summary>\n\n<a href=\"https://blog.csdn.net/lincuiting06/article/details/50352557\" target=\"_blank\">tslib-1.4.tar.gz安装和配置</a>\n```\nsudo apt-get install -y autoconf automake libtool\ncd ~/work\nwget https://github.com/libts/tslib/releases/download/1.4/tslib-1.4.tar.bz2\ntar xvf tslib-1.4.tar.bz2;cd tslib-1.4;\n./autogen.sh\n./configure CC=arm-none-linux-gnueabi-gcc CXX=arm-none-linux-gnueabi-g++ --host=arm-none-linux-gnueabi --prefix=/opt/tslib1.4 ac_cv_func_malloc_0_nonnull=yes\nmake;make install\n\n#修改ts.conf\nvim /opt/tslib1.4/etc/ts.conf\n#第一行\nmodule_raw input\n\n#追加宏：\nvim /opt/tslib1.4/include/tslib.h\n#define SYN_MT_REPORT           2\n#define ABS_MT_SLOT             0x2f    /* MT slot being modified */\n#define ABS_MT_TOUCH_MAJOR      0x30    /* Major axis of touching ellipse */\n#define ABS_MT_TOUCH_MINOR      0x31    /* Minor axis (omit if circular) */\n#define ABS_MT_WIDTH_MAJOR      0x32    /* Major axis of approaching ellipse */\n#define ABS_MT_WIDTH_MINOR      0x33    /* Minor axis (omit if circular) */\n#define ABS_MT_ORIENTATION      0x34    /* Ellipse orientation */\n#define ABS_MT_POSITION_X       0x35    /* Center X touch position */\n#define ABS_MT_POSITION_Y       0x36    /* Center Y touch position */\n#define ABS_MT_TOOL_TYPE        0x37    /* Type of touching device */\n#define ABS_MT_BLOB_ID          0x38    /* Group a set of packets as a blob */\n#define ABS_MT_TRACKING_ID      0x39    /* Unique ID of initiated contact */\n#define ABS_MT_PRESSURE         0x3a    /* Pressure on contact area */\n#define ABS_MT_DISTANCE         0x3b    /* Contact hover distance */\n#define ABS_MT_TOOL_X           0x3c    /* Center X tool position */\n#define ABS_MT_TOOL_Y           0x3d    /* Center Y tool position */\n```\n</details>\n\n<details>\n<summary>qmake.conf</summary>\n\n```\ncd ~/\nwget http://download.qt.io/new_archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz\ntar xvf qt-everywhere-opensource-src-5.7.0.tar.gz;cd qt-everywhere-opensource-src-5.7.0\n\nvi qtbase/mkspecs/linux-arm-gnueabi-g++/qmake.conf\n## qmake configuration for building with arm-linux-gnueabi-g++\n#\nMAKEFILE_GENERATOR = UNIX\nCONFIG += incremental\nQMAKE_INCREMENTAL_STYLE = sublib\nQT_QPA_DEFAULT_PLATFORM = linux #eglfs\nQMAKE_CFLAGS_RELEASE += -O2 -march=armv7-a\nQMAKE_CXXFLAGS_RELEASE += -O2 -march=armv7-a\ninclude(../common/linux.conf)\ninclude(../common/gcc-base-unix.conf)include(../common/g++-unix.conf)\n# modifications to g++.conf\nQMAKE_CC = arm-none-linux-gnueabi-gcc\nQMAKE_CXX = arm-none-linux-gnueabi-g++\nQMAKE_LINK = arm-none-linux-gnueabi-g++\nQMAKE_LINK_SHLIB = arm-none-linux-gnueabi-g++\n# modifications to linux.conf\nQMAKE_AR = arm-none-linux-gnueabi-ar cqs\nQMAKE_OBJCOPY = arm-none-linux-gnueabi-objcopy\nQMAKE_NM = arm-none-linux-gnueabi-nm -P\nQMAKE_STRIP = arm-none-linux-gnueabi-strip\nload(qt_config)\n```\n</details>\n\n<details>\n<summary>编译 QtE5.7 源码 之 autoconfigure.sh</summary>\n\n```\nsource /etc/profile\n```\n\nqt-everywhere-opensource-src-5.7.0/autoconfigure.sh\n```\n#!/bin/sh\n./configure \\\n-v \\\n-prefix /opt/qt5.7.0 \\\n-release \\\n-opensource \\\n-make libs \\\n-xplatform linux-arm-gnueabi-g++ \\\n-optimized-qmake \\\n-pch \\\n-qt-sql-sqlite \\\n-qt-libjpeg \\\n-qt-zlib \\\n-no-opengl \\\n-skip qt3d \\\n-skip qtcanvas3d \\\n-skip qtpurchasing \\\n-no-sse2 \\\n-no-openssl \\\n-no-nis \\\n-no-cups \\\n-no-glib \\\n-no-iconv \\\n-nomake examples \\\n-nomake tools \\\n-skip qtvirtualkeyboard \\\n-I/opt/tslib1.4/include \\\n-L/opt/tslib1.4/lib\n```\n\n\n```sh\napt-get install -y python\nchmod 777 autoconfigure.sh\n./autoconfigure.sh\nmake\nmake install\nls /opt/qt5.7.0\n```\n</details>\n\n\n解压mkimage、make_ext_4fs\n```\ntar -vxf linux_tools.tgz -C /\nls /usr/local/bin/\n```\n\n<details>\n<summary>生成 QtE5.7 镜像 system.img</summary>\n\n```\ncd ~/lollipop-5.1.1_r6/qt_system/system\n\ncp -r /opt/qt5.7.0 opt/\ncp -r /opt/tslib1.4 opt/\n\nrm -rf opt/qt-4.7.1\nrm -rf opt/Qtopia\n\n# fonts.zip\nunzip fonts.zip\ncp -r fonts ~/lollipop-5.1.1_r6/qt_system/system/opt/qt5.7.0/lib/\n\n\n# libstdc\ncd ~/lollipop-5.1.1_r6/qt_system/system/lib/\n\n\ncp /usr/local/arm/arm-2014.05/arm-none-linux-gnueabi/libc/usr/lib/libstdc++.a .\ncp /usr/local/arm/arm-2014.05/arm-none-linux-gnueabi/libc/usr/lib/libstdc++.so .\ncp /usr/local/arm/arm-2014.05/arm-none-linux-gnueabi/libc/usr/lib/libstdc++.so.6.0.19 .\n\nln -s libstdc++.so.6.0.19 libstdc++.so.6\n```\n</details>\n\n\n<details>\n<summary>修改环境变量</summary>\n\n```\nvim ~/lollipop-5.1.1_r6/qt_system/system/etc/profile\n\n# Ash profile\n# vim: syntax=sh\n# No core files by default\nulimit -S -c 0 > /dev/null 2>&1\nUSER=\"`id -un`\"\nLOGNAME=$USER\nPS1='[$USER@$HOSTNAME]# '\nPATH=$PATH\nHOSTNAME=`/bin/hostname`\nexport USER LOGNAME PS1 PATH\nexport TSLIB_ROOT=/opt/tslib1.4\nexport QT_ROOT=/opt/qt5.7.0\nexport TSLIB_TSDEVICE=/dev/input/event2\nexport TSLIB_TSEVENTTYPE=input\nexport TSLIB_CONFFILE=/opt/tslib1.4/etc/ts.conf\nexport TSLIB_PLUGINDIR=/opt/tslib1.4/lib/ts\nexport TSLIB_CONSOLEDEVICE=none\nexport TSLIB_FBDEVICE=/dev/fb0\nexport QWS_MOUSE_PROTO=tslib:/dev/input/event2\nexport LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib:$QT_ROOT/lib:$TSLIB_ROOT/lib:$TSLIB_ROOT/lib/\nexport QT_QPA_PLATFORM_PLUGIN_PATH=$QT_ROOT/plugins\nexport QT_QPA_PLATFORM=linuxfb:tty=/dev/fb0\nexport QT_QPA_FONTDIR=$QT_ROOT/lib/fonts\nexport QT_QPA_GENERIC_PLUGINS=tslib\n```\n</details>\n\n开发工具qt-opensource-linux-x64-5.7.0.run\n```\nhttp://download.qt.io/new_archive/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run\n```\n\n开机启动脚本\n```\nvi ~/lollipop-5.1.1_r6/qt_system/system/etc/init.d/rcS\n#/bin/qt4 &\n/bin/qt5.7 &\n\n#将迅为提供的 “qt5.7” 文件拷贝到 “bin” 目录下，并修改 qt5.7 的权限为 777\ncp qt5.7 ~/lollipop-5.1.1_r6/qt_system/system/bin/;\ncd ~/lollipop-5.1.1_r6/qt_system/system/bin/\nchmod 777 /bin/qt5.7\n```\n\n打包系统镜像\n```\ncd ~/lollipop-5.1.1_r6/qt_system\nmake_ext4fs -s -l 314572800 -a root -L linux system.img system\n```\n\n执行编译\n```\n#拷贝qt5.7.0\ncd ~/lollipop-5.1.1_r6/qt_system/system/opt\ncp -r /opt/qt5.7.0 ./\n\ncd ~/lollipop-5.1.1_r6/kernel\n#缺省文件配置\nsudo cp -r config_for_iTOP6818_linux .config\n\ncd ~/lollipop-5.1.1_r6\nsudo ./build_android.sh qt\n```\n\n<a href=\"https://www.cnblogs.com/emouse/archive/2013/01/29/2881721.html\" target=\"_blank\">qt creator设置（可忽略）</a>\n\n使用/usr/qt5.7.0/bin/qmake生成arm程序\n```\ncd tuixiangzi\n/usr/qt5.7.0/bin/qmake\nmake\nfile tuixiangzi\n\n#显示以下信息\ntuixiangzi: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-, for GNU/Linux 2.6.16, not stripped\n```\n\n使用ubuntu在iTop-6818开发板上运行helloworld\n```\ncd helloworld\n/opt/qt5.7.0/bin/qmake\nls\n#多了一个Makefile\n\nmake\n\nfile helloworld #查看文件信息\n\n#U盘挂载\nmdkir /mnt/udisk/\nmount /dev/udisk /mnt/udisk/\n\n#tf 卡挂载\nmount /dev/mmcblk1p1 /mnt/disk/\n\n#运行\nchmod 777 helloworld\nhelloworld -qws\n\n```\n\n使用iTop-6818开发板运行leds\n```\n#创建U盘的设备节点\nmknod /dev/sda1 b 8 1\n#挂载U盘\nmount /dev/sda1 /mnt/udisk/\ncd /mnt/udisk/\nchmod 777 leds\nleds -qws\n\n#挂载tf卡\nmount /dev/mmcblk1p4 /mnt/udisk1\nls /mnt/udisk1\n```\n\n<a href=\"https://blog.csdn.net/wangliang0633/article/details/77217424\" target=\"_blank\">Qt5.7移植到ARM开发板</a>\n","tags":["arm"]},{"title":"[windows] 启用组策略gpedit.msc","url":"/2020/01/13//articles/2020/01/13/1578914091000.html/","content":"windows10启用组策略gpedit.msc\n\nexec.cmd\n```\n@echo off\npushd \"%~dp0\"\ndir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum >List.txt\ndir /b C:\\Windows\\servicing\\Packages\\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum >>List.txt\nfor /f %%i in ('findstr /i . List.txt 2^>nul') do dism /online /norestart /add-package:\"C:\\Windows\\servicing\\Packages\\%%i\"\npause\n```\n","tags":["windows"]},{"title":"[stm32] keil乱码问题","url":"/2020/01/13//articles/2020/01/13/1578914090000.html/","content":"<a href=\"https://blog.csdn.net/qlexcel/article/details/54929072\" target=\"_blank\">keil中文乱码解决和个人习惯字体设置</a>\n\n","tags":["stm32"]},{"title":"[stm32] 网络+串口字符串收发","url":"/2020/01/13//articles/2020/01/13/1578914089000.html/","content":"<a href=\"https://www.jianshu.com/p/ce2a09d2dde9\" target=\"_blank\">stm32串口编程实例：实现数据的收发功能</a>\n\n<details>\n<summary>bsp_usart.h</summary>\n\n```\n#ifndef __BSP_USART_H\n#define\t__BSP_USART_H\n\n#include \"stm32f4xx.h\"\n#include <stdio.h>\n\n//引脚定义\n/*******************************************************/\n#define DEBUG_USART                             USART1\n#define DEBUG_USART_CLK                         RCC_APB2Periph_USART1\n\n#define DEBUG_USART_RX_GPIO_PORT                GPIOA\n#define DEBUG_USART_RX_GPIO_CLK                 RCC_AHB1Periph_GPIOA\n#define DEBUG_USART_RX_PIN                      GPIO_Pin_10\n#define DEBUG_USART_RX_AF                       GPIO_AF_USART1\n#define DEBUG_USART_RX_SOURCE                   GPIO_PinSource10\n\n#define DEBUG_USART_TX_GPIO_PORT                GPIOA\n#define DEBUG_USART_TX_GPIO_CLK                 RCC_AHB1Periph_GPIOA\n#define DEBUG_USART_TX_PIN                      GPIO_Pin_9\n#define DEBUG_USART_TX_AF                       GPIO_AF_USART1\n#define DEBUG_USART_TX_SOURCE                   GPIO_PinSource9\n/************************************************************/\n\n\n//串口波特率\n#define DEBUG_USART_BAUDRATE                    115200\n\nvoid Debug_USART_Config(void);\n//int fputc(int ch, FILE *f);\n\nvoid Usart_SendByte(USART_TypeDef *pUSARTx, uint8_t Data);\n\nvoid Usart_SendArray(USART_TypeDef *pUSARTx, uint8_t *data, uint8_t num);\n\n//接收字符\nchar usart1_getc(void);\n//接收字符串\nint usart1_getstr(unsigned char* buff, int len);\n\n#endif /* __USART1_H */\n```\n</details>\n\n<details>\n<summary>bsp_usart.c</summary>\n\n```\n#include \"./usart/bsp_usart.h\"\n\n/**\n * @brief  DEBUG_USART GPIO 配置，工作模式配置。115200 8-N-1\n * @param  无\n * @retval 无\n */\nvoid Debug_USART_Config(void)\n{\n\tGPIO_InitTypeDef GPIO_InitStructure;\n\tUSART_InitTypeDef USART_InitStructure;\n\n\tRCC_AHB1PeriphClockCmd( DEBUG_USART_RX_GPIO_CLK | DEBUG_USART_TX_GPIO_CLK, ENABLE);\n\n\t/* 使能 UART 时钟 */\n\tRCC_APB2PeriphClockCmd(DEBUG_USART_CLK, ENABLE);\n\n\t/* 连接 PXx 到 USARTx_Tx*/\n\tGPIO_PinAFConfig(DEBUG_USART_RX_GPIO_PORT, DEBUG_USART_RX_SOURCE, DEBUG_USART_RX_AF);\n\n\t/*  连接 PXx 到 USARTx__Rx*/\n\tGPIO_PinAFConfig(DEBUG_USART_TX_GPIO_PORT, DEBUG_USART_TX_SOURCE, DEBUG_USART_TX_AF);\n\n\t/* 配置Tx引脚为复用功能  */\n\tGPIO_InitStructure.GPIO_OType = GPIO_OType_PP;\n\tGPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;\n\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;\n\n\tGPIO_InitStructure.GPIO_Pin = DEBUG_USART_TX_PIN  ;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\n\tGPIO_Init(DEBUG_USART_TX_GPIO_PORT, &GPIO_InitStructure);\n\n\t/* 配置Rx引脚为复用功能 */\n\tGPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;\n\tGPIO_InitStructure.GPIO_Pin = DEBUG_USART_RX_PIN;\n\tGPIO_Init(DEBUG_USART_RX_GPIO_PORT, &GPIO_InitStructure);\n\n\t/* 配置串DEBUG_USART 模式 */\n\tUSART_InitStructure.USART_BaudRate = DEBUG_USART_BAUDRATE;\n\tUSART_InitStructure.USART_WordLength = USART_WordLength_8b;\n\tUSART_InitStructure.USART_StopBits = USART_StopBits_1;\n\tUSART_InitStructure.USART_Parity = USART_Parity_No ;\n\tUSART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;\n\tUSART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;\n\tUSART_Init(DEBUG_USART, &USART_InitStructure);\n\tUSART_Cmd(DEBUG_USART, ENABLE);\n}\n\n///重定向c库函数printf到串口DEBUG_USART，重定向后可使用printf函数\nint fputc(int ch, FILE *f)\n{\n\t/* 发送一个字节数据到串口DEBUG_USART */\n\tUSART_SendData(DEBUG_USART, (uint8_t) ch);\n\n\t/* 等待发送完毕 */\n\twhile (USART_GetFlagStatus(DEBUG_USART, USART_FLAG_TXE) == RESET);\n\n\treturn (ch);\n}\n\n///重定向c库函数printf到串口DEBUG_USART，重定向后可使用scanf、getchar函数\nint fgetc(FILE *f)\n{\n\t/* 等待串口输入数据 */\n\twhile (USART_GetFlagStatus(DEBUG_USART, USART_FLAG_RXNE) == RESET);\n\n\treturn (int)USART_ReceiveData(DEBUG_USART);\n}\n\nvoid Usart_SendByte(USART_TypeDef *pUSARTx, uint8_t Data)\n{\n\tUSART_SendData(pUSARTx, Data);\n\twhile (USART_GetFlagStatus(pUSARTx, USART_FLAG_TXE) == RESET);\n}\n\nvoid Usart_SendArray(USART_TypeDef *pUSARTx, uint8_t *data, uint8_t num)\n{\n\tuint8_t t;\n\tfor (t = 0; t < num; t++) {\n\t\tUsart_SendByte(pUSARTx, data[t]);\n\t}\n\twhile (USART_GetFlagStatus(pUSARTx, USART_FLAG_TC) == RESET);\n}\n\n//接收字符\nchar usart1_getc(void) {\n\tchar temp = 0;\n\twhile (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) != SET);\n\ttemp = USART_ReceiveData(USART1);\n\treturn temp;\n}\n//接收字符串\nint usart1_getstr(unsigned char* buff, int len) {\n\tint i = 0;\n\tfor (i = 0; i < len; i++) {\n\t\tbuff[i] = usart1_getc();\n\t}\n\treturn len;\n}\n\n/*********************************************END OF FILE**********************/\n```\n</details>\n\n","tags":["stm32"]},{"title":"[ps] 表情包","url":"/2020/01/13//articles/2020/01/13/1578914088000.html/","content":"<a href=\"https://ibaotu.com/sucai/19437774.html?kwd=%E8%A1%A8%E6%83%85%E5%8C%85\" target=\"_blank\">可爱老鼠表情包2-给您拜年动图GIF</a>\n\n<a href=\"https://ibaotu.com/sucai/19437781.html?kwd=%E8%A1%A8%E6%83%85%E5%8C%85\" target=\"_blank\">可爱老鼠表情包9-赞动图GIF</a>\n\n","tags":["ps"]},{"title":"[虚拟机] 将VirtualBox和VMware虚拟机相互转换","url":"/2020/01/13//articles/2020/01/13/1578914085000.html/","content":"<a href=\"https://blog.csdn.net/qq_36242834/article/details/77801455\" target=\"_blank\">将VirtualBox和VMware虚拟机相互转换</a>\n\n<a href=\"https://www.jb51.net/os/other/349015.html\" target=\"_blank\">将Vmware的镜像格式转换为Virtualbox的镜像格式的方法</a>\n```\nVBoxManage.exe clonehd F:\\centos-6.0-i386-minimal.vmdk F:\\centos-6.0-i386-minimal.vdi\n```\n","tags":["虚拟机"]},{"title":"[ubuntu] 安装配置STM32开发环境","url":"/2020/01/10//articles/2020/01/10/1578670561000.html/","content":"<a href=\"https://blog.csdn.net/u013908686/article/details/79883904\" target=\"_blank\">windows+arm+gcc开发环境的搭建</a>\n<a href=\"https://github.com/MagicPrince666/STM32_LCD.git\" target=\"_blank\">STM32_LCD</a>\n","tags":["ubuntu"]},{"title":"[stm32] 野火单片机cnblogs博客,含头文件和代码用例","url":"/2020/01/10//articles/2020/01/10/1578670560000.html/","content":"<a href=\"https://www.cnblogs.com/firege/\" target=\"_blank\">野火_firege</a>\n","tags":["stm32"]},{"title":"[stm32] 密码锁","url":"/2020/01/10//articles/2020/01/10/1578670559000.html/","content":"<a href=\"https://blog.csdn.net/sinat_23225111/article/details/53523568\" target=\"_blank\">一段在STM32上实现密码设置功能的小程序</a>\n","tags":["stm32"]},{"title":"[stm32] VM8978_MP3模块","url":"/2020/01/10//articles/2020/01/10/1578670558000.html/","content":"<a href=\"https://blog.csdn.net/wangzibigan/article/details/88428910\" target=\"_blank\">STM32：I2S驱动WM8978</a>\n","tags":["stm32"]},{"title":"[stm32] keil5添加HAL库","url":"/2020/01/10//articles/2020/01/10/1578670556000.html/","content":"<a href=\"https://www.cnblogs.com/lzh666/p/11279066.html\" target=\"_blank\">使用HAL库建立STM32工程</a>\n\n```\n7.编译出错\n  我们提供的例程有可能编译出错，提示找不到tftpc.o文件，\n\n--原因如下：\n  程序发布时使用killkeil工具删除mdk生成的多余文件时，会把本目录下的tftpc.o文件也删除掉，导致编译出错，MDK编译错误提示如下：\n----------------------------------------------------------------------\n..\\..\\..\\..\\Build\\demo\\MICO-Fire_F429\\obj_RVMDK\\mdk_demo.axf: error: L6002U: Could not open file ..\\..\\..\\..\\MICO\\system\\tftp_ota\\tftpc.o: No such file or directory\n-----------------------------------------------------------------------\n\n--解决方法：\n  把“tftpc_o文件备份.zip”压缩包的“tftpc.o”备份文件复制到工程目录下的“\\MICO\\system\\tftp_ota\\tftp_ota”目录下，重新编译即可。\n```\n\n问题\n```\ncannot read jlink version number\n```\n参考\n<a href=\"https://blog.csdn.net/dxxdxpdxy/article/details/85101210\" target=\"_blank\">任意版本JLink驱动官方下载指引</a>\n\n","tags":["stm32"]},{"title":"[stm32] keil5_ARM-MDK包","url":"/2020/01/10//articles/2020/01/10/1578670555000.html/","content":"<a href=\"https://blog.csdn.net/weixin_42911200/article/details/81590158\" target=\"_blank\">Keil5的安装破解,包含MDK-ARM和C51</a>\n```\n同时提供所需安装包\n\n链接：\nhttps://pan.baidu.com/s/1Ycsv1v4d10mtvuaMjhYCGg\n密码：\ndggh\n```\n\n<a href=\"https://blog.csdn.net/qq_41639829/article/details/81813992\" target=\"_blank\">MDK5安装破解以及安装stm32与C51支持包(附安装包)</a>\nMD5.14安装包与破解工具\n```\n链接：\nhttps://pan.baidu.com/s/14I0zwdvKlbR5PbrsAlxMDQ\n密码：\nd1cs\n```\n","tags":["stm32"]},{"title":"[stm32] GPIO输入_按键检测","url":"/2020/01/10//articles/2020/01/10/1578670554000.html/","content":"<a href=\"https://www.cnblogs.com/firege/p/5748707.html\" target=\"_blank\">第12章 GPIO输入-按键检测—零死角玩转STM32-F429系列</a>\n","tags":["stm32"]},{"title":"[stm32] esp8266+mqtt","url":"/2020/01/10//articles/2020/01/10/1578670552000.html/","content":"\nMQTTPacket.h\ntransport.h\n```\nhttps://github.com/eclipse/paho.mqtt.embedded-c/tree/master/MQTTPacket/src\nhttps://github.com/eclipse/paho.mqtt.embedded-c/tree/master/MQTTPacket/samples\n```\n\n<a href=\"https://blog.csdn.net/kh766200466/article/details/79694119\" target=\"_blank\">STM32移植 MQTT</a>\n```\n1.下载MQTT的库：\nhttps://github.com/eclipse/paho.mqtt.embedded-c\n\n2.将MQTTPacket\\src目录下的文件添加到工程\n\n3.将MQTTPacket\\samples下的transport.c、transport.h添加到工程\n```\n\n\n<a href=\"https://tson.com/stm32-sim800c-mqtt-hal/\" target=\"_blank\">在GPRS模块（SIM800C）和STM32芯片上实现MQTT协议（HAL版）</a>\n<details>\n<summary>main.h</summary>\n\n```\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n \n#include \"MQTTPacket.h\"\n#include \"transport.h\"\n \n/**\n * This is in order to get an asynchronous signal to stop the sample,\n * as the code loops waiting for msgs on the subscribed topic.\n * Your actual code will depend on your hw and approach\n */\n//现在关于signal的没有用到，所以在自己使用时全部删除了\n#include <signal.h>\n \nint toStop = 0;\n \nvoid cfinish(int sig)\n{\n\tsignal(SIGINT, NULL);\n\ttoStop = 1;\n}\n \nvoid stop_init(void)\n{\n\tsignal(SIGINT, cfinish);\n\tsignal(SIGTERM, cfinish);\n}\n/* */\n \nint main(int argc, char *argv[])\n{\n\n\tchar* payload = \"mypayload\";\n\tchar *host = \"m2m.eclipse.org\";\n\tint port = 1883;\n\n    //先进行一些变量的注册，每一个变量都在后面有用到，具体使用时再解释\n\tMQTTPacket_connectData data = MQTTPacket_connectData_initializer;\n\tint rc = 0;\n\tint mysock = 0;\n\tunsigned char buf[200];\n\tint buflen = sizeof(buf);\n\tint msgid = 1;\n\tMQTTString topicString = MQTTString_initializer;\n\tint req_qos = 0;\n\n\tint payloadlen = strlen(payload);\n\tint len = 0;\n\n\tstop_init();\n\tif (argc > 1)\n\t\thost = argv[1];\n\n\tif (argc > 2)\n\t\tport = atoi(argv[2]);\n\n    //如果使用SIM800，这个函数没什么用，可以把SIM800初始化的东西放到里面，但我没有这么做\n\tmysock = transport_open(host, port);\n\tif(mysock < 0)\n\t\treturn mysock;\n\n\tprintf(\"Sending to hostname %s port %d\\n\", host, port);\n\n\tdata.clientID.cstring = \"me\";\n\tdata.keepAliveInterval = 20;\n\tdata.cleansession = 1;\n\tdata.username.cstring = \"testuser\";\n\tdata.password.cstring = \"testpassword\";\n    //现在将连接字符串格式化一下，现在还没有发送\n\tlen = MQTTSerialize_connect(buf, buflen, &data);\n    //现在是数据的发送\n\trc = transport_sendPacketBuffer(mysock, buf, len);\n\n\t/* wait for connack */\n    //发送后接收服务器返回的数据，这里使用了一个函数的指针，要定义这个指针\n\tif (MQTTPacket_read(buf, buflen, transport_getdata) == CONNACK)\n\t{\n\t\tunsigned char sessionPresent, connack_rc;\n \n\t\tif (MQTTDeserialize_connack(&sessionPresent, &connack_rc, buf, buflen) != 1 || connack_rc != 0)\n\t\t{\n\t\t\tprintf(\"Unable to connect, return code %d\\n\", connack_rc);\n\t\t\tgoto exit;\n\t\t}\n\t}\n\telse\n\t\tgoto exit;\n\n\t/* subscribe */\n    //订阅主题\n\ttopicString.cstring = \"substopic\";\n\tlen = MQTTSerialize_subscribe(buf, buflen, 0, msgid, 1, &topicString, &req_qos);\n\n\trc = transport_sendPacketBuffer(mysock, buf, len);\n    //等待服务器答复\n\tif (MQTTPacket_read(buf, buflen, transport_getdata) == SUBACK) \t/* wait for suback */\n\t{\n\t\tunsigned short submsgid;\n\t\tint subcount;\n\t\tint granted_qos;\n \n\t\trc = MQTTDeserialize_suback(&submsgid, 1, &subcount, &granted_qos, buf, buflen);\n\t\tif (granted_qos != 0)\n\t\t{\n\t\t\tprintf(\"granted qos != 0, %d\\n\", granted_qos);\n\t\t\tgoto exit;\n\t\t}\n\t}\n\telse\n\t\tgoto exit;\n\n\t/* loop getting msgs on subscribed topic */\n\ttopicString.cstring = \"pubtopic\";\n\twhile (!toStop)\n\t{\n\t\t/* transport_getdata() has a built-in 1 second timeout,\n\t\tyour mileage will vary */\n        //接收并处理消息\n\t\tif (MQTTPacket_read(buf, buflen, transport_getdata) == PUBLISH)\n\t\t{\n\t\t\tunsigned char dup;\n\t\t\tint qos;\n\t\t\tunsigned char retained;\n\t\t\tunsigned short msgid;\n\t\t\tint payloadlen_in;\n\t\t\tunsigned char* payload_in;\n\t\t\tint rc;\n\t\t\tMQTTString receivedTopic;\n\n\t\t\trc = MQTTDeserialize_publish(&dup, &qos, &retained, &msgid, &receivedTopic, &payload_in, &payloadlen_in, buf, buflen);\n\t\t\tprintf(\"message arrived %.*s\\n\", payloadlen_in, payload_in);\n\t\t}\n\n\t\tprintf(\"publishing reading\\n\");\n\t\tlen = MQTTSerialize_publish(buf, buflen, 0, 0, 0, 0, topicString, (unsigned char*)payload, payloadlen);\n\t\trc = transport_sendPacketBuffer(mysock, buf, len);\n\t}\n\n\tprintf(\"disconnecting\\n\");\n\tlen = MQTTSerialize_disconnect(buf, buflen);\n\trc = transport_sendPacketBuffer(mysock, buf, len);\n\nexit:\n\ttransport_close(mysock);\n \n\treturn 0;\n}\n```\n</details>\n\n\n重写transport.h、transport.c适应keil工程<a href=\"https://blog.csdn.net/xj178926426/article/details/78888633\" target=\"_blank\">参考</a>\n```\nint transport_sendPacketBuffer(unsigned char* buf, int buflen);\nint transport_getdata(unsigned char* buf, int count);\nint transport_open(char* host, int port);\nint transport_close();\n```\n<details>\n<summary>参考main.h</summary>\n\n```\nint main(void)\n{\n    u16 key_value= 0, retry_count = 5;\n    unsigned short submsgid;\n    unsigned char buf[MQTT_MAX_BUF_SIZE];\n    unsigned char sessionPresent, connack_rc;\n    const char* payload = \"mypayload\";\n    int payloadlen = strlen(payload);\n    int ret = 0,len = 0,req_qos = 0,msgid = 1,loop = 1,granted_qos,subcount;\n\n    MQTTString topicString = MQTTString_initializer;\n    MQTTPacket_connectData data = MQTTPacket_connectData_initializer;\n\n    SysTick_Init_Config();   //系统滴答时钟初始化\n    GPIO_Config();           //GPIO初始化\n    Key_GPIO_Config();\n    USART2_Init_Config(115200);  //串口2初始化\n    Timer2_Init_Config();        //定时器2初始化\n\n    USART1_Init_Config(115200);//UART1用作串口调试信息\n\n    UART1_SendString(\"系统启动.......................\\r\\n\");\n\n    //等待系统上电后的稳定\n    delays(STABLE_TIMES);\n\n    data.clientID.cstring = \"me\";\n    data.keepAliveInterval = 20;\n    data.cleansession = 1;\n    data.username.cstring = \"testuser\";\n    data.password.cstring = \"testpassword\";\n\n    len = MQTTSerialize_connect(buf, MQTT_MAX_BUF_SIZE, &data);\n    UART1_Printf(\"1111 len %d\\n\", len);\n    ret = transport_sendPacketBuffer(MQTT_SERVER_IP_AND_PORT, buf, len);\n    if( ret != 1 ){\n        UART1_Printf(\"1111 transport_sendPacketBuffer Error %d\\n\", ret);\n        return -1;\n    }\n    /* wait for connack */\n    if (MQTTPacket_read(buf, MQTT_MAX_BUF_SIZE, transport_getdata) != CONNACK)\n    {\n        UART1_Printf(\"MQTTPacket_read != CONNACK\\n\");\n        return -1;\n    }\n    if (MQTTDeserialize_connack(&sessionPresent, &connack_rc, buf, MQTT_MAX_BUF_SIZE) != 1 || connack_rc != 0)\n    {\n        UART1_Printf(\"Unable to connect, return code %d\\n\", connack_rc);\n        return -1;\n    }\n    topicString.cstring = \"substopic\";\n    len = MQTTSerialize_subscribe(buf, MQTT_MAX_BUF_SIZE, 0, msgid, 1, &topicString, &req_qos);\n    UART1_Printf(\"2222 len %d\\n\", len);\n    ret = transport_sendPacketBuffer(MQTT_SERVER_IP_AND_PORT, buf, len);\n    if( ret != 1 ){\n        UART1_Printf(\"2222 transport_sendPacketBuffer Error %d\\n\", ret);\n        return -1;\n    }\n\n    if (MQTTPacket_read(buf, MQTT_MAX_BUF_SIZE, transport_getdata) != SUBACK)   /* wait for suback */\n    {\n        UART1_Printf(\"MQTTPacket_read != SUBACK\\n\");\n        return -1;\n    }\n\n    MQTTDeserialize_suback(&submsgid, 1, &subcount, &granted_qos, buf, MQTT_MAX_BUF_SIZE);\n    if (granted_qos != 0)\n    {\n        UART1_Printf(\"granted qos != 0, %d\\n\", granted_qos);\n        return -1;\n    }\n\n    /* loop getting msgs on subscribed topic */\n    topicString.cstring = \"pubtopic\";\n\n    while( loop ){ \n\n        key_value = Key_Down_Scan();\n        // add by james_xie 20171221 ,for debug\n        UART1_Printf(\"key_value %d\\r\\n\",key_value);\n        // 按键KEY1即PA5被按下则跳出循环\n        if( key_value == 0x0001 << 5 ){\n            UART1_Printf(\"Key1 is pressed down , exit \\r\\n\");\n            loop = 0;\n        }\n        /* transport_getdata() has a built-in 1 second timeout,\n        your mileage will vary */\n        if (MQTTPacket_read(buf, MQTT_MAX_BUF_SIZE, transport_getdata) == PUBLISH)\n        {\n            int qos,payloadlen_in;\n            unsigned char dup,retained;\n            unsigned short msgid;\n            unsigned char* payload_in;\n            MQTTString receivedTopic;\n\n            MQTTDeserialize_publish(&dup, &qos, &retained, &msgid, &receivedTopic,\n                    &payload_in, &payloadlen_in, buf, MQTT_MAX_BUF_SIZE);\n            UART1_Printf(\"message arrived %.*s\\n\", payloadlen_in, payload_in);\n        }\n\n        UART1_Printf(\"publishing reading\\n\");\n        len = MQTTSerialize_publish(buf, MQTT_MAX_BUF_SIZE, 0, 0, 0, 0, topicString, (unsigned char*)payload, payloadlen);\n        UART1_Printf(\"33333 len %d\\n\", len);\n        // 重复发送5次，如果5次都不成功，则退出程序\n        while( retry_count > 0 ){\n            ret = transport_sendPacketBuffer(MQTT_SERVER_IP_AND_PORT, buf, len);\n            // 如果发送成功则跳出循环\n            if( ret == 1 ){\n                break;\n            }\n            delays(1);\n        }\n        if( !retry_count && ret != 1 ){\n             UART1_Printf(\"3333 transport_sendPacketBuffer Error %d\\n\", ret);\n             break;\n        }\n        // 每次发送之后，等两秒\n        delays(2);\n    }\n\n    UART1_Printf(\"disconnecting\\n\");\n    len = MQTTSerialize_disconnect(buf, MQTT_MAX_BUF_SIZE);\n    ret = transport_sendPacketBuffer(MQTT_SERVER_IP_AND_PORT, buf, len);\n    if( ret != 1 ){\n        UART1_Printf(\"4444 transport_sendPacketBuffer Error %d\\n\", ret);\n        return -1;\n    }\n}\n```\n</details>\n\n\n<a href=\"https://blog.csdn.net/qq_39785798/article/details/80765716\" target=\"_blank\">基于STM32实现MQTT（mqtt.h + mqtt.c）</a>\n<details>\n<summary>mqtt.h</summary>\n\n```\n#ifndef __MQTT_H\n#define __MQTT_H\t \n#include \"sys.h\"\n#include <string.h>\n#define\t\tMQTT_TypeCONNECT\t\t\t\t\t\t\t1//请求连接  \n#define\t\tMQTT_TypeCONNACK\t\t\t\t\t\t\t2//请求应答  \n#define\t\tMQTT_TypePUBLISH\t\t\t\t\t\t\t3//发布消息  \n#define\t\tMQTT_TypePUBACK\t\t\t\t\t\t\t\t4//发布应答  \n#define\t\tMQTT_TypePUBREC\t\t\t\t\t\t\t\t5//发布已接收，保证传递1  \n#define\t\tMQTT_TypePUBREL\t\t\t\t\t\t\t\t6//发布释放，保证传递2  \n#define\t\tMQTT_TypePUBCOMP\t\t\t\t\t\t\t7//发布完成，保证传递3  \n#define\t\tMQTT_TypeSUBSCRIBE\t\t\t\t\t\t8//订阅请求  \n#define\t\tMQTT_TypeSUBACK\t\t\t\t\t\t\t\t9//订阅应答  \n#define\t\tMQTT_TypeUNSUBSCRIBE\t\t\t\t\t10//取消订阅  \n#define\t\tMQTT_TypeUNSUBACK\t\t\t\t\t\t\t11//取消订阅应答  \n#define\t\tMQTT_TypePINGREQ\t\t\t\t\t\t\t12//ping请求  \n#define\t\tMQTT_TypePINGRESP\t\t\t\t\t\t\t13//ping响应  \n#define\t\tMQTT_TypeDISCONNECT \t\t\t\t\t14//断开连接  \n \n#define\t\tMQTT_StaCleanSession\t\t\t\t\t1\t//清理会话 \n#define\t\tMQTT_StaWillFlag\t\t\t\t\t\t\t0\t//遗嘱标志\n#define\t\tMQTT_StaWillQoS\t\t\t\t\t\t\t\t0\t//遗嘱QoS连接标志的第4和第3位。\n#define\t\tMQTT_StaWillRetain\t\t\t\t\t\t0\t//遗嘱保留\n#define\t\tMQTT_StaUserNameFlag\t\t\t\t\t1\t//用户名标志 User Name Flag\n#define\t\tMQTT_StaPasswordFlag\t\t\t\t\t1\t//密码标志 Password Flag\n#define\t\tMQTT_KeepAlive\t\t\t\t\t\t\t\t60\n#define\t\tMQTT_ClientIdentifier  \"Tan1\"\t//客户端标识符 Client Identifier\n#define\t\tMQTT_WillTopic\t\t\t\"\"\t\t\t\t//遗嘱主题 Will Topic\n#define\t\tMQTT_WillMessage\t\t\"\"\t\t\t\t//遗嘱消息 Will Message\n#define\t\tMQTT_UserName\t\t\t\"admin\"\t\t\t//用户名 User Name\n#define\t\tMQTT_Password\t\t\t\"password\"\t//密码 Password\n \nunsigned char GetDataFixedHead(unsigned char MesType,unsigned char DupFlag,unsigned char QosLevel,unsigned char Retain);\nvoid GetDataPUBLISH(unsigned char *buff,unsigned char dup, unsigned char qos,unsigned char retain,const char *topic ,const char *msg);//获取发布消息的数据包\t\t \t\nvoid GetDataSUBSCRIBE(unsigned char *buff,const char *dat,unsigned int Num,unsigned char RequestedQoS);//订阅主题的数据包 Num:主题序号 RequestedQoS:服务质量要求0,1或2\nvoid GetDataDisConnect(unsigned char *buff);//获取断开连接的数据包\nvoid GetDataConnect(unsigned char *buff);//获取连接的数据包正确连接返回20 02 00 00\nvoid GetDataPINGREQ(unsigned char *buff);//心跳请求的数据包成功返回d0 00\n#endif\n```\n</details>\n\n\n<details>\n<summary>mqtt.c</summary>\n\n```\n#include \"mqtt.h\"\n \nunsigned char GetDataFixedHead(unsigned char MesType,unsigned char DupFlag,unsigned char QosLevel,unsigned char Retain)\n{\n\tunsigned char dat = 0;\n\tdat = (MesType & 0x0f) << 4;\n\tdat |= (DupFlag & 0x01) << 3;\n\tdat |= (QosLevel & 0x03) << 1;\n\tdat |= (Retain & 0x01);\n\treturn dat;\n}\nvoid GetDataConnect(unsigned char *buff)//获取连接的数据包正确连接返回20 02 00 00\n{\n\tunsigned int i,len,lennum = 0;\n\tunsigned char *msg;\n\tbuff[0] = GetDataFixedHead(MQTT_TypeCONNECT,0,0,0);\n\tbuff[2] = 0x00;\n\tbuff[3] = 0x04;\n\tbuff[4] = 'M';\n\tbuff[5] = 'Q';\n\tbuff[6] = 'T';\n\tbuff[7] = 'T';\n\tbuff[8] = 0x04;//协议级别 Protocol Level\n\tbuff[9] = 0 | (MQTT_StaCleanSession << 1) | (MQTT_StaWillFlag << 1)\n\t\t\t\t\t\t\t| (MQTT_StaWillQoS << 3) | (MQTT_StaWillRetain << 5) \n\t\t\t\t\t\t\t|\t(MQTT_StaPasswordFlag << 6) |(MQTT_StaUserNameFlag << 7);//连接标志\n\tbuff[10] = MQTT_KeepAlive >> 8;\n\tbuff[11] = MQTT_KeepAlive;\n\tlen = strlen(MQTT_ClientIdentifier);\n\tbuff[12] = len >> 8;\n\tbuff[13] = len;\n\tmsg = MQTT_ClientIdentifier;\n\tfor(i = 0;i<len;i++)\n\t{\n\t\tbuff[14+i] =  msg[i];\n\t}\n\tlennum += len;\n\tif(MQTT_StaWillFlag)\n\t{\n\t\tlen = strlen(MQTT_WillTopic);\n\t\tbuff[13 + lennum + 1] = len >> 8;\n\t\tbuff[13 + lennum + 2] = len;\n\t\tlennum += 2;\n\t\tmsg = MQTT_WillTopic;\n\t\tfor(i = 0;i<len;i++)\n\t\t{\n\t\t\tbuff[14+lennum+i] =  msg[i];\n\t\t}\n\t\tlennum += len;\n\t\tlen = strlen(MQTT_WillMessage);\n\t\tbuff[12] = len >> 8;\n\t\tbuff[13] = len;\n\t\tlennum += 2;\n\t\tmsg = MQTT_WillMessage;\n\t\tfor(i = 0;i<len;i++)\n\t\t{\n\t\t\tbuff[14+lennum+i] =  msg[i];\n\t\t}\n\t\tlennum += len;\n\t}\n\tif(MQTT_StaUserNameFlag)\n\t{\n\t\tlen = strlen(MQTT_UserName);\n\t\tbuff[13 + lennum + 1] = len >> 8;\n\t\tbuff[13 + lennum + 2] = len;\n\t\tlennum += 2;\n\t\tmsg = MQTT_UserName;\n\t\tfor(i = 0;i<len;i++)\n\t\t{\n\t\t\tbuff[14+lennum+i] =  msg[i];\n\t\t}\n\t\tlennum += len;\n\t\t\n\t}\n\tif(MQTT_StaPasswordFlag)\n\t{\n\t\tlen = strlen(MQTT_Password);\n\t\tbuff[13 + lennum + 1] = len >> 8;\n\t\tbuff[13 + lennum + 2] = len;\n\t\tlennum += 2;\n\t\tmsg = MQTT_Password;\n\t\tfor(i = 0;i<len;i++)\n\t\t{\n\t\t\tbuff[14+lennum+i] =  msg[i];\n\t\t}\n\t\tlennum += len;\n\t}\n\tbuff[1] = 13 + lennum - 1;\n}\nvoid GetDataDisConnect(unsigned char *buff)//获取断开连接的数据包\n{\n\tbuff[0] = 0xe0;\n\tbuff[1] = 0;\n}\nvoid GetDataPINGREQ(unsigned char *buff)//心跳请求的数据包成功返回d0 00\n{\n\tbuff[0] = 0xc0;\n\tbuff[1] = 0;\n}\n/*\n\t成功返回90 0x 00 Num RequestedQoS\n*/\nvoid GetDataSUBSCRIBE(unsigned char *buff,const char *dat,unsigned int Num,unsigned char RequestedQoS)//订阅主题的数据包 Num:主题序号 RequestedQoS:服务质量要求0,1或2\n{\n\tunsigned int i,len = 0,lennum = 0; \n\tbuff[0] = 0x82;\n\tlen = strlen(dat);\n\tbuff[2] = Num>>8;\n\tbuff[3] = Num;\n\tbuff[4] = len>>8;\n\tbuff[5] = len;\n\tfor(i = 0;i<len;i++)\n\t{\n\t\tbuff[6+i] = dat[i];\n\t}\n\tlennum = len;\n\tbuff[6 + lennum ] = RequestedQoS;\n\tbuff[1] = lennum + 5;\n}\nvoid GetDataPUBLISH(unsigned char *buff,unsigned char dup, unsigned char qos,unsigned char retain,const char *topic ,const char *msg)//获取发布消息的数据包\n{\n\tunsigned int i,len=0,lennum=0;\n\tbuff[0] = GetDataFixedHead(MQTT_TypePUBLISH,dup,qos,retain);\n\tlen = strlen(topic);\n\tbuff[2] = len>>8;\n\tbuff[3] = len;\n\tfor(i = 0;i<len;i++)\n\t{\n\t\tbuff[4+i] = topic[i];\n\t}\n\tlennum = len;\n\tlen = strlen(msg);\n\tfor(i = 0;i<len;i++)\n\t{\n\t\tbuff[4+i+lennum] = msg[i];\n\t}\n\tlennum += len;\n\tbuff[1] = lennum + 2;\n}\n```\n</details>\n","tags":["stm32"]},{"title":"[stm32] esp8266+http","url":"/2020/01/10//articles/2020/01/10/1578670551000.html/","content":"\n<a href=\"https://cloud.tencent.com/developer/article/1457141\" target=\"_blank\">ESP8266透传：利用STM32f103zet6发送数据到HTTP服务器</a>\n\n<details>\n<summary>头文件include</summary>\n\n```\n#include \"test.h\"\n#include \"./ESP8266/bsp_esp8266.h\"\n#include \"bsp_SysTick.h\"\n#include <stdio.h> \n#include <stdlib.h> \n#include <string.h>  \n#include <stdbool.h>\n#include \"http.h\"\n```\n</details>\n\n\n<details>\n<summary>http.h</summary>\n\n```\n#ifndef  __HTTP_H\n#define\t __HTTP_H\n\n//宏定义 MALLOC、FREE、DATE_LEN\n#define MALLOC(x) malloc(x)\n#define FREE(x) free(x)\n#define TOTAL_DATA_LEN 64\n#define MAX_DATA_LEN  128\n#define DATE_LEN  128\n\n#define SERVER_IP \"xx.xx.xx.xx\"\n#define SERVER_PORT 1883\n\n//打包HTTP头\nint Head_Package(const char *server_ip, int port_num, int ContentLength, char *out_data);\n\n//打包HTTP数据包\nint Data_Package(const char *date, const char *text1, const char *place, char *out_data);\n\n//HTTP数据上传\nint Http_Data_Upload(char *server_ip, int port_num, char *time, char *text1, char *place, char *out_buffer);\n\n//获得要上传的HTTP数据\nint Get_Hex_Http_Packet_Data(char *upload_http_data,char *http_hex_data);\n\n#endif\n```\n</details>\n\n<details>\n<summary>http.c</summary>\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include \"http.h\"\n\n\n//请求头部\nchar upload_head[] =\n\"POST /? HTTP/1.1\\r\\n\"\n\"Host: %s:%d\\r\\n\"\n\"content-type: multipart/form-data; boundary=--------------------------359443142220480708322079\\r\\n\"\n\"content-length: %d\\r\\n\\r\\n\";\n\n//请求数据\nchar upload_data[] =\n{\n\t\"----------------------------359443142220480708322079\\r\\n\"\n\t\"Content-Disposition: form-data; name=\\\"date\\\"\\r\\n\\r\\n\"\n\t\"%s\"\n\t\"\\r\\n----------------------------359443142220480708322079\\r\\n\"\n\t\"Content-Disposition: form-data; name=\\\"text1\\\"\\r\\n\\r\\n\"\n\t\"%s\"\n\t\"\\r\\n----------------------------359443142220480708322079\\r\\n\"\n\t\"Content-Disposition: form-data; name=\\\"place\\\"\\r\\n\\r\\n\"\n\t\"%s\"\n\t\"\\r\\n----------------------------359443142220480708322079--\\r\\n\"\n};\n\n//打包HTTP头\nint Head_Package(const char *server_ip, int port_num, int ContentLength, char *out_data)\n{\n\tint len = 0 ;\n\tchar *up_head = NULL ;\n\tif (NULL == server_ip || NULL == out_data)\n\t\treturn -1 ;\n\tif (ContentLength < 0 || port_num < 0)\n\t\treturn -2 ;\n\tup_head = MALLOC(DATE_LEN);\n\tif (NULL != up_head)\n\t\tsnprintf(up_head, DATE_LEN, upload_head, server_ip, port_num, ContentLength);\n\tif (NULL != out_data)\n\t\tsprintf(out_data, \"%s\", up_head);\n\telse\n\t\treturn -3 ;\n\tlen = strlen(up_head);\n\tFREE(up_head);\n\treturn len;\n}\n\n\n//打包HTTP数据包\nint Data_Package(const char *date, const char *text1, const char *place, char *out_data)\n{\n\tint len = 0 ;\n\tchar *up_data = NULL ;\n\tif (NULL == date || NULL == text1 || NULL == place || NULL == out_data)\n\t\treturn -1 ;\n\tup_data = MALLOC(DATE_LEN);\n\tif (NULL != up_data)\n\t\tsnprintf(up_data, DATE_LEN, upload_data, date, text1, place);\n\tif (NULL != out_data)\n\t\tsprintf(out_data, \"%s\", up_data);\n\telse\n\t\treturn -2 ;\n\tlen = strlen(up_data);\n\tFREE(up_data);\n\treturn len;\n}\n\n//HTTP数据上传\nint Http_Data_Upload(char *server_ip, int port_num, char *time, char *text1, char *place, char *out_buffer)\n{\n\tint ContentLength = 0 ;\n\tchar *http_head = NULL ;\n\tchar *http_data = NULL ;\n\tchar *upload_http_data = NULL ;\n\thttp_head = MALLOC(DATE_LEN);\n\tif (NULL == http_head)\n\t\treturn -1 ;\n\thttp_data = MALLOC(DATE_LEN);\n\tif (NULL == http_data)\n\t\treturn -2 ;\n\tupload_http_data = MALLOC(TOTAL_DATA_LEN);\n\tif (NULL == upload_http_data)\n\t\treturn -3 ;\n\tContentLength = Data_Package(time, text1, place, http_data);\n\tHead_Package(server_ip, port_num, ContentLength, http_head);\n\tsprintf(upload_http_data, \"%s%s\", http_head, http_data);\n\tsprintf(out_buffer, \"%s\", upload_http_data);\n\tFREE(http_head);\n\tFREE(http_data);\n\tFREE(upload_http_data);\n\treturn 0 ;\n}\n\n//获得要上传的HTTP数据\nint Get_Hex_Http_Packet_Data(char *upload_http_data,char *http_hex_data){\n\t/*\n\tprintf(\"Get_Hex_Http_Packet_Data upload_http_data %s\\r\\n\",upload_http_data);\n\tprintf(\"Get_Hex_Http_Packet_Data http_hex_data %s\\r\\n\",http_hex_data);\n\t//*/\n\treturn 0;\n}\n```\n</details>\n\n<details>\n<summary>void wifi_init(void)</summary>\n\n```\nvoid wifi_init(void){\n  printf ( \"\\r\\n正在配置 ESP8266 ......\\r\\n\" );\n\tmacESP8266_CH_ENABLE();\n\tESP8266_AT_Test ();\n\tESP8266_Net_Mode_Choose ( STA );\n  while ( ! ESP8266_JoinAP ( macUser_ESP8266_ApSsid, macUser_ESP8266_ApPwd ) );\t\n\tESP8266_Enable_MultipleId ( DISABLE );\n\twhile ( !\tESP8266_Link_Server ( enumTCP, macUser_ESP8266_TcpServer_IP, macUser_ESP8266_TcpServer_Port, Single_ID_0 ) );\n\twhile ( ! ESP8266_UnvarnishSend () );\n\tprintf ( \"\\r\\n配置 ESP8266 完毕\\r\\n\" );\n}\n```\n</details>\n\n<details>\n<summary>PC_Usart</summary>\n\n```\nvoid PC_Usart(char* cStr){\n\tESP8266_SendString ( ENABLE, cStr, 0, Single_ID_0 ); \n}\n```\n</details>\n\n<details>\n<summary>ESP8266_AP_TCP_Server</summary>\n\n```C\nvoid ESP8266_AP_TCP_Server ( void )\n{\n\tchar cStrInput [100] = { 0 }, *pStrDelimiter[3], * pBuf, * pStr;\n\tu8 uc = 0;\n\tu32 ul = 0;\n\n\tmacESP8266_CH_ENABLE();\n\tESP8266_AT_Test ();\n\tESP8266_Net_Mode_Choose ( AP );\n\n\tPC_Usart (\"\\r\\n :\\\n\t\t\t   \\r\\n 0 = OPEN\\\n\t\t\t   \\r\\n 1 = WEP\\\n\t\t\t   \\r\\n 2 = WPA_PSK\\\n\t\t\t   \\r\\n 3 = WPA2_PSK\\\n\t\t\t   \\r\\n 4 = WPA_WPA2_PSK\\\n\t\t\t   \\r\\n \\r\\n\" );\n\n\tscanf ( \"%s\", cStrInput );\n\n\tPC_Usart ( \"\\r\\n \\r\\n\" );\n\n\tpBuf = cStrInput;\n\tuc = 0;\n\twhile ( ( pStr = strtok ( pBuf, \",\" ) ) != NULL ) {\n\t\tpStrDelimiter [ uc ++ ] = pStr;\n\t\tpBuf = NULL;\n\t}\n\n\tENUM_AP_PsdMode_TypeDef enunPsdMode = WEP;\n\tESP8266_BuildAP ( pStrDelimiter[0], pStrDelimiter[2], enunPsdMode );\n\tESP8266_Cmd ( \"AT+RST\", \"OK\", \"ready\", 2500 ); //*\n\n\tESP8266_Enable_MultipleId ( ENABLE );\n\n\tPC_Usart ( \"\\r\\n \\r\\n\" );\n\n\tscanf ( \"%s\", cStrInput );\n\n\tPC_Usart ( \"\\r\\n r\\n\" );\n\n\tpBuf = cStrInput;\n\tuc = 0;\n\twhile ( ( pStr = strtok ( pBuf, \",\" ) ) != NULL ) {\n\t\tpStrDelimiter [ uc ++ ] = pStr;\n\t\tpBuf = NULL;\n\t}\n\n\tESP8266_StartOrShutServer ( ENABLE, pStrDelimiter[0], pStrDelimiter[1] );\n\n\n\tdo {\n\t\tPC_Usart ( \"\\r\\n\\r\\n\" );\n\t\tESP8266_Cmd ( \"AT+CIFSR\", \"OK\", \"Link\", 500 );\n\n\t\tPC_Usart ( \"\\r\\n \\r\\n\" );\n\t\tDelay_ms ( 20000 ) ;\n\t} while ( !ESP8266_Cmd ( \"AT+CIPSTATUS\", \"+CIPSTATUS:0\", 0, 500 ) );\n\n\tPC_Usart ( \"\\r\\n\\r\\n\" );\n\tscanf ( \"%s\", cStrInput );\n\tul = strlen ( cStrInput );\n\tESP8266_SendString ( DISABLE, cStrInput, ul, Multiple_ID_0 );\n\n\tPC_Usart ( \"\\r\\n\\r\\n\" );\n\twhile (1) {\n\t\tpStr = ESP8266_ReceiveString( DISABLE );\n\t\tPC_Usart( cStr );\n\t}\n}\n```\n</details>\n\n<details>\n<summary>ESP8266_WebFetch_Test</summary>\n\n```C\n/*\n* 函数名：ESP8266_WebFetch_Test\n* 描述 ：WF-ESP8266 模块进行抓取网页测试\n* 输入 ：无\n* 返回 : 无\n* 调用 ：被外部调用\n*/\nvoid ESP8266_WebFetch_Test ( void )\n{\n\tuint8_t ucStatus;\n\n\tprintf ( \"\\r\\n正在配置 ESP8266 ......\\r\\n\" );\n\tmacESP8266_CH_ENABLE();\n\tESP8266_AT_Test ();\n\tESP8266_Net_Mode_Choose ( STA );\n\n\twhile ( ! ESP8266_JoinAP ( macUser_ESP8266_ApSsid, macUser_ESP8266_ApPwd ) );\n\tESP8266_Enable_MultipleId ( DISABLE );\n\twhile ( !\tESP8266_Link_Server ( enumTCP, macUser_ESP8266_TcpServer_IP, macUser_ESP8266_TcpServer_Port, Single_ID_0 ) );\n\twhile ( ! ESP8266_UnvarnishSend () );\n\tprintf ( \"\\r\\n配置 ESP8266 完毕\\r\\n\" );\n\n\tPC_Usart ( \"\\r\\n 本测试以访问 “eat.weixincore.com/index.php?s=/Mobile/PrinterTest/index”为例\\r\\n\" );\n\n\twhile ( 1 )\n\t{\n\t\tESP8266_SendString ( ENABLE, \"GET index.php?s=/Mobile/PrinterTest/index HTTP/1.1\\r\\n\", NULL, Single_ID_0 );\n\t\tESP8266_SendString ( ENABLE, \"Host: eat.weixincore.com\\r\\n\", NULL, Single_ID_0 );\n\t\tESP8266_SendString ( ENABLE, \"User-Agent: abc\\r\\n\", NULL, Single_ID_0 );\n\t\tESP8266_SendString ( ENABLE, \"Connection: close\\r\\n\", NULL, Single_ID_0 );\n\t\tESP8266_SendString ( ENABLE, \"\\r\\n\", NULL, Single_ID_0 );\n\t\tUSART_DMACmd(USART2, USART_DMAReq_Rx, ENABLE);\n\t\tDelay_ms ( 100 );\n\n\t\tif ( ucTcpClosedFlag )                                             //检测是否失去连接\n\t\t{\n\t\t\tESP8266_ExitUnvarnishSend ();                                    //退出透传模式\n\t\t\tdo ucStatus = ESP8266_Get_LinkStatus ();                         //获取连接状态\n\t\t\twhile ( ! ucStatus );\n\t\t\tif ( ucStatus == 4 )                                             //确认失去连接后重连\n\t\t\t{\n\t\t\t\tprintf ( \"\\r\\n正在重连热点和服务器 ......\\r\\n\" );\n\t\t\t\twhile ( ! ESP8266_JoinAP ( macUser_ESP8266_ApSsid, macUser_ESP8266_ApPwd ) );\n\t\t\t\twhile ( !\tESP8266_Link_Server ( enumTCP, macUser_ESP8266_TcpServer_IP, macUser_ESP8266_TcpServer_Port, Single_ID_0 ) );\n\t\t\t\tprintf ( \"\\r\\n重连热点和服务器成功\\r\\n\" );\n\t\t\t}\n\t\t\twhile ( ! ESP8266_UnvarnishSend () );\n\t\t}\n\t}\n}\n```\n</details>\n","tags":["stm32"]},{"title":"[C] MinGW安装和使用","url":"/2020/01/10//articles/2020/01/10/1578670548000.html/","content":"<a href=\"https://www.jianshu.com/p/e9ff7b654c4a\" target=\"_blank\">MinGW安装和使用</a>\n<a href=\"https://blog.csdn.net/qq_35028262/article/details/100592576\" target=\"_blank\">MinGW 安装教程</a>\n","tags":["C"]},{"title":"[keil] windows+arm+gcc开发环境的搭建","url":"/2020/01/10//articles/2020/01/10/1578670547000.html/","content":"<a href=\"https://blog.csdn.net/vigour1000/article/details/21866895\" target=\"_blank\">windows环境下arm gcc+Keil开发环境的搭建</a>\n\n<a href=\"https://launchpadlibrarian.net/287101671/gcc-arm-none-eabi-5_4-2016q3-20160926-win32.exe\" target=\"_blank\">gcc-arm-none-eabi-5_4-2016q3-20160926-win32.exe</a>\n```\narm-none-eabi-gcc -v\n```\n","tags":["keil"]},{"title":"[keil] 解决因系统问题移植MQTTPacket的报错","url":"/2020/01/10//articles/2020/01/10/1578670546000.html/","content":"<a href=\"https://www.jianshu.com/p/e9ff7b654c4a\" target=\"_blank\">MinGW安装和使用</a>\n\n```\n关于 __int32\n\n#define __uint8 unsigned char\n#define __uint16 unsigned short \n#define __uint32 unsigned int \n#define __int32 int\n```\n\nsocket\n```\nmingw中的socket基础\nhttp://blog.chinaunix.net/uid-23065002-id-4557735.html\n```\n\n```\nvs出现 fatal error C1083: 无法打开包括文件: \"sys/socket.h\": No such file ....\n\nwindows下winsock.h/winsock2.h \nlinux下sys/socket.h\n\n不同平台头文件不一样\n#include <winsock.h>\n//或\n#include <winsock2.h>\n\n<arpa/inet.h>用<windows.h>代替\n```\n\n```\n#include <netinet/in.h>、#include <netdb.h> 在windows下对应什么什么头文件？求高手讲解！\n\nvc下把这个包含语句改为\n#include <winsock2.h>\n#pragma comment(lib,\"ws2_32.lib\")\n```\n\n<a href=\"https://www.cnblogs.com/wannable/p/5910968.html\" target=\"_blank\">Linux Socket</a>\n\n\narpa/inet.h在windows下对应什么文件\n```\nwindows的总库包含了上述内容：\n#include <windows.h>\n#pragma comment(lib, \"wsock32.lib\")\n```\n\n\n```\n请教高手几个C++问题,为什么老说<sys/socket.h>和<netdb.h>错呢？\nhttps://zhidao.baidu.com/question/89969252.html\n\n如果在Windows下面编程，试一试\n#include <winsock.h>\n#include <winsock2.h>\n```\n\n","tags":["keil"]},{"title":"[C] linux下C语言实现websocket服务器","url":"/2020/01/10//articles/2020/01/10/1578670545000.html/","content":"<a href=\"https://blog.csdn.net/lell3538/article/details/60470558\" target=\"_blank\">用C语言实现websocket服务器</a>\n\n<a href=\"https://github.com/lhc3538/my-websocket-server\" target=\"_blank\">my-websocket-server</a>\n\n","tags":["C"]},{"title":"[arm] 交叉编译工具STM32CubeMX","url":"/2020/01/10//articles/2020/01/10/1578670544000.html/","content":"\n<a href=\"https://www.st.com/content/ccc/resource/technical/software/sw_development_suite/group0/9e/2b/29/0d/1d/36/44/56/stm32cubemx_v5-5-0/files/stm32cubemx_v5-5-0.zip/jcr:content/translations/en.stm32cubemx_v5-5-0.zip\" target=\"_blank\">stm32cubemx_v5-5-0.zip</a>\n\n<a href=\"https://blog.csdn.net/terminaterfxy/article/details/78048627\" target=\"_blank\">STM32CubeMX开发（一）介绍、下载与安装</a>\n百度网盘下载\n```\nST官方下载资料或文档需要ST账号登陆成功才能下载，若觉得麻烦可以在我百度网盘下载（定期更新）。\n为了方便大家下载，我在百度网盘提供下载的版本也是上面官网下载，上传至百度网盘。\n里面包含STM32CubeMX软件和库。\n\nJRE：\nhttp://pan.baidu.com/s/1cML4Hg\n\nSTM32CubeMX工具：\nhttp://pan.baidu.com/s/1dFMFwHF\n\nSTM32CubeMX资料：\nhttp://pan.baidu.com/s/1nvcxQC5\n```\n\n","tags":["arm"]},{"title":"[stm32] keil5添加头文件","url":"/2020/01/08//articles/2020/01/08/1578485101000.html/","content":"<a href=\"https://blog.csdn.net/baby00qi/article/details/53056099\" target=\"_blank\">在 Keil5 中添加 .h 文件的问题</a>\n","tags":["stm32"]},{"title":"[单片机] ESP8266使用AT命令进行网络请求","url":"/2020/01/08//articles/2020/01/08/1578484449000.html/","content":"<a href=\"https://blog.csdn.net/qq_28877125/article/details/73028338\" target=\"_blank\">ESP8266--学习笔记--AT指令下进行HTTP连接网址</a>\n","tags":["单片机"]},{"title":"[zigbee] zstack协议栈介绍与安装","url":"/2020/01/08//articles/2020/01/08/1578484448000.html/","content":"\n<a href=\"https://blog.csdn.net/m0_38064214/article/details/77326463\" target=\"_blank\">ZigBee TI ZStack CC2530 3.6 创建基于ZStack的新工程</a>\n<a href=\"http://www.ti.com.cn/tool/cn/z-stack\">官方ZStack-CC2530下载</a>\n\n\n<a href=\"https://pan.baidu.com/s/1JHpi202srO6VhPX6EY3Tlw\" target=\"_blank\">zigbee网关开发板V4.0.rar(含zstack)</a>\n```\n提取码:\nnuw4\n```\n<a href=\"https://pan.baidu.com/s/10KlVnhM-GslH-O7SDLHsng\" target=\"_blank\">ZIGBEE网关开发板视频教程-网关篇</a>\n```\nzigbee开发板-基础篇视频教程\nhttps://www.bilibili.com/video/av67397775\n\nzigbee网关开发板-高级篇视频教程\nhttps://www.bilibili.com/video/av67449058\n\nzigbee网关开发板--网关篇视频教程\nhttps://www.bilibili.com/video/av67450897\n\nzigbee网关开发板-实战篇远程视频教程\nhttps://www.bilibili.com/video/av67449719\n\nzigbee网关开发板--终结篇远程视频教程\nhttps://www.bilibili.com/video/av67450240\n```\n\n<a href=\"https://blog.csdn.net/weilexuexi12/article/details/71374307\" target=\"_blank\">ZigBee协议栈Zstack介绍</a>\n```\nAPP：应用层目录，这是用户创建各种不同工程的区域，在这个目录中包含了应用层的内容和这个项目的主要内容，在协议栈里面一般是以操作系统的任务实现的。\n\nHAL：硬件层目录，包含有与硬件相关的配置和驱动及操作函数。\n\nMAC：MAC层目录，包含了MAC层的参数配置文件及其MAC的LIB库的函数接口文件。\n\nMT：监控调试层，主要用于调试目的的，即实现通过串口调试各层，与各层进行直接交互。\n\nNWK：网络层目录，涵网络层配置参数文件及网络层库的函数接口文件，APS层库的函数接口。\n\nOSAL：协议栈的操作系统。\n\nProfile：AF层目录，包含AF层处理函数文件。\n\nSecurity：安全层目录，安全层处理函数接口文件，比如加密函数等。\n\nServices：地址处理函数目录，包括着地址模式的定义及地址处理函数。\n\nTools：工程配置目录，包括空间划分和Zstack相关的配置信息。\n\nZDO：ZDO目录。\n\nZMac：MAC层目录，包括MAC层参数配置及MAC层LIB库函数回调处理函数。\n\nZMain：主函数目录，包括入口函数main（）及硬件配置文件。\n\nOutput：输出文件目录层，这个EW8051 IDE自主设计的。\n```\n\n<a href=\"https://blog.csdn.net/weixin_33697898/article/details/85821372\" target=\"_blank\">Zigbee协议栈介绍及简单例子</a>\n<img src=\"https://images2015.cnblogs.com/blog/506370/201607/506370-20160731000342466-1592540828.png\">\n\nSampleApp目录\n<img src=\"https://images2015.cnblogs.com/blog/506370/201607/506370-20160731005459763-749308991.png\">\n","tags":["zigbee"]},{"title":"[stm32] 野火STM32f429_v1资料","url":"/2020/01/08//articles/2020/01/08/1578484447000.html/","content":"<a href=\"https://pan.baidu.com/s/1UaISAMHE2-z4CVI3ivVCHQ\" target=\"_blank\">野火STM32F429挑战者_V1开发板资料链接</a>\n```\n提取码：\n9mn0\n```\n\n若上述链接失效，请直接下载以下打包压缩的版本，内容是一样的：\n\n<a href=\"https://pan.baidu.com/s/1SSkvtbe0KIqNNb_L7hiarw\" target=\"_blank\">打包的资料盘 链接</a>\n```\n提取码：\nonvk\n```\n\n<a href=\"https://pan.baidu.com/s/1MgjvUyFR1e9UPbRlw9coLw\" target=\"_blank\">视频盘 链接</a>\n```\n提取码：\ne2cp\n```\n","tags":["stm32"]},{"title":"[stm32] 野火STM32F429_v1仿真器连接问题","url":"/2020/01/08//articles/2020/01/08/1578484446000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n查看设备列表\n```\nwin + R\ndevmgmt.msc\n\n\n顶部->查看(V)->显示隐藏的设备(W)\n\n列表框展开->libusb-win32 devices -> 观察 BETTER_USB_HS\n列表框展开->端口(COM和LPT)、观察 USB-SERIAL CH341、USB-SERIAL CH340\n列表框展开->Cebal controlled devices -> 观察 zigbee仿真器驱动 SmartRF40EB\n列表框展开->通用串行总线控制器 -> 观察 未知USB设备(设备描述符请求失败) 、USB 根集线器(USB3.0)\n```\n\n解决过程\n```\n1、Windows+R打开运行，在运行的输入框中输入\"services.msc\"回车，打开服务。\n2、在服务中找到 \"Plug and Play\" 服务，将服务关闭，再启用。\n3、在服务列表中找到 \"Device Install Service\" 和 \"Device Setup Manager\" 两个服务项。\n4、将设备管理器中的出现问题的设备右键卸载，然后将设备上的USB外设移除。\n5、卸载libusb-win32 devices下的驱动\n6、拔出所有单片机接线\n7、重启后将USB外设重新接入，扫描检测硬件改动，再次查看设备管理器中的问题是否还存在。\n8、安装再次CH341SER_EXE\n```\n\nwin10 keil5识别不了DAP，卸载驱动后可以下载\n<a href=\"https://blog.csdn.net/Rambo122/article/details/101018816\" target=\"_blank\">卸载libusb-win32 devices下的驱动</a>\n\n<a href=\"https://jingyan.baidu.com/article/624e74594dbc8d34e8ba5aa6.html\" target=\"_blank\">禁用数字签名</a>\n\n<a href=\"http://www.wch.cn/download/CH341SER_EXE.html\" target=\"_blank\">CH341SER_EXE</a>\n","tags":["stm32"]},{"title":"[stm32] wifi透传+websocket_server","url":"/2020/01/08//articles/2020/01/08/1578484445000.html/","content":"\njava工程\n<a href=\"https://github.com/ajith-varghese/zigbee-mqtt-bridge\" target=\"_blank\">zigbee-mqtt-bridge</a>\n介绍\n```\nConverts websocket (on zigbee controller) to MQTT messages\n```\n\n\nstm32f10x websocket\n<a href=\"https://github.com/ittopone/websocket_stm32\" target=\"_blank\">websocket_stm32</a>\n","tags":["stm32"]},{"title":"[qt] QtCreator跟PyQt5冲突打不开的问题","url":"/2020/01/06//articles/2020/01/06/1578311658000.html/","content":"\n只需要两步即可解决：\n```\n1.把QT下面的bin文件夹下所有的dll复制到exe同级目录下，尽管有些可能用不到；\n\n2.把QT下面的platforms文件夹也复制到exe同级别目录下，如我的platforms文件夹位于D:\\Qt\\Qt5.4.0\\5.4\\msvc2013_64\\plugins\\platforms，只需要直接复制这个platforms文件夹！\n```\n\n\n参考1：\n<a href=\"https://blog.csdn.net/jzwong/article/details/71479691\" target=\"_blank\">QT移植无法启动 This application failed to start because it could not find or load the Qt platform plugin</a>\n参考2：\n<a href=\"https://blog.csdn.net/NSSC_K/article/details/88670686\" target=\"_blank\">this application failed to start because no Qt platform</a>\n","tags":["qt"]},{"title":"[linux] 查看网关","url":"/2020/01/06//articles/2020/01/06/1578311657000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\nLinux下查看网关方法：\n```\n1、\nroute -n\n\n2、\nip route show\n\n3、【第一行就是自己的网关】\ntraceroute www.prudentwoo.com -s 100\n\n4、\nnetstat -r\n\n5、 【Debian/Ubuntu Linux】\nmore /etc/network/interfaces\n\n6、 【Red Hat Linux】\nmore /etc/sysconfig/network-scripts/ifcfg-eth0\n```\n","tags":["linux"]},{"title":"[js] 车牌输入","url":"/2020/01/06//articles/2020/01/06/1578311656000.html/","content":"<a href=\"http://www.jq22.com/jquery-info19439\" target=\"_blank\">jQuery快速车牌号码输入</a>\n\n\n关于微信手机端IOS系统中input输入框无法输入的问题\n```\n-webkit-user-select:auto;\n```\n\n<a href=\"https://segmentfault.com/q/1010000012115950\" target=\"_blank\">怎样实现将用户在input框中输入的中英文混合字符(车牌)中的字母实时转换为大写</a>\ncss\n```\ninput {\n    text-transform: uppercase;\n}\n```\n\n正则表达式限制input框只能输入车牌号\n```\n<input type=\"text\" onkeyup=\"if (!/^[\\u4e00-\\u9fa5]{1}([A-Z]{1}([A-Z_0-9]{1,5})?)?$/.test(value)) value = value.replace(/[\\s\\S]$/, '')\">\n```\n\n联合\n```\n<input style=\"text-transform: uppercase;\" onkeyup=\"if (!/^[\\u4e00-\\u9fa5]{1}([A-Z]{1}([A-Z_0-9]{1,5})?)?$/.test(value)) value = value.replace(/[\\s\\S]$/, '')\" maxlength=\"10\" placeholder=\"请输入车牌号码\">\n```","tags":["js"]},{"title":"[DevOps] 免费的DevOps","url":"/2020/01/06//articles/2020/01/06/1578311655000.html/","content":"\n<a href=\"https://coding.net/pricing\" target=\"_blank\">5 人及以下团队永久免费，5 人以上免费试用 15 天</a>\n\n","tags":["DevOps"]},{"title":"[stm32] 智能手环","url":"/2020/01/06//articles/2020/01/06/1578311654000.html/","content":"\n<a href=\"https://github.com/Raymaa/SmartHouse\" target=\"_blank\">含 智能手环</a>\n```\n基于STM32单片机，硬件传感器感知室内环境数据并上传至服务器，具有通过前端页面，手机App远程实时监控室内环境、控制相应设备和远程预警等功能。\n```\n","tags":["stm32"]},{"title":"[stm32] 开发工具","url":"/2020/01/06//articles/2020/01/06/1578311653000.html/","content":"\nSTM32 开发工具\n\n====  TrueSTUDIO start  ====\n<a href=\"https://atollic.com/truestudio/\" target=\"_blank\">TrueSTUDIO</a>\n<a href=\"https://atollic.com/resources/download/windows/windows-archive/?submissionGuid=6a9df4f2-76ee-4575-adac-7d5172666c12\" target=\"_blank\">Windows archive </a>\n<a href=\"http://download.atollic.com/TrueSTUDIO/installers/Atollic_TrueSTUDIO_for_STM32_windows_x86_v9.2.0_20181203-0921.exe\" target=\"_blank\">Atollic_TrueSTUDIO_for_STM32_windows_x86_v9.2.0_20181203-0921.exe</a>\n====  TrueSTUDIO end  ====\n\n\n\n====  keil MDK ARM start  ====\n<a href=\"http://products.embedfire.com/zh_CN/latest/stm32/ebf_stm32f429_tiaozhanzhe_v1.html\" target=\"_blank\">野火STM32F429挑战者_V1开发板</a>\n```\n野火STM32F429挑战者_V1开发板资料链接：\n\n资料盘链接：\nhttps://pan.baidu.com/s/1UaISAMHE2-z4CVI3ivVCHQ\n提取码：\n9mn0\n```\n====  keil MDK ARM end  ====\n\n","tags":["stm32"]},{"title":"[stm32] 基于STM32的RGB调色器","url":"/2020/01/06//articles/2020/01/06/1578311652000.html/","content":"<a href=\"https://blog.csdn.net/whik1194/article/details/102750994\" target=\"_blank\">基于STM32的RGB调色器——STM32程序和Qt上位机全开源</a>\n","tags":["stm32"]},{"title":"[arm] 智能门锁系统设计","url":"/2020/01/06//articles/2020/01/06/1578311647000.html/","content":"<a href=\"https://wenku.baidu.com/view/1e4f8b192bf90242a8956bec0975f46527d3a727.html\" target=\"_blank\">基于ARM_Linux的智能门锁系统设计_王溢琴</a>\n","tags":["arm"]},{"title":"[arm] itop6818资料","url":"/2020/01/06//articles/2020/01/06/1578311646000.html/","content":"<a href=\"http://bbs.topeetboard.com/forum.php?mod=forumdisplay&fid=44\" target=\"_blank\">讯为iTOP-6818开发板技术专区</a>\n<a href=\"https://pan.baidu.com/s/1kV4jt47\" target=\"_blank\">iTop6818资料</a>\n```\n提取码：\nbjg0\n```\n\n<a href=\"https://pan.baidu.com/s/1cA9ZCM?errno=0\" target=\"_blank\">iTOP-6818光盘资料</a>\n```\n提取码：\n25ro\n```\n","tags":["arm"]},{"title":"[物联网] zigbee+MQTT服务器","url":"/2020/01/06//articles/2020/01/06/1578311644000.html/","content":"\n\n===============================  MQTT start  ===============================\n\n====  客户端 start  ====\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=android+MQTT&ref=simplesearch\" target=\"_blank\">android客户端</a>\n<a href=\"https://www.hangge.com/blog/cache/detail_2350.html\" target=\"_blank\">航歌 - MQTTBox</a>\n<a href=\"https://www.cnblogs.com/yexiaopeng/p/8542894.html\" target=\"_blank\">Qt官方MQTT库的使用，附一个MqttClient例子</a>\n<a href=\"https://blog.csdn.net/qq_32865083/article/details/78638781\" target=\"_blank\">QT版MQTT客户端</a>\n<a href=\"https://www.chromefor.com/mqttlens_v0-0-14/\" target=\"_blank\">chrome插件MQTTLens</a>\n====  客户端 end  ====\n\n====  linux start  ====\n<a href=\"https://www.hangge.com/blog/cache/detail_2609.html\" target=\"_blank\">Docker - 在容器中搭建运行EMQ服务器（MQTT服务器）</a>\n<a href=\"https://blog.csdn.net/kxwinxp/article/details/86592457\" target=\"_blank\">CentOS上搭建EMQ MQTT服务器</a>\n```\ndocker run --name emqtt -p 18083:18083 -p 1883:1883 -p 8084:8084 -p 8883:8883 -p 8083:8083 -p 8080:8080 -d emqx/emqx\ndocker exec -it emqtt /bin/sh\n\nls /opt/emqx/etc\nacl.conf       certs          emqx.conf      lwm2m_xml      plugins        psk.txt        ssl_dist.conf  vm.args\n\nls /opt/emqx/etc/plugins\nacl.conf.paho                emqx_auth_jwt.conf           emqx_auth_redis.conf         emqx_delayed_publish.conf    emqx_psk_file.conf           emqx_sn.conf\nekka.conf.example            emqx_auth_ldap.conf          emqx_auth_username.conf      emqx_lua_hook.conf           emqx_recon.conf              emqx_statsd.conf\nekka.config.example          emqx_auth_mongo.conf         emqx_bridge_mqtt.conf        emqx_lwm2m.conf              emqx_reloader.conf           emqx_stomp.conf\nemqx_auth_clientid.conf      emqx_auth_mysql.conf         emqx_coap.conf               emqx_management.conf         emqx_retainer.conf           emqx_web_hook.conf\nemqx_auth_http.conf          emqx_auth_pgsql.conf         emqx_dashboard.conf          emqx_plugin_template.config  emqx_rule_engine.conf\n\n\n#EMQ配置“ClientId 认证”\ncat /opt/emqx/etc/plugins/emqx_auth_clientid.conf\nauth.client.1.clientid = id\nauth.client.1.password = passwd\nauth.client.password_hash = sha256\n\ncat /opt/emqx/etc/plugins/emqx_auth_username.conf\nauth.user.1.username = admin\nauth.user.1.password = public\nauth.user.password_hash = sha256\n\n\n# 开启匿名认证\ncat /opt/emqx/etc/emqx.conf | grep allow_anonymous\n## Allow Anonymous authentication\nallow_anonymous = true\n\n\n# 命令     作用\n/opt/emqx/bin/emqx start       # 启动emqtt\n/opt/emqx/bin/emqx stop        # 关闭emqtt\n/opt/emqx/bin/emqx restart     # 重启emqtt\n/opt/emqx/bin/emqx_ctl status  # 查看emqtt状态\n/opt/emqx/bin/emqx_ctl plugins load emqx_auth_clientid  # 加载认证插件\n\n# EMQ X R3.0 消息服务器默认占用的 TCP 端口包括:\n# 端口\t\t用途\n1883\tMQTT 协议端口\n8883\tMQTT/SSL 端口\n8083\tMQTT/WebSocket 端口\n8080\tHTTP API 端口\n18083\tDashboard 管理控制台端口\n```\n<a href=\"https://blog.csdn.net/u011267225/article/details/81982515\" target=\"_blank\">那些年用EMQ踩过的坑</a>\n\n\n参考：<a href=\"https://www.jianshu.com/p/dc0e8716a77a\" target=\"_blank\">centos 7 安装mqtt</a>\n```\n#docker run --name mqtt -p 18083:18083 -p 1883:1883 -p 8084:8084 -p 8883:8883 -p 8083:8083 -d centos\n\ndocker search mqtt\ndocker run --name mqtt -p 18083:18083 -p 1883:1883 -p 8084:8084 -p 8883:8883 -p 8083:8083 -d eclipse-mosquitto\ndocker attach mqtt\n\n\n# 安装\nyum install mosquitto mosquitto-clients\n# 启动mosquitto\nmosquitto -c /etc/mosquitto/mosquitto.conf -d\nmosquitto -v\n\n# 将1883 和8080端口打开（如果是阿里云服务器，需要去阿里云后台安全组策略管理页面打开端口）\n# firewall-cmd --zone=public --add-port=1883/tcp --permanent\n# firewall-cmd --zone=public --add-port=8080/tcp --permanent\n# firewall-cmd --reload\n\nWebSocket地址:\n192.168.99.100:8083/mqtt\n\nTCP端口:\n1883\n```\n\n测试MQTT\n```\n# 订阅主题\nmosquitto_sub -v -t topicTest01\n\n# 发布内容\nmosquitto_pub -t topicTest01 -m TestMessage\n```\n\n\n<a href=\"https://www.hangge.com/blog/cache/detail_2609.html\" target=\"_blank\">航歌 - Docker - 在容器中搭建运行EMQ服务器（MQTT服务器）</a>\n\n<a href=\"https://blog.csdn.net/xj178926426/article/details/78832296\" target=\"_blank\">Centos7上安装Mosquitto和使用（源码方式）</a>\n```\nyum install -y c-ares-devel libwebsockets-devel.x86_64\nyum install mosquitto mosquitto-clients\n\n# 1 启动代理服务\n#在第一个终端中输入如下命令：\nmosquitto -v\n-v #打印更多的调试信息\n\n# 2 订阅主题\n#在第二个终端中输入如下命令：\nmosquitto_sub -v -t sensor\n-t #指定主题，此处为sensor \n-v #打印更多的调试信息\n\n# 3 发布内容\n#在第三个终端中输入如下命令：\nmosquitto_pub -t sensor -m 12\n-t #指定主题 \n-m #指定消息内容\n\n# 4 运行结果\n#当发布者推送消息之后，订阅者（也就是第二个终端）获得以下内容：\nsensor 12\n```\n\n\n<a href=\"https://www.cnblogs.com/saryli/p/8962624.html\" target=\"_blank\">MQTT服务器搭建--Mosquitto用户名密码配置</a>\n1.用户参数说明\n```\n/etc/mosquitto/mosquitto.conf\n# 不允许匿名\nallow_anonymous false\n\n# 配置用户密码文件\npassword_file /etc/mosquitto/pwfile\n\n# 配置topic和用户\nacl_file /etc/mosquitto/acl\n```\n\n2.添加用户信息\n```\n添加用户'admin'\nmosquitto_passwd -c /etc/mosquitto/pwfile admin\n```\n\n3.添加Topic和用户的关系\n```\n#cat acl\n#找到你要的topic --- 'a/b'\n\n#topic a/b\n#在下面添加\nuser admin\ntopic write mtopic/#\n\n#找到\n#This affects all clients\n#添加\nuser admin\ntopic read mtopic/#\n```\n\n4.用户认证测试\n```\nmosquitto -c /etc/mosquitto/mosquitto.conf\n\n#（订阅端）客户端启动：\nmosquitto_sub -h 192.168.1.100 -t mtopic -u admin -P 123456\n\n#（发布者）客户端启动：\nmosquitto_pub -h 192.168.1.100 -t mtopic -u admin -P 123456 -m \"test\"\n```\n\n<a href=\"https://www.cnblogs.com/lulipro/p/10914482.html\" target=\"_blank\">ubuntu搭建MQTT服务器</a>\n1、安装\n```\nsudo apt-add-repository ppa:mosquitto-dev/mosquitto-ppa     #添加源到软件仓库\nsudo apt-get update                                         #更新软件仓库列表\nsudo apt-get install mosquitto                              #安装mosquitto\n```\n2、试运行\n```\nsudo service mosquitto status                               #查看运行状态\nsudo service mosquitto start                                #启动服务\nsudo service mosquitto stop                                 #停止服务\n```\n3、添加和修改配置\n```\nsudo service mosquitto stop   #首先停止服务\n\n#用户的局部配置文件放在： /etc/mosquitto/conf.d/目录下，并且这个目录下的所有以.conf后缀的文件都将被mosquitto作为配置文件，在启动时加载。\n#在/etc/mosquitto/conf.d目录下，新建myconfig.conf配置文件\n#在其中输入如下内容\n#-------------------------------------------\n# 关闭匿名访问，客户端必须使用用户名\nallow_anonymous false\n\n#指定 用户名-密码 文件\npassword_file /etc/mosquitto/pwfile.txt\n```\n4、创建一个MQTT服务器账户\n```\n#假设用户名为:\nuser1\n#在命令行运行：\nmosquitto_passwd -c /etc/mosquitto/pwfile.txt user1\n#回车后连续输入2次用户密码即可\n```\n5、重新启动mosquitto\n```\n#启动服务\nsudo service mosquitto start\n```\n====  linux end  ====\n\n\n====  windows start  ====\n<a href=\"https://packages.emqx.io/emqx-ee/v3.4.5/emqx-ee-windows-v3.4.5.zip\" target=\"_blank\">emqx-ee-windows-v3.4.5.zip</a>\n```\nemqx install\nemqx start\n\n# 在浏览器中输入\nhttp://localhost:18083/\n\n输入用户名：\nadmin\n密码：\npublic\n```\n\n<a href=\"https://blog.csdn.net/wolinghuanyun/article/details/53492189\" target=\"_blank\">Windows环境下搭建MosQuitto服务器</a>\n```\n模块\t功能\nmosquitto.conf\tmosquitto服务器的配置文件\nmosquitto\t用来开启broker\nmosquitto_passwd\t用来设置用户的账号与密码\nmosquitto_pub\t用来发布消息\nmosquitto_sub\t用来订阅消息\npwfile.example\t通过mosquitto_passwd来存储用户的账号密码的文件\n```\n\n<a href=\"https://blog.csdn.net/pgpanda/article/details/51800865\" target=\"_blank\">windows + mosquitto + mqtt + Cygwin64</a>\nmosquitto64位版与Cygwin64位版：\n```\n链接：\nhttp://pan.baidu.com/s/1o8Swnv8\n密码：\nsi95\n\n链接：\nhttp://pan.baidu.com/s/1dEW2eq9\n密码：\nmyj1\n\nCygwin64添加源\nhttp://mirrors.163.com/cygwin/x86_64\n```\n\n<a href=\"https://github.com/emqtt/qmqtt\" target=\"_blank\">github qmqtt</a>\n\n\n<a href=\"https://blog.csdn.net/github_33304260/article/details/73692589\" target=\"_blank\">MQTT + android 实现消息推送</a>\n\n大家只需要更换自己的IP地址就可以用了\n<a href=\"http://download.csdn.net/detail/github_33304260/9879717\" target=\"_blank\">DEMO地址</a>\n\n\n<a href=\"https://github.com/libin7278/ImageLoader\" target=\"_blank\">博客github</a>\n====  windows end  ====\n\n===============================  MQTT end  ===============================\n\n\n\n\n===============================  zigbee start  ===============================\n<a href=\"https://www.bilibili.com/video/av57387117\" target=\"_blank\">基于zigbee的智能家居管理系统</a>\n\n\n基于zigbee和stm32的智能家居系统，上位机使用Qt编写，实现了基本的监控。主要包括监控室内温度、湿度、烟雾浓度，用led灯模拟控制家中的灯。界面良好\n<a href=\"https://gitee.com/sunshare21/SmartHOme-ARM\" target=\"_blank\">SmartHOme-ARM</a>\n\n<a href=\"https://github.com/Raymaa/SmartHouse\" target=\"_blank\">github 全栈 SmartHouse</a>\n```\n#基于STM32单片机，硬件传感器感知室内环境数据并上传至服务器，具有通过前端页面，手机App远程实时监控室内环境、控制相应设备和远程预警等功能。\n\nAndroid/SmartHome\nWeb前端\nWeb后端/SmartHome\nimg\n嵌入式\nREADME.md\n```\n\n<a href=\"https://blog.csdn.net/u013704336/article/details/51765397\" target=\"_blank\">基于ZigBee和STM32的智能家居控制系统的设计与实现(五)--终结篇</a>\n```\nhttps://github.com/kevinlq/SmartHome-Qt\nhttps://github.com/kevinlq\n```\n\n<a href=\"https://blog.csdn.net/weixin_42827999/article/details/93598213\" target=\"_blank\">STM32F429与CC2530 ZigBee模块通信</a>\n```\nSTM32 与 ZigBee 接线如下：\nVCC -----> VCC\nGND -----> GND\nTXD -----> RXD\nRXD -----> TXD\n```\n\n===============================  zigbee end  ===============================","tags":["物联网"]},{"title":"[单片机+qt+arm+stm32] 流浪的鹅卵石","url":"/2020/01/06//articles/2020/01/06/1578311643000.html/","content":"<a href=\"http://kevinlq.com/categories/#ARM%E5%AD%A6%E4%B9%A0\" target=\"_blank\">鹅卵石 ARM学习</a>\n<a href=\"https://github.com/kevinlq/SmartHome-Qt\" target=\"_blank\">SmartHome-Qt</a>\n","tags":["单片机+qt+arm+stm32"]},{"title":"[vbox] 常用快捷键+扩展虚拟分区","url":"/2020/01/06//articles/2020/01/06/1578311642000.html/","content":"\n查看虚拟硬盘：\n```\nVBoxManage list hdds\n\nVBoxManage showhdinfo \"G:\\VirtualBox\\ubuntu18\\ubuntu18.vdi\"\n\n#MB\nset /a 40*1024\n\n#Byte\nset /a 516*1024*1024\n\n15805aaa-dc04-487f-9454-664835a38cdc\n\nVBoxManage.exe modifyhd 15805aaa-dc04-487f-9454-664835a38cdc --resize 40960\n\nVBoxManage.exe modifyhd 15805aaa-dc04-487f-9454-664835a38cdc --resizebyte 541065216\n```\n\nubuntu18中分区\n```\ndf -ah\n\n#开始分区\nsudo fdisk /dev/sda\n\n首先输入命令：n(添加新分区)之后回车：\n接着输入命令： p\n剩下步骤全按回车默认，\n最后输入命令w保存分区信息。\n\nfdisk -l\n```\n\n\nOracle VM VirtualBox各种显示模式切换热键\n```\n初用VirtualBox, 几个显示切换快捷键还是要记一下的:\n\nRight Ctrl + F        -- 切换到全屏模式\n\nRight Ctrl + L        -- 切换到无缝模式\n\nRight Ctrl + C        -- 切换到比例模式\n\nRight Ctrl + Home     -- 显示控制菜单\n```\n\n<a href=\"https://blog.csdn.net/tanningzhong/article/details/80482994\" target=\"_blank\">Virtualbox 扩展虚拟磁盘空间大小</a>\n\n<a href=\"https://blog.csdn.net/ouyang_peng/article/details/53261599\" target=\"_blank\">VirtualBox如何扩展虚拟机Ubuntu的硬盘容量？</a>\n\n<a href=\"https://blog.csdn.net/LEON1741/article/details/56494797\" target=\"_blank\">VirtualBox ubuntu gparted</a>\n","tags":["vbox"]},{"title":"[qt] ubuntu+clang+opencv环境","url":"/2020/01/06//articles/2020/01/06/1578311640000.html/","content":"\n安装clang++与opencv\n```\nsudo apt-get install -y clang build-essential libqt4-dev mesa-libGL-devel libssl-dev\nsudo apt-get install -y libssl-dev\nsudo apt-get install -y opencv\n```\n\nubuntu安装opencv\n```\nsudo apt install pkg-config\npkg-config --modversion opencv\nsudo apt-get -y install cmake\nsudo apt-get -y install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg.dev libtiff4.dev libswscale-dev libjasper-dev\n```\n\n\n<a href=\"https://www.jianshu.com/p/f646448da265\" target=\"_blank\">Ubuntu 16.04 安装Opencv 3.4.3</a>\n<a href=\"https://blog.csdn.net/lumingha/article/details/88819631\" target=\"_blank\">ubuntu16.04安装Opencv3.4.0</a>\n```\nsudo apt-get install update\nsudo apt-get install cmake\nsudo apt-get install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg.dev libtiff4.dev libswscale-dev libjasper-dev  \n\ncd opencv\nmkdir build && cd build\ncmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..\n\nsudo make\nsudo make install\nsudo gedit /etc/ld.so.conf.d/opencv.conf\nsudo ldconfig && cd /usr/local/lib\n#配置bash\nsudo gedit /etc/bash.bashrc\n```\n\n<a href=\"https://blog.csdn.net/echoamor/article/details/83022352\" target=\"_blank\">Ubuntu16.04安装配置opencv3.4.3+opencv_contrib3.4.3</a>\n```\nsudo apt-get install cmake-gui\n```\n","tags":["qt"]},{"title":"[ubuntu] arm交叉编译","url":"/2020/01/06//articles/2020/01/06/1578311639000.html/","content":"\n```\nsudo apt-get install libfontconfig1-dev libfreetype6-dev libx11-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libx11-xcb-dev libxcb-glx0-dev\n\nsudo apt-get install libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev\n```\n\n<a href=\"https://www.veryarm.com/53209.html\" target=\"_blank\">Ubuntu 14.04系统下安装和编译QT 5.9.2库（桌面版ARM嵌入式IMX6版）</a>\n\n","tags":["ubuntu"]},{"title":"[idea] tomcat调试","url":"/2020/01/06//articles/2020/01/06/1578311637000.html/","content":"```\n启用IDEA debug里的JAVA_OPTS，把Transport改成Shared memory即可\n```\n","tags":["idea"]},{"title":"[linux] jar包启动与发布脚本","url":"/2020/01/01//articles/2020/01/01/1577823565000.html/","content":"\nstart.sh\n```\n#!/bin/bash \nnohup java -Xms512m -Xmx512m -jar app.jar > app.log 2>&1 &\n#record the process id\necho $!>pid\n```\n\nstop.sh\n```\nkill `cat pid`\n```\n","tags":["linux"]},{"title":"[linux] 常用命令","url":"/2020/01/01//articles/2020/01/01/1577823565000.html/","content":"<a href=\"https://www.cnblogs.com/xuxinstyle/p/9609551.html\" target=\"_blank\">linux常用命令（50个）</a>\n\n<a href=\"https://blog.csdn.net/qq_23329167/article/details/83856430\" target=\"_blank\">Linux常用命令</a>\n\n<a href=\"https://www.cnblogs.com/guanbin-529/p/11227069.html\" target=\"_blank\">Linux添加用户组和添加用户</a>\n","tags":["linux"]},{"title":"[板绘] 城市","url":"/2020/01/01//articles/2020/01/01/1577823564000.html/","content":"<a href=\"https://www.bilibili.com/video/av45666195\" target=\"_blank\">【高漫】板绘过程，科技城市场景绘画过程及技巧</a>\n","tags":["板绘"]},{"title":"[springboot] 各种常见支付","url":"/2020/01/01//articles/2020/01/01/1577823563000.html/","content":"<a href=\"https://blog.csdn.net/vbirdbest/article/details/80726616\" target=\"_blank\">Spring Boot入门教程(四十二):微信支付集成-H5支付</a>\n\n<a href=\"https://github.com/mengday/springboot-pay-example\" target=\"_blank\">springboot-pay-example</a>\n```\n支付宝支付接口:\n\nAlipayController 支付宝-通用接口(包含对账)\nAlipayF2FPayController 支付宝-当面付\nAlipayPagePayController 支付宝-电脑网站支付\nAlipayWAPPayController 支付宝-手机网站支付\n\n\n微信支付接口:\n\nWXPayController 微信支付-通用接口\nWXPayMicroPayController 微信支付-刷卡支付\nWXPayPrecreateController 微信支付-扫码支付\nWXPayH5PayController 微信支付-H5支付\n```\n\n基于Spring Boot 和 WxJava 实现的微信支付Java后端Demo，含沙箱账号\n<a href=\"https://github.com/binarywang/weixin-java-pay-demo\" target=\"_blank\">springboot-pay-example</a>\n<a href=\"https://mvnrepository.com/artifact/com.alipay.sdk/alipay-sdk-java\" target=\"_blank\">alipay-sdk-java</a>\n<a href=\"https://gw.alipayobjects.com/os/rmsportal/myxIyQqTYkYZORcwIhkU.zip\" target=\"_blank\">alipay-trade-sdk-20161215.jar</a>\n\n支付宝和微信支付的使用Demo\n<a href=\"https://github.com/easy-pay/spring-boot-easy-pay-demo\" target=\"_blank\">含有docker-compose</a>\n","tags":["springboot"]},{"title":"[docker] 实用例子大全","url":"/2020/01/01//articles/2020/01/01/1577823562000.html/","content":"<a href=\"https://www.jianshu.com/p/77af52a75ad8\" target=\"_blank\">使用docker搭建nexus并配置docker私有仓库</a>\n```\nmkdir nexus && cd nexus\nmkdir nexus-data\n\ndocker run -d --name nexus3  --privileged=true \\\n--restart=always \\\n-p 8088:8081 \\\n-p 8082:8082 \\\n-p 8083:8083 \\\n-p 8084:8084 \\\n-p 8085:8085 \\\n-v ./nexus-data:/nexus-data \\\nsonatype/nexus3\n\ndocker logs nexus3\n\ncurl -u admin:admin123 http://192.168.2.101:8081/service/metrics/ping\n```\n\n<a href=\"https://blog.csdn.net/myNameIssls/article/details/99702877\" target=\"_blank\">基于 Docker 安装 RabbitMQ</a>\n```\ndocker run --name rabbitmq -d -p 15672:15672 -p 5672:5672 rabbitmq:management\n```\n访问\n```\ndocker-machine ip\nhttp://ip:15672\n\nRabbitMQ默认的用户名：\nguest\n密码：\nguest\n```\n\n<a href=\"https://www.jianshu.com/p/c486133a70e4\" target=\"_blank\">基于 Docker 安装 Zookeeper</a>\n\n<a href=\"https://github.com/wt-git-repository/zookeeper-sample\" target=\"_blank\">zookeeper-sample</a>\n```\n# 集群启动命令\nCOMPOSE_PROJECT_NAME=zk_test docker-compose up\n\n# docker 作为客户端连接\ndocker run -it --rm \\\n--link zoo1:zk1 \\\n--link zoo2:zk2 \\\n--link zoo3:zk3 \\\n--net zktest_default \\\n--name zkClient \\\nzookeeper\n\n# 进入容器执行\nzkCli.sh -server zk1:2181,zk2:2181,zk3:2181\n```\n\n<a href=\"https://segmentfault.com/a/1190000014325300\" target=\"_blank\">jenkins+maven+docker+github全自动化部署SpringBoot实例</a>\n\n\n<a href=\"https://blog.csdn.net/dandandeshangni/article/details/80041425\" target=\"_blank\">SpringBoot+Docker+Git+Jenkins实现简易的持续集成和持续部署</a>\n<a href=\"https://github.com/longfeizheng/sso-merryyou\" target=\"_blank\">sso-merryyou</a>\n\n\n<a href=\"https://github.com/intomylife/Docker\" target=\"_blank\">github Docker</a>\n```\n#docker-compose 快速部署前后端分离项目\ndocker-compose-rapid-deployment\n\n#docker-compose 部署 SpringBoot + Redis + MySQL + Nginx\ndocker-compose\n\n# Docker 部署 SpringBoot + MySQL 项目\ndocker-springboot-mysql\n\n# Docker 部署 SpringBoot + Nginx 实现负载均衡\t\ndocker-springboot-nginx\n\n# Docker 部署 SpringBoot + Redis 项目\ndocker-springboot-redis\n\n# Docker 简单部署 SpringBoot 项目\ndocker-springboot\n\n#Docker 简单部署 SpringCloud 项目\ndocker-springcloud\n```\n\n","tags":["docker"]},{"title":"[docker] 容器、镜像导入导出","url":"/2020/01/01//articles/2020/01/01/1577823561000.html/","content":"容器备份\n```\n# 1.导出镜像到文件\ndocker save -o /path/to/docker-tomcat.tar tomcat\n\n# 2.从文件导入成镜像\ndocker load --input docker-tomcat.tar\n\ndocker export\ndocker import\n```\n","tags":["docker"]},{"title":"[springboot] 打成war包","url":"/2019/12/30//articles/2019/12/30/1577712574000.html/","content":"<a href=\"https://www.cnblogs.com/xjxz/p/6755918.html\" target=\"_blank\">查看tomcat日志</a>\n```\ncd /usr/local/tomcat/tomcat8/logs\ntail -f catalina.out\n```\n\n<a href=\"https://blog.csdn.net/qq_34381084/article/details/81485319\" target=\"_blank\">springboot项目如何打包成war包</a>\n```\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <!--去除内嵌tomcat-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n            <scope>provided</scope>\n        </dependency>\n        <!--websocket依赖包-->\n        <dependency>\n            <groupId>org.apache.tomcat.embed</groupId>\n            <artifactId>tomcat-embed-websocket</artifactId>\n            <version>8.5.23</version>\n        </dependency>\n```\n\n注释掉ServerEndpointExporter\n```\n    @Bean\n    public ServerEndpointExporter serverEndpointExporter() {\n        return new ServerEndpointExporter();\n    }\n```\n\n<a href=\"https://www.cnblogs.com/fanshuyao/p/6741994.html\" target=\"_blank\">报错：this web application instance has been stopped already</a>\n```\ntomcat/conf/server.xml\n\n<Context path=\"\" docBase=\"/home/java/tomcat7/webapps/finance\" debug=\"0\" reloadable=\"false\"/>  \n\n<Host name=\"localhost\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" reloadable=\"false\">\n```\n","tags":["springboot"]},{"title":"[linux] 查看服务器类型","url":"/2019/12/30//articles/2019/12/30/1577712573000.html/","content":"```\ndmidecode | grep \"Product Name\"\n```\n","tags":["linux"]},{"title":"[nginx] 配置多个upstream","url":"/2019/12/30//articles/2019/12/30/1577712572000.html/","content":"<a href=\"https://www.cnblogs.com/xjxz/p/6755918.html\" target=\"_blank\">查看tomcat日志</a>\n```\ndocker run --name tomcat -d -i -t centos /bin/bash\ndocker attach tomcat\n```\n\ncentos安装jdk8\n```\nyum search java|grep jdk\nyum install -y java-1.8.0-openjdk\n```\n\n直接安装nginx\n```\nyum install -y nginx\nrpm -ql nginx\ncd /etc/nginx/\nvi nginx.conf\n\nnginx -t -c /etc/nginx/nginx.conf\n\ncurl localhost:9090\n```\n\n<details>\n<summary>（不推荐）centos配置nginx</summary>\n\n```\nyum -y install gcc gcc-c++ automake autoconf make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel\n\nwget -c https://nginx.org/download/nginx-1.10.1.tar.gz\ntar -zxvf nginx-1.10.1.tar.gz;mv nginx-1.10.1 nginx;cd nginx\n./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module\nmake && make install\n\ncd /usr/local/nginx/sbin/\n./nginx \n./nginx -s stop\n./nginx -s quit\n./nginx -s reload\n```\n</details>\n\n启动tomcat\n```\nwget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz\ntar zxvf apache-tomcat-8.5.50.tar.gz;mv apache-tomcat-8.5.50 /usr/local/tomcat8;cd /usr/local/tomcat8/bin\nbash startup.sh\ncurl localhost:8080\n```\n\n配置两个upstream\nnginx.conf（注意access_log对应路径日志文件要存在）\n```\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    include /etc/nginx/conf.d/*.conf;\n\n    upstream tomcat {\n      server 127.0.0.1:8080;\n    }\n\n    upstream webService {\n       server  127.0.0.1:8081;\n    }\n\n    server {\n        listen       9090 default_server;\n        listen       [::]:9090 default_server;\n        server_name  127.0.0.1;\n        root         /usr/share/nginx/html;\n\n        include /etc/nginx/default.d/*.conf;\n\n        location  /service1 {\n           proxy_pass  http://tomcat/service1;\n        }\n\n        location  /service2 {\n           proxy_pass  http://webService/service2;\n        }\n    }\n}\n```\n","tags":["nginx"]},{"title":"[Dockerfile] mysql通过脚本导入sql","url":"/2019/12/30//articles/2019/12/30/1577712571000.html/","content":"<details>\n<summary>Dockerfile</summary>\n\n```\nFROM mysql:5.7.20\n\n#设置免密登录\nENV MYSQL_ALLOW_EMPTY_PASSWORD yes\n\n#将所需文件放到容器中\nCOPY setup.sh /mysql/setup.sh\nCOPY schema.sql /mysql/schema.sql\nCOPY privileges.sql /mysql/privileges.sql\n\n#设置容器启动时执行的命令\nCMD [\"sh\", \"/mysql/setup.sh\"]\n```\n</details>\n\n<details>\n<summary>setup.sh</summary>\n\n```\n#!/bin/bash\nset -e\n\n#查看mysql服务的状态，方便调试，这条语句可以删除\necho `service mysql status`\n\necho '1.启动mysql....'\n#启动mysql\nservice mysql start\nsleep 3\necho `service mysql status`\n\necho '2.开始导入数据....'\n#导入数据\nmysql < /mysql/schema.sql\necho '3.导入数据完毕....'\nsleep 3\necho `service mysql status`\n\n#重新设置mysql密码\necho '4.开始修改密码....'\nmysql < /mysql/privileges.sql\necho '5.修改密码完毕....'\nsleep 3\necho `service mysql status`\n\necho `mysql容器启动完毕,且数据导入成功`\n\ntail -f /dev/null\n```\n</details>\n\n<details>\n<summary>schema.sql</summary>\n\n```\n-- 创建数据库\ncreate database `docker_mysql` default character set utf8 collate utf8_general_ci;\n\nuse docker_mysql;\n\n-- 建表\nDROP TABLE IF EXISTS `user`;\n\nCREATE TABLE `user` (\n `id` bigint(20) NOT NULL,\n `created_at` bigint(40) DEFAULT NULL,\n `last_modified` bigint(40) DEFAULT NULL,\n `email` varchar(255) DEFAULT NULL,\n `first_name` varchar(255) DEFAULT NULL,\n `last_name` varchar(255) DEFAULT NULL,\n `username` varchar(255) DEFAULT NULL,\n PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1;\n\n-- 插入数据\nINSERT INTO `user` (`id`, `created_at`, `last_modified`, `email`, `first_name`, `last_name`, `username`) VALUES (0,1490257904,1490257904,'john.doe@example.com','John','Doe','user');\n```\n</details>\n\n<details>\n<summary>privileges.sql</summary>\n\n```\nuse mysql;\nselect host, user from user;\n-- 因为mysql版本是5.7，因此新建用户为如下命令：\ncreate user docker identified by '123456';\n-- 将docker_mysql数据库的权限授权给创建的docker用户，密码为123456：\ngrant all on docker_mysql.* to docker@'%' identified by '123456' with grant option;\n-- 这一条命令一定要有：\nflush privileges;\n```\n</details>\n\n替换换行符\n```\nsed -i 's/\\r$//' setup.sh\nsed -i 's/\\r$//' schema.sql\nsed -i 's/\\r$//' privileges.sql\n```\n\n构建镜像\n```\ndocker build . -t docker-mysql-init-data\n```\n\n启动容器\n```\ndocker run --name dockermysql -p 13306:3306 -d docker-mysql-init-data\n```\n\n结果验证\n```\ndocker logs dockermysql\n\ndocker exec -it dockermysql /bin/bash\n\n#输入密码123456通过登录验证\nmysql -udocker -p123456\n\n#切换至docker_mysql数据库\nuse docker_mysql;\n\n-- 查看数据库中的表：\nshow tables;\n\n-- 查看表中的数据：\nselect * from user;\n```\n","tags":["Dockerfile"]},{"title":"[aria2] windows下载工具","url":"/2019/12/29//articles/2019/12/29/1577610398000.html/","content":"<a href=\"https://blog.csdn.net/weixin_41594045/article/details/83063327\" target=\"_blank\">Windows 下 Aria2+BaiduExporter+Chrome浏览器 破解百度云盘</a>\n<a href=\"https://pan.baidu.com/s/1nuRSFzz\" target=\"_blank\">aria2.zip</a>\n<a href=\"https://cdn.51shenyun.cn/Aria2_Win_config.zip\" target=\"_blank\">Aria2_Win_config.zip</a>\n","tags":["aria2"]},{"title":"[android] 签名证书","url":"/2019/12/29//articles/2019/12/29/1577610397000.html/","content":"```\n# 生成jks证书文件\nkeytool -genkey -alias android.keystore -keyalg RSA -validity 36500 -keystore android.keystore\n\n# android证书jks转p12\nkeytool -importkeystore -srckeystore android.keystore -srcstoretype JKS -deststoretype PKCS12 -destkeystore android.p12\n\n# 查看keystore文件\nkeytool -list -v -keystore android.keystore\n\n# 提取证书文件\nopenssl pkcs12 -in android.p12 -nokeys -out cert.pem\n\n# 查看证书文件\nopenssl x509 -in cert.pem -text\n```\n","tags":["android"]},{"title":"[stm8] NRF24L01","url":"/2019/12/29//articles/2019/12/29/1577593138000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-99783-1.html\" target=\"_blank\">众拳基于STM8的NRF24L01 2.4G无线模块实验详解 含程序</a>\n<a href=\"http://c.51hei.com/pro/down.php?h=7&e=661630&c=99838&host=forum/201711/28/131758hxeiojzxxurejlp2.zip&name=%22%D6%DA%C8%AD%BD%A3%B3%DD%BB%A2NRF24L01%202.4G%CE%DE%CF%DF%C4%A3%BF%E9%CA%B5%D1%E9%B3%CC%D0%F2.zip%22\" target=\"_blank\">众拳剑齿虎NRF24L01 2.4G无线模块实验程序.zip</a>\n\n<a href=\"https://blog.csdn.net/weixin_43314452/article/details/90316955\" target=\"_blank\">stm8s使用NRF24L01</a>\n<a href=\"https://github.com/ARENIBDelta/rf24l01_stm8s\" target=\"_blank\">github rf24l01_stm8s</a>\n","tags":["stm8"]},{"title":"[stm8] STM8基础学习+资料","url":"/2019/12/29//articles/2019/12/29/1577593137000.html/","content":"<a href=\"https://www.strongerhuang.com/\" target=\"_blank\">www.strongerhuang.com一名90后嵌入式开发程序员</a>\n<a href=\"https://blog.csdn.net/ybhuangfugui/article/details/52936636\" target=\"_blank\">IAR for STM8介绍、下载、安装与注册</a>\n\n<a href=\"http://pan.baidu.com/s/1slF5kYx\" target=\"_blank\">度娘 - IAR for STM8软件安装包的下载链接</a>\n<a href=\"http://pan.baidu.com/s/1c2EcRo0\" target=\"_blank\">度娘 - STM8S系列教程对应的源代码例程</a>\n<a href=\"https://github.com/EmbeddedDevelop/STM8S_Demo\" target=\"_blank\">github STM8S_Demo</a>\n\n\n<a href=\"http://www.prechin.net/forum.php?mod=viewthread&tid=35264&extra=\">普中科技--各型号开发板资料下载链接</a>\n<a href=\"https://pan.baidu.com/s/1Esp4APulTzrm1e6kexkN9A\">8--STM8S例程.rar</a>\n```\n提取码：\n3mul\n```\n\n<a href=\"https://www.bilibili.com/video/av45083743\" target=\"_blank\">STM8基础学习</a>\n```\n P1 STM8_2---初识STM8单片机家族\n P2 STM8_3---IAR工程建立及使用\n P3 STM8_4---STVD工程建立及使用\n P4 STM8_5---STVP使用及串口下载\n P5 STM8_6---初识GPIO及输入模式\n P6 STM8_7---输出模式及特点\n P7 STM8_8---引脚标识及方向配置\n P8 STM8_9---GPIO输入输出配置\n P9 STM8_10---神奇有趣的LED\nP10 STM8_11---数码管原理及驱动\nP11 STM8_12---初探字符型1602液晶\nP12 STM8_13---字符型1602液晶编程\nP13 STM8_14---初探图形点阵12864液晶\nP14 STM8_15---图形点阵12864液晶编程\nP15 STM8_16---独立按键与矩阵键盘\nP16 STM8_17---PS2接口及数据帧组成\nP17 STM8_18-PS2相关码值及通信流程\nP18 STM8_19---高楼大厦说存储器结构A\nP19 STM8_20---高楼大厦说存储器结构B\nP20 STM8_21---Flash编程方式简介\nP21 STM8_22---神秘的存储器保护机制\nP22 STM8_23---“外科手术”选项字节A\nP23 STM8_24---“外科手术”选项字节B\nP24 STM8_25---“唐僧的心”时钟源和时钟树\nP25 STM8_26---配置系统主时钟为HSI\nP26 STM8_27---配置系统主时钟为HSE\nP27 STM8_28-配置系统主时钟为LSI\nP28 STM8_29---时钟门控、时钟安全及时钟输出\nP29 STM8_30---中断概念及中断基础\nP30 STM8_31---中断向量、函数及模式\nP31 STM8_32---中断寄存器及处理方法讲解\nP32 STM8_33---定时计数器本质与基础\nP33 STM8_34---TIM4寄存器配置及应用\nP34 STM8_35-TIM1基础与定时功能\nP35 STM8_36---TIM1外模式1计数功能\nP36 STM8_37---TIM1外模式2计数功能\nP37 STM8_38---输入捕获之周期测量\nP38 STM8_39---输入捕获之占空比测量\nP39 STM8_40---输出比较PWM与对齐方式\nP40 STM8_41---PWM信号输出流程配置\nP41 STM8_42---电源模式管理及功耗控制\nP42 STM8_43---自动唤醒AWU结构及配置\nP43 STM8_44---神奇的电磁讯响器\nP44 STM8_45---独立看门狗IWDG配置\nP45 STM8_46---窗口看门狗WWDG配置\nP46 STM8_47-单片机数据通信基础A\nP47 STM8_48---单片机数据通信基础B\nP48 STM8_49---初识串口及数据帧配置\nP49 STM8_50---波特率配置及串口收发\nP50 STM8_51---“独木桥”之单总线通信\nP51 STM8_52---DS18B20数据格式及转换\nP52 STM8_53---DS18B20读写及时序编程\nP53 STM8_54---“击鼓传花”走进SPI通信\nP54 STM8_55---SPI寄存器功能及运用\nP55 STM8_56---主从机初始化流程及通信\nP56 STM8_57---华邦W25Qxx存储颗粒简介\nP57 STM8_58---华邦W25Qxx操作指令及时序\nP58 STM8_59---“升堂审案”说I2C基础\nP59 STM8_60---轻松搞定AT24Cxx读写时序\nP60 STM8_61---“翻译官”ADC原理及结构\nP61 STM8_62---ADC配置与系统可靠性\n```\n","tags":["stm8"]},{"title":"[springcloud] 启动顺序","url":"/2019/12/29//articles/2019/12/29/1577593136000.html/","content":"启动顺序\n```\nzuul-gateway\nservice-provider\nhystrix-turbine\nfeign-consumer\neureka-server\n```\n","tags":["springcloud"]},{"title":"[Dockerfile] springboot+打包命令","url":"/2019/12/29//articles/2019/12/29/1577593135000.html/","content":"\nwindows上先打开 \"Docker Quickstart Terminal\"\n```\nmvn clean package dockerfile:build -Dmaven.test.skip=true\n```\n\n查看windows访问服务网址所需ip\n```\ndocker-machine ip\n```\n\nspringboot使用dockerfile docker远程api端口打包上传镜像demo案例\n<a href=\"https://gitee.com/JavaLionLi/springboot-docker-demo\" target=\"_blank\">springboot-docker-demo</a>\n\n<a href=\"https://github.com/yunTerry/Spring-Cloud-Docker\" target=\"_blank\">Docker Compose 轻量级容器编排</a>\n```\nmvn clean package\n\n# 构建Docker镜像\ndocker-compose build\n\n# 运行所有容器\ndocker-compose up -d\n\n# 停止所有微服务\ndocker-compose stop\n\n# 删除所有容器\ndocker-compose rm\n```\n\n<a href=\"https://github.com/zzzzbw/Fame\" target=\"_blank\">docker springboot vue前后端分离</a>\n```\nfame-admin\nfame-docker\nfame-front\nfame-server\ndocker-compose.yml\n```\n\n<a href=\"https://gitee.com/catoop/springboot-docker\" target=\"_blank\">springboot-docker</a>\n```\n#打包\nmvn clean package -Dmaven.test.skip=true\n#启动\njava -jar target/spring-boot-docker-1.0.jar\n#访问\nhttp://192.168.99.101:8080\n```\n","tags":["Dockerfile"]},{"title":"[nginx] https+springboot","url":"/2019/12/28//articles/2019/12/28/1577533870000.html/","content":"```\nyum install -y gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl--devel\ncd /usr/local;wget http://nginx.org/download/nginx-1.7.4.tar.gz\ntar -zxvf nginx-1.7.4.tar.gz;cd nginx-1.7.4\n\n./configure --prefix=/usr/local/nginx --with-http_ssl_module\nmake\nmake install\n\nwhereis nginx\n\n#启动\n/usr/local/nginx/sbin/nginx\n\nps aux | grep nginx\n\nvim /usr/local/nginx/conf/nginx.conf\n```\n\n<a href=\"https://www.jianshu.com/p/8373f97d7514\" target=\"_blank\">nginx配置https+springboot</a>\nopenssl生成https证书\n```\nopenssl req -new -nodes -newkey rsa:2048 -keyout server.key -out server.csr \nopenssl req -new -x509 -key server.key -out ca.crt -days 3650\nopenssl x509 -req -days 3650 -in server.csr -CA ca.crt -CAkey server.key -CAcreateserial -out server.crt\n\ncp server.key /usr/local/nginx/ssl/\ncp server.crt /usr/local/nginx/ssl/\n```\n\n\n<a href=\"https://blog.csdn.net/fenglin0429/article/details/81347634\" target=\"_blank\">SpringBoot + Nginx 配置HTTPS的一次经历</a>\n<a href=\"https://www.cnblogs.com/b516/p/10916522.html\" target=\"_blank\">upstream配置(127.0.0.1)</a>\n","tags":["nginx"]},{"title":"[小程序] 功能拆分","url":"/2019/12/28//articles/2019/12/28/1577489989000.html/","content":"搜索框\n<a href=\"https://github.com/mindawei/wsSearchView\" target=\"_blank\">wsSearchView</a>\n\n天气查询\n<a href=\"https://github.com/mindawei/weather\" target=\"_blank\">weather</a>\n\n文本折叠\n<a href=\"https://blog.csdn.net/qq_29644709/article/details/87966016\" target=\"_blank\">微信小程序长文本点击折叠效果</a>\n","tags":["小程序"]},{"title":"[树莓派] 树莓派4B开机","url":"/2019/12/28//articles/2019/12/28/1577489988000.html/","content":"<a href=\"https://blog.csdn.net/yzy_1996/article/details/82916940\" target=\"_blank\">【方法】树莓派开机使用教程(看这个就够了)</a>\n\n<a href=\"https://pan.baidu.com/s/14UJlTrh20Z2ogceqCP7Olw\" target=\"_blank\">树莓派4B+工具</a>\n```\n提取码：\n4qlp\n```\n\n","tags":["树莓派"]},{"title":"[vue] 使用cordova打包apk","url":"/2019/12/28//articles/2019/12/28/1577489987000.html/","content":"<a href=\"https://www.cnblogs.com/jeremy5810/p/8467258.html\" target=\"_blank\">cnblogs Cordova打包vue项目(Android)</a>\n\n\n<a href=\"https://blog.csdn.net/qq_21963133/article/details/88546086\" target=\"_blank\">前端VUE项目打包成安卓APP 签名证书</a>\n```\n#folkmusic是项目名称，com.music.folkmusic是包名，musicapp是程序的标题\ncordova create folkmusic com.music.folkmusic musicapp\n\ncd folkmusic\ncordova platforms add android --save\ncordova run android\n\n#生成apk文件\ncordova build android\n\n#检查环境是否已经准备就绪\ncordova requirements\n\n#生成签名证书\nkeytool -genkey -v -keystore folkmusic.keystore -alias flokmusic -keyalg RSA -validity 36500\n\n#在项目的根目录下面新建一个build.json文件，在里面配置证书的一些配置信息\nbuild.json\n{\n  \"android\": {\n    \"release\": {\n    \"keystore\": \"folkmusic.keystore\",\n    \"alias\": \"flokmusic\",\n    \"storePassword\": \"123456\",\n    \"password\": \"123456\"\n    }\n  }\n}\n\n#apk签名\ncordova build android --release\n```\n\nwebpack + vue + vuex + vue-loader + keepAlive + muse-ui + cordova 全家桶\n<a href=\"https://github.com/kang558/vue-movie\" target=\"_blank\">vue-movie</a>\n\nVue实现的WanAndroid移动Web端，可使用Cordova打包成Android安装包apk\n<a href=\"https://github.com/Luogjy/wanAndroidWebApp\" target=\"_blank\">wanAndroidWebApp</a>\n","tags":["vue"]},{"title":"[springboot] 视频播放后台","url":"/2019/12/28//articles/2019/12/28/1577489986000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/Leme34/weixin-video\" target=\"_blank\">仿抖音小程序后台</a>\n\n<a href=\"https://segmentfault.com/a/1190000018778743\" target=\"_blank\">SpringBoot 仿抖音短视频小程序开发（一）</a>\n","tags":["springboot"]},{"title":"[linux] 网卡与防火墙","url":"/2019/12/28//articles/2019/12/28/1577489985000.html/","content":"测试连通\n```\nyum install inetutils-ping\nifconfig\nping x.x.x.x\n```\n\n```\n#常用端口和系统端口\n0 – 1023\n\n#软件的注册端口\n1024 – 49151\n\n#动态端口或私有端口\n49152 – 65535\n```\n\n<a href=\"http://www.pianshen.com/article/1203445123/\" target=\"_blank\">linux网络及端口配置问题</a>\n```\n#查看当前所有tcp端口\nnetstat -ntlp\n```\n\n<a href=\"https://www.cnblogs.com/chaos-li/p/9779558.html\" target=\"_blank\">Linux查看当前使用的网卡 以及 查看某进程使用的网络带宽情况 以及 端口占用的情况</a>\n```\n#查看当前使用的网卡\nwatch cat /proc/net/dev\n\n#如查看80端口\nlsof -i :80\n\nnetstat -tunlp |grep 80\n```\n\niptables查看、开放、删除端口、保存设置\n```\nhttps://www.centos.bz/2018/01/iptables%E6%9F%A5%E7%9C%8B%E3%80%81%E5%BC%80%E6%94%BE%E3%80%81%E5%88%A0%E9%99%A4%E7%AB%AF%E5%8F%A3%E3%80%81%E4%BF%9D%E5%AD%98%E8%AE%BE%E7%BD%AE/\n```\n\n<a href=\"https://www.jianshu.com/p/dece534c011a\" target=\"_blank\">Linux配置网卡</a>\n```\n#手动指定IP地址\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nDEVICE=eth0\nHWADDR=00:0C:29:8E:0B:00\nTYPE=Ethernet\nUUID=f23f083d-89af-4951-a33d-496d4534beb1\nONBOOT=yes\nNM_CONTROLLED=yes\nBOOTPROTO=static\nIPADDR=192.168.111.111\nNETMASK=255.255.255.0\nGATEWAY=192.168.111.2\n```\n\n<a href=\"https://help.aliyun.com/knowledge_detail/41319.html\" target=\"_blank\">CentOS7系统中使用iptables</a>\n\n<a href=\"https://blog.csdn.net/baidu_36124158/article/details/90603496\" target=\"_blank\">firewall-cmd</a>\n```\n18.在指定区域打开端口（记得重启防火墙）\nfirewall-cmd --zone=public --add-port=80/tcp\n\n10.查看指定接口所属区域信息\nfirewall-cmd --get-zone-of-interface=eth0\n\n14.将接口添加到区域(默认接口都在public)\nfirewall-cmd --zone=public --add-interface=eth0\n\n16.更新防火墙规则\nfirewall-cmd --complete-reload\n\n17.查看指定区域所有打开的端口\nfirewall-cmd --zone=public --list-ports\n```\n\n<a href=\"https://zhidao.baidu.com/question/144270449.html\" target=\"_blank\">双网卡 iptables设置问题</a>\n```\niptables -A INPUT -i eth0 -p tcp --dport 21 -j ACCEPT\niptables -A INPUT -i eth0 -p tcp --dport 80 -j ACCEPT\n#iptables -A INPUT -i eth0 -p tcp -j REJECT\n#默认的，不需要用任何命令，在eth1上就已经是接受所有端口了。\n```\n\n\n```\niptables -A INPUT -i eno1 -p tcp --dport 9027 -j ACCEPT\n```\n","tags":["linux"]},{"title":"[单片机] 控制风扇","url":"/2019/12/27//articles/2019/12/27/1577447590000.html/","content":"<a href=\"https://blog.csdn.net/qq_43336248/article/details/91443311\" target=\"_blank\">基于51单片机温度控制风扇转动</a>\n","tags":["单片机"]},{"title":"[单片机] 单片机三种烧录方式ISP、IAP和ICP","url":"/2019/12/27//articles/2019/12/27/1577447589000.html/","content":"```\nISP：In System Programing，在系统编程\n\nIAP：In applicaTIng Programing，在应用编程\n\nICP：In Circuit Programing，在电路编程\n```\n\n","tags":["单片机"]},{"title":"[单片机] 程序网站","url":"/2019/12/27//articles/2019/12/27/1577447588000.html/","content":"<a href=\"http://news.eeworld.com.cn/mcu/51mcu/\" target=\"_blank\">电子工程世界</a>\n","tags":["单片机"]},{"title":"[单片机] 博客","url":"/2019/12/27//articles/2019/12/27/1577447587000.html/","content":"<a href=\"https://blog.csdn.net/qq_21792169/category_5844033.html\" target=\"_blank\">HeroKern - MCU for 51</a>\n<a href=\"https://blog.csdn.net/qq_43588817/category_8674324.html\" target=\"_blank\">叶子丶de花 - 51笔记</a>\n\nESP8266 WIFI模块学习之路\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/81951529\" target=\"_blank\">（1）——模块的USB串口连接</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/81953193\" target=\"_blank\">（2）——模块与单片机连接进行远程操作</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/81989814\" target=\"_blank\">（3）——用手机APP进行功能控制LED灯</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82216952\" target=\"_blank\">（4）——WIFI模块与Android互相通信</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82220223\" target=\"_blank\">（5）——Android手机调试助手与单片机互相通信</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82289276\" target=\"_blank\">（6）——自写Android手机APP控制单片机LED灯</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82313787\" target=\"_blank\">（7）——自写Android手机APP接受单片机数据</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82355579\" target=\"_blank\">（8）——自写Android手机APP控制直流电机正反转</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/89226518\" target=\"_blank\">（9）——C++实现通过电脑串口读取ESP8266数据</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/89244697\" target=\"_blank\">（10）——手机远程关闭电脑</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/89247192\" target=\"_blank\">（11）——WIFI模块通过VC自动配置，实现远程关闭电脑</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/89305533\" target=\"_blank\">（12）——AT命令自动配置，实现远程关闭电脑</a>\n","tags":["单片机"]},{"title":"[单片机] USB转TTL模块连接PN532","url":"/2019/12/27//articles/2019/12/27/1577447586000.html/","content":"\n连接\n```\n\nSCL <---> RX\nSDA <---> TX\n\n```\n\n驱动\n<a href=\"http://tcy.198424.com/pl2303_installer.zip\" target=\"_blank\">pl2303_installer.zip</a>\n\n<a href=\"https://pan.baidu.com/s/1NjUdBYyqq6OlML5GAeDz2w\" target=\"_blank\">PN532 NFC RFID V3模块 近场通信，支持和手机通信 无线模块</a>\n```\n提取码：\noqw3 \n```\n\n程序\n<a href=\"https://github.com/zhangyuhu/STM32-PN532\" target=\"_blank\">github STM32-PN532</a>\n<a href=\"http://c.51hei.com/pro/down.php?h=7&e=661630&c=92550&host=forum/201708/11/191206fwu6ucuvwcuruc1p.rar&name=%22PN532%B6%C1%D0%B4%BF%A8%CA%B5%D1%E9%20%A3%A8ALIENTEK%20MINISTM32%A3%A9.rar%22\" target=\"_blank\">51黑论坛_PN532读写卡实验 （ALIENTEK MINISTM32）.rar</a>\n\n\n<a href=\"https://blog.csdn.net/imzhujun/article/details/94399288\" target=\"_blank\">stm32f10x + PN532 + 代码 (PN532 I2C模式STM32开发)</a>\n<img src=\"https://img-blog.csdnimg.cn/20190701172109639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ltemh1anVu,size_16,color_FFFFFF,t_70\">\n```\n如使用I2C模式，拨码开关应打到【1，0】模式。\n模块需要连接VCC，GND，SDA，SCL，IRQ，RSTO，6根线。\n其中，RSTO是PN532的复位线，低电平复位。\nIRQ，是响应的中断线，可由程序选择是否启用，PN532有响应发生时，该引脚产生一个下降沿。\n```\n\n\n<a href=\"https://blog.csdn.net/qq_43479164/article/details/96863299\" target=\"_blank\">(含接线图) 使用PN532进行基本读写操作</a>\n<img src=\"https://img-blog.csdnimg.cn/20190722153045646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc5MTY0,size_16,color_FFFFFF,t_70\">\n```\n选择链接后，打卡软件检测卡片是否存在。\n\n首先，将卡片置于强光下，或是闪光灯照射卡片找到芯片，放于pn532模块上，检测。\n\n扫描卡片类型\n```\n\n\n","tags":["单片机"]},{"title":"[单片机] SDA与SCL","url":"/2019/12/27//articles/2019/12/27/1577447585000.html/","content":"\n这是I^2C总线标准的两根传输线，SDA是串行数据线，SCL是时钟~\n```\nI2C有两条线， SCL为时钟信号，SDA为双向数据通道。\n\nUART三条线， TX,RX,GND，如果单向的话可能只两条\n\nSPI的话四条线，不要CS片选的话剩三条MISO,MOSI,CLK\n\n串口中TX为发送，RX为接收，所以串口通讯两个单片机之间TX接RX，RX接TX。\n\nSPI中CLK是时钟，MISO就是主设备读，从设备写。MOSI就是主设备写，从设备读\n```\n","tags":["单片机"]},{"title":"[单片机] P3口第二功能各引脚功能","url":"/2019/12/27//articles/2019/12/27/1577447584000.html/","content":"P3口第二功能各引脚功能 定义：\n```\nP3.0：RXD串行口输入 \nP3.1：TXD串行口输出 \nP3.2：INT0外部中断0输入 \nP3.3：INT1外部中断1输入 \nP3.4：T0定时器0外部输入 \nP3.5：T1定时器1外部输入 \nP3.6：WR外部写控制 \nP3.7：RD外部读控制\n```\n","tags":["单片机"]},{"title":"[单片机] MQTT服务器","url":"/2019/12/27//articles/2019/12/27/1577447582000.html/","content":"<a href=\"https://www.cnblogs.com/lulipro/p/10914482.html\" target=\"_blank\">搭建MQTT服务器</a>\n\n","tags":["单片机"]},{"title":"[单片机] ESP8266连接外网","url":"/2019/12/27//articles/2019/12/27/1577447581000.html/","content":"<a href=\"https://blog.csdn.net/ludaoyi88/article/details/62236644\" target=\"_blank\">基于WIFI模块（ESP8266）与非同一个局域网内服务器建立连接</a>\n\n<a href=\"https://blog.csdn.net/qq_35281599/article/details/80218856\" target=\"_blank\">两个ESP8266一个作为服务器一个作为客户端实现互相通讯</a>\n\n<a href=\"https://blog.csdn.net/ReCclay/article/details/77802609\" target=\"_blank\">ESP8266AT开发之ESP8266的三种工作模式认识，AP模式下ESP8266建立TCP服务器，建立TCP客户端(解决防火墙)</a>\n\nESP8266的三种工作方式\n```\nAP模式\nSTA模式\nAP+STA模式\nAP模式就仅仅相当于路由器功能可以发出信号。 当然我们知道路由器不仅仅能发出信号，当然可以接受信号的，所以就有了STA模式的基站功能就是接受信号。\n```\n\nAP模式下PC连接ESP8266的WiFi\n```\n1.去除防火墙的影响\n最快捷的cmd+R->services.msc->windows firewall ->双击后自动改为禁用 \n```\n\n<a href=\"https://blog.csdn.net/Jsagacity/article/details/78531819\" target=\"_blank\">使用ESP8266简单实现和APP通讯</a>\n\n<a href=\"https://blog.csdn.net/qimi923511491/article/details/79284625\" target=\"_blank\">糖醋咸鱼 - 51单片机通过ESP8266模块与手机进行通讯（单片机）</a>\n","tags":["单片机"]},{"title":"[单片机] 74HC595并行输出的位移缓存器","url":"/2019/12/27//articles/2019/12/27/1577447579000.html/","content":"<a href=\"https://baike.baidu.com/item/74HC595/9886491\" target=\"_blank\">74HC595并行输出的位移缓存器</a>\n","tags":["单片机"]},{"title":"[windows] 打开设备管理器","url":"/2019/12/27//articles/2019/12/27/1577447578000.html/","content":"```\ndevmgmt.msc\n```\n","tags":["windows"]},{"title":"[PyQt5] 串口通信上位机","url":"/2019/12/27//articles/2019/12/27/1577447577000.html/","content":"<a href=\"https://blog.csdn.net/windowsyun/article/details/80001488\" target=\"_blank\">Python3+PyQT5+Pyserial 实现简单的串口工具</a>\n<a href=\"https://github.com/ColinFred/Pyserial-Demo\" target=\"_blank\">Pyserial-Demo</a>\n\n<a href=\"https://www.cnblogs.com/geokai/articles/9537150.html\" target=\"_blank\">PyQt 开发采用串口通信的上位机软件（1）</a>\n<a href=\"https://github.com/Oslomayor/PyQt5-SerialPort-Stable\" target=\"_blank\">PyQt5-SerialPort-Stable</a>\n","tags":["PyQt5"]},{"title":"[单片机] 直流电机正反转","url":"/2019/12/25//articles/2019/12/25/1577275294000.html/","content":"使用到芯片L293D，含接线\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82354311\" target=\"_blank\">STC单片机简单控制直流电机正反转</a>\n\n<a href=\"https://wenku.baidu.com/view/03d48a05f111f18583d05a9a.html\" target=\"_blank\">继电器控制直流电机正反转</a>\n```\n#include <reg51.h>\n\nsbit zheng = P1 ^ 0;    //正转按钮\nsbit fan = P1 ^ 1;      //反转按钮\nsbit JD = P3 ^ 0;       //继电器控制引脚\nvoid delay1ms(int);\n\n//*****************************主函数*********************************//\nvoid main() {\n\n        JD = 0;\n        P1 = 0xff;   \n\n        while (1) {\n                if (zheng == 0) {                       //如果正转按钮按下  \n                         delay1ms(10);                  //延时去抖\n                         if (zheng == 0) \n                                 while (zheng == 0);    //判按键松开\n                         delay1ms(10);\n                         while (zheng == 0);  \n                         JD = 1;    \n                } \n                if (fan == 0)  {                        //如果反转按钮按下 \n                        delay1ms(10);                   //延时去抖\n                        if (fan == 0) {\n                                while (fan == 0);       //判按键松开\n                        }\n                        delay1ms(10);\n                        while (fan == 0);\n                        JD = 0;\n                } \n        } \n}\n\n//*****************************延时子函数*********************************//\nvoid delay1ms(int x)  { \n          int i, j;  \n          for (i = x; i > 0; i--)  \n                 for (j = 120; j > 0; j--);\n         \n}\n```\n","tags":["单片机"]},{"title":"[硬件] 示波器的使用","url":"/2019/12/25//articles/2019/12/25/1577274836000.html/","content":"<a href=\"https://www.bilibili.com/video/av65714411\" target=\"_blank\">示波器的使用</a>\n\n","tags":["硬件"]},{"title":"[单片机] ESP8266作AP热点+AT命令表格","url":"/2019/12/25//articles/2019/12/25/1577274835000.html/","content":"<a href=\"https://www.cnblogs.com/lifan3a/articles/7070028.html\" target=\"_blank\">ESP8266 WiFi模块AT指令 表格</a>\n\n作为AP热点\n```\n#先在串口工具选择115200波特率\nAT\nAT+UART=9600,8,1,0,0\nAT+CWMODE=3\nAT+CWSAP=\"ESP8266\",\"12345678\",11,3\nAT+CIPAP=\"192.168.4.2\"\nAT+RST\n#查看分配的ip\nAT+CIFSR\nAT+CIPMUX=1\nAT+CIPSERVER=1,8080\n```\n\n<a href=\"https://blog.csdn.net/qq_37707218/article/details/80614398\" target=\"_blank\">ESP8266 + 单片机c代码</a>\n基本配置命令：\n```\n//修改波特率为9600（模块初始波特率默认为115200，该命令通过串口助手发送，重新上电后有效）\nAT+CIOBAUD=9600\n\n//设置模块为AP模式\nAT+CWMODE=2\n\n//设置wifi名字为 ESP8266，密码是 123456，通道号是11，加密方式是OPEN（可以修改）\n//加密方式\n//0：OPEN\n//1：WEP\n//2：WPA_PSK\n//3：WPA2_PSK\n//4：WPA_WPA2_PSK \nAT+CWSAP=\"ESP8266\",\"12345678\",11,3\n\n//启动多路连接方式（可以修改）\nAT+CIPMUX=1\n\n//开启server，端口号为5000（可以修改）\nAT+CIPSERVER=1,5000\n\n//向id为0的链接发送5字节数据（可以修改）\nAT+CIPSEND=0,5\n```\n\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82289276\" target=\"_blank\">Android手机APP控制单片机LED灯</a>\n\nmain.c\n```\n#include<reg51.h>\n\n//初始化程序（必须使用，否则无法收发）\nvoid Serial_Init();\n//发送char型字符串\nvoid Uart_Sends(unsigned char *str);\nvoid Delay1ms(unsigned int t);//1ms延时函数\n//接收字符子函数\nunsigned char Uart_Receive();\n//数据发送子函数\nvoid Uart_Dat(unsigned char dat);\n//wifi模块初始化\nvoid Wifi_Init();\n//字节发送子函数\nvoid Uart_Byte(char byte);\n//t ms延时子函数\nvoid Delay1ms(unsigned int t);\n\n/*串口初始化子函数*/\nvoid Serial_Init()//串口初始化,一定注意不要启动T1的串口中断\n{\n\tTMOD = 0x20;\n\tSCON = 0x50;\n\tTH1 = 0xFD;\n\tTL1 = TH1;\n\tPCON = 0x00;\n\tES = 0; //关闭串口中断\n\tTR1 = 1;\n}\n/*字符串发送子函数(用于配置)*/\nvoid Uart_Sends(unsigned char *str) {\n\twhile (*str != '\\0') {\n\t\tSBUF = *str;\n\t\twhile (!TI); //等待发送完成信号（TI=1）出现\n\t\tTI = 0; //清除发送中断标志位以继续发送\n\t\tstr++;\n\t}\n}\n/*WIFI模块初始化*/\nvoid Wifi_Init() {\n\tDelay1ms(3000);\n\tSerial_Init();\n\tUart_Sends(\"AT+CWMODE=2\\r\\n\");\n\tDelay1ms(2000);\n\tUart_Sends(\"AT+CWSAP=\\\"******\\\",\\\"*****\\\",11,0\\r\\n\");//wifi名称及密码设置\n\tDelay1ms(2000);\n\tUart_Sends(\"AT+CIPMUX=1\\r\\n\");\n\tDelay1ms(2000);\n\tUart_Sends(\"AT+CIPSERVER=1,5000\\r\\n\");\n}\n/*字节发送子函数*/\nvoid Uart_Byte(char byte) {\n\tSBUF = byte;\n\twhile (!TI);\n\tTI = 0;\n}\n/*数据发送子函数*/\nvoid Uart_Dat(unsigned char dat) {\n\tUart_Sends(\"AT+CIPSEND=0,1\\r\\n\");\n\tDelay1ms(1000);\n\tUart_Byte(dat);\n\tUart_Byte('\\r');\n\tUart_Byte('\\n');\n\tDelay1ms(100);//延时100ms防止出现循环发送现象\n}\n/*指令接收子函数*/\nunsigned char Uart_Receive() {\n\tunsigned char order;\n\tRI = 0; //先将接收表示位置0，防止wifi'配置使的返回信息将其置1\n\twhile (!RI); //等待接收到信息后跳出循环\n\torder = SBUF; //当RI==1时接收到数据\n\tRI = 0; //清除接收中断标志位以继续接收\n\treturn order;\n}\nvoid Delay1ms(unsigned int t)   //误差 0us\n{\n\tunsigned char a, b, c;\n\tfor (t; t > 0; t--)\n\t\tfor (c = 1; c > 0; c--)\n\t\t\tfor (b = 142; b > 0; b--)\n\t\t\t\tfor (a = 2; a > 0; a--);\n\n}\n```\n\n<a href=\"https://blog.csdn.net/ludaoyi88/article/details/53380305\" target=\"_blank\">WIFI模块ESP8266的使用指南（客户端和服务器两种模式建立）</a>\n\n<a href=\"https://blog.csdn.net/lsalp/article/details/80592533\" target=\"_blank\">AT命令示例</a>\n```\n1.1 模块 AP 模式下做 TCP serve\n1.2 模块 STA 模式下做 TCP serve\n1.3 模块 TCP  client 透传模式\n1.4 模块 UDP 多连接模式\n1.5 模块 UDP 透传模式\n1.6 两个模块 UDP 传输模式\n1.7 两个模组通过TCP透传\n1.8 模块通过数据外网透传\n```\n\n其它指令\n```\n恢复出厂设置（配网失败可以用这个指令）\nAT+RESTORE\n```\n\n连接网络调试助手TCP服务器\n```\nAT+CIPSTART=\"TCP\",\"192.168.4.2\",9085\n```\n","tags":["单片机"]},{"title":"[PyQt5] 视频播放","url":"/2019/12/25//articles/2019/12/25/1577274834000.html/","content":"<a href=\"https://github.com/taroshi/PyQt_Video_Demo\" target=\"_blank\">PyQt_Video_Demo</a>\n","tags":["PyQt5"]},{"title":"[PyQt5] 使用http请求获取天气","url":"/2019/12/25//articles/2019/12/25/1577274833000.html/","content":"<a href=\"https://www.cnblogs.com/ACPIE-liusiqi/p/10636594.html\" target=\"_blank\">PyQt5使用http请求获取天气</a>\n\n","tags":["PyQt5"]},{"title":"[nodejs] 仿微信扫码登录","url":"/2019/12/25//articles/2019/12/25/1577274832000.html/","content":"<a href=\"https://www.jianshu.com/p/4b5e1b8c34a2\" target=\"_blank\">模仿微信授权二维码生成通过微信扫描登录</a>\n\n<a href=\"https://github.com/Ryan4G/QRCodeLoginDemo\" target=\"_blank\">QRCodeLoginDemo</a>\n\n","tags":["nodejs"]},{"title":"[layui] 日期范围","url":"/2019/12/25//articles/2019/12/25/1577274831000.html/","content":"\n```js\n\nlayui.use('laydate', function () {\n    var endDate = laydate.render({\n        elem: '#endTime',//选择器结束时间\n        type: 'datetime',\n        // type: 'date',\n        // min:\"1970-1-1\",//设置min默认最小值\n        done: function (value, date) {\n            startDate.config.max = {\n                year: date.year,\n                month: date.month - 1,//关键\n                date: date.date,\n                hours: date.hour,\n                minutes: 0,\n                seconds: 0\n            }\n        }\n    });\n    //日期范围\n    var startDate = laydate.render({\n        elem: '#startTime',\n        type: 'datetime',\n        // max:\"2099-12-31\",//设置一个默认最大值\n        done: function (value, date) {\n            endDate.config.min = {\n                year: date.year,\n                month: date.month - 1, //关键\n                date: date.date,\n                hours: date.hour,\n                minutes: 0,\n                seconds: 0\n            };\n        }\n    });\n\n});\n\n```","tags":["layui"]},{"title":"[hexo] 文章数量限制","url":"/2019/12/25//articles/2019/12/25/1577274830000.html/","content":"<a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\"></a>\n```\nulimit -n 10000\n```\n","tags":["hexo"]},{"title":"[单片机] ESP8266和APP通讯","url":"/2019/12/25//articles/2019/12/25/1577274703000.html/","content":"<a href=\"https://blog.csdn.net/qimi923511491/article/details/79284625\" target=\"_blank\">51单片机通过ESP8266模块与手机进行通讯（单片机）</a>\n\n<a href=\"https://www.jianshu.com/p/1809c471db39\" target=\"_blank\">智能家居简单实现---使用ESP8266简单实现和APP通讯</a>\n\n用AP模式就够了，指令有下面这几个就够了：\n```\n1、设置wifi模式：\nAT+CWMODE=2\n\n2、重启生效：\nAT+RST\n\n3、启动多连接：\nAT+CIPMUX=1\n\n4、建立server：\nAT+CIPSERVER=1\n```\n\nESP8266发送数据到APP。首先ESP要使用到的指令有：\n```\n1、建立TCP连接：\nAT+CIPSTART=0,\"TCP\",\"192.168.4.2\",5000\n\n2、确定发送数据的长度：\nAT+CIPSEND=0,19\n\n3、发送信息：\nSent to the Android\n```\n\n<img src=\"https://upload-images.jianshu.io/upload_images/5147222-98a0e58fe398fbc9?imageMogr2/auto-orient/strip|imageView2/2/w/548/format/webp\">\n","tags":["单片机"]},{"title":"[设计] 包装盒","url":"/2019/12/24//articles/2019/12/24/1577183653000.html/","content":"<a href=\"https://www.hellorf.com/image/search?q=%E5%8C%85%E8%A3%85%E7%9B%92\" target=\"_blank\">站库海洛 设计 包装盒</a>\n","tags":["设计"]},{"title":"[PyQt5] Python3.7+Pycharm+Opencv3","url":"/2019/12/24//articles/2019/12/24/1577183652000.html/","content":"【注意】\n```\n需要注意PyQt5的版本，5.11版的暂时没问题，5.14版有问题\n```\n\n<a href=\"https://blog.csdn.net/zyngoo/article/details/85880572\" target=\"_blank\">PyQt5安装教程</a>\nPath追加变量\n```\nG:\\python\\python37\nG:\\python\\python37\\Scripts\nG:\\python\\python37\\lib\\site-packages\\pyqt5_tools\nG:\\Python\\Python37\\Lib\\site-packages\\PyQt5\\Qt\\bin\nG:\\Python\\Python37\\Lib\\site-packages\\pyqt5_tools\\Qt\\bin\n```\n\nScripts目录下执行\n```\npip3 install sip\n\npip uninstall PyQt5\npip uninstall pyqt5-tools\npip uninstall pyqt5-stubs\n\npip install PyQt5==5.11.3 -i http://pypi.douban.com/simple --trusted-host=pypi.douban.com\npip install pyqt5-tools==5.11.3.1.4 -i http://pypi.douban.com/simple --trusted-host=pypi.douban.com\npip install PyQt5-stubs==5.11.3.0 -i http://pypi.douban.com/simple --trusted-host=pypi.douban.com\n```\n\n<a href=\"https://blog.csdn.net/stormdony/article/details/80400032\" target=\"_blank\">pyqt5安装与pycharm配置</a>\n```\nName：\nQtDesigner\nProgram：\nG:\\Python\\Python37\\Lib\\site-packages\\pyqt5_tools\\Qt\\bin\\designer.exe\nWork directory：\n$FileDir$\n\n\nName：\nPyUIC\nProgram：\nG:\\Python\\Python37\\python.exe\nArguments：\n-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py\nWork directory：\n$FileDir$\n\nName：\nPyUIC\nProgram：\nG:\\Python\\Python37\\python.exe\nArguments：\n-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py\nWork directory：\n$FileDir$\n\nName：\nassistant\nProgram：\nG:\\Python\\Python37\\Lib\\site-packages\\pyqt5_tools\\Qt\\bin\\assistant.exe\nWork directory：\n$FileDir$\n\nName：\nlinguist\nProgram：\nG:\\Python\\Python37\\Lib\\site-packages\\pyqt5_tools\\Qt\\bin\\linguist.exe\nWork directory：\n$FileDir$\n\nName：\nPyrcc\nProgram：\nG:\\Python\\Python37\\Scripts\\pyrcc5.exe\nWork directory：\n$FileDir$\n```\n\n<a href=\"https://blog.csdn.net/qq_33485434/article/details/80606359\" target=\"_blank\">PyQt5安装及ModuleNotFoundError No module named 'PyQt5'问题解决</a>\n```\n在已有项目的最后面找到External Libraries，然后找到venv目录，把pyvenv.cfg文件中的如下参数改成true\ninclude-system-site-packages = true\n```\n\n<a href=\"https://blog.csdn.net/The_Time_Runner/article/details/93761511\" target=\"_blank\">（已解决）ImportError: DLL load failed: 找不到指定的模块</a>\n```\nG:\\ProgramData\\Anaconda3\nG:\\ProgramData\\Anaconda3\\Scripts\nG:\\ProgramData\\Anaconda3\\Library\\bin\n```\n","tags":["PyQt5"]},{"title":"[pycharm] 破解","url":"/2019/12/24//articles/2019/12/24/1577183631000.html/","content":"<a href=\"https://blog.csdn.net/fantasic_van/article/details/89282100\" target=\"_blank\">PyCharm专业版永久激活破解</a>\n\n```\n1、下载破解jar包\n下载地址:\nhttps://pan.baidu.com/s/1Ug644fHbvoXukoD93si4qg\n提取码：\n1m8d\n\n2、将jetbrains-agent.jar放置到Pycharm安装目录的bin目录下\n```\n","tags":["pycharm"]},{"title":"[ps] 转矢量蒙版","url":"/2019/12/24//articles/2019/12/24/1577183630000.html/","content":"<a href=\"http://www.360doc.com/content/19/0316/11/977769_821859490.shtml\" target=\"_blank\">利用ps将位图转换成矢量图的教程</a>\n","tags":["ps"]},{"title":"[layui] 列表超宽显示横向滚动条","url":"/2019/12/24//articles/2019/12/24/1577183629000.html/","content":"<a href=\"https://fly.layui.com/jie/24418/\" target=\"_blank\">layui数据表格的横向滚动条问题</a>\n```\n.layui-table-body{overflow-x: hidden;}\n```\n","tags":["layui"]},{"title":"[js] input检测汉字输入","url":"/2019/12/24//articles/2019/12/24/1577183628000.html/","content":"<a href=\"https://www.cnblogs.com/work-web/p/6639485.html\" target=\"_blank\">input输入框校验，字母，汉字，数字等</a>\n```\n<!-- 只允许输入汉字 -->\n<input type=\"text\" onkeyup=\"value=value.replace(/[^\\u4e00-\\u9fa5]/g,'')\" onbeforepaste=\"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\\u4e00-\\u9fa5]/g,''))\" >\n<input type=\"text\" onkeyup=\"this.value=this.value.replace(/[^\\u4e00-\\u9fa5]/g,'')\">\n```\n","tags":["js"]},{"title":"[github] 企业官网","url":"/2019/12/24//articles/2019/12/24/1577183627000.html/","content":"<a href=\"https://github.com/search?q=%E4%BC%81%E4%B8%9A%E5%AE%98%E7%BD%91\" target=\"_blank\">github 企业官网</a>\n\n<a href=\"https://github.com/ifzc/Shkjem\" target=\"_blank\">基于Vue&ElementUI的企业官网</a>\n```\n示例网站\nhttp://www.shkjem.com\n```\n\n<a href=\"https://github.com/Sandop/NuxtPC\" target=\"_blank\">基于Nuxt的企业官网</a>\n<a href=\"https://github.com/Sandop/Nuxt-phone\" target=\"_blank\">基于Nuxt实现移动端的企业官网</a>\n","tags":["github"]},{"title":"[单片机] LCD12864液晶屏","url":"/2019/12/22//articles/2019/12/22/1577026522000.html/","content":"<a href=\"https://blog.csdn.net/qq_43588817/article/details/89035996\" target=\"_blank\">51单片机-LCD12864液晶屏</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-132665-1.html\" target=\"_blank\">液晶12864不知道为什么不能正常显示</a>\n\n<a href=\"http://c.51hei.com/pro/down.php?h=7&e=661630&c=132720&host=forum/201808/23/215943sgw5wv0wfwf33anm.rar&name=%22%CA%B5%D1%E925%20%20LCD12864%CF%D4%CA%BE%C6%C1%CF%D4%CA%BE.rar%22\" target=\"_blank\">51黑论坛_实验25 LCD12864显示屏显示.rar</a>\n\n<a href=\"https://blog.csdn.net/qq_43588817/article/details/89035996\" target=\"_blank\">51单片机-LCD12864液晶屏</a>\n\n<a href=\"https://blog.csdn.net/u010411288/article/details/52786313\" target=\"_blank\">51单片机三线串行驱动12864液晶</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-130628-1.html\" target=\"_blank\">用51单片机控制LCD12864显示屏源程序</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-166131-1.html\" target=\"_blank\">基于51单片机的LCD12864B显示时钟源程序</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-126033-1.html\" target=\"_blank\">51单片机+12864液晶屏贪吃蛇（完美版）</a>\n\n","tags":["单片机"]},{"title":"[单片机] DS1302电子时钟","url":"/2019/12/22//articles/2019/12/22/1577026521000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-159199-1.html\" target=\"_blank\">基于51单片机的DS1302时钟显示设计</a>\n","tags":["单片机"]},{"title":"[react-native] ios打包","url":"/2019/12/22//articles/2019/12/22/1577026519000.html/","content":"<a href=\"https://blog.csdn.net/jkfaklfjal/article/details/82800324\" target=\"_blank\">react-native ios打包教程</a>\n```\nreact-native bundle --entry-file ./index.ios.js --bundle-output ./ios/bundle/index.ios.jsbundle --platform ios --assets-dest ./ios/bundle --dev false\n```\n","tags":["react-native"]},{"title":"[react-native] mac环境配置","url":"/2019/12/22//articles/2019/12/22/1577026518000.html/","content":"<a href=\"https://reactnative.cn/docs/next/getting-started.html\" target=\"_blank\">环境</a>\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n安装Xcode Command Line Tool\n```\nxcode-select --install\n```\n\n<a href=\"https://www.jianshu.com/p/ab6411a05bc2\" target=\"_blank\">CocoaPods安装</a>\n```\nsudo xcode-select --switch /Applications/Xcode.app\n```\n\n<a href=\"http://www.code4app.com/article/cocoapods-install-usage\" target=\"_blank\">安装CocosPods</a>\n```\nsudo gem install cocoapods\ngem sources --remove https://rubygems.org/\ngem sources -a http://ruby.taobao.org/\n\nsudo npm config set registry https://registry.npm.taobao.org --global\nsudo npm config set disturl https://npm.taobao.org/dist --global\n```\n\n<a href=\"https://blog.csdn.net/jkfaklfjal/article/details/82800324\" target=\"_blank\">react-native ios打包教程</a>\n```\nreact-native bundle --entry-file ./index.ios.js --bundle-output ./ios/bundle/index.ios.jsbundle --platform ios --assets-dest ./ios/bundle --dev false\n```\n\n\n```\nhttps://github.com/xwartz/wechat-app-demo\n美团客户端\nGithub: \nhttps://github.com/huanxsd/MeiTuan\n简书:\nhttp://www.jianshu.com/p/9211f42d5c25\n```\n\n高仿美团客户端 React-Native版，支持iOS、Android\n```\ngit clone https://github.com/huanxsd/MeiTuan.git\ncd MeiTuan\n\n#Install dependencies (npm v3+)\nnpm install\n\n#Running on iOS\nreact-native run-ios\n\n#常见问题\nCould not connect to development server\n\n#打开新的terminal窗口，并执行:\nreact-native start\n```\n\n漂亮的示例\n```\n# download repo\ngit clone https://github.com/SmallStoneSK/rn-components-kit.git\n# install dependencies\nnpm install\n# for iOS\nreact-native run-ios\n# for android\nreact-native run-android\n```\n\n运行\n```\nxcrun simctl list devices\nreact-native run-ios --simulator=\"iPhone 8 (12.0)\"\n```\n\n打开iphone模拟器\n```\nxcrun instruments -w 'iPhone 8 (12.0)'\nxcrun instruments -w 'iPhone 6 Plus' \nxcrun instruments -w 'iPhone 8 (13.3)' \n```\n\n```\n【RN】运行ios后 报错Could not find iPhone X simulator\nhttps://blog.csdn.net/yangsen0927/article/details/89880869\n\n1.找到项目中/node_modules/react-native/local-cli/runIOS/findMatchingSimulator.js\nif (!version.startsWith('iOS') && !version.startsWith('tvOS')) \n//改为\n if (!version.startsWith('com.apple.CoreSimulator.SimRuntime.iOS') && !version.startsWith('com.apple.CoreSimulator.SimRuntime.tvOS'))\n\n\nreact-native run-ios无法启动app\nhttps://segmentfault.com/q/1010000012225930\n\nreact-native init MyApp --version 0.44.3\n\nhttps://www.cnblogs.com/codechange/p/11415280.html\n```\n\n","tags":["react-native"]},{"title":"[c4d] 破解版","url":"/2019/12/22//articles/2019/12/22/1577026517000.html/","content":"<a href=\"https://www.newasp.net/soft/456966.html\" target=\"_blank\">C4D R20 中文破解版 20.030 含序列号</a>\n","tags":["c4d"]},{"title":"[蓝湖] 渐变简约卡片个人中心app界面","url":"/2019/12/21//articles/2019/12/21/1576935913000.html/","content":"<a href=\"https://ibaotu.com/sucai/870283.html\" target=\"_blank\">渐变简约卡片个人中心app界面</a>\n","tags":["蓝湖"]},{"title":"[单片机] 智能家居控制系统","url":"/2019/12/21//articles/2019/12/21/1576935912000.html/","content":"<a href=\"https://www.bilibili.com/video/av49821066\" target=\"_blank\">【毕业设计】智能家居控制系统（手机APP、语音识别、触摸屏控制）</a>\n\n毕业设计：智能家居控制系统\n<a href=\"https://blog.csdn.net/qq_42838431/article/details/8917980\" target=\"_blank\">设计流程</a>\n<a href=\"https://blog.csdn.net/qq_42838431/article/details/89142660\" target=\"_blank\">串口复用实现</a>\n<a href=\"https://pan.baidu.com/s/1kTZEqzS4JnNliPJXb9f5lQ\" target=\"_blank\">设计源代码</a>\n```\n提取码：\nq8tg\n```","tags":["单片机"]},{"title":"[单片机] 通讯方式","url":"/2019/12/21//articles/2019/12/21/1576935911000.html/","content":"<a href=\"https://blog.csdn.net/xiaolongwoaini99/article/details/80349357\" target=\"_blank\">单片机通信方式</a>\n```\n基本概念：\n串口、COM口是指的物理接口形式(硬件)。而TTL、RS-232、RS-485是指的电平标准(电信号)\n```\n\n","tags":["单片机"]},{"title":"[单片机] 使用HTTP+POST方式发送数据","url":"/2019/12/21//articles/2019/12/21/1576935910000.html/","content":"<a href=\"https://blog.csdn.net/cp1300/article/details/79686705\" target=\"_blank\">单片机使用HTTP POST方式发送数据</a>\n\n","tags":["单片机"]},{"title":"[单片机] 射频卡读写系统","url":"/2019/12/21//articles/2019/12/21/1576935909000.html/","content":"<a href=\"https://pan.baidu.com/s/15XJlcTSOjorAzB5OhCzcRw\" target=\"_blank\">MFRC-522 RC522 RFID射频 IC卡感应模块 送S50复旦卡PN532 PN5180</a>\n```\n提取码：\n34u7 \n```\n\n<a href=\"https://www.bilibili.com/video/av25915309\" target=\"_blank\">在Windows下用PN532复制M1卡数据，制作备份卡（低成本）</a>\n<a href=\"https://www.bilibili.com/video/av64196965\" target=\"_blank\">小米手环模拟加密门禁卡（使用PN532读卡器）</a>\n<a href=\"https://www.bilibili.com/video/av34229759\" target=\"_blank\">RFID 简介</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-155318-1.html\" target=\"_blank\">基于51单片机的射频卡读写系统</a>\n\n","tags":["单片机"]},{"title":"[单片机] 热敏电阻测温并且显示到数码管","url":"/2019/12/21//articles/2019/12/21/1576935907000.html/","content":"<a href=\"https://blog.csdn.net/nk_test/article/details/50375196\" target=\"_blank\">单片机： 热敏电阻测温并且显示到数码管（温度计）</a>\n","tags":["单片机"]},{"title":"[单片机] 继电器+接线","url":"/2019/12/21//articles/2019/12/21/1576935905000.html/","content":"<a href=\"https://blog.csdn.net/Lzinner/article/details/79619945\" target=\"_blank\">51单片机之继电器</a>\n\n<a href=\"https://blog.csdn.net/wangjiaweiwei/article/details/90300119\" target=\"_blank\">51单片机之继电器实验</a>\n\n<a href=\"https://blog.csdn.net/Lzinner/article/details/79619945\" target=\"_blank\">51单片机之继电器</a>\n```\n#include <reg51.h>\n\nsbit  K1 = P3 ^ 0; //S2\nsbit  K2 = P3 ^ 3; //S4\nsbit  JDQ = P3 ^ 6;//继电器控制端口\nvoid main() {\n\twhile (1) {\n\t\tif (K1 == 0)\n\t\t{\n\t\t\tJDQ = 0;\n\t\t}\n\n\t\tif (K2 == 0) {\n\t\t\tJDQ = 1;\n\t\t}\n\t}\n}\n```\n\n","tags":["单片机"]},{"title":"[单片机] 基于51单片机红外线远程控制密码锁","url":"/2019/12/21//articles/2019/12/21/1576935904000.html/","content":"<a href=\"https://blog.csdn.net/qq_21792169/article/details/49255267\" target=\"_blank\">基于51单片机红外线远程控制密码锁</a>\n\n代码、仿真图、PCB图，论文下载地址\n```\nhttp://download.csdn.net/download/qq_21792169/9248979\n```\n","tags":["单片机"]},{"title":"[单片机] 单片机+电磁锁+AS608指纹锁设计源码与实物图分享 LCD12864显示","url":"/2019/12/21//articles/2019/12/21/1576935903000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-143129-1.html\" target=\"_blank\">单片机+电磁锁+AS608指纹锁设计源码与实物图分享 LCD12864显示</a>\n\n","tags":["单片机"]},{"title":"[单片机] zigbee智能家居+esp8266(wifi网关)+AndroidAPP","url":"/2019/12/21//articles/2019/12/21/1576935902000.html/","content":"<a href=\"https://www.cirmall.com/circuit/13060\" target=\"_blank\">zigbee智能家居+esp8266(wifi网关)+Android APP</a>\n","tags":["单片机"]},{"title":"[单片机] W5500以太网网络模块","url":"/2019/12/21//articles/2019/12/21/1576935901000.html/","content":"<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.26.15a4d247AjJgE4&id=557172912320&skuId=4212068884849&user_id=2207691322&cat_id=2&is_b=1&rn=b1b1ed3e24e90dbb91f6f027db687bd3\" target=\"_blank\">W5500以太网网络模块W5100 TCP/IP协议51/STM32驱动开发板28J60</a>\n```\nW5500以太网网络模块W5100 TCP/IP协议51/STM32驱动开发板28J60\n\n资料下载：\nhttps://pan.baidu.com/s/1LIXMeWxRwuYrKiahX1VLkQ\n提取码：\nm73x  \n```\n\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.2.63e1357fnYKgsM&id=42262680322&user_id=1968962323&cat_id=2&is_b=1&rn=6a1688f5859c70704842b84d2e8eadd5\" target=\"_blank\">以太网络转TTL单片机联网模块RJ45转TTL串口以太网模块上海卓岚ZLSN3003S</a>\n","tags":["单片机"]},{"title":"[单片机] socket与串口通讯","url":"/2019/12/21//articles/2019/12/21/1576935899000.html/","content":"<a href=\"https://www.bilibili.com/video/av60824254\" target=\"_blank\">Socket与串口通信的联动</a>\n\n","tags":["单片机"]},{"title":"[单片机] RFID简易门禁系统","url":"/2019/12/21//articles/2019/12/21/1576935898000.html/","content":"<a href=\"https://www.bilibili.com/video/av29492725\" target=\"_blank\">rfid-rc522 简易门禁系统</a>\n","tags":["单片机"]},{"title":"[单片机] MQ-2烟雾传感器","url":"/2019/12/21//articles/2019/12/21/1576935896000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-49280-1.html\" target=\"_blank\">MQ-2烟雾传感器模块电路图和程序及proteus仿真下载</a>\n\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.27.588b576dfYk9lR&id=41265308241&skuId=4100651795251&user_id=2207691322&cat_id=2&is_b=1&rn=c563edae3ca33a975f2bd68689972fc7\" target=\"_blank\">MQ-2-135-3-7-9烟雾空气敏洒精氢一氧化碳可燃液化传感器模块探头</a>\n```\n资料下载：\nhttp://pan.baidu.com/s/1hqHuPfe\n```\n\n<a href=\"https://blog.csdn.net/qq_21792169/article/details/51236071\" target=\"_blank\">51单片机之烟雾报警器（MQ-2）</a>\n产品参数\n```\n1、敏感气体 液化气，丙烷，氢气 \n2、升压芯片 PT1301 \n3、工作电压 2.5V-5.0V \n4、产品尺寸 40.0mm*21.0mm \n5、固定孔尺寸 2.0mm\n```\n\n<a href=\"https://blog.csdn.net/zhengqijun_/article/details/52770211\" target=\"_blank\">烟雾传感器MQ-2的应用</a>\n```c\n/*******************************************************************\n实现功能:测试程序\n使用芯片：AT89C52\n晶振：11.0592MHZ\n波特率：9600\n编译环境：Keil\n*********************************************************************/\n//说明：1、\t当测量浓度大于设定浓度时，单片机IO口输出低电平\n\n#include<reg52.h>  \t       //库文件\n#define uchar unsigned char//宏定义无符号字符型\n#define uint unsigned int  //宏定义无符号整型\n\nsbit LED  = P1^0;\t //定义单片机P1口的第1位 （即P1.0）为指示端\nsbit DOUT = P2^0;\t //定义单片机P2口的第1位 （即P2.0）为传感器的输入端\n\n/********************************************************************\n                            延时函数\n*********************************************************************/\nvoid delay()//延时程序\n{\n    uchar m,n,s;\n    for(m = 20; m > 0; m--)\n        for(n = 20; n > 0; n--)\n            for(s = 248; s > 0; s--);\n}\n\n/********************************************************************\n                            主函数\n*********************************************************************/\nvoid main()\n{\n    while(1)   //无限循环\n    {\n        LED = 1;\t   //熄灭P1.0口灯\n        if(DOUT == 0)//当浓度高于设定值时 ，执行条件函数\n        {\n            delay();//延时抗干扰\n            if(DOUT == 0)//确定 浓度高于设定值时 ，执行条件函数\n            {\n                LED = 0;\t   //点亮P1.0口灯\n            }\n        }\n    }\n}\n```\n\n<a href=\"https://blog.csdn.net/lin5103151/article/details/103093427\" target=\"_blank\">MQ-2烟雾传感器的原理及使用教程</a>\n```\n三、MQ-2的特性\n1、MQ-2型传感器对天然气、液化石油气等烟雾有很高的灵敏度，尤其对烷类烟雾更为敏感，具有良好的抗干扰性，可准确排除有刺激性非可燃性烟雾的干扰信息。\n\n2、MQ-2型传感器具有良好的重复性和长期的稳定性。初始稳定，响应时间短，长时间工作性能好。\n需要注意的是：\n在使用之前必须加热一段时间，否则其输出的电阻和电压不准确。\n\n3、其检测可燃气体与烟雾的范围是100~10000ppm(ppm为体积浓度。 1ppm=1立方厘米/1立方米)\n\n4.电路设计电压范围宽，24V以下均可，加热电压5±0.2V\n注意：\n如果加热电压过高，会导致输入电流过大，将内部的信号线熔断，从而器件报废。\n```\n","tags":["单片机"]},{"title":"[单片机] ESP8266配合51单片机发送数据程序","url":"/2019/12/21//articles/2019/12/21/1576935895000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/yang140698/article/details/73291550\" target=\"_blank\">ESP8266 AT指令设置及51单片机的控制 + 管脚说明</a>\n```\n单片机程序下载链接:\nhttp://pan.baidu.com/s/1jI843wM\n密码:\nxu2y\n```\n\n<a href=\"https://blog.csdn.net/lsalp/article/details/80592533\" target=\"_blank\">ESP8266WiFi模块AT指令入门指南</a>\n\n<a href=\"https://blog.csdn.net/zhipun/article/details/83151202\" target=\"_blank\">ESP8266之AT指令</a>\n\n<a href=\"https://blog.csdn.net/qq_34597963/article/details/85220499\" target=\"_blank\">8266配合51单片机发送数据程序</a>\n```\n#include <REGX52.H>\n#include <stdio.h>\n#include <string.h>\n#define u8 unsigned char\n#define u16 unsigned int\n#define u32 unsigned long\n#define code const\nu8 code data esp_at[] = \"AT\\r\\n\";\nu8 code data esp_cwmode[] = \"AT+CWMODE=1\\r\\n\"; //设置工作模式为1 station\nu8 code data esp_cwjap[] = \"AT+CWJAP=\\\"Emp.\\\",\\\"liugeliu6\\\"\\r\\n\"; //连接到手机wifi热点上\nu8 code data esp_cifsr[] = \"AT+CIFSR\\r\\n\"; //查询本机ip\nu8 code data esp_cipmux[] = \"AT+CIPMUX=1\\r\\n\"; //建立多连模式\nu8 code data esp_cipserver[] = \"AT+CIPSERVER=1,8080\\r\\n\"; //创建服务器\nu8 code data esp_cipstatus[] = \"AT+CIPSTATUS\\r\\n\"; //查看当前服务器连接\n\n//u8 code data esp_cipsend[]=\"AT+CIPSEND=0,2\\r\\n\";//发送数据\nu8 xdata esp8622_return[5];\nu8 esp_8622_count;\nvoid delayms (u16 t)\n{\n\tu8 i;\n\twhile (t--) for ( i = 0; i < 120; i++ );\n}\n\nvoid uartint()\n{\n\tTMOD = 0x20;\n\tTH1 = 0xfd;\n\tTL1 = 0xfd;\n\tTR1 = 1;\n\tREN = 1;\n\tSM0 = 0;\n\tSM1 = 1;\n\tEA = 1;\n\tES = 1;\n}\n\nvoid uartsendbyte(u8 ch)\n{\n\tSBUF = ch;\n\twhile (!TI);\n\tTI = 0;\n}\n\nvoid uartsendstr(u8 *s)\n{\n\tES = 0;\n\twhile (*s)\n\t{\n\t\tuartsendbyte(*s);\n\t\ts++;\n\t}\n\tES = 1;\n}\n\nu8 data_compare(u8 *p)\n{\n\tif (strstr(esp8622_return, p) != NULL)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n\nvoid esp8266init()\n{\n\tES = 0;\n\twhile (1) {\n\t\tuartsendstr(esp_at);\n\t\tif (data_compare(\"OK\"))break;\n\t\tdelayms(600);\n\t} memset(esp8622_return, 0, 5);\n\twhile (1) {\n\t\tuartsendstr(esp_cwmode);\n\t\tif (data_compare(\"OK\") || data_compare(\"no change\"))break;\n\t\tdelayms(600);\n\t} memset(esp8622_return, 0, 5);\n\twhile (1) {\n\t\tuartsendstr(esp_cwjap);\n\t\tif (data_compare(\"OK\"))break;\n\t\tdelayms(3000);\n\t} memset(esp8622_return, 0, 5);\n\twhile (1) {\n\t\tuartsendstr(esp_cifsr);\n\t\tif (data_compare(\"OK\"))break;\n\t\tdelayms(3000);\n\t} memset(esp8622_return, 0, 5);\n\twhile (1) {\n\t\tuartsendstr(esp_cipmux);\n\t\tif (data_compare(\"OK\"))break;\n\t\tdelayms(3000);\n\t} memset(esp8622_return, 0, 5);\n\twhile (1) {\n\t\tuartsendstr(esp_cipserver);\n\t\tif (data_compare(\"OK\"))break;\n\t\tdelayms(3000);\n\t} memset(esp8622_return, 0, 5);\n\twhile (1) {\n\t\tuartsendstr(esp_cipstatus);\n\t\tif (data_compare(\"OK\"))break;\n\t\tdelayms(3000);\n\t} memset(esp8622_return, 0, 5);\n\tES = 1;\n}\n\nvoid main()\n{\n\tuartint();\n\tesp8266init();\n\twhile (1)\n\t{\n\n\t}\n}\n\nvoid uart() interrupt 4 using 1\n{\n\tif (TI)\n\t{\n\t\tTI = 0;\n\t}\n\tif (RI)\n\t{\n\t\tRI = 0;\n\t\tesp8622_return[esp_8622_count] = SBUF;\n\t\tesp_8622_count++;\n\t\tif (esp_8622_count > 4)esp_8622_count = 0;\n\t}\n}\n```\n\n<a href=\"https://blog.csdn.net/IamDaodaoLi/article/details/79715074\" target=\"_blank\">基于8266WIFI模块实现智能手机与51单片机的通信入门</a>\n```\n#include <reg52.h>\n#include <string.h>\n\nsbit L1 = P1 ^ 0;\nsbit L2 = P1 ^ 1;\nsbit L3 = P1 ^ 2;\nsbit L4 = P1 ^ 3;\nsbit L5 = P1 ^ 4;\nsbit L6 = P1 ^ 5;\nsbit L7 = P1 ^ 6;\nsbit L8 = P1 ^ 7;\nsbit K1 = P3 ^ 4;\n\nunsigned char Usart_Receive[20] = {0};\nunsigned char Usart_Cnt = 0;\nbit Usart_AT_flage;\nunsigned char code RST[] = \"AT+RST\\r\\n\";  \nunsigned char code CWMODE2[] = \"AT+CWMODE=2\\r\\n\";\nunsigned char code CIPMUX[] = \"AT+CIPMUX=1\\r\\n\";\nunsigned char code CIFSR[] = \"AT+CIFSR\\r\\n\";\nunsigned char code CIPSERVER[] = \"AT+CIPSERVER=1,8080\\r\\n\";\n\n/**********************************************************/\nvoid delay_ms(unsigned long t)\n{\n\tunsigned int x, y;\n\tfor (x = t; x > 0; x--)\n\t{\n\t\tfor (y = 110; y > 0; y--)\n\t\t{\n\t\t}\n\t}\n}\n/**********************************************************/\nvoid delays(void)\n{\n\tunsigned char a, b, c;\n\tfor (c = 95; c > 0; c--)\n\t{\n\t\tfor (b = 26; b > 0; b--)\n\t\t{\n\t\t\tfor (a = 185; a > 0; a--)\n\t\t\t{\n\t\t\t}\n\t\t}\n\t}\n}\n/***************中断设置***********************************/\nvoid InitUART(void)\n{\n\tTMOD = 0x20;\n\tSCON = 0x50;\n\t/***************波特率设置*********************************/\n\tTH1 = 0xFA;\n\tTL1 = TH1;\n\tPCON = 0x00;\n\tEA = 1;\n\tES = 1;\n\tTR1 = 1;\n}\n/*************发送数据***************************************/\nvoid Send_Uart(unsigned char value)\n{\n\tES = 0;\n\tTI = 0;\n\tSBUF = value;\n\twhile (TI == 0);\n\tTI = 0;\n\tES = 1;\n}\n/*************接受数据***************************************/\nvoid UARTInterrupt(void)interrupt 4\n{\n\tif (RI)\n\t{\n\t\tRI = 0;\n\t\tUsart_Receive[Usart_Cnt] = SBUF;\n\t\tUsart_Cnt++;\n\t\tif (Usart_Receive[Usart_Cnt - 2] == '\\r' && Usart_Receive[Usart_Cnt - 1] == '\\n' && Usart_Cnt >= 2)\n\t\t{\n\t\t\tUsart_Cnt = 0;\n\t\t\tUsart_AT_flage = 1;\n\t\t}\n\t\telse if (Usart_Cnt > 20)\n\t\t{\n\t\t\tUsart_Cnt = 0;\n\t\t}\n\t}\n}\n/*****************发送设置**********************************/\nvoid ESP8266_Set(unsigned char *puf)\n{\n\t    while (*puf != '\\0')\n\t\t    {\n\t\t        Send_Uart(*puf);\n\t\t        puf++;\n\t\t   \n\t}\n}\n/**************设置多连*************************************/\nvoid ManyConnect_AP()\n{\n\tL4 = 0;\n\tESP8266_Set(RST);//返回一大溜，不用判断返回\n\tdelays();\n\tdelays();\n\twhile (1)\n\t{\n\t\tESP8266_Set(CWMODE2);//返回ok\n\t\tdelays();\n\t\tif (Usart_AT_flage == 1) {\n\t\t\tif (strstr(Usart_Receive, \"OK\") ) {\n\t\t\t\tUsart_AT_flage = 0;\n\t\t\t\tL1 = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\twhile (1) {\n\t\tESP8266_Set(CIPMUX);//返回ok\n\t\tdelays();\n\t\tif (Usart_AT_flage == 1) {\n\t\t\tif (strstr(Usart_Receive, \"OK\") ) {\n\t\t\t\tUsart_AT_flage = 0;\n\t\t\t\tL2 = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\twhile (1) {\n\t\tESP8266_Set(CIPSERVER);//返回ok，多了也返回ok\n\t\tdelays();\n\t\tif (Usart_AT_flage == 1) {\n\t\t\tif (strstr(Usart_Receive, \"OK\") ) {\n\t\t\t\tUsart_AT_flage = 0;\n\t\t\t\tL3 = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n/***************延时500ms***************************/\nvoid delays500ms(void) {\n\tunsigned char a, b, c;\n\tfor (c = 123; c > 0; c--) {\n\t\tfor (b = 212; b > 0; b--) {\n\t\t\tfor (a = 25; a > 0; a--) {\n\t\t\t}\n\t\t}\n\t}\n}\n/**************主函数**********************************/\nvoid main()\n{\n\tint i;\n\tP2 = 0x00;\n\tK1 = 0;\n\tInitUART();\n\twhile (1) {\n\t\tManyConnect_AP();\n\t\twhile (1) {//由于消息的开头是+IP  故做此判断，00000000000000000号\n\n\t\t\tif ((Usart_Receive[0] == '+') && (Usart_Receive[1] == 'I') && (Usart_Receive[2] == 'P'))   {\n\n\t\t\t\tif ((Usart_Receive[3] == 'D') && (Usart_Receive[6] == ','))  {\n\n\t\t\t\t\tif (Usart_Receive[9] == '1')  {\n\t\t\t\t\t\tdelays500ms();\n\t\t\t\t\t\tP2 = 0xFF;\n\t\t\t\t\t\tdelays();\n\t\t\t\t\t\tfor (i = 0 ; i < 20; i++)  {\n\t\t\t\t\t\t\tUsart_Receive[i] = ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Usart_Receive[9] == '0') {\n\t\t\t\t\t\tP2 = 0x00;\n\t\t\t\t\t\tdelays();\n\t\t\t\t\t\tfor (i = 0; i < 20; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tUsart_Receive[i] = ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/81989814\" target=\"_blank\">ESP8266 WIFI模块学习之路（3）——用手机APP进行功能控制LED灯</a>\n","tags":["单片机"]},{"title":"[单片机] esp8266连接mqtt服务器","url":"/2019/12/21//articles/2019/12/21/1576935894000.html/","content":"<a href=\"https://blog.csdn.net/Edu_enth/article/details/92578472\" target=\"_blank\">esp8266连接mqtt服务器\n</a>\n\n<a href=\"https://www.cnblogs.com/yangfengwu/p/8970580.html\" target=\"_blank\">单片机ESP8266学习-AT指令(ESP8266作为TCP客户端,连接TCP服务器,用串口调试助手和手机TCP调试助手测试)</a>\n","tags":["单片机"]},{"title":"[单片机] Dout、Aout接线","url":"/2019/12/21//articles/2019/12/21/1576935893000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-49280-1.html\" target=\"_blank\">Dout、Aout应该分别是数字（量）输出和模拟（量）输出</a>\n","tags":["单片机"]},{"title":"[单片机] AS608指纹模块","url":"/2019/12/21//articles/2019/12/21/1576935891000.html/","content":"<a href=\"https://blog.csdn.net/lin5103151/article/details/102882520\" target=\"_blank\">AS608指纹模块 接线、控制电路、介绍</a>\n<img src=\"https://img-blog.csdnimg.cn/20191103145755876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpbjUxMDMxNTE=,size_16,color_FFFFFF,t_70\">\n<a href=\"https://pan.baidu.com/s/1LBoHaS5ATTqw8R5lG4eRQw\" target=\"_blank\">指纹密码锁 源码+原理图</a>\n```\n提取码：\n0fef\n````\n\n<a href=\"https://blog.csdn.net/Cool2050/article/details/90708293\" target=\"_blank\">基于stc51单片机的指纹解锁模块</a>\n```\nhttps://pan.baidu.com/s/1h11mRUbexdZvZZuMdWmcKw\n8l4j\n```\n\n<a href=\"https://blog.csdn.net/lin5103151/article/details/86601672\" target=\"_blank\">含接线 - 基于51单片机的指纹密码锁</a>\n\n<a href=\"https://blog.csdn.net/Fighting_Boom/article/details/81534927\" target=\"_blank\">基于STC15单片机，ATK-AS608，LCD12864的指纹识别系统</a>\n```\n链接：\nhttps://pan.baidu.com/s/1g6bhG3tDUpSBL0sD7Th6hA \n提取码：\n1n5e\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-167894-1.html\" target=\"_blank\">STC89C52单片机指纹识别程序 1602显示</a>\n\n基于51单片机（STC89C52）和指纹识别模块（AS608）的指纹锁项目的全部软硬件资料\n<a href=\"https://github.com/siyouluo/FingerprintLock\" target=\"_blank\">FingerprintLock</a>\n\n\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.7.4f76a084I8c98q&id=602239771749&skuId=4210260312274&user_id=2206446147687&cat_id=2&is_b=1&rn=e4a3c4e88f7505ada639bf3217857a6d\" target=\"_blank\">AS608指纹模块配套资料链接</a>\n\n<a href=\"https://pan.baidu.com/s/1mjjswmk\" target=\"_blank\">链接</a>\n```\n密码：\nkupj\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-167894-1.html\" target=\"_blank\">STC89C52单片机指纹识别程序1602显示</a>\n<a href=\"http://c.51hei.com/pro/down.php?h=7&e=661630&c=167949&host=forum/201908/07/213106sox329oiv939vz7q.rar&name=%221602%20%D6%B8%CE%C6%CA%B6%B1%F0%20%B3%CC%D0%F2.rar%22\" target=\"_blank\">51黑论坛_1602 指纹识别 程序.rar</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-130803-1.html\" target=\"_blank\">AS608光学指纹模块程序源码与入门资料（51单片机版51hei首发）</a>\n\n<a href=\"https://blog.csdn.net/lin5103151/article/details/86601672\" target=\"_blank\">基于51单片机的指纹密码锁</a>\n\n<a href=\"https://blog.csdn.net/lin5103151/article/details/102882520\" target=\"_blank\">AS608指纹模块开发教程</a>\n\n\n<a href=\"http://v.youku.com/v_show/id_XMzQ1NjM2OTAwNA==.html?spm=a2hzp.8244740.0.0\" target=\"_blank\">视频</a>\n","tags":["单片机"]},{"title":"[单片机] 2.0寸TFT彩屏","url":"/2019/12/21//articles/2019/12/21/1576935890000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-153872-1.html\" target=\"_blank\">51单片机2.0寸tft彩屏贪吃蛇有开关机动画详解注释及红外遥控</a>\n","tags":["单片机"]},{"title":"[stm32] githubDemo","url":"/2019/12/21//articles/2019/12/21/1576935888000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/XLazyDog/article/details/99584735\" target=\"_blank\">蓝牙调试器-划时代无线调试器</a>\n蓝牙调试器二维码\n<img src=\"https://img-blog.csdnimg.cn/2019092910295331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1hMYXp5RG9n,size_16,color_FFFFFF,t_70\">\n\n<a href=\"https://blog.csdn.net/xlazydog/category_9234687.html\" target=\"_blank\">stm32单片机 专栏 无线控制</a>\n\n\n<a href=\"https://blog.csdn.net/XLazyDog/article/details/99680291\" target=\"_blank\">单片机开发无线控制系列-单片机端代码实现</a>\n\n<a href=\"https://github.com/XieLazyDog/ValuePack/tree/master/Examples/STM32F103%E6%94%B6%E5%8F%91%E7%A4%BA%E4%BE%8B\" target=\"_blank\">STM32F103收发示例</a>\n\n<a href=\"https://www.bilibili.com/video/av75116875\" target=\"_blank\">bilibili 【智能家居】基于STM32的WiFi远程家庭环境监测及控制系统</a>\n\n<a href=\"https://www.bilibili.com/video/av74210526/\" target=\"_blank\">bilibili STM32+ESP8266实现寝室智能化(伪)</a>\n```\n链接：\nhttps://pan.baidu.com/s/1pVB49FcbZkoSO00HcDVeEA \n提取码：\nc6l7\n```\n","tags":["stm32"]},{"title":"[react-native] ReactNative高性能大列表组件","url":"/2019/12/21//articles/2019/12/21/1576935887000.html/","content":"<a href=\"https://www.jianshu.com/p/4cf8b044f172\" target=\"_blank\">React Native高性能大列表组件</a>\n<a href=\"https://www.jianshu.com/p/3f8034a0acc2\" target=\"_blank\">React Native实现城市选择列表,仿联系人列表</a>\n\n<a href=\"https://github.com/bolan9999/react-native-largelist\" target=\"_blank\">react-native-largelist</a>\n<a href=\"https://github.com/AmandaYi/cityListSectionList\" target=\"_blank\">cityListSectionList 城市选择</a>\n\n","tags":["react-native"]},{"title":"[物联网] zigbee+后台+app","url":"/2019/12/18//articles/2019/12/18/1576675352000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.cirmall.com/circuit/5669\" target=\"_blank\">zigbee智能家居+wifi(智能网关)+Android APP</a>\n\n【Android开发—智能家居系列】\n<a href=\"https://blog.csdn.net/zhangbijun1230/article/details/83445185\" target=\"_blank\">（一）：智能家居原理</a>\n<a href=\"https://blog.csdn.net/u010924834/article/details/49496729\" target=\"_blank\">（二）：用手机对WIFI模块进行配置</a>\n<a href=\"https://blog.csdn.net/u010924834/article/details/49668623\" target=\"_blank\">（三）：手机连接WIFI模块</a>\n<a href=\"https://blog.csdn.net/u010924834/article/details/49668669\" target=\"_blank\">（四）：UDP通信发送指令</a>\n","tags":["物联网"]},{"title":"[单片机] 概念+图解","url":"/2019/12/18//articles/2019/12/18/1576670172000.html/","content":"<a href=\"https://blog.csdn.net/wangjiaweiwei/category_9286187.html\" target=\"_blank\">专栏 - 51单片机</a>\n\n<a href=\"https://blog.csdn.net/wangjiaweiwei/article/details/103100611\" target=\"_blank\">51单片机之串行通信</a>\n<a href=\"https://blog.csdn.net/wangjiaweiwei/article/details/88671099\" target=\"_blank\">单片机的空闲模式与掉电/休眠模式</a>\n","tags":["单片机"]},{"title":"[stm32] 基于ZigBee和STM32的智能家居控制系统的设计与实现","url":"/2019/12/18//articles/2019/12/18/1576670170000.html/","content":"\n基于zigbee的智能家居管理系统\n<a href=\"https://www.bilibili.com/video/av57387117\" target=\"_blank\">哔哩哔哩</a>\ntelrob的博客\n<a href=\"https://blog.csdn.net/telrob/article/details/95234431\" target=\"_blank\">基于zigbee的智能家居管理系统-blog</a>\n<a href=\"https://pan.baidu.com/s/15iHm3BXIKOAKCW8Q4D6TUg\" target=\"_blank\">基于zigbee的智能家居管理系统-资料</a>\n```\n提取码：\n7fr1\n```\n\n\n<a href=\"https://github.com/kevinlq/SmartHome-Qt\" target=\"_blank\">SmartHome-Qt</a>\n\n基于ZigBee和STM32的智能家居控制系统的设计与实现(一)到(五)\n<a href=\"https://blog.csdn.net/u013704336/article/details/50832978\" target=\"_blank\">(一)</a>\n<a href=\"https://blog.csdn.net/u013704336/article/details/50850926\" target=\"_blank\">(二)</a>\n<a href=\"https://blog.csdn.net/u013704336/article/details/51072709\" target=\"_blank\">(三)</a>\n<a href=\"https://blog.csdn.net/u013704336/article/details/51541155\" target=\"_blank\">(四)</a>\n```\n下位机硬件资源介绍\nzigbee核心板\nDS18B20模块(温度传感器)\nMQ_2(烟雾传感器)\n客厅LED流水灯(模拟真实环境)\n蜂鸣器\nDHT11(温湿度传感器)\n卧室LED灯\n光敏传感器\nHCSR501(人体热释电)\n系统检测灯\nMCU(STM32F103C8T6)\n```\n<a href=\"https://blog.csdn.net/u013704336/article/details/51765397\" target=\"_blank\">(五)--终结篇</a>\n\n\n【Android开发—智能家居系列】\n<a href=\"https://blog.csdn.net/zhangbijun1230/article/details/83445185\" target=\"_blank\">（一）：智能家居原理</a>\n<a href=\"https://blog.csdn.net/u010924834/article/details/49496729\" target=\"_blank\">（二）：用手机对WIFI模块进行配置</a>\n<a href=\"https://blog.csdn.net/u010924834/article/details/49668623\" target=\"_blank\">（三）：手机连接WIFI模块</a>\n<a href=\"https://blog.csdn.net/u010924834/article/details/49668669\" target=\"_blank\">（四）：UDP通信发送指令</a>\n","tags":["stm32"]},{"title":"[springboot] 基于Zigbee的智能家居系统","url":"/2019/12/18//articles/2019/12/18/1576670169000.html/","content":"<a href=\"https://blog.csdn.net/telrob/article/details/95234431\" target=\"_blank\">基于zigbee的智能管理系统</a>\n\n系统总体原理图\n<img src=\"https://img-blog.csdnimg.cn/20190709202735492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RlbHJvYg==,size_16,color_FFFFFF,t_70\"/>\n\n<a href=\"https://pan.baidu.com/s/15iHm3BXIKOAKCW8Q4D6TUg\" target=\"_blank\">基于zigbee的智能家居管理系统.tar.gz</a>\n<a href=\"https://www.bilibili.com/video/av57387117\" target=\"_blank\">哔哩哔哩视频 - 基于zigbee的智能家居管理系统</a>\n```\n提取码：\n7fr1\n```\n\n<a href=\"https://github.com/Wlain/Environment-Data-Acquisition-System-of-Internet-of-Things-Based-on-ZigBee.git\" target=\"_blank\">github 基于ZigBee的物联网环境数据采集系统</a>\n\n<a href=\"https://blog.csdn.net/qq_41204464/article/details/88932459\" target=\"_blank\">基于Zigbee的智能家居系统</a>\n","tags":["springboot"]},{"title":"[python] 实现的简单的单片机串口助手程序","url":"/2019/12/18//articles/2019/12/18/1576670168000.html/","content":"<a href=\"https://blog.csdn.net/wangjiaweiwei/article/details/90300119\" target=\"_blank\">51单片机之继电器实验</a>\n\n<a href=\"https://blog.csdn.net/Lzinner/article/details/79619945\" target=\"_blank\">51单片机之继电器</a>\n\n","tags":["python"]},{"title":"[python] python27缺少dll的解决","url":"/2019/12/18//articles/2019/12/18/1576670167000.html/","content":"python27缺少dll的解决\n```\n1.下载python27.dll\n地址：\nhttps://cn.dll-files.com/python27.dll.html\n```\n\n```\n采用工具caffe进行训练模块时，编译成功后，运行.bat文件，提示找不到python27.dll文件，本人安装的是anaconda2，python27.dll文件在anaconda2文件下，至于系统没有找到是因为环境变量丢失\n\n解决办法：\n将包含python27.dll文件的文件夹加入环境变量中，我这里的路径为D:\\Anaconda2\n```\n","tags":["python"]},{"title":"[python] DLL load failed找不到指定的模块","url":"/2019/12/18//articles/2019/12/18/1576670166000.html/","content":"<a href=\"https://blog.csdn.net/proplume/article/details/88145115\" target=\"_blank\">python3.6：DLL load failed:找不到指定的模块（from PyQt5 import QtCore）</a>\n```\n具体解决方案\n原因描述：\n通过Anaconda 安装的Python缺少了python3.dll\n\n方法1、\n根据 版本需要 通过python.org 下载所需版本的python安装包并安装，然后从安装目录中拷贝python3.dll文件，粘贴到Anaconda安装目录下（python36.dll所在目录，第一层目录）。\n\n方法2、\npython3的可以直接通过如下链接下载python3.dll，然后放到Anaconda中python36.dll所在目录中。\n链接：\nhttps://pan.baidu.com/s/1Dard-TirQyuUksqg0yuThw\npython3.dll\n\n提取码：\nanmn\n```\n\n<a href=\"https://www.jianshu.com/p/094928ac0b73\" target=\"_blank\">Python3 PyQt5 pycharm 环境搭建</a>\n```\npip3 install sip\npip3 install PyQt5\n```\n","tags":["python"]},{"title":"[PyQt5] 连接mysql示例","url":"/2019/12/18//articles/2019/12/18/1576670165000.html/","content":"<a href=\"https://blog.csdn.net/jeekmary/article/details/79677285\" target=\"_blank\">PyQt5连接MySQL</a>\n\n<a href=\"https://github.com/jeekMic/py_mysql.git\" target=\"_blank\">py_mysql</a>\n\n","tags":["PyQt5"]},{"title":"[PyQt5] exe打包","url":"/2019/12/18//articles/2019/12/18/1576670164000.html/","content":"<a href=\"https://blog.csdn.net/wangle_08/article/details/79235719\" target=\"_blank\">Python3 安装PyQt5及exe打包</a>\n\n打包\n```\npip install pyinstaller\npyinstaller.exe -F -w X:\\workspaces\\python\\test\\main.py\n\n打包好的exe在Scripts的dist文件夹下\n```\n\n```\nQT_QPA_PLATFORM_PLUGIN_PATH\nX:\\Python\\Python37\\Lib\\site-packages\\PyQt5\\Qt\\plugins\n```\n","tags":["PyQt5"]},{"title":"[html] input禁止输入%\\_","url":"/2019/12/18//articles/2019/12/18/1576670163000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n<input\ntype=\"text\"\nautocomplete=\"off\"\noninput=\"this.value=(this.value.replace(/(\\%)|(\\_)/g,''))\">\n```\n","tags":["html"]},{"title":"[单片机] 指纹识别+元件清单","url":"/2019/12/18//articles/2019/12/18/1576669683000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-119721-1.html\" target=\"_blank\">单片机指纹密码锁电路原理图+源程序+实物制作</a>\n```\n指纹密码锁元件清单\n1)    9*15万用板\n2)    指纹传感器\n3)    40脚IC座\n4)    stc89c51单片机\n5)    8脚IC座\n6)    24c02芯片\n7)    12864有字库液晶\n8)    20p插针+6P插针\n9)    20p单排母座\n10)    矩阵键盘\n11)    103蓝白电位器\n12)    2.2k电阻\n13)    1k电阻\n14)    10k电\n15)    10欧姆电阻\n16)    9012三极管\n17)    3p接线端子\n18)    10uf电容\n19)    30pf瓷片电容*2\n20)    11.0592m晶振\n21)    5v松乐继电器\n22)    5MM红色LED\n23)    自锁开关\n24)    DC电源插口\n25)    导线若干\n26)    焊锡若干\n27)    usb电源线\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-167894-1.html\" target=\"_blank\">STC89C52单片机指纹识别程序 1602显示</a>\n","tags":["单片机"]},{"title":"[单片机] 糖醋咸鱼的博客","url":"/2019/12/18//articles/2019/12/18/1576669682000.html/","content":"<a href=\"https://blog.csdn.net/qimi923511491/category_7451117.html\" target=\"_blank\">糖醋咸鱼的单片机专栏</a>\n\n<a href=\"https://blog.csdn.net/qimi923511491/article/details/82928743\" target=\"_blank\">51单片机使用和配置HC-05蓝牙模块</a>\n\n<a href=\"https://blog.csdn.net/qimi923511491/article/details/79284625\" target=\"_blank\">51单片机通过ESP8266模块与手机进行通讯（单片机）</a>\n```\nhttps://pan.baidu.com/s/1TRfbYc_NaR_Lbniyduv1Kw\n```\n\n","tags":["单片机"]},{"title":"[单片机] 串口工具收发字符串","url":"/2019/12/18//articles/2019/12/18/1576669681000.html/","content":"<a href=\"https://www.cnblogs.com/freesblog/p/5040474.html\" target=\"_blank\">51单片机串口通信的发送与接收字符串</a>\n```\n//最佳答案：\n//下列程序，已经调试成功。\n#include <REG52.H>\nsbit LED = P1 ^ 0;\nunsigned char UART_buff;\nbit New_rec = 0, Send_ed = 1, Money = 0;\n//----------------------------------------------\nvoid main (void)\n{\n  SCON = 0x50;   //串口方式1, 8-n-1, 允许接收.\n  TMOD = 0x20;   //T1方式2\n  TH1 = 0xFD;    //9600bps@11.0592MHz\n  TL1 = 0xFD;\n  TR1 = 1;\n  ES  = 1;       //开中断.\n  EA  = 1;\n  while (Money == 0);   //等着交费，呵呵，等着接收\n  while (1)  {\n    if ((New_rec == 1) && (Send_ed == 1))  {  //如果收到新数据及发送完毕\n      SBUF = UART_buff; //那就发送.\n      New_rec = 0;\n      Send_ed = 0;\n    }\n  }\n}\n//----------------------------------------------\nvoid ser_int (void) interrupt 4\n{\n  if (RI == 1) { //如果收到.\n    RI = 0;      //清除标志.\n    New_rec = 1;\n    UART_buff = SBUF;  //接收.\n    if (UART_buff == '1')  LED = 1;\n    if (UART_buff == '0')  LED = 0;\n    if (UART_buff == '$')  Money = 1;\n  }\n  else  {        //如果送毕.\n    TI = 0;      //清除标志.\n    Send_ed = 1;\n  }\n}\n//----------------------------------------------\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-31129-1.html\" target=\"_blank\">51单片机串口c程序(收发字符串)</a>\n```\n/**\n *  单片机接收主机的数据,然后将数据传送到P1口, 并传回给主机;\n *  当按下K1=P1.4时,单片机发送字符串 给主机\n */\n#include <reg51.h>\n#include <intrins.h>\n\nunsigned char key_s, key_v, tmp;\n\nchar code str1[] = \"5142587cccddddddcom5652125487 \";\nchar code str2[] = \"QQ:15920380    \";\nchar code str3[] = \"EMAIL:crsybody@sohu.com    \";\nvoid send_str();\nbit scan_key();\nvoid proc_key();\nvoid delayms(unsigned char ms);\nvoid send_char(unsigned char txd);\n\nsbit K1 = P3 ^ 0;\n\nvoid main() {\n\n  TMOD = 0x20;    // 定时器1工作于8位自动重载模式, 用于产生波特率\n  TH1 = 0xFD;     // 波特率9600\n  TL1 = 0xFD;\n\n  SCON = 0x50;    // 设定串行口工作方式\n  PCON &= 0xef;    // 波特率不倍增\n\n  TR1 = 1;     // 启动定时器1\n  IE = 0x0;     // 禁止任何中断\n\n  while (1)\n  {\n    if (scan_key())  // 扫描按键\n    {\n      delayms(10);    // 延时去抖动\n      if (scan_key())   // 再次扫描\n      {\n        key_v = key_s;   // 保存键值\n        proc_key();    // 键处理\n      }\n    }\n    if (RI)      // 是否有数据到来\n    {\n      RI = 0;\n      tmp = SBUF;     // 暂存接收到的数据\n      P2 = tmp;     // 数据传送到P0口\n      send_char(tmp);    // 回传接收到的数据\n    }\n  }\n}\n\nbit scan_key() { // 扫描按键\n  key_s = 0x00;\n  key_s |= K1;\n  return (key_s ^ key_v);\n}\n\nvoid proc_key() { // 键处理\n  if ((key_v & 0x01) == 0) { // K1按下\n    send_str();     // 传送字串\"welcome!...\n  }\n}\n\nvoid send_char(unsigned char txd) { // 传送一个字符\n  SBUF = txd;\n  while (!TI);    // 等特数据传送\n  TI = 0;      // 清除数据传送标志\n}\n\nvoid send_str() { // 传送字串\n  unsigned char i = 0;\n  while (str1[i] != '\\0')\n  {\n    SBUF = str1[i];\n    while (!TI);    // 等特数据传送\n    TI = 0;      // 清除数据传送标志\n    i++;      // 下一个字符\n  }\n  i = 0;\n  while (str2[i] != '\\0')\n  {\n    SBUF = str2[i];\n    while (!TI);    // 等特数据传送\n    TI = 0;      // 清除数据传送标志\n    i++;      // 下一个字符\n  }\n  i = 0;\n  while (str3[i] != '\\0')\n  {\n    SBUF = str3[i];\n    while (!TI);    // 等特数据传送\n    TI = 0;      // 清除数据传送标志\n    i++;      // 下一个字符\n  }\n}\n\nvoid delayms(unsigned char ms) { // 延时子程序\n  unsigned char i;\n  while (ms--)\n  {\n    for (i = 0; i < 120; i++);\n  }\n}\n```\n","tags":["单片机"]},{"title":"[单片机] 使用和配置HC-05蓝牙模块","url":"/2019/12/18//articles/2019/12/18/1576669680000.html/","content":"<a href=\"https://blog.csdn.net/qimi923511491/article/details/82928743\" target=\"_blank\">51单片机使用和配置HC-05蓝牙模块</a>\n```\n/*串口初始化配置*/\nvoid UartConfiguration()  \n{\n    TMOD=0x20;      //设置计数器1的工作方式2\n    TH1=0xfd;\t    //设置计数器1的初值，决定波特率\n    TL1=0xfd;\t\t//设置计数器1的初值，决定波特率\n    PCON=0x00;      // 波特率倍增0x00不加倍\t 0x80加倍\n    SCON=0x50;\t\t//设置工作方式1 开启接受允许\n    EA=1;\t\t    //开启总中断\n    ES=1;\t\t\t//开启串口接受中断\n    TR1=1;\t\t\t//计数器1开始运行\n}\n/*发送数据*/\nvoid sendDate(char date)\n{\n    SBUF=date;\t\t  //接收到的数据放入发送缓存器发送\n    while(!TI);       //等待发送数据完成\n    TI=0;\t\t\t  //清除发送完成标志位\n}\n \n/*主函数*/\nvoid main()\n{\n    UartConfiguration();\n \n    sendDate('1');  //发送字符1\n \n    while(1);\n}\n \n/*中断函数*/\nvoid Uart() interrupt 4\n{\n    uchar date;\n    date=SBUF;        //取出接受到的数据\n    RI=0;\t\t\t  //清除接受中断标志位\n \n    //收到的数据是date\n\t\n}\n```\n","tags":["单片机"]},{"title":"[单片机] 独立按键","url":"/2019/12/18//articles/2019/12/18/1576669679000.html/","content":"<a href=\"https://blog.csdn.net/wangjiaweiwei/article/details/90233186\" target=\"_blank\">51单片机之独立按键</a>\n\n独立键盘程序示例：\n```\n#include \"reg52.h\"\n\ntypedef unsigned char u8;\ntypedef unsigned int u16;\n\nsbit led = P0 ^ 0; //设置灯的控制IO口\nsbit k1  = P1 ^ 0; //设置按键的控制IO口\n\nvoid delay(u16 i) //延时函数\n{\n\twhile (i--);\n}\n\nvoid keyprocess()\n{\n\tif (k1 == 0) //判断按键是否按下\n\t{\n\t\tdelay(1000); //延时消抖\n\t\tif (k1 == 0) //再次判断按键是否按下\n\t\t{\n\t\t\tled = 1; //如果按键按下，则灯亮\n\t\t}\n\t\telse\n\t\t{\n\t\t\tled = 0; //如果按键没有按下，则灯灭\n\t\t}\n\n\t}\n}\n\nvoid main()\n{\n\tled = 0; //初始灯灭\n\twhile (1)\n\t{\n\t\tkeyprocess(); //处理按键事件\n\t}\n}\n```\n\n<a href=\"https://blog.csdn.net/Lzinner/article/details/79597092\" target=\"_blank\">51单片机之独立按键控制LED</a>\n```\n#include<reg52.h>\ntypedef int u16;\ntypedef char u8;\nsbit led1 = P2 ^ 0;\t//D1\nsbit led2 = P2 ^ 1;\t//D2\nsbit led3 = P2 ^ 2;\t//D3\nsbit led4 = P2 ^ 3;\t//D4\n\nsbit k1 = P3 ^ 1; //定义一个独立按键\nsbit k2 = P3 ^ 2; //定义一个独立按键\nsbit k3 = P3 ^ 3; //定义一个独立按键\nsbit k4 = P3 ^ 4; //定义一个独立按键\n\n\n//定义延时函数\nvoid delay(u16 i)\n{\n\twhile (i--);\n}\nvoid keypros()//定义独立按键控制\n{\n\tif (k1 == 0) //说明按下去了\n\t{\n\t\tdelay(1000);//消抖\n\t\tif (k1 == 0)\n\t\t{\n\t\t\tled1 = ~led1; //翻转\n\t\t}\n\n\t\twhile (!k1); //按键松开\n\t}\n\tif (k2 == 0) //说明按下去了\n\t{\n\t\tdelay(1000);//消抖\n\t\tif (k2 == 0)\n\t\t{\n\t\t\tled2 = ~led2; //翻转\n\t\t}\n\n\t\twhile (!k2); //按键松开\n\t}\n\tif (k3 == 0) //说明按下去了\n\t{\n\t\tdelay(1000);//消抖\n\t\tif (k3 == 0)\n\t\t{\n\t\t\tled3 = ~led3; //翻转\n\t\t}\n\n\t\twhile (!k3); //按键松开\n\t}\n\tif (k4 == 0) //说明按下去了\n\t{\n\t\tdelay(1000);//消抖\n\t\tif (k4 == 0)\n\t\t{\n\t\t\tled4 = ~led4; //翻转\n\t\t}\n\n\t\twhile (!k4); //按键松开\n\t}\n}\nvoid main()\n{\n\twhile (1)\n\t{\n\t\tkeypros();\n\t}\n}\n```\n","tags":["单片机"]},{"title":"[单片机] 电子密码锁+仿真","url":"/2019/12/18//articles/2019/12/18/1576669678000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-142683-1.html\" target=\"_blank\">基于单片机的电子密码锁全套设计资料</a>\n","tags":["单片机"]},{"title":"[单片机] 电子密码锁+电磁阀","url":"/2019/12/18//articles/2019/12/18/1576669677000.html/","content":"<a href=\"https://www.bilibili.com/video/av15471945\" target=\"_blank\">bilibili 电子密码锁</a>\n","tags":["单片机"]},{"title":"[单片机] HC-SR04超声波测距","url":"/2019/12/18//articles/2019/12/18/1576669676000.html/","content":"<a href=\"https://blog.csdn.net/non_mainstream/article/details/79003275\" target=\"_blank\">利用51单片机，HC-SR04超声波模块实现测距，LCD显示</a>\n","tags":["单片机"]},{"title":"[单片机] zigbee网关","url":"/2019/12/18//articles/2019/12/18/1576669675000.html/","content":"<a href=\"https://pan.baidu.com/s/1JHpi202srO6VhPX6EY3Tlw\" target=\"_blank\">网关新版本资料链接</a>\n```\n提取码:\nnuw4\n```\n\n<a href=\"https://pan.baidu.com/s/10KlVnhM-GslH-O7SDLHsng\" target=\"_blank\">视频教程</a>","tags":["单片机"]},{"title":"[单片机] 74HC138译码器+数码管","url":"/2019/12/18//articles/2019/12/18/1576669674000.html/","content":"<a href=\"https://blog.csdn.net/sinat_38816924/article/details/80146661\" target=\"_blank\">c51单片机数码管的控制</a>\n","tags":["单片机"]},{"title":"[ubuntu] opencv配置","url":"/2019/12/18//articles/2019/12/18/1576669673000.html/","content":"<a href=\"https://www.cnblogs.com/fx-blog/p/8213704.html\" target=\"_blank\">opencv配置</a>\n","tags":["ubuntu"]},{"title":"[springcloud] 示例","url":"/2019/12/18//articles/2019/12/18/1576669672000.html/","content":"<a href=\"https://github.com/ityouknow/spring-cloud-examples\" target=\"_blank\">spring-cloud-examples</a>\n","tags":["springcloud"]},{"title":"[springboot] 微信支付+支付宝支付","url":"/2019/12/18//articles/2019/12/18/1576669671000.html/","content":"\n微信支付+支付宝支付\n<a href=\"https://gitee.com/52itstyle/spring-boot-pay\" target=\"_blank\">spring-boot-pay</a>\n\n\n微信支付\n<a href=\"https://blog.csdn.net/weixin_34050389/article/details/92093273\" target=\"_blank\">weixin-java-pay</a>\n<a href=\"https://blog.csdn.net/yinlell/article/details/84666428\" target=\"_blank\">SpringBoot后台结合小程序支付一般流程</a>\n<a href=\"https://blog.csdn.net/Majker/article/details/88379695\" target=\"_blank\">springboot 微信小程序 对接微信支付功能(完整版)</a>\n","tags":["springboot"]},{"title":"[springboot] vue前后端分离实现大文件分块上传","url":"/2019/12/18//articles/2019/12/18/1576669670000.html/","content":"<a href=\"https://luoliangdsga.github.io/2018/06/25/SpringBoot-Vue-js%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%AE%9E%E7%8E%B0%E5%A4%A7%E6%96%87%E4%BB%B6%E5%88%86%E5%9D%97%E4%B8%8A%E4%BC%A0/\" target=\"_blank\">SpringBoot+Vue.js前后端分离实现大文件分块上传</a>\n\n<a href=\"https://github.com/LuoLiangDSGA/spring-learning/tree/master/boot-uploader\" target=\"_blank\">spring-learning</a>","tags":["springboot"]},{"title":"[springboot] Logging配置","url":"/2019/12/18//articles/2019/12/18/1576669669000.html/","content":"<a href=\"https://my.oschina.net/woter/blog/1839781\" target=\"_blank\">SpringBoot Logging配置</a>\n\n<a href=\"https://blog.csdn.net/Small_Mouse0/article/details/77840582\" target=\"_blank\">SpringBoot配置logging日志及输出日志(yml格式)</a>\n```\nprotected static final Logger logger = LoggerFactory.getLogger(SpringBootApplication.class);\n\nlogger.info(\"SpringBoot加载完毕\");\n```","tags":["springboot"]},{"title":"[单片机] HC-SR051人体红外传感器","url":"/2019/12/18//articles/2019/12/18/1576669668000.html/","content":"<a href=\"https://blog.csdn.net/everestrs/article/details/86415607\" target=\"_blank\">51单片机 人体红外感应报警</a>\n```\n//模块感应到信号后，输出高电平，此时LED的D7灯点亮，蜂鸣器报警。没有信号后，D8灯亮，蜂鸣器停止。\n#include <reg52.h>\n#define uchar unsigned char\n#define uint unsigned int\n\nsbit HC_SR051_out = P1 ^ 7;\nsbit D7 = P1 ^ 6;\nsbit beep = P2 ^ 3;\n\n\nvoid delay(uint z)\n{\n\tuint i, j;\n\tfor (i = z; i > 0; i--)\n\t\tfor (j = 110; j > 0; j--);\n}\n\nvoid main() {\n\n\twhile (1)\n\t{\n\t\tif (HC_SR051_out == 1)\n\t\t{\n\t\t\tunsigned char m;\n\t\t\tfor (m = 20; m > 0; m--)\n\t\t\t{\n\t\t\t\tbeep = ~beep;\n\t\t\t\tD7 = ~D7;\n\t\t\t\tdelay(500);\n\t\t\t}\n\t\t}\n\n\t}\n}\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-145840-1.html\" target=\"_blank\">基于51单片机的人体红外模块的自动门设计原理图+程序</a>\n","tags":["单片机"]},{"title":"[python3] python3+opencv人脸识别","url":"/2019/12/18//articles/2019/12/18/1576669667000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_38214193/article/details/80997000\" target=\"_blank\">python3.7 opencv</a>\n<a href=\"https://www.python.org/ftp/python/3.7.5/python-3.7.5-amd64.exe\" target=\"_blank\">python-3.7.5-amd64.exe</a>\n```\npip install --upgrade setuptools\npip install numpy Matplotlib\npip install opencv-python\npip install pillow\npip install opencv-contrib-python\n```\n\n```\nhttps://www.lfd.uci.edu/~gohlke/pythonlibs/\npip install opencv_python‑4.1.2‑cp37‑cp37m‑win_amd64.whl\n```\n\n```\n基于OpenCV的视频人脸识别，Anaconda3\n```\n<a href=\"https://repo.anaconda.com/archive/Anaconda3-2019.10-Windows-x86_64.exe\" target=\"_blank\">Anaconda3-2019.10-Windows-x86_64.exe</a>\n<a href=\"https://docs.conda.io/en/latest/miniconda.html\" target=\"_blank\">Miniconda3 Windows 64-bit</a>\n<a href=\"https://github.com/winterssy/face_recognition_py\" target=\"_blank\">face_recognition_py</a>\n```\n本项目基于OpenCV使用Haar级联与dlib库进行人脸检测及实时跟踪，应用LBPH算法开发了一个功能相对完整的人脸识别系统。\n系统采用sqlite3进行序列化数据存储，能够对陌生人脸闯入进行报警，并拥有基于PyQt5设计的GUI实现。\n\ncd face_recognition_py\n#创建Python虚拟环境\nconda create -n opencv python=3.6\nconda activate opencv\n\n#安装OpenCV\ncd modules\npip install opencv_python-3.4.1+contrib-cp36-cp36m-win_amd64.whl\n\n#安装dlib\npip install dlib-19.8.1-cp36-cp36m-win_amd64.whl\n\n#安装其它依赖包\n#cd ..\npip install -r requirements.txt\n\n#运行人脸采集系统\npython dataRecord.py\n\n#运行核心框架\npython core.py\n\n#运行数据管理系统\npython dataManage.py\n\n#退出虚拟环境\nconda deactivate\n```\n\n<a href=\"http://blog.itpub.net/69923331/viewspace-2649876/\" target=\"_blank\">Python学习：基于Opencv来快速实现人脸识别（完整版）</a>\n```\n1、进行操作，opencv已经内置了很多分类检测器，我们这次用haar\n2、有了数据集和检测人脸的功能后，我们就可以进行预训练了，最后返回所有训练图片的人脸检测信息和标签\n3、有了脸部信息和对应标签后，我们就可以使用opencv自带的识别器来进行训练了\n4、训练完毕后就可以进行预测了，在这之前我们可以设定一下预测的格式，包括用矩形框框出人脸并标出其名字，当然最后别忘了建立标签与真实姓名直接的映射表\n5、现在就可以定义我们的预测函数了\n6、最后使用我们test_data中的图片进行预测并显示最终效果\n```\n\n<a href=\"https://github.com/chxcode/OpenCV-Python3\" target=\"_blank\">OpenCV For Python3 中文手册</a>\n```\n一、Getting Started with Images开始使用图片\n\n二、Getting Started with Videos开始使用视频\n\n三、Drawing Functions in OpenCv OpenCv 中的绘图函数\n\n四、Mouse as a Paint-Brush把鼠标作为画笔\n\n五、Trackbar as the Color Palette用滑动条做调色板\n\n六、Basic Operations on Images图像的基础操作\n\n七、Arithmetic Operations on Images图像上的算数运算\n\n八、Performance Measurement and Improvement Techniques 程序性能监测及优化\n\n九、Changing Colorspaces颜色空间转换\n\n十、图像阈值\n\n十一、Geometric Transformations of Images 图像的几何变换\n```\n\ndetect.py\n```python\n# # -*- coding:utf-8 -*-\nimport cv2\nimport os\nimport numpy as np\n# 检测人脸\ndef detect_face(img):\n #将测试图像转换为灰度图像，因为opencv人脸检测器需要灰度图像\n gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n #加载OpenCV人脸检测分类器Haar\n face_cascade = cv2.CascadeClassifier('./haarcascade_frontalface_default.xml')\n #检测多尺度图像，返回值是一张脸部区域信息的列表（x,y,宽,高）\n faces = face_cascade.detectMultiScale(gray, scaleFactor=1.2, minNeighbors=5)\n # 如果未检测到面部，则返回原始图像\n if (len(faces) == 0):\n return None, None\n #目前假设只有一张脸，xy为左上角坐标，wh为矩形的宽高\n (x, y, w, h) = faces[0]\n #返回图像的正面部分\n return gray[y:y + w, x:x + h], faces[0]\n# 该函数将读取所有的训练图像，从每个图像检测人脸并将返回两个相同大小的列表，分别为脸部信息和标签\ndef prepare_training_data(data_folder_path):\n # 获取数据文件夹中的目录（每个主题的一个目录）\n dirs = os.listdir(data_folder_path)\n # 两个列表分别保存所有的脸部和标签\n faces = []\n labels = []\n # 浏览每个目录并访问其中的图像\n for dir_name in dirs:\n # dir_name(str类型)即标签\n label = int(dir_name)\n # 建立包含当前主题主题图像的目录路径\n subject_dir_path = data_folder_path + \"/\" + dir_name\n # 获取给定主题目录内的图像名称\n subject_images_names = os.listdir(subject_dir_path)\n # 浏览每张图片并检测脸部，然后将脸部信息添加到脸部列表faces[]\n for image_name in subject_images_names:\n # 建立图像路径\n image_path = subject_dir_path + \"/\" + image_name\n # 读取图像\n image = cv2.imread(image_path)\n # 显示图像0.1s\n cv2.imshow(\"Training on image...\", image)\n cv2.waitKey(100)\n # 检测脸部\n face, rect = detect_face(image)\n # 我们忽略未检测到的脸部\n if face is not None:\n #将脸添加到脸部列表并添加相应的标签\n faces.append(face)\n labels.append(label)\n cv2.waitKey(1)\n cv2.destroyAllWindows()\n #最终返回值为人脸和标签列表\n return faces, labels\n#调用prepare_training_data（）函数\nfaces, labels = prepare_training_data(\"training_data\")\n#创建LBPH识别器并开始训练，当然也可以选择Eigen或者Fisher识别器\nface_recognizer = cv2.face.LBPHFaceRecognizer_create()\nface_recognizer.train(faces, np.array(labels))\n#根据给定的（x，y）坐标和宽度高度在图像上绘制矩形\ndef draw_rectangle(img, rect):\n (x, y, w, h) = rect\n cv2.rectangle(img, (x, y), (x + w, y + h), (128, 128, 0), 2)\n# 根据给定的（x，y）坐标标识出人名\ndef draw_text(img, text, x, y):\n cv2.putText(img, text, (x, y), cv2.FONT_HERSHEY_COMPLEX, 1, (128, 128, 0), 2)\n#建立标签与人名的映射列表（标签只能为整数）\nsubjects = [\"jiaju\", \"jiaqiang\"]\n# 此函数识别传递的图像中的人物并在检测到的脸部周围绘制一个矩形及其名称\ndef predict(test_img):\n #生成图像的副本，这样就能保留原始图像\n img = test_img.copy()\n #检测人脸\n face, rect = detect_face(img)\n #预测人脸\n label = face_recognizer.predict(face)\n # 获取由人脸识别器返回的相应标签的名称\n label_text = subjects[label[0]]\n # 在检测到的脸部周围画一个矩形\n draw_rectangle(img, rect)\n # 标出预测的名字\n draw_text(img, label_text, rect[0], rect[1] - 5)\n #返回预测的图像\n return img\n#加载测试图像\ntest_img1 = cv2.imread(\"test_data/test1.jpg\")\ntest_img2 = cv2.imread(\"test_data/test2.jpg\")\n#执行预测\npredicted_img1 = predict(test_img1)\npredicted_img2 = predict(test_img2)\n#显示两个图像\ncv2.imshow(subjects[0], predicted_img1)\ncv2.imshow(subjects[1], predicted_img2)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n<a href=\"https://www.cnblogs.com/jyxbk/p/7677877.html\" target=\"_blank\">python三步实现人脸识别</a>\n```\ngit clone https://github.com/ageitgey/face_recognition\n```\n\n\ndocker-python3-opencv\n```\n#Docker image with python 3 and opencv 4.1\nhttps://github.com/janza/docker-python3-opencv\n\n#run\ndocker run -it jjanzic/docker-python3-opencv python\n>>> import cv2\n```\n","tags":["python3"]},{"title":"[设计] weui","url":"/2019/12/15//articles/2019/12/15/1576424584000.html/","content":"<a href=\"https://github.com/weui/weui-design\" target=\"_blank\">github weui-design</a>\n```\nWeUI.psd\nandroid-font.zip\nweui.sketch\n```\n\n<a href=\"https://codeload.github.com/weui/weui-design/zip/master\" target=\"_blank\">Sketch版下载地址：</a>\n<a href=\"http://5coai3.share.axure.org/\" target=\"_blank\">Axure版演示地址：</a>\n","tags":["设计"]},{"title":"[ai] 安装包","url":"/2019/12/15//articles/2019/12/15/1576424583000.html/","content":"<a href=\"http://www.xueui.cn/download/app-template/flat-mobile-app.html\" target=\"_blank\">一套扁平风格的移动端APP(UI PSD免费下载)</a>\n\n<a href=\"http://pan.baidu.com/s/1dDcleEl\" target=\"_blank\">度娘下载</a>\n\n<a href=\"http://www.xueui.cn/design/uikit\" target=\"_blank\">uikit</a>\n\n<a href=\"https://pan.baidu.com/s/1TnVyo7aRyTjhVOprmdOMbg\" target=\"_blank\">MATERIAL DESIGN</a>\n```\n密码:\nyz7k\n```\n\n<a href=\"https://github.com/weui/weui-design\" target=\"_blank\">WeUI.psd</a>\n","tags":["ai"]},{"title":"[批处理] 合并分区","url":"/2019/12/15//articles/2019/12/15/1576424582000.html/","content":"```\ndiskmgmt.msc\n```\n","tags":["批处理"]},{"title":"[单片机] OE和LE","url":"/2019/12/15//articles/2019/12/15/1576424581000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nOE = Output Enable 输出使能\nLE = Latch Enable 锁存使能\n```\n","tags":["单片机"]},{"title":"[ai] 安装包","url":"/2019/12/15//articles/2019/12/15/1576424580000.html/","content":"<a href=\"http://www.zdfans.com/html/41980.html\" target=\"_blank\">Adobe Illustrator cc2019v23.1.0.67中文绿色破解版</a>\n<a href=\"http://zdfans7.com/illustrator2019lspjb_41980.zip\" target=\"_blank\">zip包</a>","tags":["ai"]},{"title":"[win10] 系统镜像","url":"/2019/12/14//articles/2019/12/14/1576322189000.html/","content":"<a href=\"http://www.aihao.cc/thread-12172-1-1.html\" target=\"_blank\">Win10 LTSC 2019 Rs5 1809 17763.805 x64 完整仅优化</a>\n```\n文件名称: \nWin10_LTSC_2019_Rs5_1809_17763.805_x64_完整仅优化_By.溯汐潮.esd\n文件大小: \n3.05 GB (3,276,567,876 字节)\n\n修改时间: \n2019年10月14日，23:57:59\nMD5: \nE6674966780706031C8B9D39D691182C\nCRC32: \nF45858A6\n```\n\n```\nhttps://pan.baidu.com/s/1QfBhjvlCjSX6QFXstXQakA\n提取码:\nqifj\n```\n","tags":["win10"]},{"title":"[单片机] SG90舵机","url":"/2019/12/14//articles/2019/12/14/1576322188000.html/","content":"<a href=\"https://blog.csdn.net/silentlambj/article/details/79187727\" target=\"_blank\">盛辉SG90舵机 51单片机PWM控制程序 手机屏幕触控</a>\n\n<a href=\"http://baijiahao.baidu.com/s?id=1600440375098049847\" target=\"_blank\">PWM位置图示</a>\n```\nSTC89C52是没有直接的PWM输出功能的，不过你可以通过设定定时器来实现\n具体的做法是：用T1来设置你的周期（周期设定之后就不要再变），再用T0来设置高电平的时间，通过控制TR0（让T0开始计数的控制位），得到不同占空比的输出，从而实现了PWM的输出\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-156595-1.html\" target=\"_blank\">浅谈用单片机控制SG90舵机(原理+编程)</a>\n```\n#include <reg52.h>\nsbit SG_PWM=P0^0;\nunsigned char count=0;\nunsigned char PWM_count=3;                  //1--0度，2--45度，3--90度，4--135度，5--180度\nunsigned char a=0;\nvoid Timer_Init()\n{\n  TMOD=0X01;      //T0定时方式1\n  TH0=0Xfe;\n  TL0=0X33;       //计数初值设置为0.5ms\n  ET0=1;          //打开定时器0的中断\n  TR0=1;          //打开定时器0\n  EA=1;           //开总中断\n}\nvoid Timer() interrupt 1      //特别注意此处，0--外部中断0，1--定时器中断0，2--外部中断1，3--定时器中断1，4--串行口中断1\n{\n  TR0=0;\n  TH0=0Xfe;\n  TL0=0X33;       //重新赋计数初值为0.5ms\n  if(count<=PWM_count)\n  {\n    SG_PWM=1;\n  }\n  else\n  {\n    SG_PWM=0;\n  }\n  count++;\n  if(count>=40)\n  {\n    count=0;\n    a++;\n  }\n  TR0=1;\n}\nvoid main()\n{\n  Timer_Init();\n  while(1)\n  {\n      if(a==16)                             //20是比较舒服的连贯动作，20以上动作些许不连贯，10的时候出现打架情况，15的时候打架几乎没有，16比较完美\n      {\n        PWM_count=1;\n      }\n      if(a==32)\n      {\n        PWM_count=3;\n        a=0;\n      }\n  }\n}\n```\n","tags":["单片机"]},{"title":"[设计] 公司官网","url":"/2019/12/13//articles/2019/12/13/1576235784000.html/","content":"<a href=\"https://ibaotu.com/tupian/gongsiguanwang.html\" target=\"_blank\">企业官网</a>\n\n<a href=\"https://ibaotu.com/sucai/1052733.html?kwd=%E4%BC%81%E4%B8%9A%E5%AE%98%E7%BD%91\" target=\"_blank\">白色背景简约智能门锁企业官网首页界面</a>\n\n<a href=\"https://ibaotu.com/sucai/18106230.html?kwd=%E5%85%AC%E5%8F%B8%E5%AE%98%E7%BD%91\" target=\"_blank\">金融贷款服务科技公司官网</a>\n\n<a href=\"https://ibaotu.com/sucai/1036545.html?kwd=%E5%85%AC%E5%8F%B8%E5%AE%98%E7%BD%91\" target=\"_blank\">简约企业官网关于我们网页界面模板</a>\n\n<a href=\"https://ibaotu.com/sucai/19412446.html?kwd=%E5%85%AC%E5%8F%B8%E5%AE%98%E7%BD%91\" target=\"_blank\">简约大气家居装修电商企业官网模板网页界面</a>\n\n<a href=\"http://www.luomansizs.com/\" target=\"_blank\">硬件产品企业官网</a>\n\n<a href=\"https://www.zcool.com.cn/work/ZNDE0OTM2Mjg=.html\" target=\"_blank\">（参考）好美佳企业站练习</a>\n","tags":["设计"]},{"title":"[设计] 珠海画册打印","url":"/2019/12/13//articles/2019/12/13/1576235783000.html/","content":"<a href=\"https://www.bilibili.com/video/av74820321\" target=\"_blank\">科迅画册设计教程【全套】</a>\n\n<a href=\"https://ibaotu.com/sucai/18450137.html?kwd=%E7%94%BB%E5%86%8C\" target=\"_blank\">素材</a>\n\n<a href=\"http://www.zheliyin.com/goods/441471.html\" target=\"_blank\">[数码印刷]画册打样、小批量宣传册</a>\n\n<a href=\"https://zh.58.com/huaceys/\" target=\"_blank\">58同城 珠海画册</a>\n","tags":["设计"]},{"title":"[设计] 珠海包装盒打印","url":"/2019/12/13//articles/2019/12/13/1576235782000.html/","content":"<a href=\"https://ibaotu.com/tupian/baozhuanghe.html\" target=\"_blank\">包装盒</a>\n\n<a href=\"https://ibaotu.com/sucai/18263626.html?kwd=%E5%8C%85%E8%A3%85%E7%9B%92\" target=\"_blank\">化妆品包装盒样机</a>\n","tags":["设计"]},{"title":"[设计] 建筑设计","url":"/2019/12/13//articles/2019/12/13/1576235781000.html/","content":"<a href=\"https://www.bilibili.com/video/av74058664\" target=\"_blank\">建筑设计讲解</a>\n```\n P1 1术语\n P2 2经济技术指标及计算\n P3 3平面(一)\n P4 4平面(二)\n P5 5平面(三)\n P6 6案例分析\n P7 7节能计算\n P8 8高层住宅施工图(一)\n P9 9高层住宅施工图(二)\nP10 10低层住宅设计概述\nP11 11低层住宅类型及特点\nP12 12低层住宅设计-套型设计\nP13 13组合方式\nP14 14居住环境\nP15 15低层住宅的造型、立面\nP16 16多层住宅建筑设计课程概述\nP17 17多层住宅设计-套型设计（一）\nP18 18多层住宅设计-套型设计（二）\nP19 19多层住宅设计定义及设计要求\nP20 20常见的平面类型及特点\nP21 21多层住宅设计-适应性和可变性\nP22 22标准化与多样化\nP23 23多层住宅的造型、立面\nP24 24多层住宅施工图\nP25 25施工图内容及流程概述（一）\nP26 26施工图内容及流程概述（二）\nP27 27接手方案条件图\nP28 28扩初图纸\nP29 29第一版条件图的组成\nP30 30第一版条件图的制作\nP31 31扩初图纸——室内环境\nP32 32扩初图纸——建筑设备(一)\nP33 33扩初图纸——建筑设备(二)\nP34 34扩初图纸——住宅门构造(一)\nP35 35扩初图纸——住宅门构造(二)\nP36 36扩初图纸——住宅窗构造\nP37 37扩初图纸——厨房\nP38 38扩初图纸——卫生间\n```\n","tags":["设计"]},{"title":"[工具] 系统备份","url":"/2019/12/13//articles/2019/12/13/1576235780000.html/","content":"<a href=\"http://www.zdfans.com/html/24690.html\" target=\"_blank\">一键ghost软盘版v2018.06.08</a>\n<a href=\"http://zdfans7.com/yjghost_24690.zip\" target=\"_blank\">下载</a>\n","tags":["工具"]},{"title":"[ppt] 年会","url":"/2019/12/13//articles/2019/12/13/1576235778000.html/","content":"<a href=\"http://www.1ppt.com/article/57494.html\" target=\"_blank\">年会庆典PPT</a>\n\n<a href=\"http://www.1ppt.com/xiazai/nianhui/\" target=\"_blank\">新年</a>\n\n<a href=\"http://www.1ppt.com/article/59299.html\" target=\"_blank\">精美2020鼠年新年PPT模板</a>\n","tags":["ppt"]},{"title":"[opencv] 头文件介绍","url":"/2019/12/13//articles/2019/12/13/1576235777000.html/","content":"<a href=\"https://www.cnblogs.com/k5bg/p/11083891.html\" target=\"_blank\">OpenCV2:开头篇 介绍</a>\n","tags":["opencv"]},{"title":"[android] 车牌识别","url":"/2019/12/13//articles/2019/12/13/1576235776000.html/","content":"\n```\nEasyPR是一个开源的中文车牌识别系统，其目标是成为一个简单、高效、准确的非限制场景(unconstrained situation)下的车牌识别库\n```\n\n<a href=\"https://www.jb51.net/article/153019.htm\" target=\"_blank\">android车牌识别系统EasyPR使用详解</a>\n\n<a href=\"https://github.com/linuxxx/EasyPR_Android\" target=\"_blank\">EasyPR_Android</a>\n\n<a href=\"https://github.com/guocheng0606/EasyPRForAndroid\" target=\"_blank\">车牌识别库EasyPR移植Android版本</a>\n\n<a href=\"https://gitee.com/easypr/EasyPR\" target=\"_blank\">EasyPR库</a>\n","tags":["android"]},{"title":"[springboot] 音乐播放器","url":"/2019/12/03//articles/2019/12/03/1575373750000.html/","content":"<a href=\"https://github.com/Linliquan/springboot-music\" target=\"_blank\">基于SpringBoot+Mybatis+MySQL5.7的一个音乐播放网站</a>\n\n<a href=\"https://github.com/sunqibao/-springboot-\" target=\"_blank\">-springboot-</a>\n\n","tags":["springboot"]},{"title":"[全栈] 扫码登录","url":"/2019/12/03//articles/2019/12/03/1575373750000.html/","content":"<a href=\"https://github.com/HeyJC/QRCodeLogin\" target=\"_blank\">QRCodeLogin</a>\n","tags":["全栈"]},{"title":"[springboot] docker+nginx+vue","url":"/2019/12/03//articles/2019/12/03/1575373749000.html/","content":"<a href=\"https://github.com/zzzzbw/Fame\" target=\"_blank\">使用Docker部署Spring-Boot+Vue博客系统</a>\n```\nfame-admin\nfame-docker\nfame-front\nfame-server\n```\n\n命令\n```\ndocker-compose up -d\n线上通过\nmvn clean spring-boot:run -Dspring-boot.run.profiles=docker -Dmaven.test.skip=true\n```\n\n<a href=\"https://www.jianshu.com/p/6ee84dca9ffb\" target=\"_blank\">docker部属springBoot+vue</a>\n","tags":["springboot"]},{"title":"[qt] 音乐播放器制作过程","url":"/2019/12/03//articles/2019/12/03/1575373748000.html/","content":"<a href=\"https://github.com/imguolao/qtMusicPlayer\" target=\"_blank\">播放器代码</a>\n\n<a href=\"https://www.cnblogs.com/guolao/p/8906708.html\" target=\"_blank\">QT5:C++实现基于Multimedia的音乐播放器（序）</a>\n\n<a href=\"https://www.cnblogs.com/guolao/p/8922552.html\" target=\"_blank\">QT5:C++实现基于multimedia的音乐播放器（一）</a>\n\n<a href=\"https://www.cnblogs.com/guolao/p/8930928.html\" target=\"_blank\">QT5:C++实现基于multimedia的音乐播放器（二）</a>\n","tags":["qt"]},{"title":"[发票] 普通发票的作用","url":"/2019/12/02//articles/2019/12/02/1575285388000.html/","content":"<a href=\"https://zhidao.baidu.com/question/44434378.html\" target=\"_blank\">普通发票的作用</a>\n```\n1、发票是指购销商品，提供或者接受劳务和其他经营活动中，开具、收取的收付凭证。由税务机关统一印制、发放和管理，纳税人根据经营范围向税务机关领购相关发票。\n发票最主要的作用有两个：\n一是经营活动的原始凭证，这既是买方的支出证明，同时也是卖方收入证明，是单位和个人生产经营会计核算的重要凭证。\n二是买方维权的合法凭证，万一质量有问题时，就可以索赔。\n\n2、收据仅适用于与经营无关的往来款项的凭证。如果要进入成本费用的，必须是发票！如果收据入成本费用的话，税务部门查到后，要调整增加应纳税所得额征收企业所得税（33%的税率）。\n```\n\n","tags":["发票"]},{"title":"[电脑知识] 玩机大学","url":"/2019/12/02//articles/2019/12/02/1575285387000.html/","content":"<a href=\"https://www.cccitu.com/2679.html\" target=\"_blank\">手机播放器播放局域网内电脑本地的视频</a>\n\n","tags":["电脑知识"]},{"title":"[单片机] LD3320语音识别模块","url":"/2019/12/02//articles/2019/12/02/1575285386000.html/","content":"<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/84818712\" target=\"_blank\">LD3320语音识别模块学习（1）—— 控制电机转动</a>\n\n<a href=\"https://blog.csdn.net/t1234xy4/article/details/50912823\" target=\"_blank\">语音模块LD3320控制LED灯</a>\n```\n程序链接：\nhttp://pan.baidu.com/s/1hqlJFI8\n密码：\nw9ly\n```\n\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.6.319b2514EuyKxg&id=41365254224&user_id=2234671227&cat_id=2&is_b=1&rn=ae5395eedbe533a7f306af4cf4d2c04f\" target=\"_blank\">语音识别模块 LD3320 一体化带单片机、IO 技术支持 (LDV7)</a>\n```\n视频教程：\nhttp://cloud.video.taobao.com/play/u/218960742/e/1/t/3/p/2/13924805.swf\n\n链接：\nhttps://pan.baidu.com/s/1VMe_GARAHT8QXDWMk4Xl-g\n提取码：\n39q1\n\nKEIL4下载:\nhttps://pan.baidu.com/s/1dEI9VFV\n密码:\ne2dj\n\n原理图：\nhttps://pan.baidu.com/s/1gf1pXyb\n密码:\nwviw\n```\n\n<a href=\"https://detail.tmall.com/item.htm?spm=a220m.1000858.1000725.11.319b2514EuyKxg&id=550030781060&skuId=4398469462652&user_id=2207691322&cat_id=2&is_b=1&rn=ae5395eedbe533a7f306af4cf4d2c04f\" target=\"_blank\">LD3320 语音识别模块51单片机IO语音模块 送下载器非特定人声识别</a>\n```\n配套资料：\nhttps://pan.baidu.com/s/1gDJBZdUUVGW1dgOCnltVkg\n提取码：\ngke2\n\nKEIL4下载:\nhttps://pan.baidu.com/s/1dxw_KYtPLXBMf3lynUR8MA\n提取码：\nbvbz\n\n原理图：\nhttps://pan.baidu.com/s/170tNdy4XGUjZ4TMopD_ZpQ\n提取码：\nbarx\n\nhttps://pan.baidu.com/s/1JzUvifanx912Ld9eHOuNZg\n提取码：\n1hiv\n```","tags":["单片机"]},{"title":"[springboot] 邮箱验证码","url":"/2019/12/02//articles/2019/12/02/1575285385000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_39506912/article/details/89849504\" target=\"_blank\">SpringBoot实现邮件任务(以验证码发送为例)</a>\n<a href=\"https://github.com/kellen5l/spring-boot-examples\" target=\"_blank\">spring-boot-examples</a>\n\n","tags":["springboot"]},{"title":"[springboot] 简洁的官网+sql","url":"/2019/12/02//articles/2019/12/02/1575285384000.html/","content":"<a href=\"https://github.com/HWYWL/uccn\" target=\"_blank\">一个简洁的官网</a>\n","tags":["springboot"]},{"title":"[springboot] mybatis+restful+api","url":"/2019/12/02//articles/2019/12/02/1575285383000.html/","content":"<a href=\"https://github.com/HWYWL/spring-boot-restful-api\" target=\"_blank\">spring-boot-restful-api</a>\n","tags":["springboot"]},{"title":"[springboot] docker+rabbitmq","url":"/2019/12/02//articles/2019/12/02/1575285382000.html/","content":"<a href=\"https://blog.csdn.net/hsg_happylearning/article/details/82314082\" target=\"_blank\">SpringBoot利用Docker整合RabbitMQ</a>\n","tags":["springboot"]},{"title":"[springboot] docker+ftp","url":"/2019/12/02//articles/2019/12/02/1575285381000.html/","content":"基于springboot的FtpUtil工具类\n<a href=\"https://github.com/mmzsblog/springboot-FtpUtil\" target=\"_blank\">github springboot-FtpUtil</a>\n\n<a href=\"https://www.jianshu.com/p/e51fe1975c29\" target=\"_blank\">使用 Docker 快速搭建 FTP 服务</a>\n<a href=\"https://www.hangge.com/blog/cache/detail_2449.html\" target=\"_blank\">Docker - 在容器中搭建运行FTP服务器（vsftpd）</a>\n```\n#寻找vsftpd的镜像\ndocker search vsftpd\n#把镜像pull到本地\ndocker pull fauria/vsftpd\n\ndocker run -d -v /home/vsftpd:/G/MyEtcs/vsftpd -p 20:20 -p 21:21 -p 21100-21110:21100-21110 -e FTP_USER=test -e FTP_PASS=test --name vsftpd -e LOG_STDOUT=1 --restart=always fauria/vsftpd\n\n#1、我们先进入container里面\ndocker exec -i -t vsftpd bash\n \n#2、修改并生成虚拟用户模式下的用户db文件\n#编辑配置文件写入用户跟密码\nvi /etc/vsftpd/virtual_users.txt\n\n#假如我们添加了user用户\n#建立新用户文件夹\nchown -R ftp:ftp /home/vsftpd\nmkdir -p /home/vsftpd/test\n/usr/bin/db_load -T -t hash -f /etc/vsftpd/virtual_users.txt /etc/vsftpd/virtual_users.db\n\ndocker restart vsftpd\n```\n\n\n```\ndocker inspect -f='{{.Name}}' $(docker ps -a -q)\ndocker inspect -f='{{.NetworkSettings.IPAddress}}' $(docker ps -a -q)\ndocker inspect -f='{{.Name}} {{.NetworkSettings.IPAddress}} {{.HostConfig.PortBindings}}' $(docker ps -aq)\n```\n\n<a href=\"https://blog.csdn.net/a453380532/article/details/86560207\" target=\"_blank\">Docker搭建ftp服务</a>\n<a href=\"https://www.cnblogs.com/sxqjava/p/10335451.html\" target=\"_blank\">springboot集成ftp</a>\n<a href=\"https://github.com/yoandypv/springboot-ftpclient\" target=\"_blank\">github springboot-ftpclient</a>\n\n","tags":["springboot"]},{"title":"[qt] 人脸考勤","url":"/2019/12/02//articles/2019/12/02/1575285379000.html/","content":"<a href=\"https://blog.csdn.net/qq_40602000/article/details/99674066\" target=\"_blank\">【QT】基于人脸识别的打卡系统（QT+Opencv + SQLite）--设计过程</a>\n\n<a href=\"https://blog.csdn.net/qq_40602000/article/details/99677604\" target=\"_blank\">【QT】基于人脸识别的打卡系统（QT+Opencv + SQLite）--实现过程</a>\n\n","tags":["qt"]},{"title":"[qt] 基于QT的人脸识别考勤管理系统","url":"/2019/12/02//articles/2019/12/02/1575285378000.html/","content":"<a href=\"https://blog.csdn.net/qq_42449351/article/details/99716413\" target=\"_blank\">基于QT的人脸识别考勤管理系统【一】</a>\n\n<a href=\"https://blog.csdn.net/qq_42449351/article/details/99753675\" target=\"_blank\">基于QT的人脸识别考勤管理系统【二】</a>\n```\n链接：\nhttps://pan.baidu.com/s/1LAbNynb6ngunwvcSxXDVgg\n提取码：\np5v5\n```","tags":["qt"]},{"title":"[java] 大数据","url":"/2019/12/02//articles/2019/12/02/1575285377000.html/","content":"<a href=\"https://github.com/HWYWL/bigdata\" target=\"_blank\">github bigdata</a>\n","tags":["java"]},{"title":"[c4d] 建模","url":"/2019/12/02//articles/2019/12/02/1575285376000.html/","content":"<a href=\"http://www.ddooo.com/softdown/99529.htm#dltab\" target=\"_blank\">Cinema 4D R15中文破解版</a>\n","tags":["c4d"]},{"title":"[aria2] 不限速下载","url":"/2019/12/02//articles/2019/12/02/1575285375000.html/","content":"<a href=\"https://www.jianshu.com/p/7c030484ac90\" target=\"_blank\">下载工具系列 Aria2</a>\n\n<a href=\"https://github.com/acgotaku/BaiduExporter/releases\" target=\"_blank\">BaiduExporter</a>\n\n<a href=\"https://github.com/persepolisdm/persepolis/releases/download/2.4.2/persepolis_2_4_2_windows_64bit.exe\" target=\"_blank\">Windows 64位</a>\n","tags":["aria2"]},{"title":"[单片机] PWM双舵机控制","url":"/2019/11/28//articles/2019/11/28/1574935192000.html/","content":"<a href=\"https://blog.csdn.net/zxnsirius/article/details/51002580\" target=\"_blank\">51单片机PWM双舵机控制详解</a>\n```\n三根线： \n橙色—————————–信号线 \n红色—————————–VCC \n棕色—————————–GND\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-144677-1.html\" target=\"_blank\">PWM控制直流电机驱动程序+仿真+报告</a>\n\n","tags":["单片机"]},{"title":"[单片机] 超声波测距+串口接收距离数据","url":"/2019/11/28//articles/2019/11/28/1574935191000.html/","content":"<a href=\"https://www.iteye.com/blog/hzy3774-1859263\" target=\"_blank\">使用超声波测距模块测距（含串口演示）</a>\n```\n#include <reg51.h>  \n#include <stdio.h>  \n  \n#define uchar unsigned char  \n#define uint unsigned int  \n  \n#define BAUD 9600L  \n#define FOSC 22118400L  \n#define CYCLE (12000000.0/FOSC) //周期 us  \n  \nsbit Trig = P2^5;  \nsbit Echo = P2^6;  \n  \nvoid sendByte(uchar dat) {  \n    ES = 0;     //关闭中断  \n    SBUF = dat; //写入数据  \n    while(!TI); //等待数据发送结束  \n    TI = 0;     //手动置0  \n    ES = 1;     //打开中断  \n}  \n  \nvoid sleep() {  \n    uchar i, j, k;  \n    for(i = 0; i < 255; i++)  \n        for(j = 0; j < 255; j++)  \n            for(k = 0; k < 16; k++);  \n}  \n  \nvoid writeString(char *str) {  \n    while(*str) {  \n        sendByte(*str);  \n        str++;  \n    }  \n}  \n  \n  \nvoid uartInit() {  \n    TMOD = 0x20;        //定时器1用于串口  \n    TH1 = TL1 = -(FOSC/12/32/BAUD);     //设置装入初值  \n    TR1 = 1;                            //启动定时器1  \n    SM0 = 0;  \n    SM1 = 1;                            //设置串口为方式一  \n    REN = 1;                            //接收使能  \n    ES = 1;                             //打开中断  \n    EA = 1;  \n}  \n  \nfloat getDist() {  \n    uchar i = 100;  \n    float dist = 0.0f;  \n    uint count = 0;  \n  \n    Trig = 1;       //打开触发  \n    while(i--);     //延时一会儿  \n    TMOD = 0x01;    //计时器0方式1  \n    TH0 = TL0 = 0;  //装入初值  \n    Trig = 0;       //关闭触发  \n    while(!Echo);   //测距过程中  \n    TR0 = 1;        //打开中断  \n    while(Echo);    //等待输出电平结束  \n    TR0 = 0;        //关闭中断  \n    count = (TH0 << 8) | TL0; //读取16位计时器里的数字  \n    dist = CYCLE * count * 0.017;   //0.034cm/us  \n    return dist;  \n}  \n  \nvoid main() {  \n    char buffer[16] = {0};  \n  \n    Trig = 0;  \n    Echo = 1;  \n    while(1) {  \n        sprintf(buffer,\"%.2f cm\\n\",getDist());  \n        uartInit();  \n        writeString(buffer);  \n        sleep();  \n    }  \n} \n```\n","tags":["单片机"]},{"title":"[单片机] NRF24L01无线通讯模块","url":"/2019/11/28//articles/2019/11/28/1574935190000.html/","content":"\n<a href=\"https://mrs.pub/51mcu/994.html\" target=\"_blank\">NRF24L01无线串口开发板程序详解</a>\n\n```\nSTC89C52 + NRF24L01 github源码\n```\n<a href=\"https://github.com/huangli414/NRF24L01\" target=\"_blank\">NRF24L01</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-142378-1.html\" target=\"_blank\">NRF24l01无线模块的stc89c52单片机程序</a>\n\n<a href=\"https://blog.csdn.net/ylzmm/article/details/79252892\" target=\"_blank\">NRF24L01模块实现一发一收和多发一收</a>\n```\nCE：模式控制线\n\nCSN：SPI片选线\n\nSCK：SPI时钟线\n\nVCC：3.3V供电\n\nMOSI：SPI数据线(主机输出，从机输入)\n\nMISO：SPI数据线(主机输入，从机输出)\n\nIRQ：中断信号线。中断时变为低电平，在以下三种情况变低：Tx FIFO 发完并且收到ACK（使能ACK情况下）、Rx FIFO 收到数据、达到最大重发次数\n\n\n含\n（1）USB转nRF24L01+上位机图示\n（2）多发一收图示\n```\n\n\n<a href=\"https://blog.csdn.net/longzhishen/article/details/80276964\" target=\"_blank\">nRF24L01 使用心得(含STC15-ISP串口调试)</a>\n\n<a href=\"https://blog.csdn.net/fzf1996/article/details/90601375\" target=\"_blank\">51单片机 nrf24l01收发</a>\nsend.c\n```\n#include <reg51.h>\n \n#define uchar unsigned char\n#define TX_ADR_WIDTH   5  // 5字节宽度的发送/接收地址\n#define TX_PLOAD_WIDTH 4  // 数据通道有效数据宽度\n \nuchar code TX_ADDRESS[TX_ADR_WIDTH] = {0x34,0x43,0x10,0x10,0x01};  // 定义一个静态发送地址\n \nuchar RX_BUF[TX_PLOAD_WIDTH];\n \nuchar TX_BUF[TX_PLOAD_WIDTH];\n \nuchar flag;\nuchar DATA = 0x01;\nuchar bdata sta;\nsbit  RX_DR     = sta^6;\nsbit  TX_DS     = sta^5;\nsbit  MAX_RT = sta^4;\n \nsbit CE =  P1^5;\nsbit CSN=  P1^4;\nsbit SCK=  P1^3;\nsbit MOSI= P1^2;\nsbit MISO= P1^1;\nsbit IRQ = P1^0;\n \n// SPI(nRF24L01) commands\n#define READ_REG    0x00  // Define read command to register\n#define WRITE_REG   0x20  // Define write command to register\n#define RD_RX_PLOAD 0x61  // Define RX payload register address\n#define WR_TX_PLOAD 0xA0  // Define TX payload register address\n#define FLUSH_TX    0xE1  // Define flush TX register command\n#define FLUSH_RX    0xE2  // Define flush RX register command\n#define REUSE_TX_PL 0xE3  // Define reuse TX payload register command\n#define NOP         0xFF  // Define No Operation, might be used to read status register\n \n// SPI(nRF24L01) registers(addresses)\n#define CONFIG      0x00  // 'Config' register address\n#define EN_AA       0x01  // 'Enable Auto Acknowledgment' register address\n#define EN_RXADDR   0x02  // 'Enabled RX addresses' register address\n#define SETUP_AW    0x03  // 'Setup address width' register address\n#define SETUP_RETR  0x04  // 'Setup Auto. Retrans' register address\n#define RF_CH       0x05  // 'RF channel' register address\n#define RF_SETUP    0x06  // 'RF setup' register address\n#define STATUS      0x07  // 'Status' register address\n#define OBSERVE_TX  0x08  // 'Observe TX' register address\n#define CD          0x09  // 'Carrier Detect' register address\n#define RX_ADDR_P0  0x0A  // 'RX address pipe0' register address\n#define RX_ADDR_P1  0x0B  // 'RX address pipe1' register address\n#define RX_ADDR_P2  0x0C  // 'RX address pipe2' register address\n#define RX_ADDR_P3  0x0D  // 'RX address pipe3' register address\n#define RX_ADDR_P4  0x0E  // 'RX address pipe4' register address\n#define RX_ADDR_P5  0x0F  // 'RX address pipe5' register address\n#define TX_ADDR     0x10  // 'TX address' register address\n#define RX_PW_P0    0x11  // 'RX payload width, pipe0' register address\n#define RX_PW_P1    0x12  // 'RX payload width, pipe1' register address\n#define RX_PW_P2    0x13  // 'RX payload width, pipe2' register address\n#define RX_PW_P3    0x14  // 'RX payload width, pipe3' register address\n#define RX_PW_P4    0x15  // 'RX payload width, pipe4' register address\n#define RX_PW_P5    0x16  // 'RX payload width, pipe5' register address\n#define FIFO_STATUS 0x17  // 'FIFO Status Register' register address\n \n \n/**************************************************\n函数: init_io()\n描述:\n    初始化IO\n/**************************************************/\nvoid init_io(void)\n{\n    CE  = 0;        // 待机\n    CSN = 1;        // SPI禁止\n    SCK = 0;        // SPI时钟置低\n    IRQ = 1;        // 中断复位\n    LED = 1;        // 关闭指示灯\n}\n/**************************************************/\n \n/**************************************************\n函数：delay_ms()\n描述：\n    延迟x毫秒\n/**************************************************/\nvoid delay_ms(uchar x)\n{\n    uchar i, j;\n    i = 0;\n    for(i=0; i<x; i++)\n    {\n       j = 250;\n       while(--j);\n       j = 250;\n       while(--j);\n    }\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_RW()\n描述：\n    根据SPI协议，写一字节数据到nRF24L01，同时从nRF24L01\n    读出一字节\n/**************************************************/\nuchar SPI_RW(uchar byte)\n{\n    uchar i;\n       for(i=0; i<8; i++)          // 循环8次\n       {\n           MOSI = (byte & 0x80);   // byte最高位输出到MOSI\n           byte <<= 1;             // 低一位移位到最高位\n           SCK = 1;                // 拉高SCK，nRF24L01从MOSI读入1位数据，同时从MISO输出1位数据\n           byte |= MISO;           // 读MISO到byte最低位\n           SCK = 0;                // SCK置低\n       }\n    return(byte);               // 返回读出的一字节\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_RW_Reg()\n描述：\n    写数据value到reg寄存器\n/**************************************************/\nuchar SPI_RW_Reg(uchar reg, uchar value)\n{\n    uchar status;\n      CSN = 0;                   // CSN置低，开始传输数据\n      status = SPI_RW(reg);      // 选择寄存器，同时返回状态字\n      SPI_RW(value);             // 然后写数据到该寄存器\n      CSN = 1;                   // CSN拉高，结束数据传输\n      return(status);            // 返回状态寄存器\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_Read()\n描述：\n    从reg寄存器读一字节\n/**************************************************/\nuchar SPI_Read(uchar reg)\n{\n    uchar reg_val;\n      CSN = 0;                    // CSN置低，开始传输数据\n      SPI_RW(reg);                // 选择寄存器\n      reg_val = SPI_RW(0);        // 然后从该寄存器读数据\n      CSN = 1;                    // CSN拉高，结束数据传输\n      return(reg_val);            // 返回寄存器数据\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_Read_Buf()\n描述：\n    从reg寄存器读出bytes个字节，通常用来读取接收通道\n    数据或接收/发送地址\n/**************************************************/\nuchar SPI_Read_Buf(uchar reg, uchar * pBuf, uchar bytes)\n{\n    uchar status, i;\n      CSN = 0;                    // CSN置低，开始传输数据\n      status = SPI_RW(reg);       // 选择寄存器，同时返回状态字\n      for(i=0; i<bytes; i++)\n        pBuf[i] = SPI_RW(0);    // 逐个字节从nRF24L01读出\n      CSN = 1;                    // CSN拉高，结束数据传输\n      return(status);             // 返回状态寄存器\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_Write_Buf()\n描述：\n    把pBuf缓存中的数据写入到nRF24L01，通常用来写入发\n    射通道数据或接收/发送地址\n/**************************************************/\nuchar SPI_Write_Buf(uchar reg, uchar * pBuf, uchar bytes)\n{\n    uchar status, i;\n      CSN = 0;                    // CSN置低，开始传输数据\n      status = SPI_RW(reg);       // 选择寄存器，同时返回状态字\n      for(i=0; i<bytes; i++)\n        SPI_RW(pBuf[i]);        // 逐个字节写入nRF24L01\n      CSN = 1;                    // CSN拉高，结束数据传输\n      return(status);             // 返回状态寄存器\n}\n/**************************************************/\n \n/**************************************************\n函数：RX_Mode()\n描述：\n    这个函数设置nRF24L01为接收模式，等待接收发送设备的数据包\n/**************************************************/\nvoid RX_Mode(void)\n{\n    CE = 0;\n      SPI_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH);  // 接收设备接收通道0使用和发送设备相同的发送地址\n      SPI_RW_Reg(WRITE_REG + EN_AA, 0x01);               // 使能接收通道0自动应答\n      SPI_RW_Reg(WRITE_REG + EN_RXADDR, 0x01);           // 使能接收通道0\n      SPI_RW_Reg(WRITE_REG + RF_CH, 40);                 // 选择射频通道0x40\n      SPI_RW_Reg(WRITE_REG + RX_PW_P0, TX_PLOAD_WIDTH);  // 接收通道0选择和发送通道相同有效数据宽度\n      SPI_RW_Reg(WRITE_REG + RF_SETUP, 0x07);            // 数据传输率1Mbps，发射功率0dBm，低噪声放大器增益\n      SPI_RW_Reg(WRITE_REG + CONFIG, 0x0f);              // CRC使能，16位CRC校验，上电，接收模式\n    delay_ms(150);\n      CE = 1;                                            // 拉高CE启动接收设备\n}\n/**************************************************/\n \n/**************************************************\n函数：TX_Mode()\n描述：\n    这个函数设置nRF24L01为发送模式，（CE=1持续至少10us），\n    130us后启动发射，数据发送结束后，发送模块自动转入接收\n    模式等待应答信号。\n/**************************************************/\nvoid TX_Mode(uchar * BUF)\n{\n    CE = 0;\n      SPI_Write_Buf(WRITE_REG + TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);     // 写入发送地址\n      SPI_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH);  // 为了应答接收设备，接收通道0地址和发送地址相同\n      SPI_Write_Buf(WR_TX_PLOAD, BUF, TX_PLOAD_WIDTH);                  // 写数据包到TX FIFO\n      SPI_RW_Reg(WRITE_REG + EN_AA, 0x01);       // 使能接收通道0自动应答\n      SPI_RW_Reg(WRITE_REG + EN_RXADDR, 0x01);   // 使能接收通道0\n      SPI_RW_Reg(WRITE_REG + SETUP_RETR, 0x0a);  // 自动重发延时等待250us+86us，自动重发10次\n      SPI_RW_Reg(WRITE_REG + RF_CH, 40);         // 选择射频通道0x40\n      SPI_RW_Reg(WRITE_REG + RF_SETUP, 0x07);    // 数据传输率1Mbps，发射功率0dBm，低噪声放大器增益\n      SPI_RW_Reg(WRITE_REG + CONFIG, 0x0e);      // CRC使能，16位CRC校验，上电\n    delay_ms(150);\n    CE = 1;\n}\n/**************************************************/\n \n/**************************************************\n函数：Check_ACK()\n描述：\n    检查接收设备有无接收到数据包，设定没有收到应答信\n    号是否重发\n/**************************************************/\nuchar Check_ACK(bit clear)\n{\n    delay_ms(200);\n    while(IRQ);\n    sta = SPI_RW(NOP);                    // 返回状态寄存器\n    if(TX_DS)\n    {\n        blink(3);\n    }\n    //blink(5);\n    if(MAX_RT)\n        if(clear)                         // 是否清除TX FIFO，没有清除在复位MAX_RT中断标志后重发\n            SPI_RW(FLUSH_TX);\n    SPI_RW_Reg(WRITE_REG + STATUS, sta);  // 清除TX_DS或MAX_RT中断标志\n    IRQ = 1;\n    if(TX_DS)\n        return(0x00);\n    else\n        return(0xff);\n}\n/**************************************************/\n \n/**************************************************\n函数：main()\n描述：\n    主函数\n/**************************************************/\nvoid main(void)\n{\n    init_io();                      // 初始化IO\n \n    while(1)\n    {\n            TX_BUF[0] = 1;          // 数据送到缓存\n            TX_Mode(TX_BUF);        // 把nRF24L01设置为发送模式并发送数据            \n            Check_ACK(0);           // 等待发送完毕，清除TX FIFO\n            delay_ms(250);\n            delay_ms(250);\n    }\n}\n```\n\n\nreceive.c\n```\n#include <reg51.h>\n#include <string.h>\n \n#define uchar unsigned char\n#define uint  unsigned int\n#define ulong unsigned long\n \n/***************************************************/\n#define TX_ADR_WIDTH   5  // 5字节宽度的发送/接收地址\n#define TX_PLOAD_WIDTH 4  // 数据通道有效数据宽度\n \nsbit LED = P2^1;\n \nuchar code TX_ADDRESS[TX_ADR_WIDTH] = {0x34,0x43,0x10,0x10,0x01};  // 定义一个静态发送地址\nuchar RX_BUF[TX_PLOAD_WIDTH];\nuchar TX_BUF[TX_PLOAD_WIDTH];\nuchar flag;\nuchar DATA = 0x01;\nuchar bdata sta;\nsbit  RX_DR     = sta^6;\nsbit  TX_DS     = sta^5;\nsbit  MAX_RT = sta^4;\n \nsbit CE =  P1^5;\nsbit CSN=  P1^4;\nsbit SCK=  P1^3;\nsbit MOSI= P1^2;\nsbit MISO= P1^1;\nsbit IRQ = P1^0;\n \n// SPI(nRF24L01) commands\n#define READ_REG    0x00  // Define read command to register\n#define WRITE_REG   0x20  // Define write command to register\n#define RD_RX_PLOAD 0x61  // Define RX payload register address\n#define WR_TX_PLOAD 0xA0  // Define TX payload register address\n#define FLUSH_TX    0xE1  // Define flush TX register command\n#define FLUSH_RX    0xE2  // Define flush RX register command\n#define REUSE_TX_PL 0xE3  // Define reuse TX payload register command\n#define NOP         0xFF  // Define No Operation, might be used to read status register\n \n// SPI(nRF24L01) registers(addresses)\n#define CONFIG      0x00  // 'Config' register address\n#define EN_AA       0x01  // 'Enable Auto Acknowledgment' register address\n#define EN_RXADDR   0x02  // 'Enabled RX addresses' register address\n#define SETUP_AW    0x03  // 'Setup address width' register address\n#define SETUP_RETR  0x04  // 'Setup Auto. Retrans' register address\n#define RF_CH       0x05  // 'RF channel' register address\n#define RF_SETUP    0x06  // 'RF setup' register address\n#define STATUS      0x07  // 'Status' register address\n#define OBSERVE_TX  0x08  // 'Observe TX' register address\n#define CD          0x09  // 'Carrier Detect' register address\n#define RX_ADDR_P0  0x0A  // 'RX address pipe0' register address\n#define RX_ADDR_P1  0x0B  // 'RX address pipe1' register address\n#define RX_ADDR_P2  0x0C  // 'RX address pipe2' register address\n#define RX_ADDR_P3  0x0D  // 'RX address pipe3' register address\n#define RX_ADDR_P4  0x0E  // 'RX address pipe4' register address\n#define RX_ADDR_P5  0x0F  // 'RX address pipe5' register address\n#define TX_ADDR     0x10  // 'TX address' register address\n#define RX_PW_P0    0x11  // 'RX payload width, pipe0' register address\n#define RX_PW_P1    0x12  // 'RX payload width, pipe1' register address\n#define RX_PW_P2    0x13  // 'RX payload width, pipe2' register address\n#define RX_PW_P3    0x14  // 'RX payload width, pipe3' register address\n#define RX_PW_P4    0x15  // 'RX payload width, pipe4' register address\n#define RX_PW_P5    0x16  // 'RX payload width, pipe5' register address\n#define FIFO_STATUS 0x17  // 'FIFO Status Register' register address\n \n//--定义SPI要使用的 IO--//\nsbit MOSIO = P3^4;\nsbit R_CLK = P3^5;\nsbit S_CLK = P3^6;\n \nvoid blink(char i);\n//--全局函数声明--//\n \n/**************************************************\n函数: init_io()\n描述:\n    初始化IO\n/**************************************************/\nvoid init_io(void)\n{\n    CE  = 0;        // 待机\n    CSN = 1;        // SPI禁止\n    SCK = 0;        // SPI时钟置低\n    IRQ = 1;        // 中断复位\n    LED = 1;        // 关闭指示灯\n}\n/**************************************************/\n \n/**************************************************\n函数：delay_ms()\n描述：\n    延迟x毫秒\n/**************************************************/\nvoid delay_ms(uchar x)\n{\n    uchar i, j;\n    i = 0;\n    for(i=0; i<x; i++)\n    {\n       j = 250;\n       while(--j);\n       j = 250;\n       while(--j);\n    }\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_RW()\n描述：\n    根据SPI协议，写一字节数据到nRF24L01，同时从nRF24L01\n    读出一字节\n/**************************************************/\nuchar SPI_RW(uchar byte)\n{\n    uchar i;\n       for(i=0; i<8; i++)          // 循环8次\n       {\n           MOSI = (byte & 0x80);   // byte最高位输出到MOSI\n           byte <<= 1;             // 低一位移位到最高位\n           SCK = 1;                // 拉高SCK，nRF24L01从MOSI读入1位数据，同时从MISO输出1位数据\n           byte |= MISO;           // 读MISO到byte最低位\n           SCK = 0;                // SCK置低\n       }\n    return(byte);               // 返回读出的一字节\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_RW_Reg()\n描述：\n    写数据value到reg寄存器\n/**************************************************/\nuchar SPI_RW_Reg(uchar reg, uchar value)\n{\n    uchar status;\n      CSN = 0;                   // CSN置低，开始传输数据\n      status = SPI_RW(reg);      // 选择寄存器，同时返回状态字\n      SPI_RW(value);             // 然后写数据到该寄存器\n      CSN = 1;                   // CSN拉高，结束数据传输\n      return(status);            // 返回状态寄存器\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_Read()\n描述：\n    从reg寄存器读一字节\n/**************************************************/\nuchar SPI_Read(uchar reg)\n{\n \n    uchar reg_val;\n      //blink(4);\n    CSN = 0;                    // CSN置低，开始传输数据\n      SPI_RW(reg);                // 选择寄存器\n      reg_val = SPI_RW(0);        // 然后从该寄存器读数据\n    //delay_ms(200);\n      CSN = 1;                    // CSN拉高，结束数据传输\n      return(reg_val);            // 返回寄存器数据\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_Read_Buf()\n描述：\n    从reg寄存器读出bytes个字节，通常用来读取接收通道\n    数据或接收/发送地址\n/**************************************************/\nuchar SPI_Read_Buf(uchar reg, uchar * pBuf, uchar bytes)\n{\n    uchar status, i;\n      CSN = 0;                    // CSN置低，开始传输数据\n      status = SPI_RW(reg);       // 选择寄存器，同时返回状态字\n      for(i=0; i<bytes; i++)\n        pBuf[i] = SPI_RW(0);    // 逐个字节从nRF24L01读出\n      CSN = 1;                    // CSN拉高，结束数据传输\n      return(status);             // 返回状态寄存器\n}\n/**************************************************/\n \n/**************************************************\n函数：SPI_Write_Buf()\n描述：\n    把pBuf缓存中的数据写入到nRF24L01，通常用来写入发\n    射通道数据或接收/发送地址\n/**************************************************/\nuchar SPI_Write_Buf(uchar reg, uchar * pBuf, uchar bytes)\n{\n    uchar status, i;\n      CSN = 0;                    // CSN置低，开始传输数据\n      status = SPI_RW(reg);       // 选择寄存器，同时返回状态字\n      for(i=0; i<bytes; i++)\n        SPI_RW(pBuf[i]);        // 逐个字节写入nRF24L01\n      CSN = 1;                    // CSN拉高，结束数据传输\n      return(status);             // 返回状态寄存器\n}\n/**************************************************/\n \n/**************************************************\n函数：RX_Mode()\n描述：\n    这个函数设置nRF24L01为接收模式，等待接收发送设备的数据包\n/**************************************************/\nvoid RX_Mode(void)\n{\n    CE = 0;\n      SPI_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH);  // 接收设备接收通道0使用和发送设备相同的发送地址\n      SPI_RW_Reg(WRITE_REG + EN_AA, 0x01);               // 使能接收通道0自动应答\n      SPI_RW_Reg(WRITE_REG + EN_RXADDR, 0x01);           // 使能接收通道0\n      SPI_RW_Reg(WRITE_REG + RF_CH, 40);                 // 选择射频通道0x40\n      SPI_RW_Reg(WRITE_REG + RX_PW_P0, TX_PLOAD_WIDTH);  // 接收通道0选择和发送通道相同有效数据宽度\n      SPI_RW_Reg(WRITE_REG + RF_SETUP, 0x07);            // 数据传输率1Mbps，发射功率0dBm，低噪声放大器增益\n      SPI_RW_Reg(WRITE_REG + CONFIG, 0x0f);              // CRC使能，16位CRC校验，上电，接收模式\n    delay_ms(150);\n      CE = 1;                                            // 拉高CE启动接收设备\n}\n/**************************************************/\n \n/**************************************************\n函数：TX_Mode()\n描述：\n    这个函数设置nRF24L01为发送模式，（CE=1持续至少10us），\n    130us后启动发射，数据发送结束后，发送模块自动转入接收\n    模式等待应答信号。\n/**************************************************/\nvoid TX_Mode(uchar * BUF)\n{\n    CE = 0;\n      SPI_Write_Buf(WRITE_REG + TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);     // 写入发送地址\n      SPI_Write_Buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH);  // 为了应答接收设备，接收通道0地址和发送地址相同\n      SPI_Write_Buf(WR_TX_PLOAD, BUF, TX_PLOAD_WIDTH);                  // 写数据包到TX FIFO\n      SPI_RW_Reg(WRITE_REG + EN_AA, 0x01);       // 使能接收通道0自动应答\n      SPI_RW_Reg(WRITE_REG + EN_RXADDR, 0x01);   // 使能接收通道0\n      SPI_RW_Reg(WRITE_REG + SETUP_RETR, 0x0a);  // 自动重发延时等待250us+86us，自动重发10次\n      SPI_RW_Reg(WRITE_REG + RF_CH, 40);         // 选择射频通道0x40\n      SPI_RW_Reg(WRITE_REG + RF_SETUP, 0x07);    // 数据传输率1Mbps，发射功率0dBm，低噪声放大器增益\n      SPI_RW_Reg(WRITE_REG + CONFIG, 0x0e);      // CRC使能，16位CRC校验，上电\n    delay_ms(150);\n    CE = 1;\n}\n/**************************************************/\n \n/**************************************************\n函数：Check_ACK()\n描述：\n    检查接收设备有无接收到数据包，设定没有收到应答信\n    号是否重发\n/**************************************************/\nuchar Check_ACK(bit clear)\n{\n    while(IRQ);\n    sta = SPI_RW(NOP);                    // 返回状态寄存器\n    if(TX_DS)\n    {\n        //blink(3);\n    }\n    //blink(5);\n    if(MAX_RT)\n        if(clear)                         // 是否清除TX FIFO，没有清除在复位MAX_RT中断标志后重发\n            SPI_RW(FLUSH_TX);\n    SPI_RW_Reg(WRITE_REG + STATUS, sta);  // 清除TX_DS或MAX_RT中断标志\n    IRQ = 1;\n    if(TX_DS)\n        return(0x00);\n    else\n        return(0xff);\n}\n/**************************************************/\n \n/**************************************************\n函数：CheckButtons()\n描述：\n    检查按键是否按下，按下则发送一字节数据\n/**************************************************/\nvoid CheckButtons()\n{\n    P3 |= 0x00;\n    if(!(P3 & 0x01))                    // 读取P3^0状态\n    {\n        delay_ms(20);\n        if(!(P3 & 0x01))                // 读取P3^0状态\n        {\n            TX_BUF[0] = ~DATA;          // 数据送到缓存\n            //TX_BUF[0] = 0xff;          // 数据送到缓存\n            TX_Mode(TX_BUF);            // 把nRF24L01设置为发送模式并发送数据            \n            //LED = ~DATA;                // 数据送到LED显示\n            Check_ACK(0);               // 等待发送完毕，清除TX FIFO\n            delay_ms(250);\n            delay_ms(250);\n            LED = 1;                    // 关闭LED\n            RX_Mode();                    // 设置为接收模式\n            while(!(P3 & 0x01));\n            DATA <<= 1;\n            if(!DATA)\n                DATA = 0x01;\n        }\n    }\n}\n/**************************************************/\n \nvoid blink(char i)\n{\n    while(i--)\n    {\n        LED = 1;\n        delay_ms(500);\n        LED = 0;\n        delay_ms(500);\n    }\n \n}\n \n/**************************************************\n函数：main()\n描述：\n    主函数\n/**************************************************/\nvoid main(void)\n{\n    init_io();                      // 初始化IO\n    RX_Mode();                      // 设置为接收模式\n \n    while(1)\n    {\n \n        sta = SPI_Read(STATUS);      // 读状态寄存器\n        //delay_ms(200);\n        if(RX_DR)                  // 判断是否接受到数据\n        {\n            SPI_Read_Buf(RD_RX_PLOAD, RX_BUF, TX_PLOAD_WIDTH);  // 从RX FIFO读出数据\n            flag = 1;\n        }\n        SPI_RW_Reg(WRITE_REG + STATUS, sta);  // 清除RX_DS中断标志\n \n        if(flag)                   // 接受完成\n        {\n            if(RX_BUF[0] == 1)\n            {\n                blink(2);\n            }\n \n            if(RX_BUF[0] == 2)\n            {\n                blink(4);\n            }\n            flag = 0;               // 清标志\n            delay_ms(250);\n            delay_ms(250);\n            LED = 1;               // 关闭LED\n        }\n \n    }\n}\n```\n","tags":["单片机"]},{"title":"[单片机] DHT11温度湿度检测仪","url":"/2019/11/28//articles/2019/11/28/1574935188000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/qq_28796345/article/details/53075590\" target=\"_blank\">51-DHT11实现温湿度的检测显示于Lcd1602</a>\n<a href=\"https://blog.csdn.net/heroybc/article/details/89377146\" target=\"_blank\">51单片机+1602+dht11显示温湿度</a>\n\n<a href=\"http://www.51hei.com/bbs/dpj-109404-1.html\" target=\"_blank\">51单片机控制DHT11在1602上显示温湿度的程序</a>\n\n","tags":["单片机"]},{"title":"[单片机] 视频-hc05和hc06蓝牙设置简介","url":"/2019/11/28//articles/2019/11/28/1574897989000.html/","content":"<a href=\"https://www.bilibili.com/video/av76720438\" target=\"_blank\">hc05和hc06蓝牙设置简介</a>\n```\nhttps://pan.baidu.com/s/1ymkei82uZHjdVLd2Z_iqyg\n提取码：\nbl1u\n```\n","tags":["单片机"]},{"title":"[单片机] 普中科技各型号开发板资料下载链接","url":"/2019/11/28//articles/2019/11/28/1574897988000.html/","content":"\nmine\n<a href=\"https://pan.baidu.com/s/1ZFmZ5H2ZiqeK92zPyrKZiA\" target=\"_blank\">普中51-单核-A2开发板</a>\n```\n提取码：\n3dqh \n```\n<a href=\"https://pan.baidu.com/s/1Yx4dgr8M6JJn6z5ZPog2hA\" target=\"_blank\">普中51-双核-A7开发板</a>\n```\n提取码：\n55fh\n```\n\n\n普中科技 - 各型号开发板资料下载链接：\n（1）51/STC8A/STM8S单片机系列\n<a href=\"https://pan.baidu.com/s/1Yx4dgr8M6JJn6z5ZPog2hA\" target=\"_blank\">①普中51-双核-A7开发板</a>\n```\n提取码：\n55fh\n```\n\n<a href=\"https://pan.baidu.com/s/1bSYsdmoThQtQOig58rHCGw\" target=\"_blank\">②普中51-双核-A6开发板</a>\n```\n提取码：\ng562\n```\n\n<a href=\"https://pan.baidu.com/s/127zuB9MT5DH_EVEcYfN6pQ\" target=\"_blank\">③普中51-单核-A5开发板</a>\n```\n提取码：\n4s9x\n```\n\n<a href=\"https://pan.baidu.com/s/127zuB9MT5DH_EVEcYfN6pQ\" target=\"_blank\">④普中51-单核-V5.5开发板</a>\n```\n提取码：\n4s9x\n```\n\n<a href=\"https://pan.baidu.com/s/1EkTwlDk3fVZWffXBrpBMfQ&shfl=sharepset\" target=\"_blank\">⑥普中51-单核-A3&A4开发板</a>\n```\n提取码：\nl1hk\n```\n\n<a href=\"https://pan.baidu.com/s/1ZFmZ5H2ZiqeK92zPyrKZiA\" target=\"_blank\">⑤普中51-单核-A2开发板</a>\n```\n提取码：\n3dqh \n```\n\n<a href=\"https://pan.baidu.com/s/1gChIWbyibAgQ4mMD-jA53A\" target=\"_blank\">⑥HC6800-ES V2.0开发板</a>\n```\n提取码：\nwibr\n```\n\n<a href=\"https://pan.baidu.com/s/1izqRqng9xEI2VlFr81ieOA\" target=\"_blank\">⑦HC6800-EM V2.2开发板</a>\n```\n提取码：\nvrrv\n```\n\n<a href=\"https://pan.baidu.com/s/1izqRqng9xEI2VlFr81ieOA\" target=\"_blank\">⑧HC6800-EM V2.2C开发板</a>\n```\n提取码：\nvrrv\n```\n\n<a href=\"https://pan.baidu.com/s/1cEL6wSycJ3pdyOvX66tPMA\" target=\"_blank\">⑨HC6800-EM V3.0开发板</a>\n```\n提取码：\n6leg\n```\n\n<a href=\"https://pan.baidu.com/s/1BAz6xwLx6mdLTxxvHG8Zbw\" target=\"_blank\">⑩HC6800-MS 开发板</a>\n```\n提取码:\nor7c\n```\n\n（2）STM32系列\n<a href=\"https://pan.baidu.com/s/1Rj2MBzxiPJy7WHQox2K4oA\" target=\"_blank\">①PZ6806L-F103开发板</a>\n```\n提取码：\nmxag\n```\n\n<a href=\"https://pan.baidu.com/s/1Rj2MBzxiPJy7WHQox2K4oA\" target=\"_blank\">②PZ6806D-F103开发板</a>\n```\n提取码：\nmxag\n```\n\n<a href=\"https://pan.baidu.com/s/1ZYeihlqdLBqgTw8nLb_r2g\" target=\"_blank\">③PZ6808L-F407开发板</a>\n```\n提取码：\nwaoh\n```\n\n<a href=\"https://pan.baidu.com/s/17SbGpDRK31pL_0Q0edoFpw\" target=\"_blank\">④PZ-STM32F429开发板</a>\n```\n提取码：\n7zoj\n```\n\n<a href=\"https://pan.baidu.com/s/1kBmQYrasDX9QQ5p9lo-t_w\" target=\"_blank\">⑤PZ-STM32F767开发板</a>\n```\n提取码：\nbw0a\n```\n\n（3）DSP系列\n<a href=\"https://pan.baidu.com/s/1malo7WkNtu2yu254dNJHag\" target=\"_blank\">①PZ-DSP28335-L开发板</a>\n```\n提取码：\n98e4\n```\n\n（4）PLC系列\n<a href=\"https://eyun.baidu.com/s/3mjpTey8\" target=\"_blank\">①PZ-3U PLC学习机开发板</a>\n```\n提取码：\nvPAY\n```\n\n（5）智能小车系列\n<a href=\"https://pan.baidu.com/s/1C1dmP50EIGJf7bIxawLumA\" target=\"_blank\">①普中音速号智能小车</a>\n```\n提取码：\nc2be\n```\n","tags":["单片机"]},{"title":"[单片机] 联合android","url":"/2019/11/28//articles/2019/11/28/1574897987000.html/","content":"<a href=\"https://github.com/zhilaizhang/BluetoothDemo\" target=\"_blank\">android通过蓝牙控制开关</a>\n\n<a href=\"https://github.com/leon0516/BLE-Android\" target=\"_blank\">BLE-Android</a>\n```\nAndroid BLE 简单收发数据,可在此基础上开发一些小项目,和单片机蓝牙模块通讯\n```\n\n<a href=\"https://github.com/jiejie1993/Bluetooth_lock\" target=\"_blank\">Bluetooth_lock</a>\n```\n为了克服传统锁具存在的弊端，设计实现了该蓝牙锁。\n利用STC12C5A60S2单片机片内EEPROM存储密码实现密码掉电不丢失，Android控制端和单片机通过蓝牙模块通信，实现了开锁、修改密码、还原密码等功能。\n```\n","tags":["单片机"]},{"title":"[单片机] 超声波测距原理","url":"/2019/11/28//articles/2019/11/28/1574897986000.html/","content":"<a href=\"https://blog.csdn.net/lin5103151/article/details/85034983\" target=\"_blank\">超声波测距原理</a>\n","tags":["单片机"]},{"title":"[单片机] 超声波测距android","url":"/2019/11/28//articles/2019/11/28/1574897985000.html/","content":"<a href=\"https://blog.csdn.net/Jiafu_Liu/article/details/81391287\" target=\"_blank\">51单片机超声波测距程序</a>\n\n<a href=\"https://blog.csdn.net/qq_37037348/article/details/86557979\" target=\"_blank\">基于AT89C51单片机的超声波传感器测距</a>\n```\n一、项目目的\n\n1. 了解超声波测距传感器工作原理及引脚功能。\n\n2. 学会使用超声波测距传感器测量距离。\n\n3. 会使用1602液晶显示器显示测量距离。\n\n4. 学会控制LED灯亮灭。\n\n5. 学会使用蜂鸣器发出报警声\n\n二、项目要求\n\n为避免汽车倒车时与后方障碍物发生碰撞，请设计一款基于超声波测距传感器的汽车倒车报警器，要求如下：\n\n①在显示屏上随时显示汽车与车后物体间的距离。\n\n②一旦进入危险距离（<=1m）范围内，蜂鸣器将发出“嘀。。。嘀。。。”声音，LED灯开始闪烁，提示驾驶员；当距离越来越近是，提示声音越急促，LED灯闪烁越快（亮灭间隔越短）。\n\n```","tags":["单片机"]},{"title":"[单片机] zigbee","url":"/2019/11/28//articles/2019/11/28/1574897984000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=%E5%8D%95%E7%89%87%E6%9C%BA+zigbee&ref=simplesearch\" target=\"_blank\">github 单片机 zigbee</a>\n\n<a href=\"https://github.com/Gonglja/Graduation-project-typ\" target=\"_blank\">基于51单片机的zigbee（2从1主）通信</a>\n","tags":["单片机"]},{"title":"[单片机] NRF24L01无线模块+收发","url":"/2019/11/28//articles/2019/11/28/1574897983000.html/","content":"<a href=\"https://blog.csdn.net/fzf1996/article/details/90601375\" target=\"_blank\">51单片机 nrf24l01收发</a>\n```\n发送端\n接收端\n```\n\n<a href=\"http://www.51hei.com/bbs/dpj-92127-1.html\" target=\"_blank\">基于51单片机的nrf24l01无线的接受和发射程序</a>\n<a href=\"http://c.51hei.com/pro/down.php?h=7&e=661630&c=92182&host=forum/201708/08/145030w81xkr1peqgrp29r.zip&name=%22%A1%BE%D0%A1%B3%C9%B9%FB%A1%BF2%A1%A2PC-%B5%A5%C6%AC%BB%FA-%B5%A5%C6%AC%BB%FA%CE%DE%CF%DF%B4%AE%BF%DA%BF%D8%D6%C6.zip%22\" target=\"_blank\">51黑论坛_【小成果】2、PC-单片机-单片机无线串口控制.zip</a>\n\n\n\n<a href=\"https://blog.csdn.net/zj490044512/article/details/84072014\" target=\"_blank\">nrf24l01使用与调试经验总结</a>\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/84258513\" target=\"_blank\">2.4G无线模块（NRF24L01）学习（1）——串口实现两个模块之间信息交互</a>\n主要特性\n```\n工作在 2.4GHz ISM 频段\n调制方式：GFSK/FSK\n数据速率：2Mbps/1Mbps/250Kbps\n超低关断功耗：<0.7uA\n超低待机功耗：<15uA\n快速启动时间： <130uS\n内部集成高 PSRR LDO\n宽电源电压范围：1.9-3.6V\n数字 IO 电压: 3.3V/5V\n低成本晶振：16MHz±60ppm\n接收灵敏度：<-83dBm @2MHz\n最高发射功率：7dBm\n接收电流（2Mbps）：<15mA\n发射电流(2Mbps):<12mA（0dBm)\n10MHz 四线 SPI 模块\n内部集成智能 ARQ 基带协议引擎\n收发数据硬件中断输出\n支持 1bit RSSI 输出\n极少外围器件,降低系统应用成本\nQFN20 封装或 COB 封装\n```\n","tags":["单片机"]},{"title":"[单片机] HC-05蓝牙模块","url":"/2019/11/28//articles/2019/11/28/1574897982000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/H2677lucy/article/details/79613707\" target=\"_blank\">Android 手机设备与HC05 蓝牙设备的通信（成功案例+源码）</a>\n<a href=\"https://www.qimi.online/blog/articles/2/\" target=\"_blank\">HC-05蓝牙模块</a>\n\n其它\n<a href=\"https://blog.csdn.net/qq_42895379/article/details/82897510\" target=\"_blank\">Android基于蓝牙串口编程实现HC-05通讯</a>\n<a href=\"https://github.com/WithLei/DistanceMeasure\" target=\"_blank\">DistanceMeasure</a>","tags":["单片机"]},{"title":"[单片机] ESP8266WIFI模块控制灯泡","url":"/2019/11/28//articles/2019/11/28/1574897981000.html/","content":"<a href=\"https://www.cnblogs.com/yangfengwu/p/7633980.html\" target=\"_blank\">ESP8266WIFI模块控制灯泡</a>\n\n<a href=\"http://pan.baidu.com/s/1nuFGdlv\" target=\"_blank\">wificardemo.zip</a>\n```\n提取码：\nrq9g\n```\n\n```\nAT+RST\nAT+CWMODE=2\nAT+CWSAP=\"esp8266\",\"0123456789\",11,3   //更改wifi名称，名字最好不要乱改，有些特别的名字是显示不出来的\nAT+RST                                 //配置完AT+CWMODE要重启以下模块使配置生效\nAT+CIPMUX=1\nAT+CIPSERVER=1,8080                    //8080为端口号，之后手机和单片机进行通讯要用到，可以自己修改\n```\n","tags":["单片机"]},{"title":"[单片机] ESP8266WIFI模块+控制直流电机正反转","url":"/2019/11/28//articles/2019/11/28/1574897980000.html/","content":"<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82355579\" target=\"_blank\">ESP8266 WIFI模块学习之路（8）——自写Android手机APP控制直流电机正反转</a>\n\n\n","tags":["单片机"]},{"title":"[单片机] ESP8266WIFI模块+接线","url":"/2019/11/28//articles/2019/11/28/1574897979000.html/","content":"<a href=\"https://blog.csdn.net/xiaoyuanwuhui/article/details/83795393\" target=\"_blank\">ESP8266（一）---引脚定义&接线说明</a>\n\n<a href=\"https://blog.csdn.net/whalefall/article/details/80909889\" target=\"_blank\">ESP8266-01WIFI模块——内网通信</a>\n\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/82216952\" target=\"_blank\">ESP8266 WIFI模块学习之路（4）——WIFI模块与Android互相通信</a>\n```\nAT+RST                //  重启模块\nAT+CWMODE=3           //  选择WIFI应用模式 3：表示AP+Station混合模式，2：AP模式，1：Station模式\nAT+CIPMUX=1           //  启动多连接，0：单路连接模式，1：多路连接模式\nAT+CIPSERVER=1,8080   //  配置为服务器，1,：表示开启server模式；8080是我们自己设置的端口号，便于监听  \nAT+CIOBAUD=9600       //  设置波特率，这边我设置的是9600，是为了便于后期单片机使用，该模块默认波特率为115200\n```\n\n<a href=\"https://blog.csdn.net/qimi923511491/article/details/79284625\" target=\"_blank\">51单片机通过ESP8266模块与手机进行通讯（单片机）</a>\n```\n串口调试助手\nhttps://pan.baidu.com/s/1mj3AmPq\n\nhttps://pan.baidu.com/s/1eOUxhoWvjgxhOZurUP2-OA\nhiuy\n\n手机网络调试助手\nhttps://pan.baidu.com/s/1qZddJa8\n\n代码下载\nhttps://pan.baidu.com/s/1TRfbYc_NaR_Lbniyduv1Kw\n```\n\n<a href=\"https://blog.csdn.net/iamdaodaoli/article/details/79715074\" target=\"_blank\">基于8266WIFI模块实现智能手机与51单片机的通信入门</a>\n\n<a href=\"https://blog.csdn.net/XiaoCaiDaYong/article/details/81989814\" target=\"_blank\">用手机APP进行功能控制LED灯</a>\n\n\n<a href=\"https://www.bilibili.com/video/av65909330\" target=\"_blank\">【物联网】ESP8266视频教程</a>\n```\n例程在这！！！！！！\n链接：\nhttps://pan.baidu.com/s/1UJwJ_RHzBYx1yscUGvfKJQ \n提取码：\ngout \n```\n\n\n51单片机驱动——WiFi模块ESP8266模块（代码文件）\nhttps://www.cirmall.com/circuit/6621\n```\nESP8266这个模块价格便宜，但是相对其他WiFi模块来说比较难使用。\n\n引脚连接：\n\nGND：接地\n\nGPIO16：其实是RST，低电平复位，所以为了正常工作，直接连接VCC即可\n\nVCC：接3.3V，看过其他教程说不能接5V，不过小编有试过直接用5V来把玩，玩了一段时间都没啥问题，可以正常使用。但是有个问题就是芯片很烫，所以用久了可能会烧坏模块，而且wifi模块一过热，连接会很慢。所以，尽量用3.3V。\n\nUTXD、URXD：前者接单片机或USB转串口模块的RXD，后者接TXD。这两个可以和5V单片机的RXD、TXD连接，经测试通信正常，无需5V转3,3V\n\nGPIO2、GPIO0：悬空\n\nCH_PD：看一些教程说可以直接接VCC，但经测试不行，电流太大了，所以要经电阻连接到VCC，也就是串联个电阻然后电阻再接到VCC，电阻的阻值：数k。小编用4.7k，其实这个没什么严格限制\n\n调试：\n\n调试用的是USB转串口模块，根据上面的引脚连接配合面包板进行连接。然后就可以插电脑开串口助手来调试了。\n\n波特率的话得自己试，有可能是9600或115200，甚至是其他的。在串口助手勾发送新行，然后发送AT+RST，如果先出现一堆乱码最后带个ready则说明试对了。\n```\n","tags":["单片机"]},{"title":"[qt] 装dlib、flann库","url":"/2019/11/28//articles/2019/11/28/1574897977000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\nhttp://dlib.net/\nhttp://dlib.net/files/\n```\n\n<a href=\"https://blog.csdn.net/daaikuaichuan/article/details/89845844\" target=\"_blank\">在QT中安装dlib库</a>\n```\n#勾选\nCMAKE_INSTALL_PREFIX\nG:/MyEtcs/opencv/dlib/dlib-19.16/dlib\n\n#不勾选\nDLIB_GIF_SUPPORT\nDLIB_USE_BLAS\nDLIB_USE_LAPACK\n```\n\n```\nmingw32-make -j8\nmingw32-make install\n```\n\n```\nDLIB_BUILD_PATH = G:/MyEtcs/opencv/dlib/dlibbuild\n\nLIBS+=$${DLIB_BUILD_PATH}/dlib/lib/libdlib.a\nINCLUDEPATH+=$${DLIB_BUILD_PATH}/include\n```\n\n\nFLANN特征匹配\n```\nhttp://www.cs.ubc.ca/research/flann/uploads/FLANN/flann-1.8.4-src.zip\nhttps://github.com/mariusmuja/flann/archive/1.9.1.zip\nhttps://github.com/mariusmuja/flann\n```\n","tags":["qt"]},{"title":"[qt] 报错解决","url":"/2019/11/28//articles/2019/11/28/1574897976000.html/","content":"\n<a href=\"https://blog.csdn.net/weixin_43118073/article/details/102511435\" target=\"_blank\">参考</a>\n\n问题：\n```\nerror: extra qualification on member ''\n```\n\n原因分析：\n```\n函数已经声明在MainWindow中，不用再声明改函数属于MainWindow\n属于重复声明\n```\n\n\n问题：\n```\ncollect2.exe:-1: error: error: ld returned 5 exit status\n```\n查看4编译输出，发现：\n```\n找不到 moc_predefs.h\n```","tags":["qt"]},{"title":"[qt] opencv车牌识别","url":"/2019/11/28//articles/2019/11/28/1574897975000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB&ref=simplesearch\" target=\"_blank\">github qt 车牌识别</a>\n\n\n```\n实训车牌识别系统 ，基于QT 算法是SVM\n```\n<a href=\"https://github.com/shaoyeGithub/-License-Plate-Recognition\" target=\"_blank\">-License-Plate-Recognition</a>\n\n\n```\n车道线和路牌的简单识别，使用qt界面\n```\n<a href=\"https://github.com/TomLao/LaneLine-and-Sign-Detection\" target=\"_blank\">LaneLine-and-Sign-Detection</a>\n\n```\n基于c++ qt opencv mysql 开发的车牌识别系统\n```\n<a href=\"https://github.com/zhouyiixiiang/CarInformationSystem\" target=\"_blank\">CarInformationSystem</a>\n\n\n```\n车牌识别：QT前端\n```\n<a href=\"https://github.com/chenghui-li/Experiment2\" target=\"_blank\">Experiment2</a>\n\n\n<a href=\"https://www.jianshu.com/p/22617e584f28\" target=\"_blank\">Qt+opencv+EasyPR（车牌识别系统，从配置环境到成功运行）</a>\n```\n1、Qt版本为5.5.1 32位，下载地址：\nhttps://www.qt.io/download/ \n\n2、opencv 版本为3.2.0：\n下载地址为\nhttp://opencv.org/opencv-3-2.html \n\n3、EasyPR库，下载地址：\nhttps://github.com/liuruoze/EasyPR\n\n4、cmake，下载地址：\nhttps://cmake.org/download/\n```\n\n将EasyPR移植到Qt中让其能成功运行！！\n```\n首先在.pro中加一行  QMAKE_CXXFLAGS+=-std=c++11  编译器版本问题\n```\n","tags":["qt"]},{"title":"[android] 串口","url":"/2019/11/28//articles/2019/11/28/1574897974000.html/","content":"<a href=\"https://github.com/jp1017/AndroidSerialPort\" target=\"_blank\">安卓串口打开、接收与发送</a>\n","tags":["android"]},{"title":"[qt] qt4.8转qt5.4变化","url":"/2019/11/27//articles/2019/11/27/1574808590000.html/","content":"<a href=\"http://www.manongjc.com/article/76149.html\" target=\"_blank\">qt4.8转qt5.4变化</a>\n```\n1、头文件包含\n    #include <QtGui/QProgressBar>\n    #include <QtGui/QProgressDialog>\n    #include <QtGui/QMessageBox>\n    等类似包含QtGui的包含文件，全部将QtGui取消掉。即\n    #include <QProgressBar>\n    #include <QProgressDialog>\n    #include <QMessageBox>\n   \n2、Qt::WFlags 替换为Qt::WindowFlags\n\n3、qInstallMsgHandler 函数废弃\n    可修改为： qInstallMessageHandler ，\n    MessageOutput 要多加一个参数 : QMessageLogContext& Context\n    void  MessageOutput( QtMsgType type, const QMessageLogContext& Context, const QString &sMsg )   \n    QtMsgHandler  改为  QtMessageHandler\n\n4、QDesktopServices::storageLocation(QDesktopServices::xxxx) 来获取一些系统目录，\n    Qt5则要改成QStandardPaths::writableLocation(QStandardPaths::xxxx)。\n\n5、error: 'UnicodeUTF8' is not a member of 'QApplication'\n    原因是：QCoreApplication::UnicodeUTF8已被弃用\n    解决方案如下：\n    修改\n    setText(QApplication::translate(\"MainWindow\", \"&Quitar\", 0, QApplication::UnicodeUTF8));\n    为\n    setText(QApplication::translate(\"MainWindow\", \"&Quitar\", 0);\n\n6、toAscii() 和 fromAscii() 方法已经被舍弃\n    可以使用 fromLatin1() 和 toLatin1() 代替\n\n7、nullptr启用，改用为NULL\n\n8、QHBoxLayout启用，可更改为QFrame\n\n9、构建时发生如下错误：\n    问题：error: undefined reference to `_imp__glClearColor@16'\n    解决办法：这是相关库文件没有链接，在 .pro 文件中加入 openGL相关库即可：\n                win32:LIBS += -lOpengl32 \\\n                                -lglu32 \\\n                                -lglut \n\n```\n","tags":["qt"]},{"title":"[qt] xml读写","url":"/2019/11/27//articles/2019/11/27/1574807154000.html/","content":"<a href=\"https://blog.csdn.net/hpu11/article/details/80227093\" target=\"_blank\">Qt5 对xml文件常用的操作(读写，增删改查)</a>\n\n.pro 文件\n```\nQT       += core xml\nQT       -= gui\n```\n\nmain.cpp\n```cpp\n#include <QCoreApplication>\n#include <QtXml> //也可以include <QDomDocument>\n \n//写xml\nvoid WriteXml()\n{\n    //打开或创建文件\n    QFile file(\"test.xml\"); //相对路径、绝对路径、资源路径都可以\n    if(!file.open(QFile::WriteOnly|QFile::Truncate)) //可以用QIODevice，Truncate表示清空原来的内容\n        return;\n \n    QDomDocument doc;\n    //写入xml头部\n    QDomProcessingInstruction instruction; //添加处理命令\n    instruction=doc.createProcessingInstruction(\"xml\",\"version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"\");\n    doc.appendChild(instruction);\n    //添加根节点\n    QDomElement root=doc.createElement(\"library\");\n    doc.appendChild(root);\n    //添加第一个子节点及其子元素\n    QDomElement book=doc.createElement(\"book\");\n    book.setAttribute(\"id\",1); //方式一：创建属性  其中键值对的值可以是各种类型\n    QDomAttr time=doc.createAttribute(\"time\"); //方式二：创建属性 值必须是字符串\n    time.setValue(\"2013/6/13\");\n    book.setAttributeNode(time);\n    QDomElement title=doc.createElement(\"title\"); //创建子元素\n    QDomText text; //设置括号标签中间的值\n    text=doc.createTextNode(\"C++ primer\");\n    book.appendChild(title);\n    title.appendChild(text);\n    QDomElement author=doc.createElement(\"author\"); //创建子元素\n    text=doc.createTextNode(\"Stanley Lippman\");\n    author.appendChild(text);\n    book.appendChild(author);\n    root.appendChild(book);\n \n    //添加第二个子节点及其子元素，部分变量只需重新赋值\n    book=doc.createElement(\"book\");\n    book.setAttribute(\"id\",2);\n    time=doc.createAttribute(\"time\");\n    time.setValue(\"2007/5/25\");\n    book.setAttributeNode(time);\n    title=doc.createElement(\"title\");\n    text=doc.createTextNode(\"Thinking in Java\");\n    book.appendChild(title);\n    title.appendChild(text);\n    author=doc.createElement(\"author\");\n    text=doc.createTextNode(\"Bruce Eckel\");\n    author.appendChild(text);\n    book.appendChild(author);\n    root.appendChild(book);\n \n    //输出到文件\n    QTextStream out_stream(&file);\n    doc.save(out_stream,4); //缩进4格\n    file.close();\n \n}\n \n//读xml\nvoid ReadXml()\n{\n    //打开或创建文件\n    QFile file(\"test.xml\"); //相对路径、绝对路径、资源路径都行\n    if(!file.open(QFile::ReadOnly))\n        return;\n \n    QDomDocument doc;\n    if(!doc.setContent(&file))\n    {\n        file.close();\n        return;\n    }\n    file.close();\n \n    QDomElement root=doc.documentElement(); //返回根节点\n    qDebug()<<root.nodeName();\n    QDomNode node=root.firstChild(); //获得第一个子节点\n    while(!node.isNull())  //如果节点不空\n    {\n        if(node.isElement()) //如果节点是元素\n        {\n            QDomElement e=node.toElement(); //转换为元素，注意元素和节点是两个数据结构，其实差不多\n            qDebug()<<e.tagName()<<\" \"<<e.attribute(\"id\")<<\" \"<<e.attribute(\"time\"); //打印键值对，tagName和nodeName是一个东西\n            QDomNodeList list=e.childNodes();\n            for(int i=0;i<list.count();i++) //遍历子元素，count和size都可以用,可用于标签数计数\n            {\n                QDomNode n=list.at(i);\n                if(node.isElement())\n                    qDebug()<<n.nodeName()<<\":\"<<n.toElement().text();\n            }\n        }\n        node=node.nextSibling(); //下一个兄弟节点,nextSiblingElement()是下一个兄弟元素，都差不多\n    }\n \n}\n \n//增加xml内容\nvoid AddXml()\n{\n    //打开文件\n    QFile file(\"test.xml\"); //相对路径、绝对路径、资源路径都可以\n    if(!file.open(QFile::ReadOnly))\n        return;\n \n    //增加一个一级子节点以及元素\n    QDomDocument doc;\n    if(!doc.setContent(&file))\n    {\n        file.close();\n        return;\n    }\n    file.close();\n \n    QDomElement root=doc.documentElement();\n    QDomElement book=doc.createElement(\"book\");\n    book.setAttribute(\"id\",3);\n    book.setAttribute(\"time\",\"1813/1/27\");\n    QDomElement title=doc.createElement(\"title\");\n    QDomText text;\n    text=doc.createTextNode(\"Pride and Prejudice\");\n    title.appendChild(text);\n    book.appendChild(title);\n    QDomElement author=doc.createElement(\"author\");\n    text=doc.createTextNode(\"Jane Austen\");\n    author.appendChild(text);\n    book.appendChild(author);\n    root.appendChild(book);\n \n    if(!file.open(QFile::WriteOnly|QFile::Truncate)) //先读进来，再重写，如果不用truncate就是在后面追加内容，就无效了\n        return;\n    //输出到文件\n    QTextStream out_stream(&file);\n    doc.save(out_stream,4); //缩进4格\n    file.close();\n}\n \n//删减xml内容\nvoid RemoveXml()\n{\n    //打开文件\n    QFile file(\"test.xml\"); //相对路径、绝对路径、资源路径都可以\n    if(!file.open(QFile::ReadOnly))\n        return;\n \n    //删除一个一级子节点及其元素，外层节点删除内层节点于此相同\n    QDomDocument doc;\n    if(!doc.setContent(&file))\n    {\n        file.close();\n        return;\n    }\n    file.close();  //一定要记得关掉啊，不然无法完成操作\n \n    QDomElement root=doc.documentElement();\n    QDomNodeList list=doc.elementsByTagName(\"book\"); //由标签名定位\n    for(int i=0;i<list.count();i++)\n    {\n        QDomElement e=list.at(i).toElement();\n        if(e.attribute(\"time\")==\"2007/5/25\")  //以属性名定位，类似于hash的方式，warning：这里仅仅删除一个节点，其实可以加个break\n            root.removeChild(list.at(i));\n    }\n \n    if(!file.open(QFile::WriteOnly|QFile::Truncate))\n        return;\n    //输出到文件\n    QTextStream out_stream(&file);\n    doc.save(out_stream,4); //缩进4格\n    file.close();\n}\n \n//更新xml内容\nvoid UpdateXml()\n{\n    //打开文件\n    QFile file(\"test.xml\"); //相对路径、绝对路径、资源路径都可以\n    if(!file.open(QFile::ReadOnly))\n        return;\n \n    //更新一个标签项,如果知道xml的结构，直接定位到那个标签上定点更新\n    //或者用遍历的方法去匹配tagname或者attribut，value来更新\n    QDomDocument doc;\n    if(!doc.setContent(&file))\n    {\n        file.close();\n        return;\n    }\n    file.close();\n \n    QDomElement root=doc.documentElement();\n    QDomNodeList list=root.elementsByTagName(\"book\");\n    QDomNode node=list.at(list.size()-1).firstChild(); //定位到第三个一级子节点的子元素\n    QDomNode oldnode=node.firstChild(); //标签之间的内容作为节点的子节点出现,当前是Pride and Projudice\n    node.firstChild().setNodeValue(\"Emma\");\n    QDomNode newnode=node.firstChild();\n    node.replaceChild(newnode,oldnode);\n \n    if(!file.open(QFile::WriteOnly|QFile::Truncate))\n        return;\n    //输出到文件\n    QTextStream out_stream(&file);\n    doc.save(out_stream,4); //缩进4格\n    file.close();\n}\n \nint main(int argc, char *argv[])\n{\n \n    qDebug()<<\"write xml to file...\";\n    WriteXml();\n    qDebug()<<\"read xml to display...\";\n    ReadXml();\n    qDebug()<<\"add contents to xml...\";\n    AddXml();\n    qDebug()<<\"remove contents from xml...\";\n    RemoveXml();\n    qDebug()<<\"update contents to xml...\";\n    UpdateXml();\n    return 0;\n \n}\n```\n","tags":["qt"]},{"title":"[python] opencv车牌识别","url":"/2019/11/26//articles/2019/11/26/1574766588000.html/","content":"<a href=\"https://blog.csdn.net/weixin_41695564/article/details/79712393\" target=\"_blank\">OpenCV实战（一）——简单的车牌识别</a>\n\n","tags":["python"]},{"title":"[设计] 折页","url":"/2019/11/26//articles/2019/11/26/1574765792000.html/","content":"<a href=\"https://ibaotu.com/sucai/214569.html?kwd=%E6%8A%98%E9%A1%B5\" target=\"_blank\">包图网 简约时尚大气彩色设计工作室公司企业三折页</a>\n\n<a href=\"https://ibaotu.com/sucai/339809.html?kwd=%E6%8A%98%E9%A1%B5\" target=\"_blank\">包图网 简约时尚大气彩色设计工作室公司企业三折页</a>\n<a href=\"https://ibaotu.com/tupian/zheye.html\" target=\"_blank\">包图网 折页</a>\n\n<a href=\"https://www.zcool.com.cn/work/ZMzU0MTgyNjA=.html\" target=\"_blank\">软件硬件宣传彩页/折页</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzcyOTM3NDg=.html\" target=\"_blank\">智能硬件产品说明书 折页</a>\n<a href=\"https://www.zcool.com.cn/collection/ZMjY0MDA1NzY=?from=search&word=%E5%AE%A3%E4%BC%A0%E9%A1%B5\" target=\"_blank\">专栏 折页</a>\n","tags":["设计"]},{"title":"[博客] linux+ps+ae","url":"/2019/11/26//articles/2019/11/26/1574765791000.html/","content":"<a href=\"https://www.5yun.org/17768.html\" target=\"_blank\">控制远程Linux系统执行脚本命令</a>\n\n<a href=\"https://www.5yun.org/category/photoshop\" target=\"_blank\">photoshop</a>\n","tags":["博客"]},{"title":"[springboot] vue图片上传","url":"/2019/11/26//articles/2019/11/26/1574765790000.html/","content":"<a href=\"https://github.com/xuyongcai/UeditorSpringboot\" target=\"_blank\">Vue + UEditor + SpringBoot</a>\n","tags":["springboot"]},{"title":"[qt-android] 仿造微信","url":"/2019/11/26//articles/2019/11/26/1574765789000.html/","content":"<a href=\"https://github.com/GDPURJYFS/WellChat\" target=\"_blank\">WellChat</a>\n","tags":["qt-android"]},{"title":"[qt] 作品展","url":"/2019/11/26//articles/2019/11/26/1574765788000.html/","content":"<a href=\"http://www.qtcn.org/bbs/simple/?f44.html\" target=\"_blank\">作品展</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzIxMTE5ODM2NQ==&mid=2247484283&idx=1&sn=3e8267a05183cd6aab9a36228e700611&chksm=97584b89a02fc29fa472c559074e18979750b0cdc34afaa79857a2aca4a2d35dd7bd900f88b3&scene=21#wechat_redirect\" target=\"_blank\">Qt 纯属娱乐-模拟一个导航定位系统</a>\n","tags":["qt"]},{"title":"[qt] 长按与短按","url":"/2019/11/26//articles/2019/11/26/1574765787000.html/","content":"<a href=\"https://blog.csdn.net/pengweimei4769/article/details/83752138\" target=\"_blank\">QKeyPressEvent在按键长按与短按的情况</a>\n```\nvoid QKeyPressEvent(QKeyEvent *event)\n{\n\tswitch(event->key())\n\t{\n\t\tcase Qt::Key_F2:\n\t\tif(event->isAutoRepeat())\n\t\t\treturn;\n\t\tif(m_bIsF2PressFlag)//m_bIsF2PressFlag为全局变量，默认为true\n\t\t{\n\t\t\t//do something\n\t\t\t//使用某个操作\n\t\t\tm_bIsF2PressFlag = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//do something\n\t\t\t//取消该操作\n\t\t\tm_bIsF2PressFlag = true;\n\t\t}\n\t\tbreak;\n\t\t//...\n\t}\n}\n```\n","tags":["qt"]},{"title":"[qt] 远程控制","url":"/2019/11/26//articles/2019/11/26/1574765786000.html/","content":"<a href=\"https://www.cnblogs.com/cxchanpin/p/7142317.html\" target=\"_blank\">Qt实现Windows远程控制</a>\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6&ref=simplesearch\" target=\"_blank\">qt 远程控制</a>\n\n<a href=\"https://github.com/hurley25/shadow.git\" target=\"_blank\">一款 Windows 下的远程控制软件的实现，界面基于Qt 4.x图形库</a>\n\n传统Qt C++开发应用程序（插件化框架搭建、酷炫的动画窗口、图表控件、多屏自适应、权限控制、VNC远程监控集成、WebEngine与Qt交互、按键声效）\n<a href=\"https://github.com/linuxzjh/traditionalDevelopment\" target=\"_blank\">traditionalDevelopment</a>\n\n<a href=\"https://github.com/mengps/RemoteControl\" target=\"_blank\">Qt Quick/Qml 做的一款屏幕控制(远程控制)</a>\n","tags":["qt"]},{"title":"[qt] 扫码登录","url":"/2019/11/26//articles/2019/11/26/1574765785000.html/","content":"<a href=\"https://blog.csdn.net/tanglj86/article/details/79208246\" target=\"_blank\">window下基于libqrencode库，采用QT开发环境实现一个简单的QR二维码生成</a>\n\n<a href=\"https://fukuchi.org/works/qrencode/\" target=\"_blank\">官网上下载libqrencode源代码</a>\n\n","tags":["qt"]},{"title":"[qt] 全局日志输出句柄","url":"/2019/11/26//articles/2019/11/26/1574765784000.html/","content":"注意\n```\n4.8版本使用 qInstallMsgHandler，5.4版本使用 qInstallMessageHandler\n```\n\n<a href=\"https://blog.csdn.net/weixin_34406086/article/details/90524934\" target=\"_blank\">Qt 之 qInstallMessageHandler（重定向至文件）</a>\n\n一、基本分类：\n```\nqDebug : 调试信息提示\nqWarning: 一般的警告提示\nqCritical: 严重错误提示\nqFatal: 致命错误提示\n```\n\npro文件\n```\n# debug control\nDEFINES+= QT_NO_DEBUG_OUTPUT\n```\n\n\n4.8版本\n<a href=\"https://www.cnblogs.com/findumars/p/6361974.html\" target=\"_blank\">实现Qt日志功能并输出到文件（使用qInstallMsgHandler安装customMessageHandler）</a>\n<a href=\"https://www.cnblogs.com/venow/archive/2012/10/09/2716756.html\" target=\"_blank\">qInstallMsgHandler实现日志输出</a>\n```\n#define _TIME_ qPrintable (QTime::currentTime ().toString (\"hh:mm:ss:zzz\"))\n```\n","tags":["qt"]},{"title":"[qt] 解决opencv报错","url":"/2019/11/26//articles/2019/11/26/1574765783000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n问题\n```\n报错：未定义标识符\"CV_WINDOW_AUTOSIZE\"\n```\n解决方案：\n```\n在代码开头加入头文件#include <opencv2/highgui/highgui_c.h>\n```\n\n\n问题\n```\nerror: undefined reference to `cv::imread(cv::String const&, int)' 解决方法\n```\n<a href=\"https://blog.csdn.net/WhiteLiu/article/details/72901520\" target=\"_blank\">链接</a>\n```\n解决方法：在CMakeLists.txt加入安装OpenCV的版本号： \n将 \nfind_package( OpenCV REQUIRED ) \n更改为 \nfind_package( OpenCV 3 REQUIRED )\n```\n\n问题\n```\nundefined reference to `cvv::qtutil\n```\n<a href=\"https://blog.csdn.net/grllery/article/details/84295494\" target=\"_blank\">链接</a>\n\n","tags":["qt"]},{"title":"[qt] QT5简易登录程序","url":"/2019/11/26//articles/2019/11/26/1574765782000.html/","content":"<a href=\"https://blog.csdn.net/weixin_41656968/article/details/80502404\" target=\"_blank\">QT5制作简易登录程序</a>\n","tags":["qt"]},{"title":"[qt] vs编译opencv示例","url":"/2019/11/26//articles/2019/11/26/1574765781000.html/","content":"\n编译环境\n```\nVS2017+qt5+opencv3.4\n```\n<a href=\"https://github.com/sc779733661/qtcamera\" target=\"_blank\">qtcamera</a>\n","tags":["qt"]},{"title":"[qt] opencv配置过程与填坑","url":"/2019/11/26//articles/2019/11/26/1574765779000.html/","content":"<a href=\"https://blog.csdn.net/zbw1185/article/details/82469496\" target=\"_blank\">Qt之CMake和MinGW编译OpenCV</a>\n<a href=\"https://blog.csdn.net/weixin_42322013/article/details/88808230\" target=\"_blank\">win10系统Qt5.12配置OpenCV4.0.1库教程暨Qt，OpenCV，Cmake详细下载安装教程（史上最全！）</a>\n\n准备文件\n```\nvs2017：\nhttps://visualstudio.microsoft.com/zh-hans/downloads/\n\nopencv-4.1.2-vc14_vc15.exe\nhttps://github.com/opencv/opencv/releases/download/4.1.2/opencv-4.1.2-vc14_vc15.exe\n\n#请一定选择和opencv一样的版本号，不然可能会出错\nopencv_contrib-4.1.2\nhttps://github.com/opencv/opencv_contrib/archive/4.1.2.zip\n\ncmake-3.16.0-rc3-win64-x64\nhttps://github.com/Kitware/CMake/releases/tag/v3.16.0-rc3\n#https://cmake.org/download/\n\nqt-opensource-windows-x86-5.12.2.exe\nhttp://download.qt.io/archive/qt/5.12/5.12.2/\n\nOpenCV-4.1.1-x64.zip\nhttps://github.com/huihut/OpenCV-MinGW-Build/archive/OpenCV-4.1.1-x64.zip\n\napache-ant\nhttps://ant.apache.org/bindownload.cgi\nhttp://mirror.bit.edu.cn/apache//ant/binaries/apache-ant-1.9.14-bin.zip\nhttp://www.us.apache.org/dist//ant/binaries/apache-ant-1.9.14-bin.zip\n```\n\n\n```\nANT_HOME\nD:\\MyEtcs\\apache-ant-1.9.14\n\nPath追加\nD:\\Qt\\Qt5.12.2\\5.12.2\\mingw73_64\\bin;\nD:\\Qt\\Qt5.12.2\\Tools\\mingw730_64\\bin;\nD:\\Qt\\Qt5.12.2\\Tools\\mingw730_64\\x86_64-w64-mingw32\\bin;\nD:\\MyEtcs\\opencv\\opencvbuild\\install\\x64\\mingw\\bin;\nD:\\MyEtcs\\opencv\\opencvbuild\\bin\n\n\nCompiler\nD:\\qt\\Qt5.12.2\\Tools\\mingw730_64\\bin\\gcc.exe\nD:\\qt\\Qt5.12.2\\Tools\\mingw730_64\\bin\\g++.exe\n\n\n勾选\nWITH_QT\nWITH_OPENGL\nENABLE_CXX11\nOPENCV_ENABLE_NONFREE\n\n选勾\nBUILD_opencv_world\nWITH_MSFS\n\n不勾选\nWITH_CUDA\nWITH_IPP\nWITH_MSMF\nBUILD_opencv_world\nBuild_opencv_python3\nBUILD_opencv_python2\nOPENCV_PYTHON3_VERSION\nBUILD_opencv_hdf\nENABLE_PRECOMPILED_HEADERS\nWITH_OPENCL_D3D11_NV\n\n\n\n#+ Add Entry\nQT_MAKE_EXECUTABLE\nFILEPATH\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/qmake.exe\n\nQt5Concurrent_DIR\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/cmake/Qt5Concurrent\n\nQt5Core_DIR\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/cmake/Qt5Core\n\nQt5Gui_DIR\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/cmake/Qt5Gui\n\nQt5Test_DIR\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/cmake/Qt5Test\n\nQt5Widgets_DIR\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/cmake/Qt5Widgets\n\nQt5OpenGL_DIR\nD:/qt/Qt5.12.2/Tools/mingw730_64/lib/cmake/Qt5OpenGL\n\nCMAKE_BUILD_TYPE 为 Release 或者 RelWithDebInfo\n\n#Contrib配置\nOPENCV_EXTRA_MODULES_PATH\nD:/MyEtcs/opencv/opencv_contrib/modules\n\n\nmingw32-make -j 8\nmingw32-make install\n\n\nCMAKE_MAKE_PROGRAM\nD:/qt/Qt5.12.2/Tools/mingw730_64/bin/mingw32-make.exe\n\n```\n\n```\n\nwin32 {\n\nOPENCV_BUILD_PATH=D:\\MyEtcs\\opencv\\opencvbuild\n\nINCLUDEPATH += $${OPENCV_BUILD_PATH}\\include\n\nCONFIG(debug, debug|release): {\nLIBS += $${OPENCV_BUILD_PATH}\\install\\x64\\mingw\\bin\\libopencv_*d.dll\n} else:CONFIG(release, debug|release): {\nLIBS += -L$${OPENCV_BUILD_PATH}\\install\\x64\\mingw\\bin \\\n    -llibopencv_core331 \\\n    -llibopencv_highgui331 \\\n    -llibopencv_imgcodecs331 \\\n    -llibopencv_imgproc331 \\\n    -llibopencv_features2d331 \\\n    -llibopencv_calib3d331\n}\n\n}\n\n#==================== 或者 ====================\n\nINCLUDEPATH += $${OPENCV_BUILD_PATH}\\install\\include\nLIBS += $${OPENCV_BUILD_PATH}\\lib\\libopencv_*.a\n```\n\n<a href=\"https://blog.csdn.net/ZengTudou/article/details/84403047\" target=\"_blank\">opencv3.4.4 +contrib模块在win10+vs2017的编译和配置</a>\n\n\n=========== 以下是一些碰见的问题 ==============\n\n<a href=\"https://blog.csdn.net/n_o_n/article/details/99336919\" target=\"_blank\">问题</a>\n```\n编译报错：std::basic_string与std::__cxx11::basic_string无法匹配的问题\n```\n原因\n```\n因为使用了不含c++11特性的库，因此编译代码时也应关闭c++11特性，定义宏_GLIBCXX_USE_CXX11_ABI为0即可。\n\n在.pro文件中添加\nDEFINES += _GLIBCXX_USE_CXX11_ABI=0\n\n或在代码中定义宏：\n#define _GLIBCXX_USE_CXX11_ABI 0  #对我来说能用，但出现了很多redefine的警告\n```\n\n<a href=\"https://www.e-learn.cn/content/qita/2662137\" target=\"_blank\">VS编译后install报错（error MSB3073）</a>\n\n```\nQT5.8 + opencv 3.30 例子报错 undefined reference to `cv::imshow(cv::String const&, cv::_InputArray const&)'\n```\n<a href=\"https://www.v2ex.com/t/516572\" target=\"_blank\">参考</a>\n```\n原因找到了，我编译的 opencv 是 release 版本的 编译一个 debug 版本的就好了\n```\n\n<a href=\"https://blog.csdn.net/huihut/article/details/78701814\" target=\"_blank\">OpenCV使用CMake和MinGW的编译安装及其在Qt配置运行</a>\n<a href=\"https://blog.csdn.net/huihut/article/details/81317102\" target=\"_blank\">OpenCV使用CMake和MinGW-w64的编译安装</a>\n<a href=\"https://msd.misuland.com/pd/3127746505234975528\" target=\"_blank\">OpenCV3.4.2 + Contrib3.4.2 + Qt5.9 + CMake3.12.1编译及踩过的坑、配置、代码验证、效果图</a>\n\n\n问题\n```\nhttps://github.com/opencv/opencv/issues\nhttps://github.com/opencv/opencv_contrib/issues\n```\n\n```\n错误：undefined reference to `vtable for cvv::qtutil::Signal'\n解决：取消勾选 BUILD_opencv_world\n参考：https://github.com/opencv/opencv/issues/8977 \n\n修改 D:\\OpenCV\\opencv-3.4.2\\modules\\videoio\\src\\cap_dshow.cpp 的文件，\n在#include \"cap_dshow.hpp\" 前加宏定义 #define NO_DSHOW_STRSAFE\n\n```\n\n<a href=\"https://www.cnblogs.com/wmr95/p/8193418.html\" target=\"_blank\">Opencv undefined reference to `cv::imread() Ubuntu编译`</a>\n```\ng++ getmask.cpp -o getmask `pkg-config opencv --cflags --libs`\n\n就是在编译C++程序后面加上:\npkg-config opencv --cflags --libs\n```\n\n<a href=\"https://blog.csdn.net/billxin2012/article/details/51596306\" target=\"_blank\">qt pro文件使用pkg-config</a>\n```\nQMAKE_CFLAGS = `pkg-config --cflags --libs dbus-glib-1`\nQMAKE_CXXFLAGS = $$QMAKE_CFLAGS\n```\n\n<a href=\"https://blog.csdn.net/love_007abc/article/details/79247345\" target=\"_blank\">Windows下的Qt配置pkg-config环境的解决方案！</a>\n```\npro工程目录下添加\nCONFIG += link_pkgconfig\nPKGCONFIG += opencv\n```\n\n\n<a href=\"https://www.jianshu.com/p/d060030ef2a2\" target=\"_blank\">windows配置pkg-config</a>\n```\npkg-config\n链接: \nhttps://pan.baidu.com/s/1Y47Bb4imHyYRNEeO1frTXA\n提取码:\nm854\n\ncmd/Powershell,输入pkg-config\n\nlibglib-2.0-0.dll 复制到 G:\\Qt\\Qt5.12.2\\Tools\\mingw730_64\\bin 目录下\n```\n\n编写opencv.pc\n```\nprefix=G:/MyEtcs/opencv/OpencvBuildLib/install\nexec_prefix=${prefix}\nlibdir=${exec_prefix}/x64/mingw/lib\nincludedir_old=${prefix}/include/opencv2\nincludedir_new=${prefix}/include\n\nName: OpenCV\nDescription: Open Source Computer Vision Library\nVersion: 3.4.5\nLibs: -L${exec_prefix}/x64/mingw/lib -lopencv_world\nLibs.private: -ldl -lm -lpthread -lrt\nCflags: -I${includedir_old} -I${includedir_new}\n```\n\n\n```\ncv::imread(cv::String const&, int) 未定义的引用\n```\n<a href=\"https://blog.csdn.net/wyk1823376647/article/details/81083474\" target=\"_blank\">链接</a>\n```\n在 Makefile文件的195 行 LIBRARIES += opencv_core opencv_highgui opencv_imgproc 后面添加： \nopencv_imgcodecs opencv_videoio\n修改完成后，每次 make 前需要：make clean,再执行 make all 等命令\n\n\npkg-config --libs opencv\n\npkg-config --cflags --libs\nhttps://blog.csdn.net/Rong_Toa/article/details/80117114\n```\n\n\n<a href=\"https://www.jianshu.com/p/6f1ea6daf14a\" target=\"_blank\">ubuntu16.04 编译opencv4和opencv_contrib</a>\n\n<a href=\"https://blog.csdn.net/u010779781/article/details/72802180\" target=\"_blank\">QT5.8+Opencv3.2+Opencv_contrib-3.2.0环境配置</a>\n\n<a href=\"https://blog.csdn.net/Gordon_Wei/article/details/85775328\" target=\"_blank\">【OpenCV】opencv4.0.1+opencv_contrib4.0.1+VS2015的编译</a>\n\n<a href=\"https://blog.csdn.net/fengxinzioo/article/details/88767399\" target=\"_blank\">win10+vs2017+opencv4.0.1+opencv_contrib-4.0.1详细教程</a>\n\n<a href=\"https://blog.csdn.net/zhouchangyu1221/article/details/101640201\" target=\"_blank\">OpenCV4.1.1+opencv_contrib：CMake编译+VS2015构建</a>\n\n\n<a href=\"https://blog.csdn.net/qq_39915830/article/details/100049589\" target=\"_blank\">【推荐】 QT 5.12.4 + OpenCV 4.1.0 + ffmpeg开发环境搭建（含有opencv4.1.0下载）</a>\n```\n链接：\nhttps://pan.baidu.com/s/1K5x9TT7D8HeNOI2U44_UDA\n提取码：\ncmi9 \n```\n\n\n<a href=\"https://blog.csdn.net/u012422524/article/details/93158534\" target=\"_blank\">QT5+opencv4.1 编译 踩坑</a>\n\n<a href=\"https://www.cnblogs.com/xinxue/p/5766756.html\" target=\"_blank\">OpenCV 4.1.1 编译和配置</a>\n```\n2019年10月10日：升级为 OpenCV 4.1.1，Qt 5.12.5，CMake3.15.4，opencv_gapi 模块出现编译错误，生成不成功，其它模块生成并配置成功。\n```\n\n<a href=\"https://blog.csdn.net/weixin_41010198/article/details/95490229\" target=\"_blank\">windows+VS2017+opencv4.1.0环境配置</a>\n```\nvc 6 :\tVS 6\nvc 7 :\tVS 2003\nvc 8 :\tVS 2005\nvc 9 :\tVS 2008\nvc 10:\tVS 2010\nvc 11:\tVS 2012\nvc 12:\tVS 2013\nvc 14:\tVS 2015\nvc 15:\tVS 2017\n```\n\n<a href=\"https://www.cnblogs.com/chenhuanting/p/10515891.html\" target=\"_blank\">Windows10：Opencv4.0+Opencv4.0.1_contrib编译</a>\n\n<a href=\"https://www.jianshu.com/p/afb0cbbf62e1\" target=\"_blank\">Visual Studio 2017配置opencv</a>\n\n<a href=\"https://blog.csdn.net/qingzhuyuxian/article/details/88838108\" target=\"_blank\">无法打开输入文件“opencv_world340.lib”</a>\n```\nG:\\MyEtcs\\opencv\\opencv\\build\\x64\\vc15\\bin\n```\n\n<a href=\"https://blog.csdn.net/investspace/article/details/97264324\" target=\"_blank\">关于opencv找不到opencv_world341d.dll的问题解决办法（VS2017+win10）</a>\n","tags":["qt"]},{"title":"[qt] 上位机","url":"/2019/11/25//articles/2019/11/25/1574677923000.html/","content":"<a href=\"https://github.com/xuzhonglin/UpperMonitor\" target=\"_blank\">基于Qt5.12的上位机</a>\n","tags":["qt"]},{"title":"[qt] opencv示例","url":"/2019/11/25//articles/2019/11/25/1574677922000.html/","content":"\n含有opencv文件\n<a href=\"https://github.com/hanxi/check_system\" target=\"_blank\">人脸识别签到Qt+OpenCV</a>\n\n<a href=\"https://github.com/Dante-Go/Fact_detect_recognizer_QT\" target=\"_blank\">基于QT5.12+OpenCV3.4.6人脸识别</a>\n<a href=\"https://github.com/Artcircles/qt_word_query\" target=\"_blank\">基于Qt5.12 的电子词典查询项目，数据库为Sqlite实现</a>\n\n\n<a href=\"https://github.com/528787067/FaceRecognition\" target=\"_blank\">FaceRecognition</a>\n```\n使用Qt和OpenCV实现人脸识别\n```\n\n<a href=\"https://blog.csdn.net/qq_27605099/article/details/86740876\" target=\"_blank\">QT5+vs2017+opencv3.4的打开摄像头和图片的例子</a>\n<a href=\"https://github.com/sc779733661/qtcamera\" target=\"_blank\">qtcamera</a>\n\n\n<a href=\"https://blog.csdn.net/qq_30139269/article/details/86700337\" target=\"_blank\">QT5.9+OpenCV3.44调用摄像头</a>\n\n\n<a href=\"https://github.com/vincent007jdx/OpencvDevelop\" target=\"_blank\">Qt+Opencv预览图片</a>\n\n<a href=\"https://github.com/vincent007jdx/QtOpencvQzxing.git\" target=\"_blank\">qt+opencv+qzxing的二维码识别程序</a>\n\n<a href=\"https://github.com/Dante-Go/Fact_detect_recognizer_QT.git\" target=\"_blank\">基于QT5.12+OpenCV3.4.6人脸识别</a>\n\nQt5.9.7OpenCV人脸识别\n<a href=\"https://gitee.com/wangzhenglin/facedetection\" target=\"_blank\">facedetection</a>","tags":["qt"]},{"title":"[qt] opencv人脸识别流程","url":"/2019/11/25//articles/2019/11/25/1574677922000.html/","content":"\nOpenCV人脸识别流程：\n```\n1.人脸采集;\n2.人脸处理;\n3.模型训练;\n4.人脸识别\n```\n\n","tags":["qt"]},{"title":"[qt] pro文件配置dll和lib动态库的方法","url":"/2019/11/25//articles/2019/11/25/1574677921000.html/","content":"<a href=\"https://blog.csdn.net/sinat_29173167/article/details/79016460\" target=\"_blank\">Qt pro文件配置dll和lib动态库的方法</a>\n\n","tags":["qt"]},{"title":"[qt] pro文件从相对路径导入库","url":"/2019/11/25//articles/2019/11/25/1574677920000.html/","content":"<a href=\"https://blog.csdn.net/liang19890820/article/details/51774724\" target=\"_blank\">Qt 之 pro 配置详解</a>\n\n<a href=\"https://www.cnblogs.com/wanghuixi/p/9572863.html\" target=\"_blank\">QT pro文件详细写法+实例</a>\n\n<a href=\"https://blog.csdn.net/liubing8609/article/details/79357178\" target=\"_blank\">qt pro文件从相对路径导入库</a>\n\n<a href=\"https://blog.csdn.net/wang13342322203/article/details/82861951\" target=\"_blank\">Qt中pro文件从相对路径导入库</a>\n代码\n```\nLIBS += -L ./          \\\n        -L ./libpath/  \\\n        -l mylib       \\\n        -l mylib2\n```\n\n含义：\n```\n上面的代码表示将当前路径、./libpath 目录加入库文件搜索目录中，并向工程添加mylib、mylib2 这两个库文件。\n```\n\n语法解析\n```\n-L表示后面跟的是一个文件夹，工程会将这个目录加入库文件搜索路径中。 \n-l表示后面跟的是一个库文件的名字。不论后缀是.lib、.dll、.so、.a，都不需要加上后缀名，直接用库的点分号前面部分名字即可。\n```\n\n\n<a href=\"https://blog.csdn.net/junbujianwpl/article/details/55271323\" target=\"_blank\">Qt中pro文件从相对路径导入库</a>\n```\n注意$$PWD与.的区别。$$PWD直接取出了代码所在目录，所以是固定的。当使用.号时，makefile文件中解析后还是一个.号，所以构建时代表与makefile同一目录。\n```\n\n<a href=\"https://www.cnblogs.com/xupeidong/p/9476957.html\" target=\"_blank\">QT中pro文件编写的详细说明</a>\n一、名称解释\n```\nQT += :这个是添加QT需要的模块\n\nTARGET = ：生成最后目标的名字\n\nTEMPLATE =：应用程序的生成模式，默认是app生成应用程序，如果需要生成库的话就用lib\n\nCONFIG +=：一些配置信息\n\nHEADERS +=：工程用到的头文件\n\nSOURCES +=：工程用到的源文件\n\nLIBS +=：工程依赖的库\n\nDESTDIR +=：目标生成路径\n\nINCLUDEPATH += ：工程需要的头文件\n\nDEPENDPATH +=：工程的依赖路径\n\nFORMS +=：工程中的ui文件\n\n//QT是跨平台的，所以我们在不同的平台上用同一个pro文件，这要加入有关平台的信息\n\nwin32｛\n\n｝\n\nunix｛\n\n｝\n```\n二、具体实例\n```\n//添加QT依赖的库\nQT += gui\nQT += core xml network multimedia serialport\ngreaterThan(QT_MAJOR_VERSION, 4): QT += widgets\n \n//添加c11配置支持\nCONFIG += c++11\n//输出文件的名称\nTARGET = ThorIceLocker\n//配置控制台输出\nCONFIG += console\n//输出类型application\nTEMPLATE = app\n \n//源文件\nSOURCES += main.cpp \\\n    appconfig.cpp \\\n    opendoorthread.cpp \\\n    TestProject/testform.cpp \\\n    TestProject/common.pb.cc \\\n    TestProject/goods_req.pb.cc \\\n    TestProject/goods_resp.pb.cc\n \n//头文件\nHEADERS += \\\n    appconfig.h \\\n    opendoorthread.h \\\n    TestProject/testform.h \\\n    TestProject/common.pb.h \\\n    TestProject/goods_req.pb.h \\\n    TestProject/goods_resp.pb.h\n \n//配置debug和release\nCONFIG +=debug_and_release\n\nCONFIG(debug,debug|release){\n  DESTDIR += $$PWD/debug\n  LIBS += -L$$PWD/debug/ -lThorModel\n  LIBS += -L$$PWD/debug/ -lThorUtil\n  LIBS += -L$$PWD/debug/ -lThorBLL\n  LIBS += -L$$PWD/debug/ -lThorHardwareUtil\n  LIBS += -L$$PWD/debug/ -lprotobufd\n  LIBS += -L$$PWD/debug/ -lprotobuf-lited\n  LIBS += -L$$PWD/debug/ -lopencv_core2410d\n  LIBS += -L$$PWD/debug/ -lopencv_highgui2410d\n  LIBS += -L$$PWD/debug/ -lopencv_imgproc2410d\n  LIBS += -L$$PWD/debug/ -lQtActionDetectd\n}else{\n\n}\n\n//需要的头文件\nINCLUDEPATH += $$PWD/AllDLL/include\nINCLUDEPATH += $$PWD/debug/3rdparty/opencv-2.4.10/include \\\n               $$PWD/debug/3rdparty/opencv-2.4.10/include/opencv \\\n               $$PWD/debug/3rdparty/opencv-2.4.10/include/opencv2\n//ui\nFORMS += \\\n    TestProject/testform.ui\n```","tags":["qt"]},{"title":"[python] opencv3+python3人脸识别","url":"/2019/11/25//articles/2019/11/25/1574677919000.html/","content":"<a href=\"https://blog.csdn.net/KID_yuan/article/details/89575371\" target=\"_blank\">【Opencv3+Python3入门（21）人脸检测】</a>\n\n<a href=\"https://blog.csdn.net/ieeso/article/details/82776815\" target=\"_blank\">基于PYQT编写一个人脸识别软件</a>\n```\n下载链接：\nhttp://download.csdn.net/download/hongbin_xu/10010461\n\n1、我在win10下用pyinstaller打包了python程序成exe文件，在其他系统测试结果如下：在win10、win8都能正常运行，win7不行；其他系统请自行配置相关环境：python、pyqt4、face_recognition、opencv等。 \n部分环境配置可以参考：（应用一个基于Python的开源人脸识别库，face_recognition） \n\n2、python+pyqt+opencv编写，不支持中文路径，最好不要出现中文和空格； \n\n3、附上一个说明视频：\nhttp://pan.baidu.com/s/1skLDE5R\n密码：\ndquq\n```\n\n<a href=\"https://blog.csdn.net/weixin_44475591/article/details/89302659\" target=\"_blank\">用python进行人脸识别（一）</a>\n```\n项目概述\n开发前提\n最终效果\n  登录界面\n  主界面\n  人脸注册界面\n  考勤界面\n  人脸识别界面\n  查询界面\n\nhttps://github.com/BETTERHH/learngit/tree/master/face_recognition\n```\n","tags":["python"]},{"title":"[PyQt5] windows10下opencv3+python2.7的安装配置","url":"/2019/11/25//articles/2019/11/25/1574677918000.html/","content":"<a href=\"https://blog.csdn.net/qq_38499902/article/details/82758964\" target=\"_blank\">windows10下opencv3+python2.7的安装配置\n</a>\n```\npip --version\npip install pip --upgrade\npip install numpy\npip install matplotlib\n\n\n#安装opencv\n下载安装opencv.exe最新文件，安装完成后，将安装目录\n\nopencv\\build\\python\\2.7\\x64下的cv2.pyd 拷贝到\npython2的安装目录 Python27\\Lib\\site-packages 下\n\n```\n\n","tags":["PyQt5"]},{"title":"[小程序] 头条新闻","url":"/2019/11/24//articles/2019/11/24/1574563578000.html/","content":"<a href=\"https://github.com/KuangPF/wxAPP_toutiaoNews\" target=\"_blank\">微信小程序--头条新闻</a>\n\n","tags":["小程序"]},{"title":"[树莓派] 资料","url":"/2019/11/24//articles/2019/11/24/1574563577000.html/","content":"<a href=\"https://pan.baidu.com/s/1skMxLnB\" target=\"_blank\">A光盘资料</a>\n```\n解压密码：\nfsafagagh\n```\n\n<a href=\"http://pan.baidu.com/s/1pKLIeHd\" target=\"_blank\">B套餐资料</a>\n```\n密码：\n6asa\n\n解压密码：\nosfdhaof\n```\n\n<a href=\"http://pan.baidu.com/s/1kV3j8OJ\" target=\"_blank\">C套餐资料</a>\n```\n密码：\nhtkj\n\n解压密码：\npdjasofj\n```\n\n<a href=\"https://pan.baidu.com/s/1-cqh1WQiGDL6jFJhEIgFFg\" target=\"_blank\">树莓派入门套件系统更新</a>\n```\n密码：\nmerc\n```\n\n<a href=\"https://pan.baidu.com/s/1nRWFripuVFBHJcb0Gi8L9A\" target=\"_blank\">树莓派3B+ 系统烧入及WIFI设置方法更新使用视频</a>\n```\n密码：\ngolc\n```\n\n","tags":["树莓派"]},{"title":"[软件] 迅雷","url":"/2019/11/24//articles/2019/11/24/1574563576000.html/","content":"<a href=\"https://www.52pojie.cn/forum.php?mod=viewthread&tid=862665\" target=\"_blank\">迅雷精简版 v1.5.3.288</a>\n```\n链接:\nhttps://pan.baidu.com/s/166IkEhL7Lgt3OjEUg9Kiag\n提取码:\nkq8p\n```\n","tags":["软件"]},{"title":"[软件] 录屏","url":"/2019/11/24//articles/2019/11/24/1574563575000.html/","content":"<a href=\"http://www.zdfans.com/html/28487.html\" target=\"_blank\">Bandicam(班迪录屏)</a>\n\n","tags":["软件"]},{"title":"[软件] winrar去除广告","url":"/2019/11/24//articles/2019/11/24/1574563574000.html/","content":"<a href=\"https://cloud.tencent.com/developer/news/275217\" target=\"_blank\">winrar去除广告</a>\n\n<a href=\"http://angusj.com/resourcehacker/\" target=\"_blank\">Resource Hacker官网</a>\n<a href=\"http://angusj.com/resourcehacker/reshacker_setup.exe\" target=\"_blank\">安装版</a>\n<a href=\"http://angusj.com/resourcehacker/resource_hacker.zip\" target=\"_blank\">绿色版（推荐使用）</a>\n\n<a href=\"https://pan.baidu.com/s/1UvqgdcVorIOR2kVlJS2fUg\" target=\"_blank\">网盘分流</a>\n```\n密码:\nzq64\n```\n\n```\nhttps://www.lanzous.com/b307244/\n密码:\n2y1z\n```\n\n","tags":["软件"]},{"title":"[单片机] 音乐代码转换工具(Music Encode)","url":"/2019/11/24//articles/2019/11/24/1574563573000.html/","content":"<a href=\"https://www.onlinedown.net/soft/980808.htm\" target=\"_blank\">单片机音乐代码转换工具(Music Encode)</a>\n<a href=\"http://sqdownb.onlinedown.net/down/98488_20170620195631.zip\" target=\"_blank\">zip包</a>\n","tags":["单片机"]},{"title":"[单片机] STC89C52通过HC-06蓝牙模块与Android手机通信","url":"/2019/11/24//articles/2019/11/24/1574563571000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=%E5%8D%95%E7%89%87%E6%9C%BA+%E8%93%9D%E7%89%99+android&ref=simplesearch\" target=\"_blank\">github 单片机 蓝牙 android</a>\n\nAndroid BLE 简单收发数据,可在此基础上开发一些小项目,和单片机蓝牙模块通讯\n<a href=\"https://github.com/leon0516/BLE-Android\" target=\"_blank\">BLE-Android</a>\n\n\nandroid 读取hex文件 通过蓝牙下载到 stm32单片机\n<a href=\"https://github.com/dh-linghaibin/android-IAP-stm32\" target=\"_blank\">android-IAP-stm32</a>\n\n\nandroid手机控制蓝牙模块单片机实现开关的控制\n<a href=\"https://github.com/zhilaizhang/BluetoothDemo\" target=\"_blank\">BluetoothDemo</a>\n\n\n<a href=\"https://blog.csdn.net/itas109/article/details/8963383\" target=\"_blank\">STC89C52通过HC-06蓝牙模块与Android手机通信</a>\nmain.c\n```\n/***********************************************************\nSTC90C51RD+与HC-06蓝牙连线：\n        蓝牙  STC90C51RD+\n        RXD    TXD\n        TXD    RXD\n其他连线：\n        P2.0、P2.1、P2.3分别接一个指示灯\n\n！！！！\n！！！！注意：若单片机TXD（P3.1）无上拉能力，必须在P3.1端接上拉电阻。本次测试需要接上拉电阻\n！！！！\n\n手机采用蓝牙串口通信助手\n最后已改用Android自编蓝牙通信软件\n                                        By itas109\n***********************************************************/\n#include <reg52.h>\n#include <intrins.h>\nunsigned char tmp;\nunsigned int c=0;\n\nsbit led1=P2^0;                    //指示灯0\nsbit led2=P2^1;                        //指示灯1\nsbit led3=P2^3;                        //指示灯3\n\nvoid init();   //串口初始化\nvoid send(unsigned char a);        //单字节发送函数\nvoid ctrl(); //接收处理函数\n\nvoid main()\n{\n                init();\n          while(1)\n          {         \n                  if(RI==1)                     // 是否有数据到来\n                  {\n                   RI = 0;\n                  tmp = SBUF;                   // 暂存接收到的数据\n                                  ctrl();\n                                  }       \n          }\n}\n\nvoid init()        //串口初始化\n{\n                  ES=0;                                                                  //关中断\n                  SCON = 0x50;                        // REN=1允许串行接受状态，串口工作模式1,\n                                                                                          //10位UART（1位起始位，8位数据位，1位停止位，无奇偶校验），波特率可变\n\n                  TMOD = 0x20;                        // 定时器1工作于方式2，8位自动重载模式, 用于产生波特率\n          TH1=TL1=0xFD;                       // 波特率9600 （本次测试采用晶振为11.0592）\n          \n          PCON &= 0x7f;                       // 波特率不倍增\n          TR1 = 1;                                                          //定时器1开始工作，产生波特率\n                                                                                          //发送标志位置0\n                  TI=0;                                                                  //接收标志位置0\n                  RI=0;\n                  \n                  //EA=0;\n              ES=1;\n\n\n          led1=0;                                   //初始化设置3个指示灯全亮\n                  led2=0;\n                  led3=0;\n}\n   \nvoid send(unsigned char a)        //单字节数据发送\n{                                                        //注意：若单片机TXD（P3.1）无上拉能力，必须在P3.1端接上拉电阻。本次测试需要接上拉电阻\n        TI=0;        \n        SBUF=a;\n        while(TI==0);\n        TI=0;\n\n        if(c%2)                                        //发送指示灯标志，每接收一次，此灯亮灭交替\n         led3=1;\n        else\n         led3=0;\n        c++;\n} \n\nvoid ctrl()                            //接收处理函数\n{\n                                    switch(tmp)\n                                  {\n                                          case '1':\n                                                led1=1;                                   //收到字符1，指示灯0灭\n                                                send(tmp);\n                                                break;                                        \n                                        case '2':                                         //收到字符2，指示灯1灭\n                                                 led2=1; \n                                                 send(tmp);\n                                                 break;\n                                        case '3':                                    //收到字符3，指示灯0、1亮\n                                                 led1=0;\n                                                 led2=0;\n                                                 send(tmp);\n                                                 break;\n                                        case '4':                                        //收到字符4，指示灯0、1灭\n                                                  led1=1;\n                                                  led2=1;\n                                                  send(tmp);\n                                                  break;\n                                        case '5':                                        //收到字符5，指示灯3亮\n                                                led3=0;\n                                                send(tmp);\n                                                break;\n                                        default:                   //其他，灯全灭\n                                                  led1=1;\n                                                  led2=1;\n                                                  led3=1;\n                                                  send(tmp);\n                                  }\n}\n```","tags":["单片机"]},{"title":"[单片机] proteus仿真程序闪退原因","url":"/2019/11/24//articles/2019/11/24/1574563570000.html/","content":"```\n.DSN文件缺失\n```\n","tags":["单片机"]},{"title":"[单片机] keil与proteus联调方法","url":"/2019/11/24//articles/2019/11/24/1574563569000.html/","content":"<a href=\"https://www.cnblogs.com/cation/p/11069326.html\" target=\"_blank\">【零基础】入门51单片机图文教程（Proteus+Keil）</a>\n```\nProteus 8.4 汉化特别版(附汉化包+安装破解教程)\nhttps://www.jb51.net/softs/592941.html\n```\n\n哔哩哔哩\n<a href=\"https://www.bilibili.com/video/av73793427\" target=\"_blank\">【Proteus+Keil】流水灯实验</a>\n<a href=\"https://www.bilibili.com/video/av42165190\" target=\"_blank\">基于keil的Protues红绿交通灯仿真设计</a>\n<a href=\"https://www.bilibili.com/video/av29329002\" target=\"_blank\">Keil uVision5写程序到Proteus 8 Professional仿真</a>\n<a href=\"https://www.bilibili.com/video/av33501593\" target=\"_blank\">Keil C51安装、Proteus仿真软件安装、联调驱动、测试和介绍</a>\n<a href=\"https://www.bilibili.com/video/av7704859/\" target=\"_blank\">proteus与keil软件安装与教学</a>\n\n<a href=\"https://blog.csdn.net/wybliw/article/details/43847657\" target=\"_blank\">keil与proteus联调方法</a>\n\n<a href=\"https://www.jb51.net/softs/688644.html\" target=\"_blank\">电路单片机仿真软件Proteus 8.9 SP0（1）</a>\n<a href=\"https://www.52pojie.cn/thread-957484-1-1.html\" target=\"_blank\">电路单片机仿真软件Proteus 8.9 SP0（2）</a>\n","tags":["单片机"]},{"title":"[博客] 逆向之路","url":"/2019/11/24//articles/2019/11/24/1574563568000.html/","content":"<a href=\"https://blog.csdn.net/weixin_42455056\" target=\"_blank\">weixin_42455056</a>\n\n<a href=\"https://blog.csdn.net/xiangshangbashaonian/category_7361678.html\" target=\"_blank\">我的逆向之路</a>\n\n","tags":["博客"]},{"title":"[vue] mpvue转小程序","url":"/2019/11/24//articles/2019/11/24/1574563567000.html/","content":"<a href=\"https://www.jianshu.com/p/8f779950bfd9\" target=\"_blank\">简书 使用Vue开发微信小程序：mpvue框架</a>\n<a href=\"https://www.jianshu.com/p/6f8d74be3ff8\" target=\"_blank\">简书 使用mpvue开发小程序教程（一）</a>\n\n<a href=\"https://www.cnblogs.com/gaoyangbuzai/p/9729311.html\" target=\"_blank\">mpvue将vue项目转换为小程序</a>\nmpvue生成项目\n```\n# 全局安装 vue-cli\nnpm install --global vue-cli\n\n# 创建一个基于 mpvue-quickstart 模板的新项目\nvue init mpvue/mpvue-quickstart my-project\n\n# 安装依赖\ncd my-project\nnpm install\n\n# 启动构建\nnpm run dev\n\n\n# mpvue-wxParse富文本解析\nnpm i mpvue-wxparse\n```\n\n<a href=\"https://github.com/KuangPF/mpvue-weui\" target=\"_blank\">mpvue-weui</a>\n\n示例\n<a href=\"https://github.com/aierong/vantweappmpvuedemo\" target=\"_blank\">vantweappmpvuedemo</a>\n\n","tags":["vue"]},{"title":"[qt] 使用Poppler实现PDF阅读器","url":"/2019/11/24//articles/2019/11/24/1574563565000.html/","content":"<a href=\"https://blog.csdn.net/u010370871/article/details/73864117\" target=\"_blank\">Qt5使用Poppler实现PDF阅读器</a>\n<a href=\"https://github.com/CryFeiFei/Reader\" target=\"_blank\">github Reader</a>\n","tags":["qt"]},{"title":"[qt] 软件自动更新","url":"/2019/11/24//articles/2019/11/24/1574563564000.html/","content":"<a href=\"https://blog.csdn.net/whik1194/article/details/88927196\" target=\"_blank\">Qt实现软件自动更新的一种简单方法</a>\n","tags":["qt"]},{"title":"[qt] 录屏录音","url":"/2019/11/24//articles/2019/11/24/1574563563000.html/","content":"<a href=\"https://blog.csdn.net/ET_Endeavoring/article/details/88264693\" target=\"_blank\">Qt+FFmpeg录屏录音</a>\n<a href=\"https://github.com/onlyet/ScreenCapture\" target=\"_blank\">ScreenCapture</a>\n\n<a href=\"https://github.com/onlyet/ScreenCapture-OnlyAudio\" target=\"_blank\">ScreenCapture-OnlyAudio</a>\n<a href=\"https://github.com/onlyet/ScreenCapture-OnlyVideo\" target=\"_blank\">ScreenCapture-OnlyVideo</a>\n","tags":["qt"]},{"title":"[单片机] 51单片机知识普及","url":"/2019/11/23//articles/2019/11/23/1574485133000.html/","content":"<a href=\"https://blog.csdn.net/u013151320/article/details/50253199\" target=\"_blank\">51单片机DS18B20温度传感器详解</a>\n```\nDS18B20是一种单总线数字温度传感器，测试温度范围-55℃-125℃，具有体积小，硬件开销低，抗干扰能力强，精度高的特点。\n单总线，意味着没有时钟线，只有一根通信线。单总线读写数据是靠控制起始时间和采样时间来完成，所以时序要求很严格，这也是DS18B20驱动编程的难点。\n```\n\n\n声音采集系统，实现音频的采集、放大、滤波、AD转换， 并上传到PC端进行播放\n<a href=\"https://github.com/siyouluo/SoundCollector\" target=\"_blank\">SoundCollector</a>\n\n用esp8266实现的一个空调遥控器\n<a href=\"https://github.com/siyouluo/RIRC_esp8266\" target=\"_blank\">RIRC_esp8266</a>\n\n基于51单片机（STC89C52）和指纹识别模块（AS608）的指纹锁项目的全部软硬件资料\n<a href=\"https://github.com/siyouluo/FingerprintLock\" target=\"_blank\">FingerprintLock</a>\n","tags":["单片机"]},{"title":"[react-native] 图表","url":"/2019/11/23//articles/2019/11/23/1574485132000.html/","content":"<a href=\"https://github.com/wuxudong/react-native-charts-wrapper\" target=\"_blank\">react-native-charts-wrapper</a>\n","tags":["react-native"]},{"title":"[android] 验证码","url":"/2019/11/23//articles/2019/11/23/1574485131000.html/","content":"<a href=\"https://github.com/kongqw/Android-CheckView\" target=\"_blank\">Android-CheckView</a>\n","tags":["android"]},{"title":"[android] 蓝牙通讯-文字","url":"/2019/11/23//articles/2019/11/23/1574485130000.html/","content":"<a href=\"https://blog.csdn.net/q4878802/article/details/62430661\" target=\"_blank\">Android 蓝牙通信——AndroidBluetoothManager</a>\n<a href=\"https://github.com/kongqw/AndroidBluetoothManager\" target=\"_blank\">AndroidBluetoothManager</a>\n","tags":["android"]},{"title":"[android] 发送验证码倒计时","url":"/2019/11/23//articles/2019/11/23/1574485129000.html/","content":"<a href=\"https://github.com/kongqw/CountDownTimerDemo\" target=\"_blank\">CountDownTimerDemo</a>\n","tags":["android"]},{"title":"[android] 多图片选择器","url":"/2019/11/23//articles/2019/11/23/1574485128000.html/","content":"Picture Selector Library for Android or 多图片选择器\n<a href=\"https://github.com/LuckSiege/PictureSelector\" target=\"_blank\">PictureSelector</a>\n","tags":["android"]},{"title":"[android] 串口通讯","url":"/2019/11/23//articles/2019/11/23/1574485127000.html/","content":"<a href=\"https://github.com/kongqw/AndroidSerialPort\" target=\"_blank\">Android串口通信示例</a>\n","tags":["android"]},{"title":"[android] wifi管理器","url":"/2019/11/23//articles/2019/11/23/1574485126000.html/","content":"<a href=\"https://github.com/kongqw/AndroidWiFiManager\" target=\"_blank\">AndroidWiFiManager</a>\n","tags":["android"]},{"title":"[android] opencv","url":"/2019/11/23//articles/2019/11/23/1574485125000.html/","content":"<a href=\"https://github.com/kongqw/OpenCVForAndroid\" target=\"_blank\">目标检测&目标追踪&人脸检测&人脸识别</a>\n<a href=\"https://github.com/kongqw/FaceDetectLibrary/tree/opencv3.2.0/OpenCVManager\" target=\"_blank\">OpenCVManager.apk</a>\n```\n运行前请先安装OpenCV Manager(必须)\n```\n\n<a href=\"https://www.jianshu.com/p/4871d3dee4fa\" target=\"_blank\">Android中使用OpenCV</a>\n<a href=\"https://github.com/danengz/OpenCVDemo\" target=\"_blank\">OpenCVDemo</a>\n\n\n<a href=\"https://www.jianshu.com/p/4566553a4831\" target=\"_blank\">opencv android jni开发环境搭建</a>\n<a href=\"https://github.com/Zellerpooh/OpencvExample\" target=\"_blank\">OpencvExample</a>\n\n\n<a href=\"https://www.jianshu.com/p/76c9eed732a5\" target=\"_blank\">Android Tensorflow+OpenCV实时分析Demo</a>\n<a href=\"https://github.com/leeroGG/android-image-analysis\" target=\"_blank\">android-image-analysis</a>\n","tags":["android"]},{"title":"[硬件] AltiumDesigner19","url":"/2019/11/23//articles/2019/11/23/1574471645000.html/","content":"<a href=\"http://www.zdfans.com/html/16160.html\" target=\"_blank\">Altium Designer 19(AD19)v19.0.4中文破解版</a>\n","tags":["健康"]},{"title":"[健康] 秃头原因","url":"/2019/11/23//articles/2019/11/23/1574471644000.html/","content":"<a href=\"http://mini.eastday.com/mobile/181118221417732.html\" target=\"_blank\">男人得知道的10个秃头原因</a>\n```\n1、喜食辛辣油腻的食物\n2、抽烟喝酒\n3、头皮油脂分泌旺盛\n4、肾虚\n5、用脑过度\n6、使用的梳子不正确\n7、熬夜\n8、雄激素分泌过度\n9、心理压力\n10、遗传因素\n```\n","tags":["健康"]},{"title":"[单片机] 学习资料","url":"/2019/11/23//articles/2019/11/23/1574471642000.html/","content":"<a href=\"https://pan.baidu.com/s/1n29vcPI7r3bGw0xMbJSXFA\" target=\"_blank\">Proteus视频教程</a>\n```\n提取码：\nxmxm\n```\n\n<a href=\"https://pan.baidu.com/s/1LfumMTjsVx2poCUCtHpEZg\" target=\"_blank\">8051视频教程</a>\n```\n提取码：\ntw61\n```\n\n<a href=\"https://pan.baidu.com/s/1BpCCA2yy2cc0hwIYoGTmPQ\" target=\"_blank\">单片机视频教程</a>\n```\n提取码：\nh06p\n```\n","tags":["单片机"]},{"title":"[单片机] 普中单片机视频教程36集","url":"/2019/11/23//articles/2019/11/23/1574471641000.html/","content":"<a href=\"https://www.bilibili.com/video/av32132894\" target=\"_blank\">【普中】51单片机开发板实验教程（完整版）36集全</a>\n```\nP1 01.开发板介绍及使用\nP2 02.51单片机介绍（二）\nP3 02.51单片机介绍(一)\nP4 03.C语言基础\nP5 04.单片机最小系统\nP6 05.开发软件安装与工程建立\nP7 06.点亮第一个LED编程\nP8 06.点亮第一个LED实验操作演示\nP9 06.点亮第一个LED原理\nP10 07.LED闪烁\nP11 07.LED闪烁实验操作演示\nP12 08.LED流水灯\nP13 08.LED流水灯实验操作演示\nP14 09.蜂鸣器编程\nP15 09.蜂鸣器实验操作演示\nP16 09.蜂鸣器原理\nP17 10.继电器编程\nP18 10.继电器实验操作演示\nP19 10.继电器原理\nP20 11.静态数码管操作演示\nP21 11.静态数码管程序\nP22 11.静态数码管原理\nP23 12.动态数码管编程\nP24 12.动态数码管实验操作演示\nP25 12.动态数码管原理\nP26 13.独立按键编程\nP27 13.独立按键实验操作演示\nP28 13.独立按键原理\nP29 14.矩阵按键编程\nP30 14.矩阵按键实验操作演示\nP31 14.矩阵按键原理\nP32 15.单片机IO口扩展--并转串编程\nP33 15.单片机IO口扩展--并转串实验操作演示\nP34 15.单片机IO口扩展--并转串原理\nP35 16.单片机IO口扩展--串转并编程\nP36 16.单片机IO口扩展--串转并实验操作演示\nP37 16.单片机IO口扩展--串转并原理\nP38 17.LED点阵编程-点亮一个点\nP39 17.LED点阵编程-点亮一个点实验操作演示\nP40 17.LED点阵编程-显示汉字\nP41 17.LED点阵编程-显示汉字实验操作演示\nP42 17.LED点阵原理\nP43 18.直流电机编程\nP44 18.直流电机实验操作演示\nP45 18.直流电机原理\nP46 19.步进电机编程\nP47 19.步进电机实验操作演示\nP48 19.步进电机原理\nP49 20.中断系统\nP50 21.外部中断\nP51 21.外部中断0实验操作演示\nP52 21.外部中断1实验操作演示\nP53 22.定时器和计数器\nP54 23.定时器中断\nP55 23.定时器中断实验操作演示\nP56 24.交通灯编程\nP57 24.交通灯实验操作演示\nP58 24.交通灯原理\nP59 25.NE555脉冲发生器编程\nP60 25.NE555脉冲发生器实验操作演示\nP61 25.NE555脉冲发生器原理\nP62 26.串口通信编程\nP63 26.串口通信实验操作演示\nP64 26.串口通信原理（二）\nP65 26.串口通信原理（一）\nP66 27.RS485通信编程\nP67 27.RS485通信原理\nP68 28.EEPROM(IIC总线)编程\nP69 28.EEPROM(IIC总线)工作原理(二)\nP70 28.EEPROM(IIC总线)工作原理(一)\nP71 28.EEPROM（IIC总线）实验操作演示\nP72 29.DS18B20温度传感器编程\nP73 29.DS18B20温度传感器工作原理\nP74 29.DS18B20温度传感器实验操作演示\nP75 30.DS1302时钟编程\nP76 30.DS1302时钟工作原理\nP77 30.DS1302时钟实验操作演示\nP78 31.红外通信编程\nP79 31.红外通信工作原理\nP80 31.红外通信实验操作演示\nP81 32.AD模数转换编程\nP82 32.AD模数转换工作原理\nP83 32.AD模数转换实验操作演示\nP84 33.DA数模转换（PWM输出）编程\nP85 33.DA数模转换（PWM输出）工作原理\nP86 33.DA数模转换（PWM输出）实验操作演示\nP87 34.LCD1602液晶编程\nP88 34.LCD1602液晶工作原理\nP89 34.LCD1602液晶实验操作演示\nP90 35.LCD12864液晶实验操作演示\nP91 36.TFT彩屏实验操作演示\n```\n","tags":["单片机"]},{"title":"[单片机] 普中stc89c52","url":"/2019/11/23//articles/2019/11/23/1574471640000.html/","content":"普中51单片机开发版 stc89c52芯片实验板DIY套件\n<a href=\"https://github.com/hongwenjun/stc89c52\" target=\"_blank\">github stc89c52</a>\n```\n1. LED闪烁实验 和 跑马灯\nhttps://github.com/hongwenjun/stc89c52/tree/master/1-led\n\n2. 使用蜂鸣器演奏音乐\nhttps://github.com/hongwenjun/stc89c52/tree/master/2-beep_music\n\n3. 动态数码管显示 源码 🎁 7段26字母 显示 Helloworld\nhttps://github.com/hongwenjun/stc89c52/tree/master/3-led_segment_displays\n\n4. 矩阵按键实验\nhttps://github.com/hongwenjun/stc89c52/tree/master/4-matrix_key\n\n5. 8*8LED点阵-显示文字实验\nhttps://github.com/hongwenjun/stc89c52/tree/master/5-matrix_8x8LED\n\n6. 定时器和中断\nhttps://github.com/hongwenjun/stc89c52/tree/master/6-timer\n\n7. 按键控制外部中断\nhttps://github.com/hongwenjun/stc89c52/tree/master/7-external_interrupt\n\n8. 初识LCD1602液晶模块\nhttps://github.com/hongwenjun/stc89c52/tree/master/8-lcd1602_display\n```\n\n\n基于51单片机（STC89C52）和指纹识别模块（AS608）的指纹锁项目\n<a href=\"https://github.com/siyouluo/FingerprintLock\" target=\"_blank\">FingerprintLock</a>\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=stc89c52&ref=simplesearch\" target=\"_blank\">github 搜索stc89c52</a>\n\n<a href=\"https://github.com/oldprogram/stc89c51-or-stc89c52\" target=\"_blank\">stc89c51-or-stc89c52 + 仿真程序</a>\n\n<a href=\"https://github.com/AchillesL/MCU\" target=\"_blank\">基于STC89C52的智能家居系统</a>\n\n\n<a href=\"https://www.jianshu.com/p/72b5f3a74d19\" target=\"_blank\">简书 智能家居环境监测系统</a>\n<a href=\"https://www.jianshu.com/p/1311b9f43fbb\" target=\"_blank\">简书 基于89C52的交通灯系统</a>\n\n","tags":["单片机"]},{"title":"[单片机] 门禁系统RFID","url":"/2019/11/23//articles/2019/11/23/1574471639000.html/","content":"<a href=\"https://blog.csdn.net/leirenbaobao/article/details/35319609\" target=\"_blank\">基于51单片机的门禁系统RFID</a>\n","tags":["单片机"]},{"title":"[单片机] 超声波测距","url":"/2019/11/23//articles/2019/11/23/1574471638000.html/","content":"<a href=\"https://blog.csdn.net/weixin_38679924/article/details/92416324\" target=\"_blank\">单片机超声波测距</a>\nUltrasonic.h\n```\n/*-----------------------\nFileName: Ultrasonic.h\nFunction: 头文件\nAuthor: Zhang Kaizhou\nDate: 2019-6-16 18:26:16\n------------------------*/\n#include <reg52.h>\n#include <string.h>\n#include <intrins.h>\n#define uchar unsigned char\n#define uint unsigned int\n#define FOSC 11.0592 // 系统晶振频率11.0592MHz\n#define FACTOR 0.1845 // (距离计算因子)[(12 / FOSC) * 10^-6] * 340 / 2\n\t\n/*主模块端口定义*/\nsbit trig = P2^1; // 电平触发输入引脚\nsbit echo = P2^0; // 回声输出引脚\n\n/*LCD1602显示模块端口定义*/\nsbit lcdrs = P1^0;\nsbit lcdrw = P1^1;\nsbit lcden = P2^5;\n\n/*主模块函数声明*/\nvoid startUltra();\nvoid timerInit();\nvoid delayUs(uint xus);\nvoid computeDis();\n\n/*LCD1602显示模块函数声明*/\nvoid delay(uint xms);\nvoid writeCommand(uchar command);\nvoid writeDataLCD(uchar dat);\nvoid LCDInit();\nvoid display(float dat);\n```\n\nmain.c\n```\n/*----------------------------------------\nFileName: main.c\nFunction: 用HC-SR04超声波模块测量距离\nDescription: 用HC-SR04超声波模块测量距离,\n并用单片机(STC89C52RC)接收信号，计算距离，\n并在LCD1602上实时显示当前距离。\nAuthor: Zhang Kaizhou\nDate: 2019-6-16 18:24:39\n----------------------------------------*/\n#include \"Ultrasonic.h\"\n\n/*定义全局变量*/\nuint time = 0; // 记录回声高电平持续时间\nfloat distance = 0; // 存放距离\n\n/*主函数*/\nvoid main(){\n\tLCDInit();\n\ttimerInit();\n\twhile(1){\n\t\techo = 0; // 接收回音端置0\n\t\tstartUltra(); // 启动超声测距\n\t\twhile(!echo); // 等待回音\n\t\tTR0 = 1; // 开始计时\n\t\twhile(echo);\n\t\tTR0 = 0; // 停止计时\n\t\tcomputeDis(); // 计算距离\n\t\tdisplay(distance); // 显示距离\n\t}\n}\n\n/*启动超声波测距*/\nvoid startUltra(){ // 产生一个大于10us的高电平\n\ttrig = 1;\n\tdelayUs(15);\n\ttrig = 0;\n}\n\n/*timer初始化函数*/\nvoid timerInit(){\n\tTMOD = 0x01; // timer0 定时模式 工作方式1 非门控启动\n\tTH0 = 0x00; // 置初值 \n\tTL0 = 0x00;\n\tET0 = 1; // 开timer0溢出中断\n\tEA = 1; // 开全局中断\n}\n\n/*timer0溢出中断服务程序*/\nvoid timer0Service() interrupt 1{ // 计数溢出说明超出测距范围\n\techo = 0; // 强制关闭回音\n}\n\n/*延时xus*/\nvoid delayUs(uint xus){\n\tuint i;\n\tfor(i = xus; i > 0; i--){\n\t\t_nop_();\n\t}\n}\n\n/*计算距离*/\nvoid computeDis(){\n\ttime = TH0 * 256 + TL0;\n\tdistance = FACTOR * time;\n\tTH0 = 0x00; // 重装初值\n\tTL0 = 0x00;\n}\n```\n\ndisplay.c\n```\n/*-----------------------------\nFileName:display.c\nFunction: LCD1602显示函数\nAuthor: Zhang Kaizhou\nDate: 2019-6-16 18:25:29\n------------------------------*/\n#include \"Ultrasonic.h\"\n\nuchar code table0[] = {\"Distance Measure\"};\nuchar code table1[] = {\"Distance:\"};\nuchar code table2[] = {\"0123456789\"};\nuchar code table3[] = {\"mm\"};\nuchar num = 0;\n\n/*初始化LCD1602的设置*/\nvoid LCDInit(){\n\tuchar i;\n\tlcden = 0; // 拉低使能端，准备产生使能高脉冲信号\n\twriteCommand(0x38); // 显示模式设置(16x2， 5x7点阵，8位数据接口)\n\twriteCommand(0x0c); // 开显示，不显示光标\n\twriteCommand(0x06); // 写一个字符后地址指针自动加1\n\twriteCommand(0x01); // 显示清零，数据指针清零\n\t\n\t/*LCD上电界面*/\n\twriteCommand(0x80); // 将数据指针定位到第一行首\n\tfor(i = 0; i < strlen(table0); i++){\n\t\twriteDataLCD(table0[i]);\n\t\tdelay(5);\n\t}\n\t\n\twriteCommand(0x80 + 0x40); // 将数据指针定位到第二行首\n\tfor(i = 0; i < strlen(table1); i++){\n\t\twriteDataLCD(table1[i]);\n\t\tdelay(5);\n\t}\n}\n\n/*LCD显示函数*/\nvoid display(float dat){\n\tuint disINT = (uint)dat;\n\tuchar dis[4], i;\n\tdis[0] = disINT / 1000;\n\tdis[1] = disINT % 1000 / 100;\n\tdis[2] = disINT % 100 / 10;\n\tdis[3] = disINT % 10;\n\tfor(i = 0; i < 4; i++){\n\t\twriteCommand(0x80 + 0x40 + strlen(table1) + i);\n\t\twriteDataLCD(table2[dis[i]]);\n\t\tdelay(5);\n\t}\n\tfor(i = 0; i < strlen(table3); i++){\n\t\twriteCommand(0x80 + 0x40 + strlen(table1) + 4 + i);\n\t\twriteDataLCD(table3[i]);\n\t\tdelay(5);\n\t}\n}\n\n/*写指令函数*/\nvoid writeCommand(uchar command){\n\tlcdrs = 0; // 命令选择\n\tlcdrw = 0;\n\tP0 = command;\n\tdelay(5);\n\t\n\tlcden = 1; // 产生一个正脉冲使能信号\n\tdelay(5);\n\tlcden = 0;\n}\n\n/*写数据函数*/\nvoid writeDataLCD(uchar dat){\n\tlcdrs = 1; // 数据选择\n\tlcdrw = 0;\n\tP0 = dat;\n\tdelay(5);\n\t\n\tlcden = 1;\n\tdelay(5);\n\tlcden = 0;\n}\n\n/*延时xms函数*/\nvoid delay(uint xms){\n\tuint i, j;\n\tfor(i = xms; i > 0; i--)\n\t\tfor(j = 110; j > 0; j--);\n}\n```\n\n\n<a href=\"https://blog.csdn.net/qq_40977332/article/details/80399515\" target=\"_blank\">基于51单片机的超声波测距仪</a>\n\n\n<a href=\"http://www.51hei.com/bbs/dpj-131291-1.html\" target=\"_blank\">基于单片机和超声波测距模块的距离检测</a>\n```\n装好液晶， 用杜邦线 把 超声波测距模块四个引脚 连接到单片机\n```\n\nmain.c\n```\n#include <reg52.h>\n#define Lcd1602_DB P0\ntypedef unsigned char uchar;\ntypedef unsigned int uint;\n\n\nsbit trig = P1^2;\nsbit echo = P1^3;\n\nsbit Lcd1602_RS = P1^0;\nsbit Lcd1602_RW = P1^1;\nsbit Lcd1602_E = P1^5;\n\nvoid LcdWaitReady()\n{\n        uchar sta;\n        Lcd1602_DB = 0xff;\n        Lcd1602_RS = 0;\n        Lcd1602_RW = 1;\n        do{\n                Lcd1602_E = 1;\n                sta = Lcd1602_DB;\n                Lcd1602_E = 0;\n        }while(sta & 0x80);\n}\n/*向Lcd602液晶写入一字节命令*/\nvoid LcdWriteCmd(uchar cmd)\n{\n        LcdWaitReady();\n        Lcd1602_RS = 0;\n        Lcd1602_RW = 0;\n        Lcd1602_DB = cmd;\n        Lcd1602_E = 1;\n        Lcd1602_E = 0;\n}\n/*向Lcd602液晶写入一字节数据*/\nvoid LcdWriteDat(uchar dat)\n{\n        LcdWaitReady();\n        Lcd1602_RS = 1;\n        Lcd1602_RW = 0;\n        Lcd1602_DB = dat;\n        Lcd1602_E = 1;\n        Lcd1602_E = 0;\n}\n/*设置显示RAM起始地址，亦即光标位置*/\nvoid LcdSetCursor(uchar x,uchar y)\n{\n        uchar addr;\n        if(y == 0)\n                addr = 0x00 + x;\n        else\n                addr = 0x40 + x;\n        LcdWriteCmd(addr | 0x80);\n}\n/*在液晶上显示字符串*/\nvoid LcdShowStr(uchar x,uchar y,uchar *str)\n{\n        LcdSetCursor(x,y);//设置起始地址\n        while(*str != '\\0')\n        {\n                LcdWriteDat(*str++);\n        }\n}\n/*液晶输出数字*/\nvoid LCDNumPrint(uint num)\n{\n        LcdWriteDat(num/1000 + 0x30);//num的千位//因为LCD1602显示的数字0，是用0x30表示的，也可以把0当做字符显示\n        LcdWriteDat(num % 1000 / 100 + 0x30);//num的百位\n        LcdWriteDat(num % 100 /10 + 0x30);//num的十位\n        LcdWriteDat(num % 10 + 0x30);//num的个位\n}\n/*初始化液晶*/\nvoid InitLcd1602()\n{\n        LcdWriteCmd(0x38);\n        LcdWriteCmd(0x0c);\n        LcdWriteCmd(0x06);\n        LcdWriteCmd(0x01);//清屏\n}\nuint GetDistance(void)\n{\n        uint ss;//用于记录测得的距离\n        trig = 1;\n        delay(2);\n        trig = 0;\n        while(!echo);//当echo为高电平的时候，跳出循环\n        TH0 = 0；\n        TL0 = 0;\n        TF1 = 0;//计数溢出标志\n        TR0 = 1；//启动定时器0，开启计时\n        while(echo);//echo不为0，即脉冲返回结束，计时结束\n        TR0 = 0;//停止计时\n        ss = ((TH0 * 256 + TL0) * 0.34) / 2;//单位是cm\n        TH0 = 0；\n        TL0 = 0;\n        \n        return ss;\n}\n/*延时ms的函数*/\nvoid delay(uchar ms)\n{\n        uchar x;\n        uchar y;\n        for(x = ms;x > 0;x--)\n                for(y = 123;y > 0;y--);\n}\n\nvoid main()\n{\n        uint dist;\n        InitLcd1602();\n        TMOD = 0x01;\n        LcdShowStr(0,0,\"The Distance is:\")\n        LcdShowStr(4,1,\"cm\");\n        while(1)\n        {\n                dist = GetDistance();\n                LcdSetCursor(0,1);\n                LCDNumPrint(dist);\n        }\n        \n}\n```\n\n","tags":["单片机"]},{"title":"[单片机] stm32","url":"/2019/11/23//articles/2019/11/23/1574471637000.html/","content":"<a href=\"https://github.com/yyysjz1997\" target=\"_blank\">yyysjz1997</a>\n\n<a href=\"https://github.com/yyysjz1997/STM32_RFID_Android_app\" target=\"_blank\">本科《电子课程设计》作品 基于STM32、RFID的宿舍门禁系统 Android端手机APP</a>\n","tags":["单片机"]},{"title":"[单片机] PWM方法控制舵机","url":"/2019/11/23//articles/2019/11/23/1574471636000.html/","content":"<a href=\"https://blog.csdn.net/qq_36192043/article/details/80812947\" target=\"_blank\">51单片机控制舵机</a>\n\n<a href=\"https://blog.csdn.net/qq_44488422/article/details/90415839\" target=\"_blank\">51单片机控制小舵机</a>\n\n<a href=\"http://www.eepw.com.cn/article/275890.htm\" target=\"_blank\">脉宽调制</a>\n```\n　　脉宽调制(PWM，Pulse Width Modulation)是一种模拟控制方脉冲宽度调制，利用微处理器的数字输出来对模拟电路进行控制的一种非常有效的技术，广泛应用在从测量、通信到功率控制与变换的许多领域中。\n\n　　PWM就是脉冲宽度调制，也就是占空比可变的脉冲波形。该技术以该结论为理论基础，对半导体开关器件的导通和关断进行控制，使输出端得到一系列幅值相等而宽度不相等的脉冲，用这些脉冲来代替正弦波或其他所需要的波形。按一定的规则对各脉冲的宽度进行调制，既可改变逆变电路输出电压的大小，也可改变输出频率。\n```\n","tags":["单片机"]},{"title":"[单片机] keil+proteus仿真之vdmagi.exe","url":"/2019/11/23//articles/2019/11/23/1574471635000.html/","content":"<a href=\"https://www.bilibili.com/video/av44785314\" target=\"_blank\">Proteus 仿真基础教程</a>\n<a href=\"https://blog.csdn.net/kikajack/article/details/86374785\" target=\"_blank\">proteus 与 keil 的安装及联调</a>\n<a href=\"https://blog.csdn.net/wzk456/article/details/80797652\" target=\"_blank\">keil和Proteus联动调试</a>\n<a href=\"http://www.downxia.com/downinfo/258012.html\" target=\"_blank\">proteus pro V8.9 免费汉化版</a>\n<a href=\"http://sd.downxia.com/down/proteusbdj.rar\" target=\"_blank\">proteusbdj.rar</a>\n\n<a href=\"https://github.com/zhao-gao-sheng/89C51\" target=\"_blank\">89C51</a>\n\n<a href=\"http://downloads.labcenter.co.uk/vdmagi.exe\" target=\"_blank\">vdmagi.exe</a>\n```\n上面这个软件安装完成后，会在 Keil 的安装目录的 \\C51\\BIN 目录中添加 C51 联调相关的文件：VDM51.dll\n\n如果安装的时候你还选了 ARM，还会自动添加 VMDARM.dll 这个文件\n\n\n实际上，这个软件做的事情不止这些，除了自动创建 dll 文件外，它还修改了修改 keil 安装目录下 Tools.ini文件，并在[C51] 栏目下加入\nTDRV10=BIN\\VDM51.DLL (\"Proteus VSM Monitor-51 Driver\") \n\n\n其中 \"TDRV10\" 中的 \"10\" 要根据实际情况看，原则是不跟原来的重复\n```\n\n开启 proteus 的远程调试功能\n```\n在菜单栏依次选择 \"Debug\"-> \"Enable Remote Debug Monitor\"。开启后，proteus 会默认监听本机的 8000 端口\n```\n","tags":["单片机"]},{"title":"[单片机] android","url":"/2019/11/23//articles/2019/11/23/1574471634000.html/","content":"<a href=\"https://www.cnblogs.com/jlutiger/p/9529820.html\" target=\"_blank\">单片机与android手机通信（控制LED小灯亮灭）</a>\n\n<a href=\"https://github.com/whaoming/SCMAndroidCommunicate\" target=\"_blank\">Android与51单片机的信息交互</a>\n```\n单片机：STC89C52\nc语言\n编写环境：Keil uVision4\n烧录：stc-isp-15xx-v6.82\n\nAndroid\nandroid sdk 16+\nAndroid studio 1.0+\n```\n\n单片机课程实践——智能家居系统\n<a href=\"https://github.com/a-voyager/SmartHouse_Node\" target=\"_blank\">感知端</a>\n<a href=\"https://github.com/a-voyager/SmartHouse_Server\" target=\"_blank\">服务器端</a>\n<a href=\"https://github.com/a-voyager/SmartHouse_Android\" target=\"_blank\">安卓端</a>\n\n<a href=\"https://github.com/jp1017/AndroidSerialPort\" target=\"_blank\">安卓串口打开、接收与发送</a>\n\n\n<a href=\"https://blog.csdn.net/qq_33446100/article/details/99676957\" target=\"_blank\">【51单片机】Android端蓝牙开发，与蓝牙模块通信</a>\n```\n单片机：HC6800-ES，晶振12MHz\n蓝牙模块：BT08(兼容HC-06、HC-05)\n```\n\n<a href=\"https://github.com/lioilwin/Bluetooth\" target=\"_blank\">【51单片机】Android端蓝牙开发，与蓝牙模块通信</a>\n\n<a href=\"https://github.com/yyysjz1997/STM32_RFID_Android_app\" target=\"_blank\">本科《电子课程设计》作品 基于STM32、RFID的宿舍门禁系统 Android端手机APP</a>\n\n\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=%E5%8D%95%E7%89%87%E6%9C%BA+android&ref=simplesearch\" target=\"_blank\">github搜索 单片机 android</a>\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=%E5%8D%95%E7%89%87%E6%9C%BA+android+%E9%97%A8%E7%A6%81&ref=simplesearch\" target=\"_blank\">github 搜索 单片机 android 门禁</a>\n\n\n\n\n\n","tags":["单片机"]},{"title":"[单片机] DS18B20温度传感器","url":"/2019/11/23//articles/2019/11/23/1574471632000.html/","content":"<a href=\"https://blog.csdn.net/u013151320/article/details/50253199\" target=\"_blank\">51单片机DS18B20温度传感器详解</a>\n```\nDS18B20是一种单总线数字温度传感器，测试温度范围-55℃-125℃，具有体积小，硬件开销低，抗干扰能力强，精度高的特点。\n单总线，意味着没有时钟线，只有一根通信线。单总线读写数据是靠控制起始时间和采样时间来完成，所以时序要求很严格，这也是DS18B20驱动编程的难点。\n```\n\n单片机控制读取ds18b20温度数值通过1602显示\n<a href=\"https://github.com/Control-feng/DS18B20\" target=\"_blank\">DS18B20</a>\n","tags":["单片机"]},{"title":"[单片机] 51单片机论坛","url":"/2019/11/23//articles/2019/11/23/1574471631000.html/","content":"<a href=\"http://www.51hei.com/bbs/dpj-117091-1.html\" target=\"_blank\">STC89C52RC单片机控制步进电机仿真与程序源码及实物图</a>\n","tags":["单片机"]},{"title":"[springboot] opencv","url":"/2019/11/23//articles/2019/11/23/1574471629000.html/","content":"<a href=\"https://github.com/frknikiz/opencv-facedetection\" target=\"_blank\">opencv-facedetection</a>\n\n<a href=\"https://blog.csdn.net/yhflyl/article/details/89455892\" target=\"_blank\">Springboot之整合Socket连接</a>\n","tags":["springboot"]},{"title":"[qt] connect用法","url":"/2019/11/23//articles/2019/11/23/1574471628000.html/","content":"<a href=\"https://www.2cto.com/kf/201806/755872.html\" target=\"_blank\">Qt connect信号连接的几种写法</a>\n\n```\nclass MyButton : public QWidget\n{\n Q_OBJECT\npublic:\n explicit MyButton(QWidget *parent = nullptr);\n \nsignals:\n void sigClicked();\n void sigClicked(bool check);\n};\n```\n\n第一种\n```\n那么在用这个 Button 的时候连接这两个信号，按照旧版本的写法，应该是这样：\n\nconnect(m_pBtn,SIGNAL(sigClicked()),this,SLOT(onClicked()));\nconnect(m_pBtn,SIGNAL(sigClicked(bool)),this,SLOT(onClicked(bool)));\n\n这种写法比较麻烦，常常在用的时候缺少括号，不过该写法很明确，一眼就能看出来是将哪个信号连接到哪个槽。\n```\n\n第二种\n```\n接着上面的示例，在 Qt5.0以后推出一种新的写法，如下：\nconnect(m_pBtn,&MyButton::sigClicked,this,&Widget::onClicked);\n```","tags":["qt"]},{"title":"[python] opencv","url":"/2019/11/23//articles/2019/11/23/1574471627000.html/","content":"<a href=\"https://github.com/yyysjz1997/cv-basic\" target=\"_blank\">opencv基础识别人脸人眼 两种方法 视频&图片</a>\n","tags":["python"]},{"title":"[springboot] 扫码登录","url":"/2019/11/21//articles/2019/11/21/1574339080000.html/","content":"\n扫码登录\n<a href=\"https://github.com/carter659/spring-boot-scan-login\" target=\"_blank\">spring-boot-scan-login</a>\n\n<a href=\"https://www.cnblogs.com/GoodHelper/p/8641905.html\" target=\"_blank\">springboot高性能实现二维码扫码登录(上)——单服务器版</a>\n\n<a href=\"https://www.cnblogs.com/GoodHelper/p/8650243.html\" target=\"_blank\">springboot高性能实现二维码扫码登录(下)——订阅与发布机制版</a>\n\n","tags":["springboot"]},{"title":"[springboot] 滑动验证","url":"/2019/11/21//articles/2019/11/21/1574339079000.html/","content":"<a href=\"https://www.cnblogs.com/huxiaoguang/p/10806765.html\" target=\"_blank\">SpringBoot 整合滑动验证</a>\n\n<a href=\"https://blog.csdn.net/qq_25283709/article/details/88147858\" target=\"_blank\">Spring Boot & 极验验证滑动验证码</a>\n```\nhttps://github.com/hdlxt/lxtDaily\n```\n\nSpringBoot+redis+thymeleaf+MyBatis+LayUI+极验\n<a href=\"https://gitee.com/duxiaod/springboot_layui\" target=\"_blank\">springboot_layui</a>\n","tags":["springboot"]},{"title":"[springboot] ueditor富文本编辑","url":"/2019/11/21//articles/2019/11/21/1574339078000.html/","content":"<a href=\"https://github.com/uncleAndyChen/springBootIntegrationUEditor\" target=\"_blank\">springBoot 集成百度富文本框 UEditor，多模块方式（配置服务器图片存放路径）</a>\n\n<a href=\"https://github.com/wotrd/springboot-ueditor\" target=\"_blank\">springboot使用百度富文本ueditor，实现图片多张上传</a>\n\n<a href=\"https://github.com/luocai/background-template\" target=\"_blank\">springboot和thymeleaf搭建的后台模板，集成了分页，以及富文本编辑器wangeditor</a>","tags":["springboot"]},{"title":"[springboot] jpa+react增删改查","url":"/2019/11/21//articles/2019/11/21/1574339077000.html/","content":"<a href=\"https://blog.csdn.net/oXinYangonly/article/details/83545230\" target=\"_blank\">spring-boot react一步一步实现增删改查</a>\n<a href=\"https://gitee.com/qinaichen/react-crud\" target=\"_blank\">react-crud</a>\n\n<a href=\"https://github.com/thiagoprocaci/springboot-react-jwt\" target=\"_blank\">前后端</a>\n\n<a href=\"https://github.com/juhahinkula/SpringBootReact\" target=\"_blank\">react工程里</a>\n","tags":["springboot"]},{"title":"[qt] 音乐播放器","url":"/2019/11/21//articles/2019/11/21/1574339076000.html/","content":"<a href=\"https://blog.csdn.net/daydream13580130043/article/details/79094643#comments\" target=\"_blank\">Qt5 QMediaPlayer 音乐播放器</a>\n\n<a href=\"https://github.com/sundial-dreams/Qt5_Music\" target=\"_blank\">Qt5_Music</a>\n\n<a href=\"https://www.cnblogs.com/guolao/p/8922552.html\" target=\"_blank\">QT5:C++实现基于multimedia的音乐播放器（一）</a>\n<a href=\"https://github.com/pansinm/CleanPlayer\" target=\"_blank\">基于Qt编写的音乐播放器，界面由QML编写，网络和文件由C++实现，能够搜索和播放在线歌曲</a>\n<a href=\"https://github.com/aeagean/QtMusic\" target=\"_blank\">基于Qt的音乐播放器，支持歌词显示。QML</a>\n","tags":["qt"]},{"title":"[qt] 小软件","url":"/2019/11/21//articles/2019/11/21/1574339075000.html/","content":"<a href=\"https://blog.csdn.net/wsj18808050/category_2809867.html\" target=\"_blank\">Qt小软件</a>\n\n<a href=\"https://blog.csdn.net/wsj18808050/article/details/49208623\" target=\"_blank\">基于Qt开发的远程关机小助手</a>\n<a href=\"http://pan.baidu.com/s/1pJBviLd\" target=\"_blank\">下载地址－PC受控端（电脑）</a>\n<a href=\"http://pan.baidu.com/s/1hqB9zI8\" target=\"_blank\">下载地址－控制端（手机）</a>\n```\nAppStore链接：\n美区：\nhttps://itunes.apple.com/us/app/shutdownhelper/id1050208430?l=en&mt=8\n\n中国区：\nhttps://itunes.apple.com/cn/app/shutdownhelper/id1050208430?l=en&mt=8\n```\n\n","tags":["qt"]},{"title":"[qt] 文本转语音","url":"/2019/11/21//articles/2019/11/21/1574339074000.html/","content":"<a href=\"https://blog.csdn.net/woniulx2014/article/details/83313428\" target=\"_blank\">QT文本转语音模块（TTS）QTextToSpeech</a>\n\nQTextToSpeech是QT5.8以上的文本转语音模块\n使用方法，在.pro工程文件中添加\n```\nQT += texttospeech\n```\n\n添加头文件\n```\n#include <QTextToSpeech>\n```\n\n源文件：\n```\n    QTextToSpeech *tts = new QTextToSpeech(this);\n    tts ->setRate(0.3);\n    tts ->setPitch(0.5);\n    tts ->setVolume(1);\n    if(tts->state()==QTextToSpeech::Ready)\n    {\n        tts->say(\"hello world\");\n    }\n```\n\n在linux下，它是调用speech-dispatcher。在其它不同的平台上，调用各自平台的TTS引擎。所以在使用的时候，要确保本地的TTS引擎是可用的。\n\n<a href=\"https://blog.csdn.net/luoyayun361/article/details/80728112\" target=\"_blank\">Qt 字符串合成语音并播放（QTextToSpeech）</a>\n\n<a href=\"https://blog.csdn.net/mars_xiaolei/article/details/84570698\" target=\"_blank\">《Qt5+语音功能（QTextToSpeech类）》</a>\n```\n代码实现功能：\n\n1.选择引擎\n2.选择语言\n3.选择声音类型\n4.设置音高、音速、音量\n5.阅读、暂停、继续、停止\n\n\nQt官方示例完整代码下载链接：\nhttps://pan.baidu.com/s/1ryMHLF_d0sAlLPPyoFBYfQ \n提取码：\niqt3\n```","tags":["qt"]},{"title":"[qt] 局域网文件传输","url":"/2019/11/21//articles/2019/11/21/1574339072000.html/","content":"<a href=\"http://pan.baidu.com/s/1dDZWQbv\" target=\"_blank\">Qt局域网文件传输</a>\n","tags":["qt"]},{"title":"[qt] FlatUI","url":"/2019/11/21//articles/2019/11/21/1574339071000.html/","content":"<a href=\"https://github.com/qyvlik/Flat.qml\" target=\"_blank\">FlatUI by qml, 参考FlatUI设计的一套qml控件</a>\n\n","tags":["qt"]},{"title":"[qt] android人脸识别","url":"/2019/11/21//articles/2019/11/21/1574339070000.html/","content":"<a href=\"https://github.com/kongqw/OpenCVForAndroid\" target=\"_blank\">目标检测&目标追踪&人脸检测&人脸识别</a>\n","tags":["qt"]},{"title":"[单片机] 红外线测距仿真","url":"/2019/11/21//articles/2019/11/21/1574339069000.html/","content":"<a href=\"https://blog.csdn.net/kabuto_hui/article/details/53573343\" target=\"_blank\">基于51单片机的红外线测距仿真</a>\n","tags":["单片机"]},{"title":"[jfinal] idea+maven+jfinal","url":"/2019/11/21//articles/2019/11/21/1574339069000.html/","content":"JFinal极速开发企业应用管理系统\n<a href=\"https://gitee.com/QinHaiSenLin/Jfinal-layui\" target=\"_blank\">Jfinal-layui</a>\n```\ngit clone https://gitee.com/QinHaiSenLin/Jfinal-layui\n\n一、在线演示\nhttp://www.qinhaisenlin.com:8080/\n登录账号：\nadmin/123456\n\n二、JFinal-layui代码在线生成器\nhttp://www.qinhaisenlin.com/code\n\n三、该项目的核心功能有：\n(1) 登录、\n(2) 功能管理、\n(3) 角色管理（包含了权限管理）、\n(4) 用户管理、\n(5) 部门管理、\n(6) 系统日志、\n(7) 业务字典，通用的附件上传、\n(8) 下载、\n(9) 导入、\n(10)导出，\n(11)echart图表统计，\n(12)缓存、\n(13)druid的sql监控、\n(14)基本满足企业应用管理系统的需求、\n(15)简化了前段代码\n\n\n四、安装教程\n新建数据库,执行doc目录下的jfinal-layui.sql\n修改resources下面的config-dev.txt配置文件,修改数据库配置\n运行com.qinhailin.common.config.ManiConfig的main方法\n访问地址：\nhttp://localhost\n登录账号：\nadmin/123456\n```\n\n\n```\ngit clone https://gitee.com/jfinal/jfinal\n```\n\nJFinal有如下主要特点\n```\nMVC 架构，设计精巧，使用简单\n遵循 COC 原则，零配置，无 XML\n独创 Db + Record 模式，灵活便利\nActiveRecord 支持，使数据库开发极致快速\n极简、强大、高性能模板引擎 Enjoy，十分钟内掌握 90% 用法\n自动加载修改后的 Java 文件，开发过程中无需重启服务\nAOP支持，拦截器配置灵活，功能强大\nPlugin 体系结构，扩展性强\n多视图支持，支持 Enjoy、FreeMarker、JSP、Velocity\n强大的 Validator 后端校验功能\n功能齐全，拥有传统 SSH 框架的绝大部分核心功能\n体积小仅 723 KB，并且无第三方依赖\n```\n\n<a href=\"https://gitee.com/wukongcrm\" target=\"_blank\">悟空CRM-基于jfinal+vue+ElementUI的前后端分离CRM系统</a>\n\n<a href=\"https://gitee.com/xiaoxustudent/JFinal-vue-element-admin\" target=\"_blank\">后台基于JFinal，前端实现：Vue+Element</a>\n\n<a href=\"https://gitee.com/596392912/JFinal-oauth2.0-login\" target=\"_blank\">jfinal集成第三方登录</a>\n```\noauth2.0第三方 qq、sina、baidu、renren、osc、豆瓣 等，登陆的简易封装！\n```","tags":["jfinal"]},{"title":"[PyQt5] 车牌识别","url":"/2019/11/21//articles/2019/11/21/1574339068000.html/","content":"<a href=\"https://blog.csdn.net/sumkee911/article/details/79435983\" target=\"_blank\">OpenCV图像识别：车牌定位算法源码，Python语言实现</a>\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=python%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB&ref=simplesearch\" target=\"_blank\">python车牌识别</a>\n<a href=\"https://github.com/jinmu333/python_PlateRecogntion\" target=\"_blank\">python_PlateRecogntion</a>\n","tags":["PyQt5"]},{"title":"[hexo] 添加百度统计","url":"/2019/11/21//articles/2019/11/21/1574339068000.html/","content":"<a href=\"https://www.cnblogs.com/fazero/p/7976651.html\" target=\"_blank\">hexo添加百度统计</a>\n\n","tags":["hexo"]},{"title":"[路由] 路由端口映射","url":"/2019/11/21//articles/2019/11/21/1574339067000.html/","content":"<a href=\"https://blog.csdn.net/qq_41463655/article/details/82914809\" target=\"_blank\">路由器外网映射</a>\n\n<a href=\"https://jingyan.baidu.com/article/1709ad8042b8a74634c4f0e2.html\" target=\"_blank\">教你路由器端口映射设置方法</a>\n\n<a href=\"https://service.tp-link.com.cn/detail_article_3154.html\" target=\"_blank\">路由器端口映射和远程WEB管理的注意事项</a>\n\n","tags":["路由"]},{"title":"[android] AndroidCamera","url":"/2019/11/21//articles/2019/11/21/1574339067000.html/","content":"<a href=\"https://github.com/aserbao/AndroidCamera\" target=\"_blank\">自定义Android相机(仿抖音)</a>\n\n```\n视频人脸识别贴纸，\n分段录制，\n回滚删除，\n倒计时录制，\n视频裁剪，\n视频帧处理，\n获取视频第一帧，\n关键帧，\n视频旋转，\n滤镜添加，\n水印添加，\n动态贴纸添加，\n文字转视频，\n图片转视频。\n```\n","tags":["android"]},{"title":"[单片机] 仿真+github示例","url":"/2019/11/21//articles/2019/11/21/1574339066000.html/","content":"\n51单片机入门资料\n<a href=\"https://github.com/Lighter-z/51-Single-chip\" target=\"_blank\">51-Single-chip</a>\n\n一些简单的51单片机示例程序\n<a href=\"https://github.com/zhao-gao-sheng/89C51\" target=\"_blank\">89C51</a>\n\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=+51%E5%8D%95%E7%89%87%E6%9C%BA&ref=simplesearch\" target=\"_blank\">github搜索51单片机</a>\n\n","tags":["单片机"]},{"title":"[小程序] 含云函数小程序示例","url":"/2019/11/17//articles/2019/11/17/1574001994000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://github.com/inspurer/CSUTeachingMiniprogram\" target=\"_blank\">中南教务通小程序源码</a>\n\n<a href=\"https://github.com/inspurer/GaokaoScroeQuery\" target=\"_blank\">高考查分小程序源代码</a>\n","tags":["小程序"]},{"title":"[小程序] ui组件库wux-weapp","url":"/2019/11/17//articles/2019/11/17/1574001993000.html/","content":"<a href=\"https://github.com/wux-weapp/wux-weapp\" target=\"_blank\">wux-weapp</a>\n","tags":["小程序"]},{"title":"[springboot] vue-element-admin","url":"/2019/11/17//articles/2019/11/17/1574001992000.html/","content":"<a href=\"https://blog.csdn.net/Zoctan/article/details/79440161\" target=\"_blank\">Spring Boot Vue Admin 前后端完全分离的权限控制模版</a>\n```\n# 克隆项目\ngit clone https://github.com/Zoctan/spring-boot-vue-admin.git\n\ncd spring-boot-vue-admin/admin\n\n# 使用其他源，解决 npm 下载速度慢的问题\nnpm install --registry=https://registry.npm.taobao.org\n\n# 安装依赖\nnpm install\n\n# 启动服务\nnpm run dev\n```\n\n<a href=\"https://blog.csdn.net/shrek11/article/details/86302696\" target=\"_blank\">vue-element-admin 作为前端 springcloud 后端</a>\n```\nshrek 后端：\nhttps://github.com/wushu0725/shrek\n\nshrek-ui 前端：\nhttps://github.com/wushu0725/shrek-ui  \n```\n","tags":["springboot"]},{"title":"[qt] ubuntu16.04+Qt5.11+opencv3.4完美配置","url":"/2019/11/17//articles/2019/11/17/1574001991000.html/","content":"<a href=\"https://blog.csdn.net/wanzhen4330/article/details/82622664\" target=\"_blank\">Ubuntu 16.04 + Qt 5.11 +opencv 3.4完美配置（亲测，最简单完美的方法）</a>\n\n<a href=\"https://blog.csdn.net/WMX843230304WMX/article/details/85299616\" target=\"_blank\">搭建 Ubuntu16.04 + QT 5.12 +openCV4.0.1 开发环境</a>","tags":["qt"]},{"title":"[qt] opencv人脸识别的员工考勤系统","url":"/2019/11/17//articles/2019/11/17/1574001988000.html/","content":"<a href=\"https://inspurer.github.io/2018/09/25/%E5%9F%BA%E4%BA%8Eopencv%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%9A%84%E5%91%98%E5%B7%A5%E8%80%83%E5%8B%A4%E7%B3%BB%E7%BB%9F/\" target=\"_blank\">一个基于 Opencv、dlib 人脸识别的员工考勤系统</a>\n\n<a href=\"https://github.com/inspurer/WorkAttendanceSystem\" target=\"_blank\">WorkAttendanceSystem</a>\n```\n链接：\nhttps://pan.baidu.com/s/1aIA6AhTB8LVESSAN5jgDjQ\n提取码：\nl7or\n```\n","tags":["qt"]},{"title":"[python] 自动下载图虫网图库","url":"/2019/11/17//articles/2019/11/17/1574001987000.html/","content":"<a href=\"https://inspurer.github.io/2018/11/14/python%E8%87%AA%E5%8A%A8%E4%B8%8B%E8%BD%BD%E5%9B%BE%E8%99%AB%E7%BD%91%E5%9B%BE%E5%BA%93/\" target=\"_blank\">Python 自动下载图虫网图库</a>\n\n```\ngit clone git@github.com:inspurer/PythonSpider.git\n\n下载相关依赖\n在命令行下依此输入\n\npip install requests   \npip install pyquery   \n\nhttps://tuchong.com/4293835/23849565/\n```","tags":["python"]},{"title":"[python] 微信自动回复","url":"/2019/11/17//articles/2019/11/17/1574001986000.html/","content":"<a href=\"https://inspurer.github.io/2018/12/01/Python%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%92%8C%E7%BE%A4%E8%81%8A%E5%8A%A9%E6%89%8B/\" target=\"_blank\">Python 实现微信自动回复和群聊助手</a>\n\n","tags":["python"]},{"title":"[python] github+demos","url":"/2019/11/17//articles/2019/11/17/1574001984000.html/","content":"<a href=\"https://github.com/inspurer?tab=repositories\" target=\"_blank\">qt+opencv+qzxing的二维码识别程序</a>\n\n<a href=\"https://github.com/inspurer/SocketQQ\" target=\"_blank\">基于套接字实现的仿QQ互联，支持单发/群发输入的消息/选择的文件</a>\n","tags":["python"]},{"title":"[AutoCAD] 教程+软件+素材","url":"/2019/11/17//articles/2019/11/17/1573951530000.html/","content":"<a href=\"http://www.downza.cn/soft/22957.html\" target=\"_blank\">AutoCAD2014 绿色版</a>\n\n<a href=\"http://www.downza.cn/soft/270697.html\" target=\"_blank\">AutoCAD 2018 中文破解版</a>\n\n<a href=\"http://xy.downza.cn/course/8/subpart-22.html\" target=\"_blank\">AutoCAD视频教程</a>\n<a href=\"https://www.bilibili.com/video/av4116187\" target=\"_blank\">哔哩哔哩 环学教育 CAD教学视频--基础篇</a>\n```\n P1 CAD教学（一）之直线及选择操作\n P2 CAD教学（二）之构造线\n P3 CAD教学（三）之多段线命令\n P4 CAD教学（四）之常用辅助工具\n P5 CAD教学（五）之多边形命令\n P6 CAD教学（六）之矩形命令\n P7 CAD教学（七）之圆弧及修剪工具\n P8 CAD教学（八）圆命令讲解\n P9 CAD教学（九）修订云线与样条曲线\nP10 CAD教学（十）\nP11 CAD教学（十一）\nP12 CAD教学（十二）点工具及图案填充、渐变色\nP13 CAD教学（十三）之多行文字\nP14 CAD教学（十四）之删除、复制、镜像命令\nP15 CAD教学（十五）之偏移命令\nP16 CAD教学（十六）之矩形阵列和环形阵列\nP17 CAD教学（二十）之移动、旋转、缩放\nP18 CAD教学（十八）之拉伸、修剪、延伸工具\nP19 CAD教学（十九）之打断、合并、分解\nP20 CAD教学（二十）之倒角与圆角\nP21 CAD教学（二十一）之图层的运用\nP22 CAD教学（二十二）之标注及标注样式\n```\n\n<a href=\"https://www.bilibili.com/video/av38163152\" target=\"_blank\">哔哩哔哩 管家课堂 CAD 2018快速入门教程</a>\n```\n P1 1.1 CAD能干什么\n P2 1.2 CAD2018新特性\n P3 1.3 CAD界面及编辑\n P4 2.1 CAD新建打开及保存\n P5 2.2 CAD鼠标基础操作\n P6 2.3 CAD选择技巧\n P7 2.4 CAD直线工具\n P8 2.5 CAD相对坐标\n P9 2.6 CAD极坐标\nP10 2.7 综合练习\nP11 3.1 二维绘图：圆\nP12 3.2 二维绘图：圆弧\nP13 3.3 二维绘图：椭圆\nP14 3.4 二维构图：矩形\nP15 3.5 二维构图：多边形\nP16 3.6 二维构图：多线\nP17 3.7 二维构图：构造线及射线\nP18 3.8 二维构图：多段线\nP19 3.9 二维构图：样条曲线\nP20 3.10 二维构图：图案填充\nP21 4.1 移动工具\nP22 4.2 旋转工具\nP23 4.3 修剪及延伸工具\nP24 4.4 删除及复制工具\nP25 4.5 镜像工具\nP26 4.6 倒圆角工具\nP27 4.7 分解工具\nP28 4.8 拉伸工具\nP29 4.9 缩放工具\nP30 4.10 倒角工具\nP31 4.11 矩形阵列\nP32 4.12 路径及环形阵列\nP33 4.13 偏移工具\nP34 5.1 正交模式\nP35 5.2 极轴追踪\nP36 5.3 对象捕捉\nP37 5.4 对象捕捉追踪\nP38 5.5 轴测捕捉\nP39 6.1 线性标注\nP40 6.2 线性标注详解\nP41 6.3 对齐标注角度标注\nP42 6.4 半径标注及直径标注\nP43 6.5 标注样式\nP44 6.6 引线标注\nP45 6.7 全局比例\nP46 6.8 单行及多行文字\nP47 6.9 文字样式\nP48 7.1 特性工具栏\nP49 7.2 新建图层\nP50 7.3 图层样板\nP51 7.4 图层运用\nP52 7.5 图层操作\nP53 7.6 非连续线性比例\nP54 8.1 块的认识\nP55 8.2 块的创建\nP56 8.3 块的插入\nP57 8.4 属性块\nP58 8.5 动态块\nP59 9.1 导出多种格式\nP60 9.2 模型空间打印\nP61 9.3 布局打印\n```\n\n<a href=\"http://www.xunjiecad.com/dailypics\" target=\"_blank\">迅捷cad素材</a>\n","tags":["AutoCAD"]},{"title":"[springboot] highcharts示例","url":"/2019/11/17//articles/2019/11/17/1573951529000.html/","content":"<a href=\"https://github.com/liunh1220/springboot-highcharts-demo\" target=\"_blank\">springboot-highcharts-demo</a>\n\n","tags":["springboot"]},{"title":"[springboot] echarts示例","url":"/2019/11/17//articles/2019/11/17/1573951529000.html/","content":"<a href=\"https://github.com/huajiexiewenfeng/eval-echarts\" target=\"_blank\">eval-echarts</a>\n","tags":["springboot"]},{"title":"[springboot] 小程序+springboot+qiushi123","url":"/2019/11/17//articles/2019/11/17/1573951529000.html/","content":"<a href=\"https://github.com/qiushi123\" target=\"_blank\">qiushi123</a>\n","tags":["springboot"]},{"title":"[小程序] java+小程序商城","url":"/2019/11/17//articles/2019/11/17/1573951529000.html/","content":"<a href=\"https://blog.csdn.net/qq_41066066/article/details/87613223\" target=\"_blank\">微信小程序+Java后台开发(详细解释，附代码)</a>\n```\n链接：\nhttps://pan.baidu.com/s/172dMXObUdwTXBqH7qkuPuQ\n提取码：\nzjgv\n```\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%82%B9%E9%A4%90&ref=simplesearch\" target=\"_blank\">github 小程序 点餐</a>\n\n\n<a href=\"https://www.cnblogs.com/HHHY/p/11787174.html\" target=\"_blank\">基于SpringBoot前后端分离的点餐系统</a>\n<a href=\"https://github.com/HCychao/SpringBootAndOrder\" target=\"_blank\">SpringBootAndOrder</a>\n\n<a href=\"https://github.com/getweapp/weapp-diancan\" target=\"_blank\">weapp-diancan</a>\n\n\n<a href=\"https://blog.csdn.net/qiushi_1990/article/details/97749686\" target=\"_blank\">点餐系统的开发，java后台+微信小程序 实现完整的餐厅点餐系统。微信扫码点餐小程序源码讲解</a>\n\n<a href=\"https://github.com/qiushi123/diancan\" target=\"_blank\">全栈开发之微信小程序点餐</a>\n```\nJDK8\nMySQL（需要5.6以上）\nSpring-boot\nSpring-data-jpa\nLombok\nFreemarker\nBootstrap\nWebsocket\n```\n\n","tags":["小程序"]},{"title":"[linux] 释放内存","url":"/2019/11/17//articles/2019/11/17/1573951529000.html/","content":"<a href=\"https://www.cnblogs.com/liqing1009/p/9772051.html\" target=\"_blank\">Linux释放内存空间</a>\n```\n#查看当前内存剩余\nfree -h\n#首先写缓存到文件系统\nsync\n\n0：0是系统默认值，默认情况下表示不释放内存，由操作系统自动管理\n1：释放页缓存\n2：释放dentries和inodes\n3：释放所有缓存\n\n#释放内存(页缓存buff/cache)\necho 3 > /proc/sys/vm/drop_caches\n```\n","tags":["linux"]},{"title":"[springboot] vue-admin","url":"/2019/11/17//articles/2019/11/17/1573951528000.html/","content":"<a href=\"https://lmxdawn.github.io/vue-admin/#/components/upload\" target=\"_blank\">演示</a>\n\n<a href=\"https://segmentfault.com/a/1190000017131555\" target=\"_blank\">当springboot遇到 vue-admin, 搭建完美后台</a>\n\n<a href=\"https://github.com/lmxdawn/vue-admin-html\" target=\"_blank\">项目PHP前端地址</a>\n\n<a href=\"https://github.com/lmxdawn/vue-admin-php\" target=\"_blank\">项目PHP后端地址</a>\n\n<a href=\"https://github.com/lmxdawn/vue-admin-html-java\" target=\"_blank\">项目JAVA前端地址</a>\n\n<a href=\"https://github.com/lmxdawn/vue-admin-java\" target=\"_blank\">项目JAVA后端地址</a>\n\n```\n管理员登录\n登录\n修改密码\n角色管理\n权限管理\n401/404错误页面\n动态面包屑\n动态侧边栏\n广告管理\n```\n","tags":["springboot"]},{"title":"[jfinal] api+web","url":"/2019/11/17//articles/2019/11/17/1573951527000.html/","content":"<a href=\"https://gitee.com/riven666/jfinal-cms\" target=\"_blank\">jfinal-cms</a>\n","tags":["jfinal"]},{"title":"[设计] 海报+宣传册","url":"/2019/11/16//articles/2019/11/16/1573907250000.html/","content":"<a href=\"https://ibaotu.com/tupian/haibao.html\" target=\"_blank\">海报</a>\n\n<a href=\"https://ibaotu.com/tupian/xuanchuance.html\" target=\"_blank\">宣传册</a>\n\n<a href=\"https://ibaotu.com/sucai/365571.html?kwd=%E5%AE%A3%E4%BC%A0%E5%86%8C\" target=\"_blank\">大气蓝色商务风格公司集企业宣传册企业画册</a>\n\n<a href=\"https://www.zcool.com.cn/work/ZMzc5Nzk1MTY=.html\" target=\"_blank\">智能锁宣传册</a>\n","tags":["怼"]},{"title":"[怼] 怼人金句","url":"/2019/11/16//articles/2019/11/16/1573907249000.html/","content":"<a href=\"https://baijiahao.baidu.com/s?id=1627589113048729355\" target=\"_blank\">霸气怼人的句子，一句话噎死人！</a>\n```\n一、虚情假意的人，别跟我说对不起，你滚就是最好的道歉！\n\n二、你有跟我装逼的权力，我就有整死你的实力。\n\n三、我的眼睛不是染缸，装不下你的各种脸色。\n\n\n四、如果你不瞎，就别用耳朵去了解我。\n\n五、我会给你留面子，也希望你长脑子。\n\n六、总归有人看不惯我，我能怎样，百般讨好，还是杀人灭口。\n\n\n七、不成熟的爱情，无非就是你渣我瞎。像你这种烂人，我不稀罕。\n\n八、讨厌我，没关系，我不介意。我活着不是为了取悦你。\n\n九、也许你很了不起，但我未必看得起。\n\n\n十、我不喜欢什么日久见人心，我比较喜欢的是，是人是狗一眼就看清。\n\n十一、我发现你和莎士比亚有一半像，哪里像？莎比。\n\n十二、我说话从来不带刺，如果我说话让你难堪，请你记住，我是故意的。\n\n\n十三、你若风光万人陪，一无所有还有谁。\n\n十四、长得丑不是你的错，但是出来吓人，就是你的不对了！\n\n十五、你喜欢什么样的我，我可以让你笑着滚蛋。\n\n\n十六、成年人的交际礼仪里，没有爽快的答应，就是拒绝的意思，我能给你留面子，也希望你长脑子。\n\n十七、不好意思，我以前是瞎了眼，才看上你。\n\n十八、受不起夸，禁不起骂，脾气当然也很差。\n\n\n十九、别把自己想的太伟大，没了你，地球照样转。\n\n二十、打你脸的时候，不要问我为什么打你，因为我给你糖的时候，你从来不会说谢谢。\n\n二十一、每个人都会犯贱，但请注意次数；每个人都会善变，但请注意速度。\n\n\n二十二、关于感情我承认我拿不稳，但我宁愿摔碎了也不会拱手让人。\n\n二十三、我就是我，看不爽请靠边站。\n\n二十四、一切的矫情和装逼，咆哮和压抑，都是源于很缺钱，或者很缺爱。\n\n\n二十五、曾经绊倒我的人，我让你一辈子起不来，曾经扶起我的人，我让你一辈子不倒下。\n\n二十六、我觉得人和人还是应该保持适当的距离感，尤其是我讨厌的人，建议阴阳相隔。\n\n二十七、你没权利看不惯我的生活方式，但你有权抠瞎自己的双眼。\n\n\n二十八、不去攀，不去比，不拿畜生气自己。\n\n二十九、我不管你多厉害，多牛逼，在我眼里，你只能算垃圾。\n\n三十、你不用管我照片和本人多大差距，是胖还是瘦，是高还是矮，要知道我以后的日子并不和你过。\n```\n\n\n<a href=\"https://baijiahao.baidu.com/s?id=1647695486114483809\" target=\"_blank\">怼人的霸气句子，越毒越好，没有之一！</a>\n```\n一、天下之大，大不过你缺的那块心眼。\n\n二、遇到你之前，我的世界是黑白的，遇到你之后，哇靠，全黑了。\n\n三、哥不是收破烂的，做不到让你随喊随到。\n\n\n四、我的皮肤之所以这么黑，是不想像你这样，白活一辈子。\n\n五、每个人都会犯贱，但请注意次数；每个人都会善变，但请注意速度。\n\n六、打你脸的时候，不要问我为什么打你，因为我给你糖的时候，你从来不会说谢谢。\n\n\n七、我管你圈子有多大，人脉有多广，在我面前，麻烦你好好说话，说我能听懂的人话。\n\n八、不要妄加评论我，你看到的，只是我选择让你看到的。\n\n九、你要给我点颜色看看，我就让你知道，花儿为什么这样红。\n\n\n十、离开就不要回来了，能走的都是垃圾和变心的狗。\n\n十一、虽然你身上喷了那种高档的香水味，但我还能隐约闻到一股子人渣味。\n\n十二、你别和我说话，因为我听不懂，在别人的眼中看来，我和一条猪在吵架是一件很愚蠢的事。\n\n\n十三、能知难而退是我的本事，用得着你在这指手画脚。碰不得的东西，最好别碰，惹不起我的人，最好别惹。\n\n十四、嫌我说话音大是吗，你不知道对狗就是用喊的吗？\n\n十五、曾以为你是一枝花，后来才知道，你是人海中得一粒渣。\n\n\n十六、既然找错人了还留你干嘛？既然已经分了你还找我干嘛？抱歉命里不缺狗。\n\n十七、没文化可以学，长得丑可以整，心眼坏可没法治。\n\n十八、长得好看的人才有青春，你只有青春痘！\n\n\n十九、总归有人看不惯我，我能怎样，百般讨好，还是杀人灭口。\n\n二十、脾气这玩意儿我控制不好，心没那么大面积，更照顾不了每个人的感受。\n\n二十一、你不当厨子可惜了，甩锅甩得那么厉害。\n\n\n二十二、我心眼有些小，但是不缺；我脾气很好，但不是没有。\n\n二十三、若你没有经历过我的旅程，就不要来批判我走的道路。\n\n二十四、你备胎无数，你感情不断，并不是因为你很迷人，而是你廉价又百搭。\n```\n\n很有内涵怼人句子\n```\n怼人不仅是瞎怼，有技巧有内涵有套路的句子，即不伤害人也不会不伤感情，这些句子大家都学学吧。\n\n一、很有内涵怼人句子\n1.有事钟无艳，无事夏迎春。\n2.你这人没啥特出众，就是面子够坚固。\n3.请不要用你拙劣的演技来侮辱我的智商。\n4.东方不亮西方亮，二逼啥样儿你啥样儿。\n5.带翅膀的也不一定是天使，他可能是鸟人。\n6.长得丑的我见多了，但长成你这样就太过分了啊。\n7.沉积千年的腐植质，科学家也不敢研究的原始物种。\n8.从来没有见过你这样的，都说NO了，还这样死皮赖脸地表白。\n9.爱情就像保护费，自己不争取，还想等别人送上门。\n10.你仗着大家觉得狗是人类的朋友，你就在这里跟我狂吗。\n\n11.你若一直在，我定一直伴； 你若有背叛，请你死远点。\n12.别人撞南墙选择的是回头，我撞南墙，选择的是把墙推到。\n13.我不做谁的公主，也不做谁的王妃，我要做自己的女王。\n14.别用你那盗版天使般的微笑朝着我，我怕我的胃会承受不起。\n15.宁愿身负肌肉盔甲过一辈子，也不愿一身赘肉走一遭。\n16.不要贸然评价我，你只知道我的名字，却不知道我的故事。\n17.说我垃圾可以，但前提是你要比我牛逼，不然你连垃圾都不如。\n18.走好自己的路，迈好自己的步，少理那些，背后说三道四的废物。\n19.如果能让我记得你一辈子的方式是恨，那么恭喜你，你做到了。\n20.你们城市人拽什么？我农村有几百亩地都没叫，吓傻了吗。\n\n二、怼人的套路句子\n1.我这人从不记仇,一般有仇当场我就报了。\n2.别在我的坟前哭。脏了我轮回的路。\n3.女人就象开水，既能温暖你的胸膛，也能烫伤你的嘴。\n4.那些因为一句话就破碎了关系的友谊，根本就是狗屁朋友。\n5.我就是我，不一样的烟火，我有权利情绪化，不是为你而活。\n6.不要把我想的太好，我既可以哭着说爱你，也可以笑着捅死你。\n7.你讨厌我关我屁事啊，说得好像你喜欢我，就能升华我的人生似的。\n\n\n8.每个人都会犯贱，但请注意次数；每个人都会善变，但请注意速度。\n\n\n9.你被什么保护，就被什么限制，能给你遮风挡雨，同样能让你暗无天日。\n10.昨天有人说你是傻逼，我上去就是一巴掌，玛德，这不废话吗。\n11.被狗咬了我们能咬回去吗？不能，不过我习惯用砖头拍死这条狗。\n20.一日不读书，无人看得出；一周不读书，开始会爆粗；一月不读书，智商输给猪。\n\n12.自己选择45°仰视别人，就休怪他人135°俯视着看你。\n13.永远年轻，永远装嫩，永远不知好歹，永远热泪盈眶。\n14.很多时候你只是某个人的练爱对象而非恋爱对象。\n15.你攒够四块五，我也攒够四块五，我们就可以去民政局结婚了。\n16.我爸面对我发胖一事发表了看法：没有韩红的命，还得了韩红的病。\n17.曾以为我是那崖畔的一枝花，后来才知道，不过是人海一粒渣。\n18.在职场中就应该像柯南那样，有一种我走到哪就让别人死到哪的霸气。\n19.现在你骂我，是因为你还不了解我，等你以后了解了我，你一定会动手打我的。\n\n\n三、怼人不伤感情的句子\n1.有多少坚强，是在强颜欢笑。\n2.最寒心的是，你比陌生人还陌生。\n3.父母的恩情，是一辈子都还不完的债。\n4.看不透的人最执着，执着的人最痛苦。\n5.活在当下，你会发现，有时候，物质真的很重要。\n6.有时候，面对着隔阂，所有的解释都是那么不堪一击。\n7.拿得起，放不下，才是生活，拿得起，放得下的是人生。\n8.别在分手的时候和我说：“其实你很好”。那你还甩我。\n9.我见过凤姐我都淡定着呢，就您，让我恨自己来到了地球上。\n10.男生都喜欢娇情的骚婊子，却错过了满口草泥马的好姑娘。\n\n11.我总是不明白一个问题，为什么会有人认为你是男的呢。\n12.我终于知道，世界为什么会闹饥荒了，因为有你的出现。\n13.人和猪的区别就是：猪一直是猪，而人有时却不是人。\n14.对我不满意请直接来跟我说，别到别人那里，去宣誓你无处安放的情绪。\n15.别和我装出你活的精彩，过的幸福，也别祝我幸福，你有那资格吗。\n16.男人出轨就像狗改不了吃屎，不要幻想他就此罢手，更不要听信誓言。\n17.真的没有什么，不过是当灰太狼打电话的时候，一起编制一个又一个谎言。\n18.给你点阳光你就灿烂，给你点洪水你就泛滥，给你点颜色你就开染房。\n19.谱又不是我的我为什么要靠？你对我不冷不热你说我为什么要对你热情。\n20.我做不到让所有人喜欢我，但是我知道你讨厌我，就让你越来越看我不爽。\n```\n","tags":["怼"]},{"title":"[包图网] 素材链接","url":"/2019/11/16//articles/2019/11/16/1573907248000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://ibaotu.com/sucai/870283.html\" target=\"_blank\">渐变简约卡片个人中心app界面</a>\n\n<a href=\"https://ibaotu.com/sucai/924990.html\" target=\"_blank\">蓝色2.5D时尚大气金融前台后台登录页面</a>\n\n<a href=\"https://ibaotu.com/sucai/875934.html\" target=\"_blank\">扁平时尚蓝色金融银行app手机UI主界面</a>\n\n<a href=\"https://ibaotu.com/sucai/1071758.html\" target=\"_blank\">蓝色科技感数据展示大数据监控可视化平台</a>\n\n<a href=\"https://ibaotu.com/sucai/17986887.html\" target=\"_blank\">深蓝大屏展示数据可视化UI界面</a>\n\n<a href=\"https://ibaotu.com/sucai/18064490.html\" target=\"_blank\">深蓝大屏展示后台数据可视化UI界面</a>\n\n<a href=\"https://ibaotu.com/sucai/18064490.html\" target=\"_blank\">以下推荐的首页数据展示比较全</a>\n\n<a href=\"https://ibaotu.com/sucai/1038876.html\" target=\"_blank\">列表页PSD</a>\n\n<a href=\"https://ibaotu.com/tupian/haibao.html\" target=\"_blank\">海报</a>\n\n<a href=\"https://ibaotu.com/sucai/101156.html?kwd=%E6%B5%B7%E6%8A%A5\" target=\"_blank\">海报 - 日式手绘清新晚安海报星空海报</a>\n\n<a href=\"https://ibaotu.com/sucai/964924.html\" target=\"_blank\">有地图</a>\n\n<a href=\"https://ibaotu.com/sucai/18355502.html\" target=\"_blank\">登录页</a>\n\n<a href=\"https://ibaotu.com/sucai/927136.html\" target=\"_blank\">（含方框）多彩扁平化系统网站后台网络监测后台图表</a>\n\n<a href=\"https://ibaotu.com/sucai/17933426.html\" target=\"_blank\">登录注册框2</a>\n\n<a href=\"https://ibaotu.com/sucai/18046127.html\" target=\"_blank\">登录注册框3</a>\n\n","tags":["包图网"]},{"title":"[vue] vue-element-admin组件大全","url":"/2019/11/16//articles/2019/11/16/1573907247000.html/","content":"```\n文件上传\nhttps://lmxdawn.github.io/vue-admin-java/#/components/upload\n\nvue-element-admin组件大全\nhttps://panjiachen.github.io/vue-element-admin/#/dashboard\n```\n\n","tags":["vue"]},{"title":"[vue] vue+","url":"/2019/11/16//articles/2019/11/16/1573907246000.html/","content":"\n```\nnpm i element-ui -S\n```\n\n<a href=\"http://www.pianshen.com/article/4311344204/\" target=\"_blank\">vue项目中使用layUI</a>\n<a href=\"http://www.pianshen.com/article/5932222677/\" target=\"_blank\">在vue项目中使用elementUI</a>\n","tags":["vue"]},{"title":"[springboot] websocket","url":"/2019/11/16//articles/2019/11/16/1573907245000.html/","content":"<a href=\"https://github.com/527515025/springBoot/tree/master/springWebSocket\" target=\"_blank\">websocket</a>\t\n","tags":["springboot"]},{"title":"[springboot] springboot-jpa系列","url":"/2019/11/16//articles/2019/11/16/1573907244000.html/","content":"<a href=\"https://github.com/icnws/spring-data-jpa-demo\" target=\"_blank\">一个关于Spring-data-JPA使用的demo</a>\n```\n1、Spring Data JPA系列：基本配置\n\n2、Spring Data JPA系列：继承的方法\n\n3、Spring Data JPA系列：创建查询（Query creation）\n\n4、Spring Data JPA系列：预定义查询(NamedQueries)\n\n5、Spring Data JPA系列：使用@Query注解（Using @Query）\n\n6、Spring Data JPA系列：使用Sort进行排序（Using Sort）\n\n7、Spring Data JPA系列：使用@Modifying修改（Modifying Queries）\n\n8、Spring Data JPA系列：应用查询提示（Applying query hints）\n\n9、Spring Data JPA系列：分页（Pageable）\n9.1、例子 https://www.cnblogs.com/hdwang/p/7843405.html\n\n10、Spring Data JPA系列：投影(Projection)的用法\n\n11、Spring Data JPA系列：数据更新（Update）\n\n12、Spring Data JPA系列：数据查询（Specification）（一）\n\n13、Spring Data JPA系列：数据查询（Specification）（二）\n\n14、Spring Boot整合Quartz实现定时任务表配置\n```\n","tags":["springboot"]},{"title":"[springboot] springdatajpa+vue框架","url":"/2019/11/16//articles/2019/11/16/1573907243000.html/","content":"\n<a href=\"https://gitee.com/wyjsworkspace/springdatajpa-vue-springboot\" target=\"_blank\">springdatajpa+vue框架</a>\n\n```\napi+web\n\n\napi的swagggr接口文档\n\n\nspringboot + springdata + vue + swagger2 + websocket\n\n\nweb登陆注册页\n首页\n账户权限\n集成分页工具\n日志\nexcel导入导出\n基本统计图表\n基本订单列表\n基本天气接口\n文件上传\n\n\nREADME.md文件内容\n（1）导入数据库数据\n（2）安装vue\n（3）启动工程\n（4）api文档地址\n（5）web地址\n（6）服务器配置\n```\n","tags":["springboot"]},{"title":"[springboot] vue-element-admin框架biu","url":"/2019/11/16//articles/2019/11/16/1573907242000.html/","content":"\n管理后台项目开发脚手架，基于vue-element-admin和springboot搭建，前后端分离方式开发和部署\n<a href=\"https://java.ctolib.com/CaiBaoHong-biu.html\" target=\"_blank\">链接</a>\n\n<a href=\"https://gitee.com/caibaohong/biu\" target=\"_blank\">biu</a>\n","tags":["springboot"]},{"title":"[springboot] session统计在线人数","url":"/2019/11/16//articles/2019/11/16/1573907241000.html/","content":"<a href=\"https://blog.csdn.net/xichengqc/article/details/87368213\" target=\"_blank\">SpringBoot集成SessionListener统计在线用户人数</a>\n\n<a href=\"https://github.com/xichengxml/woodencottage/tree/master/190125-listener\" target=\"_blank\">190125-listener</a>\n","tags":["springboot"]},{"title":"[springboot] QueryDSL+注解","url":"/2019/11/16//articles/2019/11/16/1573907240000.html/","content":"<a href=\"https://blog.csdn.net/phapha1996/article/details/83614975\" target=\"_blank\">QueryDSL+注解</a>\n","tags":["springboot"]},{"title":"[springboot] jpa分页查询","url":"/2019/11/16//articles/2019/11/16/1573907239000.html/","content":"<a href=\"https://www.cnblogs.com/hdwang/p/7843405.html\" target=\"_blank\">spring data jpa 分页查询</a>\n","tags":["springboot"]},{"title":"[springboot] demos","url":"/2019/11/16//articles/2019/11/16/1573907238000.html/","content":"<a href=\"https://github.com/xichengxml/woodencottage/tree/master/190125-listener\" target=\"_blank\">woodencottage</a>\n","tags":["springboot"]},{"title":"[springboot] 一个极简且完整的后台框架","url":"/2019/11/16//articles/2019/11/16/1573907237000.html/","content":"<a href=\"https://www.jianshu.com/p/871e70b3ad7c\" target=\"_blank\">Spring Boot 一个极简且完整的后台框架</a>\n\n","tags":["springboot"]},{"title":"[qt] 单片机","url":"/2019/11/16//articles/2019/11/16/1573907236000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n","tags":["qt"]},{"title":"[nginx] windows下使用nginx","url":"/2019/11/16//articles/2019/11/16/1573907234000.html/","content":"<a href=\"https://www.cnblogs.com/jiangwangxiang/p/8481661.html\" target=\"_blank\">windows下nginx的安装及使用</a>\n\n","tags":["nginx"]},{"title":"[mysql] 时间相减","url":"/2019/11/16//articles/2019/11/16/1573907233000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nunix_timestamp(t2) - unix_timestamp(t1)\n\nselect timediff(a,b) from test\n```\n","tags":["mysql"]},{"title":"[mysql] 除法","url":"/2019/11/16//articles/2019/11/16/1573907232000.html/","content":"<a href=\"https://blog.csdn.net/JGnewbie/article/details/81571333\" target=\"_blank\">mysql除法运算保留小数的用法</a>\n```\nselect convert(t/100,decimal(15,2)) as money from test\n```\n","tags":["mysql"]},{"title":"[mysql] 查询当天,本周,本月所有数据记录","url":"/2019/11/16//articles/2019/11/16/1573907231000.html/","content":"<a href=\"https://blog.csdn.net/weixin_44167913/article/details/94436378\" target=\"_blank\">Mysql查询当天,本周,本月所有数据记录</a>\n\n","tags":["mysql"]},{"title":"[mysql] distinct应用于2列","url":"/2019/11/16//articles/2019/11/16/1573907230000.html/","content":"<a href=\"https://blog.csdn.net/wild46cat/article/details/78715099\" target=\"_blank\">MySQL 的 DISTINCT 应用于2列</a>\n","tags":["mysql"]},{"title":"[html] 表格与列表","url":"/2019/11/16//articles/2019/11/16/1573907229000.html/","content":"<a href=\"https://www.cnblogs.com/yyhh/p/4208951.html\" target=\"_blank\">HTML表格与列表</a>\n","tags":["html"]},{"title":"[hibernate] dll注释","url":"/2019/11/16//articles/2019/11/16/1573907228000.html/","content":"<a href=\"https://www.cnblogs.com/hoojjack/p/6568920.html\" target=\"_blank\">SPRING中常用的注解（@ENTITY，@TABLE，@COLUMN，@REPOSITORY，@SERVICE）</a>\n\n<a href=\"https://www.cnblogs.com/javaxiaoxin/p/8279641.html\" target=\"_blank\">hibernate注解(自动建表如何有表DDL注释) -- Comment用法</a>\n```\n@Column(name=\"age\",columnDefinition=\"int(3) COMMENT '病人年龄 '\")\nprivate int age; \n```\n\n<a href=\"https://blog.csdn.net/qq_39996837/article/details/84717748\" target=\"_blank\">Spring boot 搭配 JPA 生成表注释 和 字段注释</a>\n```\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport org.hibernate.annotations.DynamicInsert;\nimport org.hibernate.annotations.DynamicUpdate;\n\nimport javax.persistence.*;\nimport java.io.Serializable;\n\nimport static javax.persistence.GenerationType.IDENTITY;\n\n@Entity\n@Table(name = \"account\", schema = \"\", catalog = \"\")\n@org.hibernate.annotations.Table(appliesTo = \"account\", comment = \"账户表\")\n@DynamicInsert\n@DynamicUpdate\n@NoArgsConstructor\n@AllArgsConstructor\n@Data\npublic class Account implements Serializable {\n\n\t@Id\n    @GeneratedValue(strategy = IDENTITY)\n    @Column(name = \"id\", unique = true, nullable = false)\n    private int id;\n\n}\n```\n\n<a href=\"https://blog.csdn.net/sswqzx/article/details/84337672\" target=\"_blank\">@Table 注解详解</a>\n常用的两个属性： \n1、name 用来命名 当前实体类 对应的数据库 表的名字 \n```\n@Table(name = \"tab_user\"）\n```\n\n\n```java\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\nimport org.hibernate.annotations.DynamicInsert;\nimport org.hibernate.annotations.DynamicUpdate;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\n/**\n * 文章表\n * @author Administrator\n *\n */\n@Table(name = \"a_article\")\n@org.hibernate.annotations.Table(appliesTo = \"a_article\", comment = \"文章表\")\n@DynamicInsert\n@DynamicUpdate\n@Entity\n@NoArgsConstructor\n@AllArgsConstructor\n@Data\npublic class Article implements Serializable {\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Integer id;\n\t\n\t@Column(columnDefinition = \"VARCHAR(40) COMMENT '标题'\")\n\tprivate String title;\n\t\n\t@Column(columnDefinition = \"VARCHAR(100) COMMENT '简介'\")\n\tprivate String intro;\n\t\n\t@Column(columnDefinition = \"TEXT COMMENT 'html内容'\")\n\tprivate String html;\n\t\n\t@Column(columnDefinition = \"VARCHAR(150) COMMENT '图片url'\")\n\tprivate String picUrl;\n\t\n\t@Column(columnDefinition = \"INT DEFAULT 0 COMMENT '排序分值'\")\n\tprivate Integer rank = 0;\n\t\n\t@Column(columnDefinition = \"INT DEFAULT 0 COMMENT '类型(1:常见问题,2:帮助文档,3:案例分析)'\")\n\tprivate Integer type = 0;\n\t\n\t@Column(columnDefinition = \"TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间'\")\n\tprivate Date gmtCreate;\n\t\n\t@Column(columnDefinition = \"DATETIME COMMENT '最后更新时间'\")\n\tprivate Date gmtUpdate;\n\t\n\t@Column(columnDefinition = \"INT DEFAULT 0 COMMENT '点击量'\")\n\tprivate Integer hitsCnt = 0;\n\t\n\t@Column(columnDefinition = \"INT DEFAULT 0 COMMENT '转发量'\")\n\tprivate Integer forwardCnt = 0;\n\t\n}\n```\n","tags":["hibernate"]},{"title":"[gradle] gradle转pom","url":"/2019/11/16//articles/2019/11/16/1573907227000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\nmaven 转 gradle\n```\ngradle init --type pom\n```\n\n<a href=\"https://blog.csdn.net/liyongzhi1992/article/details/81740723\" target=\"_blank\">gradle 转 maven</a>\n```\n#在build.gradle中增加以下内容(group，version，artifactId)\ngradle wrapper\ngradlew build\ngradle install\n\n#成功后将在build\\poms目录下生成pom-default.xml文件，把它复制到根目录下，改名成pom.xml即可\n```\n\n<a href=\"https://blog.csdn.net/qq_34696209/article/details/80867971\" target=\"_blank\">gradle和gradlew的区别</a>\n```\ngradle -v\ngradle wrapper\n```\n\n<a href=\"https://www.jianshu.com/p/db94d39478d6\" target=\"_blank\">简书gradle和gradlew的区别</a>\n在build.gradle中添加如下配置\n```\napply plugin: 'maven'\n\n//5.1版本之前\ntask writeNewPom << {\n    pom {\n        project {\n            inceptionYear '2018'\n            licenses {\n                license {\n                    name 'The Apache Software License, Version 2.0'\n                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    distribution 'repo'\n                }\n            }\n        }\n    }.writeTo(\"pom.xml\")\n}\n\n5.1版本之后\ntask writeNewPom {\n    pom {\n        project {\n            inceptionYear '2018'\n            licenses {\n                license {\n                    name 'The Apache Software License, Version 2.0'\n                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    distribution 'repo'\n                }\n            }\n        }\n    }.writeTo(\"pom.xml\")\n}\n```\n","tags":["gradle"]},{"title":"[gradle] gradle问题","url":"/2019/11/16//articles/2019/11/16/1573907226000.html/","content":"<a href=\"https://blog.csdn.net/jincheng_921/article/details/85053986\" target=\"_blank\">Gradle构建项目报错： Could not find method leftShift() for arguments</a>\n```\ntask hello << {\n     println 'Hello world!' \n}\n\n其中 << 在gradle 在5.1 之后废弃了   \n可以查看gradle 版本号\n\ngradle -v\n更改为 \n\ntask hello  {\n    doLast{\n      println 'Hello world!'\n    } \n}\n```","tags":["gradle"]},{"title":"[ai] 2.5d素材","url":"/2019/11/16//articles/2019/11/16/1573907225000.html/","content":"<a href=\"http://www.lanrentuku.com/vector/\" target=\"_blank\">懒人图库 矢量素材</a>\n\n<a href=\"http://www.lanrentuku.com/vector/animal/katongfuzaihaimiandejingyu-shiliang.html\" target=\"_blank\">卡通浮在海面的鲸鱼矢量素材</a>\n\n<a href=\"https://www.58pic.com/tupian/AIsucaiziti.html\" target=\"_blank\">千图网 含每天1次免费下载图片</a>\n\n<a href=\"https://www.bilibili.com/video/av59770593\" target=\"_blank\">AI绘制2.5D风格插画</a>\n2.5D海报教程，素材源文件自取\n```\n链接：\nhttps://pan.baidu.com/s/1iuimfzgH0ZBD0BuYqonVuw\n提取码：\nqff0\n```\n\n<a href=\"https://uiiiuiii.com/illustrator/121291159.html\" target=\"_blank\">2.5d等距视角风格城市场景渐变插画</a>\n\n<a href=\"https://ibaotu.com/tupian/25d.html\" target=\"_blank\">包图网2.5d</a>\n\n<a href=\"https://ibaotu.com/sucai/18275879.html?kwd=25D\" target=\"_blank\">蓝色2.5d企业后台数据后台登录界面</a>\n\n<a href=\"https://ibaotu.com/sucai/687474.html\" target=\"_blank\">卡通水彩手绘红色太阳</a>\n","tags":["ai"]},{"title":"[在线做题] 我要模考","url":"/2019/11/12//articles/2019/11/12/1573555151000.html/","content":"<a href=\"http://www.51mokao.com/testlist.html?id=50&q=&listtype=\" target=\"_blank\">我要模考51mokao</a>\n","tags":["在线做题"]},{"title":"[源码] 游戏","url":"/2019/11/12//articles/2019/11/12/1573555150000.html/","content":"<a href=\"https://www.mycodes.net/166/2.htm\" target=\"_blank\">源码之家</a>\n\n","tags":["源码"]},{"title":"[脑经急转弯] 题目","url":"/2019/11/12//articles/2019/11/12/1573555149000.html/","content":"<a href=\"http://www.cmiyu.com/njmy/\" target=\"_blank\">汉谜网</a>\n\n<a href=\"http://www.sohu.com/a/251471669_349082\" target=\"_blank\">34个脑筋急转弯，答对一个我给跪下！ </a>\n\n","tags":["脑经急转弯"]},{"title":"[qt] 热门项目","url":"/2019/11/12//articles/2019/11/12/1573555149000.html/","content":"<a href=\"https://gitee.com/feiyangqingyun\" target=\"_blank\">飞扬青云</a>\n\n<a href=\"https://pan.baidu.com/s/1bbL2ZughZAgfIGrexyN-9g\" target=\"_blank\">执行文件</a>\n```\n提取码：\nzkeh\n```\n","tags":["qt"]},{"title":"[qt] 免Cmake+Qt5.12+opencv4.0","url":"/2019/11/12//articles/2019/11/12/1573555148000.html/","content":"<a href=\"https://blog.csdn.net/qq_33474442/article/details/87074218\" target=\"_blank\">最简单的Qt5.12配置opencv4.0方法，免Cmake版本</a>\n<a href=\"https://gitee.com/sickle12138/OpenCV-MinGW-Build\" target=\"_blank\">OpenCV-MinGW-Build</a>\n<a href=\"https://www.jianshu.com/p/c244c9d01fe0\" target=\"_blank\">简书 Qt+OpenCV环境搭建</a>\n\n加入opencv相关头文件：\n```\n#include <opencv2/opencv.hpp>\n#include <opencv2/core/core.hpp>\n#include <opencv2/imgproc/imgproc.hpp>\n#include <opencv2/imgproc/imgproc.hpp>\n\n#include <opencv2/highgui/highgui.hpp>\n#include <opencv2/imgproc/imgproc_c.h>\n\n#include <opencv2/imgcodecs/imgcodecs_c.h>\n#include <opencv2/imgcodecs/imgcodecs.hpp>\n```\n\n<a href=\"https://blog.csdn.net/we34dfg/article/details/89296306\" target=\"_blank\">VS版本与opencv的版本对应关系</a>\n```\nVS版本（编辑器） opencv的版本\n\nVS2017(msvc2017) VC15\n\nVS2015(msvc2015) VC14\n\nVS2013 VC12\n\nVS2012 VC11\n\nVS2010 VC10\n```\n\n<a href=\"https://blog.csdn.net/keneyr/article/details/89019554\" target=\"_blank\">环境：win10，qtcreator，opencv，msvc2017，cdb.exe</a>\n<a href=\"https://blog.csdn.net/mars_xiaolei/article/details/78762698\" target=\"_blank\">OpenCV 命名空间</a>\n\n```\nOPENCVBUILD_PATH=G:/MyEtcs/opencv/opencv/opencvbuild\nINCLUDEPATH += $${OPENCVBUILD_PATH}/install/include\nLIBS += $${OPENCVBUILD_PATH}/install/x64/vc15/bin/opencv_*.dll\n\n#include <opencv2/opencv.hpp>\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <opencv2/imgproc.hpp>\nusing namespace cv;\n\n或\nOPENCVBUILD_PATH=G:/MyEtcs/opencv/opencv/opencvbuild\nINCLUDEPATH += $${OPENCVBUILD_PATH}/install/include/opencv2\nLIBS += $${OPENCVBUILD_PATH}/install/x64/vc15/bin/opencv_*.dll\n\n#include <opencv.hpp>\n#include <core/core.hpp>\n#include <highgui/highgui.hpp>\n#include <imgproc.hpp>\nusing namespace cv;\n```\n\n一些include\n```\n#include <opencv2/opencv.hpp>\n#include <opencv2/objdect/objdect.hpp>\n#include <opencv2/face/facerc.hpp>\n\n#Mat类属于core模块\n#include <opencv2/core/core.hpp>\n\nusing namespace std;\nusing namespace cv;\nusing namespace cv::face;\n```\n\n\n<a href=\"https://blog.csdn.net/Qin1999/article/details/89578589\" target=\"_blank\">error: 'IplImage' was not declared in this scope</a>\n```\n#include <opencv2/type_c.h>\n```\n\n<a href=\"https://blog.csdn.net/WangJiankun_ls/article/details/79470739\" target=\"_blank\">libpng warning: iCCP: known incorrect sRGB profile</a>\n```\nwindows\npngcrush -ow -rem allb -reduce file.png\n\nUbuntu16\nconvert infile.png outfile.png\n```\n\n\n<a href=\"https://blog.csdn.net/qq_28114615/article/details/83020491\" target=\"_blank\">关于QT下配置OpenCV3.4.0后出现 error: undefined reference to 'cv::xxx'的问题及解决方案</a>\n```\n建议直接使用\nhttps://github.com/huihut/OpenCV-MinGW-Build\n```\n\n<a href=\"https://blog.csdn.net/maitianpt/article/details/82691985\" target=\"_blank\">error: undefined reference to `cv::VideoCapture::isOpened() const'`</a>\n```\n缺少dll\nopencv_core\nopencv_highgui\nopencv_imgproc\nopencv_ml\nopencv_videoio\n```\n\n<a href=\"https://blog.csdn.net/qq_41807801/article/details/90319265\" target=\"_blank\">'CV_BGR2GRAY' was not declared in this scope错误</a>\n```\nCV_BGR2GRAY改为了COLOR_BGR2GRAY\n\n且所有都发生了变化需将CV改为COLOR\n```\n\n\n<a href=\"https://blog.csdn.net/u014546553/article/details/78781547\" target=\"_blank\">QT错误：collect2:ld returned 1 exit status</a>\n```\n1、编译成功的例子在后台执行，有时一闪而过，如果再次build ，则会提示上述错误。\n解决方法：打开任务管理器，找到相应的exe进程，关闭即可；或者直接关闭QtCreator。\n\n2、没有编译成功的情况下，最常见情况是程序本身需要include的头文件被遗漏了\n解决方法：细心查找基类所用的头文件，include之后即可。\n\n3、.h文件中相关的槽函数在cpp文件中没有定义\n解决方法：查找遗漏的槽函数，根据需要，具体的定义。(碰到过一回，很关键)\n\n4、.h文件中声明了全局变量，.cpp文件的函数里面使用了该全局变量\n解决方法：.cpp文件外面没有初始化全局变量，初始化即可\n\n5、假如引用了第三方库，而这个库没有被正确的链接，在有的ubuntu+QT版本上也报这个错\n```\n\n","tags":["qt"]},{"title":"[qt] .pro文件","url":"/2019/11/12//articles/2019/11/12/1573555147000.html/","content":"<a href=\"https://www.cnblogs.com/wyuzm/p/9594274.html\" target=\"_blank\">Qt之pro文件解析</a>\n","tags":["qt"]},{"title":"[h5游戏] 超级玛丽","url":"/2019/11/12//articles/2019/11/12/1573555145000.html/","content":"\n```\nhttps://www.html5tricks.com/html5-mario.html\nhttps://www.mycodes.net/166/7013.htm\nhttps://www.html5tricks.com/demo/html5-mario/index.html\n```\n\n<a href=\"http://files.cnblogs.com/Cson/cnGameJS_V1.0.rar\" target=\"_blank\">cnGameJS_V1.0.rar</a>\n","tags":["h5游戏"]},{"title":"[cocos2d] 游戏开发专栏","url":"/2019/11/12//articles/2019/11/12/1573555144000.html/","content":"<a href=\"https://blog.csdn.net/qq_27032631/article/category/9285569\" target=\"_blank\">从零开始-Cocos跑酷游戏</a>\n\n<a href=\"https://blog.csdn.net/jggyff/article/details/83775207\" target=\"_blank\">HTML5游戏实战 150行代码实现正面跑酷游戏</a>\n\n","tags":["cocos2d"]},{"title":"[ai] 2.5d图","url":"/2019/11/12//articles/2019/11/12/1573555143000.html/","content":"<a href=\"https://www.ui.cn/detail/459840.html\" target=\"_blank\">分分钟学会使用AI绘制2.5D图形教程</a>\n","tags":["ai"]},{"title":"[qt] 百度地图安卓应用","url":"/2019/11/08//articles/2019/11/08/1573220385000.html/","content":"<a href=\"https://github.com/melonbo/BaiduMap\" target=\"_blank\">QT开发安卓应用，调用百度地图</a>\n","tags":["qt"]},{"title":"[qt] 百度人脸识别","url":"/2019/11/08//articles/2019/11/08/1573220384000.html/","content":"<a href=\"https://blog.csdn.net/zbw1185/article/details/81814769\" target=\"_blank\">Qt+百度AI实现人脸识别之人脸检测</a>\n","tags":["qt"]},{"title":"[qt] 日历控件","url":"/2019/11/08//articles/2019/11/08/1573220383000.html/","content":"<a href=\"https://github.com/lxgsbqylbk/Qt_Calendar\" target=\"_blank\">Qt_Calendar</a>\n\n<a href=\"https://blog.csdn.net/chenxipu123/article/details/80521768\" target=\"_blank\">Qt自定义实现的日历控件</a>\n","tags":["qt"]},{"title":"[ui] wifi连接页","url":"/2019/11/08//articles/2019/11/08/1573216906000.html/","content":"<a href=\"\" target=\"_blank\"></a>\nwifi连接页\n```\nhttps://www.zcool.com.cn/work/ZMjc2MDg4MjA=.html\nhttps://www.zcool.com.cn/work/ZMjkwMjU0MzY=.html\n```\n","tags":["ui"]},{"title":"[react-native] StyleSheetAdapter的使用","url":"/2019/11/08//articles/2019/11/08/1573216905000.html/","content":"<a href=\"https://github.com/gegeyang0124/react-native-stylesheet-adapt\" target=\"_blank\">react-native-stylesheet-adapt</a>\n```\nStyleSheetAdapt.styleJsonAdaptConvert({ width:100, height:200 });\n```","tags":["react-native"]},{"title":"[qt-android] 二维码","url":"/2019/11/08//articles/2019/11/08/1573216904000.html/","content":"<a href=\"https://github.com/work4blue/qtqrcode\" target=\"_blank\">在QML中实现二唯码生成及扫描功能</a>\n\n","tags":["qt-android"]},{"title":"[qt] 音乐","url":"/2019/11/08//articles/2019/11/08/1573216903000.html/","content":"<a href=\"https://github.com/LeviInfinity/QQ-Music-With-Qt\" target=\"_blank\">QQ-Music-With-Qt</a>\n","tags":["qt"]},{"title":"[qt] 百度api语音","url":"/2019/11/08//articles/2019/11/08/1573216901000.html/","content":"qt 百度语音\n<a href=\"https://github.com/GavinDaicy/baiduSpeechTest\" target=\"_blank\">百度语音识别 + 合成 Demo C++/QT</a>\n","tags":["qt"]},{"title":"[qt] 百度api翻译","url":"/2019/11/08//articles/2019/11/08/1573216900000.html/","content":"<a href=\"https://github.com/ChunSource/QtTranSlateChinese\" target=\"_blank\">QtTranSlateChinese</a>\n","tags":["qt"]},{"title":"[qt] qt+百度","url":"/2019/11/08//articles/2019/11/08/1573216898000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt%E7%99%BE%E5%BA%A6&ref=simplesearch\" target=\"_blank\">github 百度</a>\n<a href=\"https://github.com/melonbo/BaiduMap\" target=\"_blank\">QT开发安卓应用，调用百度地图</a>\n","tags":["qt"]},{"title":"[qt] opencv颜色常量","url":"/2019/11/08//articles/2019/11/08/1573216896000.html/","content":"<a href=\"https://www.cnblogs.com/liu-jun/p/3457554.html\" target=\"_blank\">OpenCV 颜色空间转换参数CV_BGR2GRAY改变</a>\n\n```\n#include <opencv2/imgproc/imgproc_c.h>\n#include <opencv2/imgproc/imgproc.hpp>\n```\n\nOpenCV中imgproc.hpp\n```\nenum\n{\n    COLOR_BGR2BGRA =0,\n    COLOR_RGB2RGBA =COLOR_BGR2BGRA,\n\n    COLOR_BGRA2BGR =1,\n    COLOR_RGBA2RGB =COLOR_BGRA2BGR,\n\n    COLOR_BGR2RGBA =2,\n    COLOR_RGB2BGRA =COLOR_BGR2RGBA,\n\n    COLOR_RGBA2BGR =3,\n    COLOR_BGRA2RGB =COLOR_RGBA2BGR,\n\n    COLOR_BGR2RGB =4,\n    COLOR_RGB2BGR =COLOR_BGR2RGB,\n\n    COLOR_BGRA2RGBA =5,\n    COLOR_RGBA2BGRA =COLOR_BGRA2RGBA,\n\n    COLOR_BGR2GRAY =6,\n    COLOR_RGB2GRAY =7,\n    COLOR_GRAY2BGR =8,\n    COLOR_GRAY2RGB =COLOR_GRAY2BGR,\n    COLOR_GRAY2BGRA =9,\n    COLOR_GRAY2RGBA =COLOR_GRAY2BGRA,\n    COLOR_BGRA2GRAY =10,\n    COLOR_RGBA2GRAY =11,\n\n    COLOR_BGR2BGR565 =12,\n    COLOR_RGB2BGR565 =13,\n    COLOR_BGR5652BGR =14,\n    COLOR_BGR5652RGB =15,\n    COLOR_BGRA2BGR565 =16,\n    COLOR_RGBA2BGR565 =17,\n    COLOR_BGR5652BGRA =18,\n    COLOR_BGR5652RGBA =19,\n\n    COLOR_GRAY2BGR565 =20,\n    COLOR_BGR5652GRAY =21,\n\n    COLOR_BGR2BGR555 =22,\n    COLOR_RGB2BGR555 =23,\n    COLOR_BGR5552BGR =24,\n    COLOR_BGR5552RGB =25,\n    COLOR_BGRA2BGR555 =26,\n    COLOR_RGBA2BGR555 =27,\n    COLOR_BGR5552BGRA =28,\n    COLOR_BGR5552RGBA =29,\n\n    COLOR_GRAY2BGR555 =30,\n    COLOR_BGR5552GRAY =31,\n\n    COLOR_BGR2XYZ =32,\n    COLOR_RGB2XYZ =33,\n    COLOR_XYZ2BGR =34,\n    COLOR_XYZ2RGB =35,\n\n    COLOR_BGR2YCrCb =36,\n    COLOR_RGB2YCrCb =37,\n    COLOR_YCrCb2BGR =38,\n    COLOR_YCrCb2RGB =39,\n\n    COLOR_BGR2HSV =40,\n    COLOR_RGB2HSV =41,\n\n    COLOR_BGR2Lab =44,\n    COLOR_RGB2Lab =45,\n\n    COLOR_BayerBG2BGR =46,\n    COLOR_BayerGB2BGR =47,\n    COLOR_BayerRG2BGR =48,\n    COLOR_BayerGR2BGR =49,\n\n    COLOR_BayerBG2RGB =COLOR_BayerRG2BGR,\n    COLOR_BayerGB2RGB =COLOR_BayerGR2BGR,\n    COLOR_BayerRG2RGB =COLOR_BayerBG2BGR,\n    COLOR_BayerGR2RGB =COLOR_BayerGB2BGR,\n\n    COLOR_BGR2Luv =50,\n    COLOR_RGB2Luv =51,\n    COLOR_BGR2HLS =52,\n    COLOR_RGB2HLS =53,\n\n    COLOR_HSV2BGR =54,\n    COLOR_HSV2RGB =55,\n\n    COLOR_Lab2BGR =56,\n    COLOR_Lab2RGB =57,\n    COLOR_Luv2BGR =58,\n    COLOR_Luv2RGB =59,\n    COLOR_HLS2BGR =60,\n    COLOR_HLS2RGB =61,\n\n    COLOR_BayerBG2BGR_VNG =62,\n    COLOR_BayerGB2BGR_VNG =63,\n    COLOR_BayerRG2BGR_VNG =64,\n    COLOR_BayerGR2BGR_VNG =65,\n\n    COLOR_BayerBG2RGB_VNG =COLOR_BayerRG2BGR_VNG,\n    COLOR_BayerGB2RGB_VNG =COLOR_BayerGR2BGR_VNG,\n    COLOR_BayerRG2RGB_VNG =COLOR_BayerBG2BGR_VNG,\n    COLOR_BayerGR2RGB_VNG =COLOR_BayerGB2BGR_VNG,\n\n    COLOR_BGR2HSV_FULL = 66,\n    COLOR_RGB2HSV_FULL = 67,\n    COLOR_BGR2HLS_FULL = 68,\n    COLOR_RGB2HLS_FULL = 69,\n\n    COLOR_HSV2BGR_FULL = 70,\n    COLOR_HSV2RGB_FULL = 71,\n    COLOR_HLS2BGR_FULL = 72,\n    COLOR_HLS2RGB_FULL = 73,\n\n    COLOR_LBGR2Lab = 74,\n    COLOR_LRGB2Lab = 75,\n    COLOR_LBGR2Luv = 76,\n    COLOR_LRGB2Luv = 77,\n\n    COLOR_Lab2LBGR = 78,\n    COLOR_Lab2LRGB = 79,\n    COLOR_Luv2LBGR = 80,\n    COLOR_Luv2LRGB = 81,\n\n    COLOR_BGR2YUV = 82,\n    COLOR_RGB2YUV = 83,\n    COLOR_YUV2BGR = 84,\n    COLOR_YUV2RGB = 85,\n\n    COLOR_BayerBG2GRAY = 86,\n    COLOR_BayerGB2GRAY = 87,\n    COLOR_BayerRG2GRAY = 88,\n    COLOR_BayerGR2GRAY = 89,\n\n    //YUV 4:2:0 formats family\n    COLOR_YUV2RGB_NV12 = 90,\n    COLOR_YUV2BGR_NV12 = 91,\n    COLOR_YUV2RGB_NV21 = 92,\n    COLOR_YUV2BGR_NV21 = 93,\n    COLOR_YUV420sp2RGB = COLOR_YUV2RGB_NV21,\n    COLOR_YUV420sp2BGR = COLOR_YUV2BGR_NV21,\n\n    COLOR_YUV2RGBA_NV12 = 94,\n    COLOR_YUV2BGRA_NV12 = 95,\n    COLOR_YUV2RGBA_NV21 = 96,\n    COLOR_YUV2BGRA_NV21 = 97,\n    COLOR_YUV420sp2RGBA = COLOR_YUV2RGBA_NV21,\n    COLOR_YUV420sp2BGRA = COLOR_YUV2BGRA_NV21,\n\n    COLOR_YUV2RGB_YV12 = 98,\n    COLOR_YUV2BGR_YV12 = 99,\n    COLOR_YUV2RGB_IYUV = 100,\n    COLOR_YUV2BGR_IYUV = 101,\n    COLOR_YUV2RGB_I420 = COLOR_YUV2RGB_IYUV,\n    COLOR_YUV2BGR_I420 = COLOR_YUV2BGR_IYUV,\n    COLOR_YUV420p2RGB = COLOR_YUV2RGB_YV12,\n    COLOR_YUV420p2BGR = COLOR_YUV2BGR_YV12,\n\n    COLOR_YUV2RGBA_YV12 = 102,\n    COLOR_YUV2BGRA_YV12 = 103,\n    COLOR_YUV2RGBA_IYUV = 104,\n    COLOR_YUV2BGRA_IYUV = 105,\n    COLOR_YUV2RGBA_I420 = COLOR_YUV2RGBA_IYUV,\n    COLOR_YUV2BGRA_I420 = COLOR_YUV2BGRA_IYUV,\n    COLOR_YUV420p2RGBA = COLOR_YUV2RGBA_YV12,\n    COLOR_YUV420p2BGRA = COLOR_YUV2BGRA_YV12,\n\n    COLOR_YUV2GRAY_420 = 106,\n    COLOR_YUV2GRAY_NV21 = COLOR_YUV2GRAY_420,\n    COLOR_YUV2GRAY_NV12 = COLOR_YUV2GRAY_420,\n    COLOR_YUV2GRAY_YV12 = COLOR_YUV2GRAY_420,\n    COLOR_YUV2GRAY_IYUV = COLOR_YUV2GRAY_420,\n    COLOR_YUV2GRAY_I420 = COLOR_YUV2GRAY_420,\n    COLOR_YUV420sp2GRAY = COLOR_YUV2GRAY_420,\n    COLOR_YUV420p2GRAY = COLOR_YUV2GRAY_420,\n\n    //YUV 4:2:2 formats family\n    COLOR_YUV2RGB_UYVY = 107,\n    COLOR_YUV2BGR_UYVY = 108,\n    //COLOR_YUV2RGB_VYUY = 109,\n    //COLOR_YUV2BGR_VYUY = 110,\n    COLOR_YUV2RGB_Y422 = COLOR_YUV2RGB_UYVY,\n    COLOR_YUV2BGR_Y422 = COLOR_YUV2BGR_UYVY,\n    COLOR_YUV2RGB_UYNV = COLOR_YUV2RGB_UYVY,\n    COLOR_YUV2BGR_UYNV = COLOR_YUV2BGR_UYVY,\n\n    COLOR_YUV2RGBA_UYVY = 111,\n    COLOR_YUV2BGRA_UYVY = 112,\n    //COLOR_YUV2RGBA_VYUY = 113,\n    //COLOR_YUV2BGRA_VYUY = 114,\n    COLOR_YUV2RGBA_Y422 = COLOR_YUV2RGBA_UYVY,\n    COLOR_YUV2BGRA_Y422 = COLOR_YUV2BGRA_UYVY,\n    COLOR_YUV2RGBA_UYNV = COLOR_YUV2RGBA_UYVY,\n    COLOR_YUV2BGRA_UYNV = COLOR_YUV2BGRA_UYVY,\n\n    COLOR_YUV2RGB_YUY2 = 115,\n    COLOR_YUV2BGR_YUY2 = 116,\n    COLOR_YUV2RGB_YVYU = 117,\n    COLOR_YUV2BGR_YVYU = 118,\n    COLOR_YUV2RGB_YUYV = COLOR_YUV2RGB_YUY2,\n    COLOR_YUV2BGR_YUYV = COLOR_YUV2BGR_YUY2,\n    COLOR_YUV2RGB_YUNV = COLOR_YUV2RGB_YUY2,\n    COLOR_YUV2BGR_YUNV = COLOR_YUV2BGR_YUY2,\n\n    COLOR_YUV2RGBA_YUY2 = 119,\n    COLOR_YUV2BGRA_YUY2 = 120,\n    COLOR_YUV2RGBA_YVYU = 121,\n    COLOR_YUV2BGRA_YVYU = 122,\n    COLOR_YUV2RGBA_YUYV = COLOR_YUV2RGBA_YUY2,\n    COLOR_YUV2BGRA_YUYV = COLOR_YUV2BGRA_YUY2,\n    COLOR_YUV2RGBA_YUNV = COLOR_YUV2RGBA_YUY2,\n    COLOR_YUV2BGRA_YUNV = COLOR_YUV2BGRA_YUY2,\n\n    COLOR_YUV2GRAY_UYVY = 123,\n    COLOR_YUV2GRAY_YUY2 = 124,\n    //COLOR_YUV2GRAY_VYUY = COLOR_YUV2GRAY_UYVY,\n    COLOR_YUV2GRAY_Y422 = COLOR_YUV2GRAY_UYVY,\n    COLOR_YUV2GRAY_UYNV = COLOR_YUV2GRAY_UYVY,\n    COLOR_YUV2GRAY_YVYU = COLOR_YUV2GRAY_YUY2,\n    COLOR_YUV2GRAY_YUYV = COLOR_YUV2GRAY_YUY2,\n    COLOR_YUV2GRAY_YUNV = COLOR_YUV2GRAY_YUY2,\n\n    // alpha premultiplication\n    COLOR_RGBA2mRGBA = 125,\n    COLOR_mRGBA2RGBA = 126,\n\n    COLOR_RGB2YUV_I420 = 127,\n    COLOR_BGR2YUV_I420 = 128,\n    COLOR_RGB2YUV_IYUV = COLOR_RGB2YUV_I420,\n    COLOR_BGR2YUV_IYUV = COLOR_BGR2YUV_I420,\n\n    COLOR_RGBA2YUV_I420 = 129,\n    COLOR_BGRA2YUV_I420 = 130,\n    COLOR_RGBA2YUV_IYUV = COLOR_RGBA2YUV_I420,\n    COLOR_BGRA2YUV_IYUV = COLOR_BGRA2YUV_I420,\n    COLOR_RGB2YUV_YV12 = 131,\n    COLOR_BGR2YUV_YV12 = 132,\n    COLOR_RGBA2YUV_YV12 = 133,\n    COLOR_BGRA2YUV_YV12 = 134,\n\n    COLOR_COLORCVT_MAX = 135\n};\n```\n","tags":["qt"]},{"title":"[qt] opencv刷脸登录","url":"/2019/11/08//articles/2019/11/08/1573216895000.html/","content":"<a href=\"https://github.com/huihut/FaceLogin\" target=\"_blank\">使用 OpenCV 和 Qt 实现人脸（刷脸）登录</a>\n","tags":["qt"]},{"title":"[qt] .pro文件LIBS用法详解","url":"/2019/11/08//articles/2019/11/08/1573216894000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n.pro文件LIBS用法详解\nhttps://blog.csdn.net/qq_33266987/article/details/79544715\n\n.pro文件 LIBS用法\nhttps://blog.csdn.net/weixin_32819579/article/details/84303361\n```","tags":["qt"]},{"title":"[mysql] 巧妙利用help_topic表把以逗号分隔的字符串转换成行","url":"/2019/11/08//articles/2019/11/08/1573216892000.html/","content":"<a href=\"https://blog.csdn.net/hfsaini/article/details/86477371\" target=\"_blank\">MySQL巧妙利用help_topic表把以逗号分隔的字符串转换成行</a>\n```sql\nselect substring_index(substring_index('82,83,84,85,86',',',help_topic_id+1),',',-1) as Id\nfrom mysql.help_topic\nwhere help_topic_id<(length('82,83,84,85,86')-length(replace('82,83,84,85,86',',',''))+1);\n```\n\n\n查询当月天数\n```sql\nSELECT day(LAST_DAY(CURDATE()))\n```\n\n```sql\nselect * from (\nselect substring_index(substring_index('1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31',',',help_topic_id+1),',',-1) as id from mysql.help_topic where help_topic_id<31\n) C\n```","tags":["mysql"]},{"title":"[mysql] 获取指定时间","url":"/2019/11/08//articles/2019/11/08/1573216891000.html/","content":"<a href=\"https://www.jb51.net/article/132425.htm\" target=\"_blank\">mysql 获取昨天日期、今天日期、明天日期以及前一个小时和后一个小时的时间</a>\n","tags":["mysql"]},{"title":"[jq] 动态拼接option","url":"/2019/11/08//articles/2019/11/08/1573216890000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n$.ajax({\n    url : contextPath +\"/getOptions\",\n    dataType : 'json',\n    type : 'post',\n    async : false,\n    complete : function(XHR, TS) {\n        var returnObj = eval('(' + XHR.responseText + ')');\n        var t = \"<option value='-1'>请选择</option>\";\n        for (var i = 0; i < returnObj.length; i++) {\n            t += '<option value=\"' + returnObj[i].id + '\">' +  returnObj[i].name + '</option>'\n        }\n        $(\"#targetId\").empty();\n        $(\"#targetId\").append(t);\n    }\n});\n\nform.render();\n```\n","tags":["jq"]},{"title":"[echarts] 同一页面四个图表切换的js数据交互","url":"/2019/11/08//articles/2019/11/08/1573216889000.html/","content":"<a href=\"https://www.cnblogs.com/ting6/p/9725443.html\" target=\"_blank\">echarts同一页面四个图表切换的js数据交互</a>\n","tags":["echarts"]},{"title":"[springboot] 使用百度地图api功能显示位置","url":"/2019/11/08//articles/2019/11/08/1573216659000.html/","content":"<a href=\"https://www.cnblogs.com/lmyau/p/7736269.html\" target=\"_blank\">jQuery在线引用地址</a>\n<a href=\"https://blog.csdn.net/qq_40147863/article/details/83117202\" target=\"_blank\">Bootstrap 在线引用</a>\n```\n<link rel=\"stylesheet\" href=\"http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css\">\n\n<script src=\"http://libs.baidu.com/jquery/2.1.4/jquery.min.js\"></script>\n<script src=\"http://cdn.bootcss.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\n```\n\n<a href=\"https://blog.csdn.net/qq_30337695/article/details/52677827\" target=\"_blank\">使用百度地图api功能显示位置</a>\n<a href=\"https://gitee.com/cjproject/parking-admin-map\" target=\"_blank\">parking-admin-map</a>\n","tags":["springboot"]},{"title":"[springboot] thymeleaf的使用","url":"/2019/11/08//articles/2019/11/08/1573216658000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_31615049/article/details/84261216\" target=\"_blank\">springboot项目中 使用thymeleaf如何用html引用一些静态资源</a>\n<a href=\"https://www.jianshu.com/p/b258b3b50920\" target=\"_blank\">Thymeleaf实现一张页面引入另一张HTML文件</a>\n<a href=\"https://blog.csdn.net/qq_22771739/article/details/82261883\" target=\"_blank\">Thymeleaf导入其他html(th:replace & th:include)</a>\n","tags":["springboot"]},{"title":"[qt] 旋转窗口","url":"/2019/11/08//articles/2019/11/08/1573216657000.html/","content":"<a href=\"https://blog.csdn.net/GoForwardToStep/article/details/55224578\" target=\"_blank\">Qt 之 模仿 QQ登陆界面——旋转窗口篇</a>\n","tags":["qt"]},{"title":"[qt] 列表控件","url":"/2019/11/08//articles/2019/11/08/1573216656000.html/","content":"<a href=\"https://github.com/lsyefficient/Navigation\" target=\"_blank\">列表控件 Navigation</a>\n","tags":["qt"]},{"title":"[mysql] group_by的使用","url":"/2019/11/08//articles/2019/11/08/1573216655000.html/","content":"<a href=\"https://www.jianshu.com/p/8b135d373df1\" target=\"_blank\">SQL中GROUP BY用法示例</a>\n","tags":["mysql"]},{"title":"[ui] 设计规范","url":"/2019/11/08//articles/2019/11/08/1573213285000.html/","content":"<a href=\"http://www.shui-mai.com/tag/chicunguifan/\" target=\"_blank\">UI设计者</a>\n\n","tags":["ui"]},{"title":"[springboot] querydsl","url":"/2019/11/08//articles/2019/11/08/1573213284000.html/","content":"\n```\nspringboot querydsl\n```\n","tags":["springboot"]},{"title":"[js] input监听回车","url":"/2019/11/08//articles/2019/11/08/1573213283000.html/","content":"<a href=\"https://www.cnblogs.com/antonyhubei/p/6290140.html\" target=\"_blank\">JS监听input框的回车事件、属性值改变事件</a>\n```\n// 判断是不是回车\n$(\"input.search\").keypress(function (e) {\n    // 兼容写法\n    e = e || window.event;\n    key = e.keyCode || e.which || e.charCode;\n    if (key == 13) {\n        alert(\"发送AJAX请求\")\n    }\n});\n```\n","tags":["js"]},{"title":"[jq] 城市选择","url":"/2019/11/08//articles/2019/11/08/1573213282000.html/","content":"<a href=\"https://www.17sucai.com/pins/tag/1128.html\" target=\"_blank\">城市选择</a>\n","tags":["jq"]},{"title":"[css] 搜索框","url":"/2019/11/08//articles/2019/11/08/1573213281000.html/","content":"<a href=\"https://blog.csdn.net/point9/article/details/82995212\" target=\"_blank\">HTML实例之搜索栏（附源码）</a>\n<a href=\"https://www.cnblogs.com/smile-xin/p/11390319.html\" target=\"_blank\">HTML+CSS 简易搜索框</a>\n\n","tags":["css"]},{"title":"[PyQt5] Python2.7+PyQt5+Pycharm","url":"/2019/11/08//articles/2019/11/08/1573211701000.html/","content":"<a href=\"https://www.cnblogs.com/beyang/p/9504581.html\" target=\"_blank\">PyCharm搭建pyqt5开发环境</a>\n<a href=\"https://www.cnblogs.com/pywjh/p/9835931.html\" target=\"_blank\">关于PyQt5，在pycharm上的安装步骤及使用技巧</a>\n<a href=\"https://blog.csdn.net/qq_27009517/article/details/71555310\" target=\"_blank\">Python2.7+PyQt5的安装</a>\n```\nPyQt5只有针对Python3的安装包而没有针对Python2.7的\n```\n<a href=\"https://www.cnblogs.com/Javauser/p/8951860.html\" target=\"_blank\">PyQt5开发环境配置并使用</a>\n\n安装失败问题\n1\n```\nERROR: Could not find a version that satisfies the requirement python-qt5\n\npip install python-qt5 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\n```\n2\n```\nThis application failed to start because it could not find or load the Qt platform plugin \"windows\".\n\n参考\nhttps://blog.csdn.net/lt2635996510/article/details/85393691\n\n$ProjectFileDir$\n\n1、 打开File—>Settings—>External Tools,点击加号来添加自己的工具\nName:QtDesigner\nGroup:Qt\nPrograms:X:\\python27\\Lib\\site-packages\\PyQt5\\designer.exe\nWorking directory：$ProjectFileDir$\n```\n\n1 安装python-qt5\n```\ncmd进入Python27/Scripts目录，执行\npip install python-qt5 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com\npip install opencv-python\npip install opencv-contrib-python\n```\n\n2 添加PyUIC\n```\nProgram\nX:/Python27/python.exe\n\nArguments\n-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py\n\nWorking directory\n$FileDir$\n```\n\n3 添加Pyrcc（2.7版本找不到pyrcc5.exe）\n```\n#PyQt5安装目录中找不到designer.exe与pyrcc5.exe 问题\n#地址：https://pypi.org/project/pyqt5-tools/5.9.0.1.2/#files\npip install pyqt5-tools\n\nProgram\nX:/Python27/Lib/site-packages/PyQt5/pyrcc5.exe\n\nArguments\n$FileName$ -o $FileNameWithoutExtension$_rc.py\n\nWorking directory\n$FileDir$\n```\n\n4 添加assistant\n```\nProgram\nX:/Python27/Lib/site-packages/PyQt5/assistant.exe\n\nWorking directory\n$FileDir$\n```\n\n5 添加linguist\n```\nProgram\nX:/Python27/Lib/site-packages/PyQt5/linguist.exe\n\nWorking directory\n$FileDir$\n```\n\n\n```\n可能缺少复制\nlibEGL.dll\n\n需要把\nD:\\Qt\\Qt5.2.0\\5.2.0\\msvc2010\\plugins\\platforms\\qwindows.dll\n带红色的复制到你的exe执行文件目录\n就是platforms文件夹\n里面一个qwindows.dll\n\n```","tags":["PyQt5"]},{"title":"[mysql] 统计数据","url":"/2019/11/04//articles/2019/11/04/1572872974000.html/","content":"<a href=\"https://www.jb51.net/article/133943.htm\" target=\"_blank\">mysql 查询当天、本周,本月,上一个月的数据</a>\n","tags":["mysql"]},{"title":"[redis] 入门","url":"/2019/11/04//articles/2019/11/04/1572872973000.html/","content":"<a href=\"https://www.jianshu.com/p/56999f2b8e3b\" target=\"_blank\">Redis【入门】就这一篇！</a>\n\n<a href=\"https://www.runoob.com/redis/redis-install.html\" target=\"_blank\">菜鸟教程redis安装</a>\n\n","tags":["redis"]},{"title":"[qt] opencv专栏","url":"/2019/11/04//articles/2019/11/04/1572872971000.html/","content":"<a href=\"https://blog.csdn.net/weixin_41695564/category_7582441.html\" target=\"_blank\">行歌er OpenCV</a>\n","tags":["qt"]},{"title":"[opencv] w3school","url":"/2019/11/04//articles/2019/11/04/1572872970000.html/","content":"<a href=\"https://www.w3cschool.cn/opencv/\" target=\"_blank\">opencv</a>\n\n","tags":["opencv"]},{"title":"[mpvue] demos","url":"/2019/11/04//articles/2019/11/04/1572872969000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=mpvue&ref=simplesearch\" target=\"_blank\">github mpvue</a>\n\n<a href=\"https://github.com/KuangPF/mpvue-weui\" target=\"_blank\">mpvue-weui</a>\n```\n用 vue 写小程序，基于 mpvue 框架重写 weui\n\n1. git clone\ngit clone https://github.com/KuangPF/wxapp-vue.git\n\n2. 安装依赖\nnpm install\n\n3. 启动程序\nnpm run dev\n\n4. 预览\n打开微信开发者工具，新建项目，将目录指向 /dist 即可\n```\n\n<a href=\"https://github.com/mpvue/awesome-mpvue\" target=\"_blank\">awesome-mpvue</a>\n```\n组件\nmpvue-toast - toast 组件\nmpvue-wxParse - 富文本组件\nmpvue-slide - 图片滑动组件\nmpvue-echarts - 图表组件\nwe-cropper - 图片裁剪组件\nmpvue-animated-number - 数字更新滚动动画组件\nmpvue-picker - 小程序选择组件\nmpvue-markdown-parser - A markdown parser for mpvue\nmpvue-img-load - 图片预加载组件\nmpvue-calendar - 日历组件\n\n示例\nIT之家Lite - IT之家\ntodolist - todo list\nmpvue-ts-demo - 用 ts 写 mpvue\nmpvue-douban - 豆瓣电影\nmpvue-cnode - CNode 社区\nvue-mpvue-ChatRobot - 聊天机器人\nmpvue-iview-weapp -基于 mpvue 导入 iview-weapp\nmpvue-jithub - Mini program for Github, built by mpvue\n外卖小程序 Demo - 类似美团外卖的 UI 和 UE\nwordpress博客微信小程序 - wordpress 博客小程序\nmpvue-market - 基于 mpvue 的小程序营销组件，支持：大转盘、刮刮乐、老虎机、水果机、摇一摇、手势解锁\n```\n\n<a href=\"https://github.com/Meituan-Dianping/mpvue/issues/21\" target=\"_blank\">mpvue项目征集</a>\n\nmpvue版 —— H5 和 微信小程序同时开发 数独游戏\n<a href=\"https://github.com/Aimee1608/wxH5sudoku469\" target=\"_blank\">wxH5sudoku469</a>\n```\n# 安装依赖（注意查看package.json里面模块的安装版本号）\nnpm install\n\n# 小程序运行\nnpm run dev\n\n# H5运行\nnpm run devH5\n\n# 小程序打包（打包到dist目录)\nnpm run build\n\n# H5打包（打包到distH5目录)\nnpm run buildH5\n```\n\n基于mpvue的网易严选商城\n```\n前端：mpvue；\n后端：Node、koa2、mysql、knex.js 操作数据库。\n后台代码已上线腾讯云\nhttps://github.com/heyushuo/mpvue-shop\nhttps://github.com/heyushuo/mpvue-shop-node\n```\n\n\n```\n前端mpvue🚀后端nodejs🔋+thinkjs+mysql📂微信小程序商城\n```\n<a href=\"https://github.com/yllg/mpvue-xbyjShop\" target=\"_blank\">mpvue-xbyjShop</a>\n","tags":["mpvue"]},{"title":"[qt] 沙师弟专栏","url":"/2019/11/04//articles/2019/11/04/1572804994000.html/","content":"<a href=\"https://blog.csdn.net/u014597198/article/category/7092994\" target=\"_blank\">Demo小锦集</a>\n","tags":["qt"]},{"title":"[qt] QMediaPlayer","url":"/2019/11/04//articles/2019/11/04/1572804992000.html/","content":"<a href=\"https://blog.csdn.net/itas109/article/details/83829396\" target=\"_blank\">QT使用QMediaPlayer + QVideoWidget播放视频文件</a>\n```\nQT += multimedia multimediawidgets\n```\n","tags":["qt"]},{"title":"[PyQt5] QCameraInfo","url":"/2019/11/04//articles/2019/11/04/1572804991000.html/","content":"<a href=\"https://blog.csdn.net/itas109/article/details/83829396\" target=\"_blank\">QT使用QMediaPlayer + QVideoWidget播放视频文件</a>\n```\nQCameraInfo\n```","tags":["PyQt5"]},{"title":"[PyQt5] ubuntu环境搭建","url":"/2019/11/04//articles/2019/11/04/1572804989000.html/","content":"<a href=\"https://www.cnblogs.com/laizhenghong2012/p/8438429.html\">PyQt5开发环境搭建</a>\n```\n#注意：PyQt 5.10以上的版本在Python 3.6中有BUG，PyQt 5.10版本是没有问题的。在使用pip3安装时可以指定版本为5.10，使用以下命令：\n\nsudo pip3 install pyqt5==5.10 -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n","tags":["PyQt5"]},{"title":"[PyQt5] github","url":"/2019/11/04//articles/2019/11/04/1572804987000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=PyQt5&ref=simplesearch\" target=\"_blank\">github PyQt5</a>\n\n<a href=\"https://github.com/cxinping/PyQt5\" target=\"_blank\">《PyQt5快速开发与实战》配套代码</a>\n","tags":["PyQt5"]},{"title":"[ps] 把风景装进瓶子","url":"/2019/11/04//articles/2019/11/04/1572804986000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.bilibili.com/video/av56897942/\" target=\"_blank\">把风景装进瓶子里</a>\n```\n素材链接：\nhttps://pan.baidu.com/s/17kuPIGr0bCgh1VyppA4L2w \n提取码：\npgit\n\nPS玻璃瓶中的世界创意合成\nhttps://www.bilibili.com/video/av56897942/\n```\n","tags":["ps"]},{"title":"[c++] 含xeasy图形库的生命游戏","url":"/2019/11/04//articles/2019/11/04/1572804985000.html/","content":"<a href=\"https://github.com/omega-Lee/Life_Game\" target=\"_blank\">github Life_Game</a>\n","tags":["c++"]},{"title":"[android] 百度地点输入提示服务","url":"/2019/11/03//articles/2019/11/03/1572739215000.html/","content":"<a href=\"https://blog.csdn.net/Next_Second/article/details/78375752\" target=\"_blank\">百度地点输入提示服务</a>\n<a href=\"https://github.com/YoungBear/BaiduDemo\" target=\"_blank\">github BaiduDemo</a>\n","tags":["android"]},{"title":"[android] 百度文字识别","url":"/2019/11/03//articles/2019/11/03/1572739214000.html/","content":"<a href=\"https://blog.csdn.net/Next_Second/article/details/79569582\" target=\"_blank\">百度文字识别官方Demo</a>\n\n<a href=\"https://pan.baidu.com/s/1a_csInjAV6j4CiS-Aeg10g\" target=\"_blank\">Demo 生成的 APK</a>\n```\n提取码:\nv788\n```\n<a href=\"https://github.com/YoungBear/OCRDemo\" target=\"_blank\">OCRDemo</a>\n","tags":["android"]},{"title":"[android] 日期选择器DatePickerDialog","url":"/2019/11/03//articles/2019/11/03/1572739213000.html/","content":"<a href=\"https://blog.csdn.net/Next_Second/article/details/79239697\" target=\"_blank\">Android日期选择器DatePickerDialog的使用</a>\n```\nhttps://github.com/YoungBear/Hello/blob/master/app/src/main/java/com/example/hello/activity/DatePickerActivity.java\n```\n","tags":["android"]},{"title":"[人脸识别] 原理","url":"/2019/11/03//articles/2019/11/03/1572739040000.html/","content":"<a href=\"https://zhuanlan.zhihu.com/p/24567586\" target=\"_blank\">知乎 人脸识别的原理</a>\n","tags":["人脸识别"]},{"title":"[python3] 爬取百度图片","url":"/2019/11/03//articles/2019/11/03/1572739039000.html/","content":"<a href=\"https://blog.csdn.net/hust_bochu_xuchao/article/details/79431145\" target=\"_blank\">python3 爬取百度图片</a>\n\n```\npip install opencv-python\n```\n\n```\n# coding=utf-8\n\"\"\"根据搜索词下载百度图片\"\"\"\nimport re\nimport sys\nimport urllib\n \nimport requests\n\ndef getPage(keyword,page,n):\n    page=page*n\n    keyword=urllib.parse.quote(keyword, safe='/')\n    url_begin= \"http://image.baidu.com/search/flip?tn=baiduimage&ie=utf-8&word=\"\n    url = url_begin+ keyword + \"&pn=\" +str(page) + \"&gsm=\"+str(hex(page))+\"&ct=&ic=0&lm=-1&width=0&height=0\"\n    return url\n \ndef get_onepage_urls(onepageurl):\n    try:\n        html = requests.get(onepageurl).text\n    except Exception as e:\n        print(e)\n        pic_urls = []\n        return pic_urls\n    pic_urls = re.findall('\"objURL\":\"(.*?)\",', html, re.S)\n    return pic_urls\n \n \ndef down_pic(pic_urls):\n    \"\"\"给出图片链接列表, 下载所有图片\"\"\"\n    for i, pic_url in enumerate(pic_urls):\n        try:\n            pic = requests.get(pic_url, timeout=15)\n            string =str(i + 1) + '.jpg'\n            with open(string, 'wb') as f:\n                f.write(pic.content)\n                print('成功下载第%s张图片: %s' % (str(i + 1), str(pic_url)))\n        except Exception as e:\n            print('下载第%s张图片时失败: %s' % (str(i + 1), str(pic_url)))\n            print(e)\n            continue\n \n \nif __name__ == '__main__':\n    keyword = '狗'  # 关键词, 改为你想输入的词即可, 相当于在百度图片里搜索一样\n    page_begin=0\n    page_number=30\n    image_number=3\n    all_pic_urls = []\n    while 1:\n        if page_begin>image_number:\n            break\n        print(\"第%d次请求数据\",[page_begin])\n        url=getPage(keyword,page_begin,page_number)\n        onepage_urls= get_onepage_urls(url)\n        page_begin += 1\n \n        all_pic_urls.extend(onepage_urls)\n \n    down_pic(list(set(all_pic_urls)))\n\n```\n","tags":["python3"]},{"title":"[python] 人脸识别","url":"/2019/11/03//articles/2019/11/03/1572739038000.html/","content":"<a href=\"https://www.jianshu.com/p/ea3c57b6c5e1\" target=\"_blank\">【子豪兄】十行Python代码实现人脸识别</a>\n\n<a href=\"https://www.cnblogs.com/jyxbk/p/7677877.html\" target=\"_blank\">python三步实现人脸识别</a>\n<a href=\"https://github.com/ageitgey/face_recognition\" target=\"_blank\">face_recognition</a>\n\n在树莓派2+上安装\n```\nhttps://gist.github.com/ageitgey/1ac8dbe8572f3f533df6269dab35df65\n```\n\n<a href=\"https://www.jianshu.com/p/dce1498ef0ee\" target=\"_blank\">人工智能之Python人脸识别技术，人人都能做识别！</a>\n```\nhttps://www.continuum.io/downloads\nconda\n\nconda install -c conda-forge dlib=19.4\n\nsudo apt-get install build-essential cmake\nsudo apt-get install libgtk-3-dev\nsudo apt-get install libboost-all-dev\n\npip install numpy\npip install scipy\npip install opencv-python\npip install dlib\n\n#安装face_recognition过程中会自动安装 numpy、scipy 等\npip install face_recognition\n```\n","tags":["python"]},{"title":"[python] 爬虫集合","url":"/2019/11/03//articles/2019/11/03/1572739037000.html/","content":"爬虫集合\n<a href=\"https://github.com/facert/awesome-spider\" target=\"_blank\">awesome-spider</a>\n\n用python编写的爬虫项目集合\n<a href=\"https://github.com/yhangf/PythonCrawler\" target=\"_blank\">PythonCrawler</a>\n\n","tags":["python"]},{"title":"[python] 录屏","url":"/2019/11/03//articles/2019/11/03/1572739036000.html/","content":"\n```\n录制摄像头和录制屏幕，两者之间可以轻易切换\n```\n<a href=\"https://github.com/ilinxiao/record-camera-and-screen\" target=\"_blank\">record-camera-and-screen</a>\n\n\n<a href=\"https://sourceforge.net/projects/screencapturer/\" target=\"_blank\">录制屏幕工具Screen Capture Recorder</a>\n```\npip install -r requirements.txt -i https://pypi.douban.com/simple\n\npip install cx_freeze\n```\n<a href=\"http://www.jrsoftware.org/isinfo.php\" target=\"_blank\">打包工具Inno Setup</a>\n```\n#运行\npython recordwindow.py\n\n#编译\npython csetup.py build\n```\n","tags":["python"]},{"title":"[python] 打开摄像头","url":"/2019/11/03//articles/2019/11/03/1572739035000.html/","content":"\n<a href=\"https://blog.csdn.net/Mr_None/article/details/81532194\" target=\"_blank\">python打开摄像头</a>\n```\nimport cv2\n\ncamera = cv2.VideoCapture(0)\ncv2.namedWindow('MyCamera')\n\nwhile True:\n    success, frame = camera.read()\n    cv2.imshow('MyCamera',frame)\n    if cv2.waitKey(1) & 0xff == ord('q'):\n        break\n\ncv2.destroyWindow('MyCamera')\ncamera.release()\n```\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=python+%E6%91%84%E5%83%8F%E5%A4%B4&ref=simplesearch\" target=\"_blank\">github python 摄像头</a>\n","tags":["python"]},{"title":"[python] python+tensorflow+opencv实现人脸识别","url":"/2019/11/03//articles/2019/11/03/1572739034000.html/","content":"<a href=\"https://blog.csdn.net/qq_42633819/article/details/81191308\" target=\"_blank\">利用python、tensorflow、opencv实现人脸识别</a>\n\n```\n您必须从以下 TensorFlow 类型中选择其一来进行安装：\n\n仅支持 CPU 的 TensorFlow。\n如果您的系统没有 NVIDIA® GPU，则必须安装此版本。请注意，此版本的TensorFlow 通常更容易安装（用时通常在 5 或 10 分钟内），所以即使您拥有 NVIDIA GPU，我们也建议先安装此版本。预编译的二进制文件将使用 AVX 指令。\n\n支持 GPU 的 TensorFlow。\nTensorFlow 程序在 GPU 上的运行速度通常要比在 CPU 上快得多。因此，如果您的系统配有满足以下所示先决条件的 NVIDIA® GPU，并且您需要运行性能至关重要的应用，则最终应安装此版本。\n```\n\n```\n总结：\n\nUSB摄像头一个；\n\npython  --  3.5.X\n\ntensorflow\n\nopencv  --  3.3.1\n\nkeras   --  2.0.X\n\nsklearn  -- 0.19.0\n```\n\n<a href=\"https://opencv.org/releases.html\" target=\"_blank\">opencv下载</a>\n```\n人脸检测器（默认）：\nhaarcascade_frontalface_default.xml\n\n人脸检测器（快速Harr）：\nhaarcascade_frontalface_alt2.xml\n\n人脸检测器（侧视）：\nhaarcascade_profileface.xml\n\n眼部检测器（左眼）：\nhaarcascade_lefteye_2splits.xml\n\n眼部检测器（右眼）：\nhaarcascade_righteye_2splits.xml\n\n嘴部检测器：\nhaarcascade_mcs_mouth.xml\n\n鼻子检测器：\nhaarcascade_mcs_nose.xml\n\n身体检测器：\nhaarcascade_fullbody.xml\n\n人脸检测器（快速LBP）：\nlbpcascade_frontalface.xml\n```\n\n","tags":["python"]},{"title":"[python] python+opencv训练一个人脸识别器","url":"/2019/11/03//articles/2019/11/03/1572739033000.html/","content":"```\n基于python-opencv调用摄像头的实时人脸检测和识别\n```\n<a href=\"https://github.com/yinchuandong/opencv-face\" target=\"_blank\">opencv-face</a>\n\n<a href=\"https://www.mkshell.com/python-opencv-train-face-recognizer/\" target=\"_blank\">python+opencv训练一个人脸识别器</a>\n```\npip install pillow\npip install opencv-contrib-python\n```\n\ntrainner.py\n```\nimport cv2\nimport os\nimport numpy as np\nfrom PIL import Image\n\n# recognizer = cv2.createLBPHFaceRecognizer()\ndetector = cv2.CascadeClassifier(\"haarcascade_frontalface_default.xml\")\nrecognizer = cv2.face.LBPHFaceRecognizer_create()\n\n\ndef get_images_and_labels(path):\n    image_paths = [os.path.join(path, f) for f in os.listdir(path)]\n    face_samples = []\n    ids = []\n\n    for image_path in image_paths:\n        image = Image.open(image_path).convert('L')\n        image_np = np.array(image, 'uint8')\n        if os.path.split(image_path)[-1].split(\".\")[-1] != 'jpg':\n            continue\n        image_id = int(os.path.split(image_path)[-1].split(\".\")[1])\n        faces = detector.detectMultiScale(image_np)\n        for (x, y, w, h) in faces:\n            face_samples.append(image_np[y:y + h, x:x + w])\n            ids.append(image_id)\n\n    return face_samples, ids\n\n\nfaces, Ids = get_images_and_labels('dataSet')\nrecognizer.train(faces, np.array(Ids))\nrecognizer.save('trainner/trainner.yml')\n```\n","tags":["python"]},{"title":"[python] python+opencv+dlib实现人脸识别","url":"/2019/11/03//articles/2019/11/03/1572739032000.html/","content":"<a href=\"https://blog.csdn.net/lucky404/article/details/88184350\" target=\"_blank\">python人脸识别</a>\n\n```\n人脸识别的主要算法\n其核心算法是 欧式距离算法使用该算法计算两张脸的面部特征差异，一般在0.6 以下都可以被认为是同一张脸\n\n人脸识别的主要步骤\n1、获得人脸图片\n2、将人脸图片转为128D的矩阵(这个也就是人脸特征的一种数字化表现)\n3、保存人脸128D的特征到文件中\n4、获取其他人脸转为128D特征通过欧式距离算法与我们保存的特征对比，如果差距在0.6以下就说明两张脸差距比较小\n\n```\n\n源代码\n<a href=\"https://github.com/pythondever/python-dlib-face-recognition\" target=\"_blank\">python-dlib-face-recognition</a>\n","tags":["python"]},{"title":"[python] keras图像识别","url":"/2019/11/03//articles/2019/11/03/1572739031000.html/","content":"<a href=\"https://blog.csdn.net/lucky404/article/details/84581885\" target=\"_blank\">keras图像识别</a>\n<a href=\"https://github.com/pythondever/keras-image-recognition\" target=\"_blank\">keras-image-recognition</a>\n\n```\n训练/测试数据下载\n链接：\nhttps://pan.baidu.com/s/1f1N01Qv5N6UouiOJS4ZCDg\n提取码：\nycks\n\n链接：\nhttps://pan.baidu.com/s/1BSPDaqoQv_7kQifA9rbzMA\n提取码：\nk7ej\n\n下载完成后需要放到downloads目录下面解压\n```\n\n\n```\npip install -r requirements.txt\n\n#模型的可视化需要安装graphviz\nsudo apt-get install graphviz\nsudo yum install graphviz\n```\n\n运行项目\n```\ncd spiders/recognition/train\npython train.py\n```\n","tags":["python"]},{"title":"[PyQt5] 人脸录入、检测、识别","url":"/2019/11/03//articles/2019/11/03/1572739030000.html/","content":"<a href=\"https://github.com/douxiao/detect_face_pyqt5\" target=\"_blank\">detect_face_pyqt5</a>\n```\n基于python-contrib-opencv,dlib,pyqt5。\n实现电脑端摄像头读取视频，实时人脸录入，人脸检测，人脸识别等功能\n```\n","tags":["PyQt5"]},{"title":"[qt] 赛车计分系统","url":"/2019/11/03//articles/2019/11/03/1572739029000.html/","content":"<a href=\"https://github.com/EmilyZhangzzy/CyclingRank\" target=\"_blank\">一个自行车赛计分系统和展示界面</a>\n<a href=\"https://github.com/EmilyZhangzzy/CyclingRank/blob/master/%E8%87%AA%E8%A1%8C%E8%BD%A6%E8%B5%9B%E8%A7%84%E5%88%99.docx\" target=\"_blank\">自行车赛规则.docx</a>\n","tags":["qt"]},{"title":"[java] 基于用户自适应的音乐推荐软件","url":"/2019/11/03//articles/2019/11/03/1572739028000.html/","content":"<a href=\"https://github.com/EmilyZhangzzy/MusicSelect\" target=\"_blank\">MusicSelect</a>\n```\n基于用户自适应的音乐推荐软件\n```\n\n<a href=\"https://github.com/EmilyZhangzzy/MusicSelectServer\" target=\"_blank\">MusicSelectServer</a>\n```\nMusicSelect的服务器，基于Tomcat MyEclipse\n```\n","tags":["java"]},{"title":"[PyQt5] 入门","url":"/2019/11/02//articles/2019/11/02/1572706762000.html/","content":"<a href=\"https://blog.csdn.net/qq_41377419/article/details/82379818\" target=\"_blank\">Python + PyCharm + PyQt5</a>\n\n<a href=\"http://code.py40.com/pyqt5/\" target=\"_blank\">PyQt5中文教程</a>\n\n<a href=\"https://sourceforge.net/projects/pyqt/\" target=\"_blank\">PyQt下载</a>\n\n<a href=\"https://www.jianshu.com/p/ef71566ff8bb\" target=\"_blank\">pyqt5入门教程</a>\n\n<a href=\"https://www.riverbankcomputing.com/static/Docs/PyQt5/installation.html\" target=\"_blank\">PyQt5官方安装文档</a>\n```\n#pip install PyQt5\npip install pyqt5 pyqt5-tools\n```\n\n<a href=\"https://blog.csdn.net/weixin_41929524/article/details/81456308\" target=\"_blank\">\nPython制作小软件——1. 安装并使用PyQt5进行界面设计</a>\n","tags":["PyQt5"]},{"title":"[PyQt5] 基于pyqt5的人脸识别软件界面UI设计","url":"/2019/11/02//articles/2019/11/02/1572706761000.html/","content":"<a href=\"https://github.com/omega-Lee/PyQt5_Face_Recognition\" target=\"_blank\">基于pyqt5的人脸识别软件界面UI设计</a>\n","tags":["PyQt5"]},{"title":"[法律] 劳动合同续签问题","url":"/2019/11/02//articles/2019/11/02/1572703688000.html/","content":"<a href=\"https://baijiahao.baidu.com/s?id=1609459322782211430\" target=\"_blank\">合同到期后，公司没续签合同也没要求离职，员工接下来该如何做？</a>\n","tags":["法律"]},{"title":"[养猪] 养猪攻略","url":"/2019/11/02//articles/2019/11/02/1572703687000.html/","content":"<a href=\"https://baike.baidu.com/item/%E5%85%BB%E7%8C%AA/481494\" target=\"_blank\">养猪攻略</a>","tags":["养猪"]},{"title":"[法律] 律师365","url":"/2019/11/02//articles/2019/11/02/1572703686000.html/","content":"<a href=\"http://www.64365.com/\" target=\"_blank\">律师365</a>\n","tags":["法律"]},{"title":"[危害] 泡面","url":"/2019/11/02//articles/2019/11/02/1572703114000.html/","content":"<a href=\"https://baike.baidu.com/item/%E6%9D%AF%E9%9D%A2/6165204\" target=\"_blank\">方便面的危害</a>\n```\n方便面里的食品添加剂分别起着增色、漂白、调节胃口、防止氧化、延长保存期等多种作用，这些食品添加剂按规定都是可以使用的。因此，偶尔吃方便面是无关紧要的。但是，一些人经常拿来当早餐或懒得下厨房时把它当饭吃，更有甚者长年累月吃方便面，这就有碍身体健康了。\n油脂：为了延长保存期，大多数品种的方便面都用油炸过，油脂经过氧化后变成氧化脂质。它积存于血管或其他器官中，形成老化现象，加速人的老化速度，引起动脉硬化，易导致脑溢血、心脏病、肾脏病等疾病。\n食盐：一包方便面含盐约6克，而一个人一天食盐的摄取量以6克为宜，所以方便面含盐量明显偏高。经常吃方便面会因摄入食盐过多而易患高血压，且损害肾脏。\n磷酸盐：磷酸盐添加剂可以改善方便面的味道。但是，人体摄磷太多会使体内的钙无法充分吸收、利用，容易引起骨折、牙齿脱落和骨骼变形。\n防氧化剂：方便面从制成到消费者，短时为一两个月，长时竟达一两年，其中添加的防氧化剂和其他化学药品因长期贮存，受环境影响，已经在慢慢变质，食后对人体有一定的害处。\n\n为此，有关专家建议最好少吃方便面。为了防止和降低方便面对人体的危害，吃方便面时，将泡方便面的汤倒掉，再兑上开水或别的汤，以减少其中的盐及其他有害物质。另外，吃方便面时可加些含维生素丰富的蔬菜，如菠菜、青椒等，以便冲淡各种添加剂对人体的危害。\n```\n\n","tags":["危害"]},{"title":"[算法] 网站","url":"/2019/11/02//articles/2019/11/02/1572703113000.html/","content":"<a href=\"https://www.cxyxiaowu.com/\" target=\"_blank\">用动画的形式呈现解LeetCode题目的思路</a>\n<a href=\"https://github.com/kevinlq/LeetCodeAnimation\" target=\"_blank\">github LeetCodeAnimation</a>\n","tags":["算法"]},{"title":"[动画短片] 制作软件","url":"/2019/11/02//articles/2019/11/02/1572703112000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n画背景用\n<a href=\"https://blog.csdn.net/weixin_44076370/article/details/84979159\" target=\"_blank\">clip studio paint</a>\n\n画动画用\n<a href=\"\" target=\"_blank\">toonboom harmony</a>\n\n\n录音的用\n<a href=\"https://www.bilibili.com/video/av51537514/\" target=\"_blank\">Cubase</a>\n","tags":["动画短片"]},{"title":"[动画短片] 制作","url":"/2019/11/02//articles/2019/11/02/1572703111000.html/","content":"<a href=\"https://www.bilibili.com/video/av54253720\" target=\"_blank\">［春天的信使］动画制作过程</a>\n\n<a href=\"https://search.bilibili.com/all?keyword=%E5%8A%A8%E7%94%BB%E7%9F%AD%E7%89%87\" target=\"_blank\">动画短片</a>\n\n<a href=\"https://www.bilibili.com/video/av30075688\" target=\"_blank\">【3dmax游戏角色动画师教程】全79课 入门到精通 系统全方位学习</a>\n```\nwww.zszsstudio.com\n课件下载\n链接：\nhttps://pan.baidu.com/s/1DsYekmnA8xOsgr7Uwcol1w\n密码：\n5s2q\n```\n\n<a href=\"https://www.zcool.com.cn/u/985697\" target=\"_blank\">站酷作品 动画师</a>\n\n<a href=\"https://www.zcool.com.cn/work/ZMzE5MzcwMjQ=.html\" target=\"_blank\">站酷作品 ae制作 动画短片</a>\n\n\n<a href=\"https://github.com/kingarthas37/may-3d-animate-work\" target=\"_blank\">may-3d-animate-work</a>\n\n\n","tags":["动画短片"]},{"title":"[动画短片] 萌芽熊DooroBear","url":"/2019/11/02//articles/2019/11/02/1572703110000.html/","content":"<a href=\"https://www.zcool.com.cn/u/16309906\" target=\"_blank\">萌芽熊DooroBear</a>\n","tags":["动画短片"]},{"title":"[动画短片] 春天的信使","url":"/2019/11/02//articles/2019/11/02/1572703109000.html/","content":"<a href=\"https://www.bilibili.com/video/av51537514/\" target=\"_blank\">春天的信使</a>\n\n","tags":["动画短片"]},{"title":"[ui] web后台设计","url":"/2019/11/02//articles/2019/11/02/1572703108000.html/","content":"\n浅蓝\n<a href=\"https://www.zcool.com.cn/work/ZMzU3NzQ3Njg=.html\" target=\"_blank\">后台</a>\n\n深黑\n<a href=\"https://www.zcool.com.cn/work/ZMzg1NjAyMzY=.html\" target=\"_blank\">后台</a>\n\n暗蓝侧边\n<a href=\"https://www.zcool.com.cn/work/ZMzg3Njk0MjA=.html\" target=\"_blank\">后台</a>\n\n暗蓝\n<a href=\"https://www.zcool.com.cn/work/ZMzg1OTkyMTY=.html\" target=\"_blank\">后台</a>","tags":["ui"]},{"title":"[stm32] 专栏","url":"/2019/11/02//articles/2019/11/02/1572703107000.html/","content":"<a href=\"https://blog.csdn.net/lbd321/article/category/6872710\" target=\"_blank\">STM32f103zet6战舰开发板学习笔记</a>\n\n<a href=\"https://blog.csdn.net/lbd321/article/details/72718865\" target=\"_blank\">基于STM32wifi小车制作(三)</a>\n\n","tags":["stm32"]},{"title":"[springboot] 饼图","url":"/2019/11/02//articles/2019/11/02/1572702916000.html/","content":"<a href=\"https://blog.csdn.net/jy02268879/article/details/81161275\" target=\"_blank\">Spring Boot整合Echarts绘制静态数据柱状图、饼图</a>\n\n<a href=\"https://www.cnblogs.com/wholeworld/p/10228858.html\" target=\"_blank\">在echarts中自定义直方图bar上悬浮透明窗文本内容</a>\n","tags":["springboot"]},{"title":"[ps] ps横向拉伸","url":"/2019/11/02//articles/2019/11/02/1572702915000.html/","content":"<a href=\"https://gitee.com/feiyangqingyun/QWidgetDemo\" target=\"_blank\">ps横向拉伸</a>\n\n\n","tags":["ps"]},{"title":"[ai] 2.5D插画","url":"/2019/11/02//articles/2019/11/02/1572702913000.html/","content":"<a href=\"https://www.bilibili.com/video/av25217843/\" target=\"_blank\">2.5D立体插画零基础晋级大神篇（第一周第一课时）</a>\n\n<a href=\"https://so.ooopic.com/search-322e3564-0-0_0_pres_0__2_ooo_0_1_.html\" target=\"_blank\">我图网 2.5D</a>\n\n<a href=\"https://www.bilibili.com/video/av32701016\" target=\"_blank\">UI-APP教程：国庆来临赶紧做个APP启动页压压惊</a>\n```\n1、AI软件打造2.5D场景字体；\n2、AI软件绘制彩色飘带效果；\n3、PS软件搭建APP启动页面。\n```\n\n<a href=\"https://search.bilibili.com/all?keyword=2.5d\" target=\"_blank\">哔哩哔哩 搜索 2.5d</a>\n```\n```\n\n<a href=\"https://www.bilibili.com/video/av22836879\" target=\"_blank\">AI立体2.5D插画课程</a>\n<a href=\"https://www.bilibili.com/video/av40403145\" target=\"_blank\">【AI教程】不看后悔系列！非常好看易操作的2.5D字体教程！！！</a>\n","tags":["ai"]},{"title":"[qt] 基于Qt+ffmpeg+opengl开发跨平台安卓实时投屏软件","url":"/2019/11/02//articles/2019/11/02/1572702540000.html/","content":"<a href=\"https://blog.csdn.net/rankun1/article/details/87970523\" target=\"_blank\">基于Qt+ffmpeg+opengl开发跨平台安卓实时投屏软件</a>\n```\n\n```","tags":["qt"]},{"title":"[qt] 实现系统托盘","url":"/2019/11/01//articles/2019/11/01/1572566107000.html/","content":"<a href=\"https://blog.csdn.net/u013704336/article/details/41900945\" target=\"_blank\">Qt实现系统托盘</a>\n<a href=\"https://blog.csdn.net/u013704336/article/details/49532649\" target=\"_blank\">Qt个性化系统托盘的实现(电脑管家)</a>\n","tags":["qt"]},{"title":"[qt] 博客","url":"/2019/11/01//articles/2019/11/01/1572566106000.html/","content":"<a href=\"https://blog.csdn.net/rankun1\" target=\"_blank\">Barry__</a>\n<a href=\"https://blog.csdn.net/rankun1/article/details/87970523\" target=\"_blank\">基于Qt ffmpeg opengl开发跨平台安卓实时投屏软件</a>\n","tags":["qt"]},{"title":"[qt] 局域网通话","url":"/2019/11/01//articles/2019/11/01/1572566105000.html/","content":"```\n一个基于Qt局域网文字、语音聊天工具\n```\n<a href=\"https://github.com/EmilyZhangzzy/Watermelon_Chat\" target=\"_blank\">Watermelon_Chat</a>\n```\n先编译运行\nserver\n\n然后在code/WatermelonChat目录下新建文件serverIP.txt，编辑内容为本机局域网ip\n```\n\n<a href=\"https://blog.csdn.net/One_L_Star/article/details/80864839\" target=\"_blank\">Qt实现简易局域网通信（一）</a>\n<a href=\"https://blog.csdn.net/One_L_Star/article/details/80868793\" target=\"_blank\">Qt实现简易局域网通信（二）</a>\n","tags":["qt"]},{"title":"[qt] 人脸识别","url":"/2019/11/01//articles/2019/11/01/1572565330000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\nOpenCV+QT小例子\n```\n<a href=\"https://blog.csdn.net/CSDN_SXL/article/details/50601168\" target=\"_blank\">QT5+OpenCV人脸识别</a>\n<a href=\"https://github.com/ghsxl/FaceCV.git\" target=\"_blank\">FaceCV</a>\n\n<a href=\"https://blog.csdn.net/sinat_31425585/article/details/80728073\" target=\"_blank\">人脸识别实战之用QT做点事（二）：做一个人脸检测界面</a>\n\n\n人脸识别签到Qt+OpenCV\n<a href=\"https://github.com/hanxi/check_system\" target=\"_blank\">check_system</a>\n\n```\n人脸识别签到:C/S架构,采用opencv的人脸识别库\n\n网络模块\n使用Qt自带的网络库实现客户端和服务端数据传输.网络协议格式是自己定义的.网络协议采用配置文件格式, 用protInitTool工具可以将profile.txt文件生成protInit.h文件.\n\n协议用c++的双层map保存.为了实现协议支持字符串和整形两种数据类型,还专门实现了autoType.就是一个autoType.h,因为个人感觉使用 c++自带的字符串类对协议模块来说太重了,就自己实现了个简单的string.\n\n日志模块\n支持html格式和txt格式\n\n客户端\n使用Qt做的ui.\n\n服务端\n使用了sqlite.实现sqlitedbtool自动生成代码sqlitedb.cpp操作数据库表.\n\n编译\n使用cmake\n```\n\n<a href=\"https://blog.csdn.net/Young__Fan/article/details/81385612\" target=\"_blank\">基于SeetaFace+VS2017+Qt的人脸识别</a>\n\n<a href=\"https://github.com/YoungFan1993/SeetaFace-VS2017-Qt\" target=\"_blank\">SeetaFace-VS2017-Qt</a>\n\n```\n智能会议室人脸识别签到\n```\n<a href=\"https://github.com/MRXY001/EasyMeeting_Desktop\" target=\"_blank\">EasyMeeting_Desktop</a>\n\n人脸识别签到Qt+OpenCV\n<a href=\"https://github.com/hanxi/check_system\" target=\"_blank\">check_system</a>","tags":["qt"]},{"title":"[qt] 百度AI实现人脸识别之人脸检测","url":"/2019/11/01//articles/2019/11/01/1572565329000.html/","content":"<a href=\"https://blog.csdn.net/zbw1185/article/details/81814769#_220\" target=\"_blank\">Qt+百度AI实现人脸识别之人脸检测</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 基于zigbee和stm32的智能家居系统","url":"/2019/11/01//articles/2019/11/01/1572565326000.html/","content":"<a href=\"https://github.com/kevinlq/SmartHome-Qt\" target=\"_blank\">SmartHome-Qt</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 安防监控","url":"/2019/11/01//articles/2019/11/01/1572565325000.html/","content":"\n```\n基于QT的网络视频监控系统\n```\n<a href=\"https://github.com/muxiaozi/LiveCamera\" target=\"_blank\">客户端 - LiveCamera</a>\n<a href=\"https://github.com/EMSD1701-01/WebCamera\" target=\"_blank\">服务端 - LiveCamera</a>\n\n\n```\nQT嵌入式实现监控，曲线绘制，视频图像显示，tcp/udp通信，Share内存通信等\n```\n<a href=\"https://github.com/Ranpop/QT-Monitor\" target=\"_blank\">QT-Monitor</a>\n\n```\n基于CTP和Qt的可视化期货监控系统\n```\n<a href=\"https://github.com/culi123/QtGuiSurveillanceMulti\" target=\"_blank\">QtGuiSurveillanceMulti</a>\n\n```\n基于qt的监控项目+视频文件传输\n```\n<a href=\"https://github.com/changcongyang/qt\" target=\"_blank\">qt</a>\n\n基于Qt-GUI框架的摄像头监控客户端\n<a href=\"https://github.com/willxin1024/Qt-CamWatch-Client\" target=\"_blank\">Qt-CamWatch-Client</a>\n基于Qt-GUI框架的摄像头监服务端\n<a href=\"https://github.com/willxin1024/Qt-CamWatch-Server\" target=\"_blank\">Qt-CamWatch-Server</a>\n\n```\n智能家居系统的移动终端，采用Qt编写，主要实现电能的监控和管理\n```\n<a href=\"https://github.com/Unibugs/UniHome\" target=\"_blank\">UniHome</a>\n","tags":["qt"]},{"title":"[qt] excel","url":"/2019/11/01//articles/2019/11/01/1572565322000.html/","content":"<a href=\"https://github.com/dbzhang800/QtXlsxWriter\" target=\"_blank\">QtXlsxWriter</a>\n<a href=\"http://qtxlsx.debao.me/\" target=\"_blank\">QtXlsxWriter使用文档</a>\n```\n报错\n[Makefile:36: sub-xlsx-qmake_all] Error 3\n```\n<a href=\"https://cloud.tencent.com/developer/article/1431930\" target=\"_blank\">QT-Qtxlsx库使用</a>\n改用VSRonin的QtXlsxWriter\n<a href=\"https://github.com/VSRonin/QtXlsxWriter\" target=\"_blank\">QtXlsxWriter</a>\n\n\n\n<a href=\"https://www.cnblogs.com/woxinfeixiang2015/p/7677295.html\" target=\"_blank\">用QT导入excel表格</a>\n```\nCONFIG+=qaxcontainer\n\nProject WARNING: CONFIG+=qaxcontainer is deprecated. Use QT+=axcontainer instead.\n\nQT+=axcontainer\n```\n\nmain.cpp\n```\n#include \"mainwindow.h\"\n#include <QApplication>\n#include <QtGui>\n#include <QWidget>\n#include <QAxObject>\n#include <QAxWidget>\n#include <QFileDialog>\n#include <QObject>\n#include <iostream>\nusing namespace std;\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n\n    QString filepath=QFileDialog::getSaveFileName(NULL,QObject::tr(\"Save orbit\"),\"/untitled.xls\",QObject::tr(\"Microsoft Office 2007 (*.xlsx)\"));//获取保存路径\n    QList<QVariant> allRowsData;//保存所有行数据\n    allRowsData.clear();\n//    mLstData.append(QVariant(12));\n    if(!filepath.isEmpty()){\n        QAxObject *excel = new QAxObject(\"Excel.Application\");//连接Excel控件\n        excel->dynamicCall(\"SetVisible (bool Visible)\",false);//不显示窗体\n        excel->setProperty(\"DisplayAlerts\", true);//不显示任何警告信息。如果为true那么在关闭是会出现类似“文件已修改，是否保存”的提示\n        QAxObject *workbooks = excel->querySubObject(\"WorkBooks\");//获取工作簿集合\n        workbooks->dynamicCall(\"Add\");//新建一个工作簿\n        QAxObject *workbook = excel->querySubObject(\"ActiveWorkBook\");//获取当前工作簿\n        QAxObject *worksheets = workbook->querySubObject(\"Sheets\");//获取工作表集合\n        QAxObject *worksheet = worksheets->querySubObject(\"Item(int)\",1);//获取工作表集合的工作表1，即sheet1\n\n        for(int row = 1; row <= 1000; row++)\n        {\n            QList<QVariant> aRowData;//保存一行数据\n            for(int column = 1; column <= 2; column++)\n            {\n                aRowData.append(QVariant(row*column));\n            }\n            allRowsData.append(QVariant(aRowData));\n        }\n\n        QAxObject *range = worksheet->querySubObject(\"Range(const QString )\", \"A1:B1000\");\n        range->dynamicCall(\"SetValue(const QVariant&)\",QVariant(allRowsData));//存储所有数据到 excel 中,批量操作,速度极快\n        range->querySubObject(\"Font\")->setProperty(\"Size\", 30);//设置字号\n\n        QAxObject *cell = worksheet->querySubObject(\"Range(QVariant, QVariant)\",\"A1\");//获取单元格\n        cell = worksheet->querySubObject(\"Cells(int, int)\", 1, 1);//等同于上一句\n        cell->dynamicCall(\"SetValue(const QVariant&)\",QVariant(123));//存储一个 int 数据到 excel 的单元格中\n        cell->dynamicCall(\"SetValue(const QVariant&)\",QVariant(\"abc\"));//存储一个 string 数据到 excel 的单元格中\n        \n        QString str = cell->dynamicCall(\"Value2()\").toString();//读取单元格中的值\n        cout<<\"\\nThe value of cell is \"<<str.toStdString()<<endl;\n        \n        /*QAxObject *font = cell->querySubObject(\"Font\");\n        font->setProperty(\"Name\", itemFont.family());  //设置单元格字体\n        font->setProperty(\"Bold\", itemFont.bold());  //设置单元格字体加粗\n        font->setProperty(\"Size\", itemFont.pixelSize());  //设置单元格字体大小\n        font->setProperty(\"Italic\",itemFont.italic());  //设置单元格字体斜体\n        font->setProperty(\"Underline\", itemFont.underline());  //设置单元格下划线\n        font->setProperty(\"Color\", item->foreground().color());  //设置单元格字体颜色*/\n        worksheet->querySubObject(\"Range(const QString&)\", \"1:1\")->setProperty(\"RowHeight\", 60);//调整第一行行高\n\n        workbook->dynamicCall(\"SaveAs(const QString&)\",QDir::toNativeSeparators(filepath));//保存至filepath，注意一定要用QDir::toNativeSeparators将路径中的\"/\"转换为\"\\\"，不然一定保存不了。\n        workbook->dynamicCall(\"Close()\");//关闭工作簿\n        excel->dynamicCall(\"Quit()\");//关闭excel\n        delete excel;\n        excel=NULL;\n    }\n    return a.exec();\n}\n```\n\n<a href=\"https://blog.csdn.net/weixin_37204973/article/details/80059096\" target=\"_blank\">QAxObject 读写 excel</a>\n\n```\nQT += xlsx\n```\n<a href=\"https://blog.csdn.net/ADCC123/article/details/82892642\" target=\"_blank\">用QT导出Excel表格</a>\n\n<a href=\"https://blog.csdn.net/cynthia_file/article/details/84023435\" target=\"_blank\">Qt TableView导出数据到Excel</a>\n\n<a href=\"https://blog.csdn.net/kangshuaibing/article/details/86467630\" target=\"_blank\">QT将tableview导出到Excel表格</a>\n```\n\n```\n","tags":["qt"]},{"title":"[springboot] 推荐springsecurity","url":"/2019/10/31//articles/2019/10/31/1572474654000.html/","content":"\n<a href=\"https://blog.csdn.net/I_am_Hutengfei/article/details/100561564\" target=\"_blank\">Springboot + Spring Security 实现前后端分离登录认证及权限控制</a>\n<a href=\"https://github.com/18061495586/Spring-Security-Demo\" target=\"_blank\">Spring-Security-Demo</a>\n\n<a href=\"https://blog.csdn.net/zwzw1219/article/details/82700937\" target=\"_blank\">spring boot后台管理系统，spring security权限控制</a>\n```\nspringboot + security + mybatis + quartz + html + swagger + redis\n```\n<a href=\"https://gitee.com/zhang.w/boot-security.git\" target=\"_blank\">spring security版 源码地址</a>\n<a href=\"https://gitee.com/zhang.w/boot-backend.git\" target=\"_blank\">shiro版 源码地址</a>\n\n用户管理\n```\n菜单管理：支持多级菜单\n角色管理\njob集群：创建job、取消job、取消job、下拉搜索spring bean\n日志查询\n邮件管理\n文件管理：上传、删除文件\n公告管理：公告列表、公告未读数提醒、公告阅读人\nExcel下载：自己在页面编写sql，数据可导出到excel，也可在页面以表格展示\n代码生成：根据表名，生成bean、controller、dao、mapper.xml，以及增删改查的页面\n```\n\n登录页\n```\nlocalhost:8080/login.html\n\n用户名：\nadmin\n密码：\nadmin\n```\n","tags":["springboot"]},{"title":"[springboot] jpa+layui+thymeleaf登录注册","url":"/2019/10/31//articles/2019/10/31/1572474651000.html/","content":"<a href=\"https://blog.csdn.net/w710962610/article/details/80696531\" target=\"_blank\">springboot + jpa + layui + thymeleaf 登录注册</a>\n","tags":["springboot"]},{"title":"[springboot] jpa+layui+jsp","url":"/2019/10/31//articles/2019/10/31/1572474650000.html/","content":"<a href=\"https://github.com/Hosiang1026/Libra\" target=\"_blank\">springboot+jpa+layui+jsp</a>\n","tags":["springboot"]},{"title":"[h5] 跑酷游戏","url":"/2019/10/31//articles/2019/10/31/1572474212000.html/","content":"<a href=\"https://blog.csdn.net/jggyff/article/details/83856207\" target=\"_blank\">HTML5实现水平跑酷游戏</a>\n```\nCanTK(Canvas ToolKit)是一个开源的游戏引擎和APP框架，是开发HTML5游戏和APP的利器，如果你喜欢它，请在github上给它加星，您的支持是我们努力的动力：\nhttps://github.com/drawapp8/cantk\n```\n","tags":["h5"]},{"title":"[潮汕话] 动图","url":"/2019/10/31//articles/2019/10/31/1572474211000.html/","content":"<a href=\"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1572438830960&di=336d00f53928f8e1966855051e4a9509&imgtype=0&src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20171115%2F959072630c94443a9b9d9ba936e4fa04.gif\" target=\"_blank\">知食滚水</a>\n\n<a href=\"https://image.baidu.com/search/index?tn=baiduimage&ipn=r&ct=201326592&cl=2&lm=-1&st=-1&sf=1&fmq=1389861203899_R&pv=&ic=0&nc=1&z=&se=1&showtab=0&fb=0&width=&height=&face=0&istype=2&ie=utf-8&ala=6&ori_query=%E6%BD%AE%E6%B1%95%E8%AF%9D&fr=ala&ala=1&alatpl=adress&pos=2&oriquery=%E6%BD%AE%E6%B1%95%E8%AF%9D&alaTag=0&&word=%E6%BD%AE%E6%B1%95%E8%AF%9D%20%E6%96%97%E5%9B%BE&hs=2&xthttps=111111\" target=\"_blank\">百度图片 潮汕话 斗图</a>\n\n<a href=\"\" target=\"_blank\"></a>","tags":["潮汕话"]},{"title":"[方言] 广东方言","url":"/2019/10/31//articles/2019/10/31/1572474210000.html/","content":"<a href=\"https://xw.qq.com/amphtml/20180713B1G8AK00\" target=\"_blank\">广东最难听懂的方言排名！潮汕话果然不出所料</a>\n\n","tags":["方言"]},{"title":"[美食] 双皮奶","url":"/2019/10/31//articles/2019/10/31/1572474209000.html/","content":"<a href=\"https://www.bilibili.com/video/av14529154/\" target=\"_blank\">懒人版 双皮奶～</a>\n","tags":["美食"]},{"title":"[qt-game] 游戏","url":"/2019/10/31//articles/2019/10/31/1572473547000.html/","content":"<a href=\"https://github.com/LuoBingjun\" target=\"_blank\">LuoBingjun</a>\n```\n\n```\n","tags":["qt-game"]},{"title":"[qt-game] 跑酷","url":"/2019/10/31//articles/2019/10/31/1572473546000.html/","content":"<a href=\"https://github.com/inkeast/tick-Qt-game\" target=\"_blank\">双人非对称竞技游戏</a>\n```\n\n```\n","tags":["qt-game"]},{"title":"[qt] 桌面宠物","url":"/2019/10/31//articles/2019/10/31/1572473545000.html/","content":"<a href=\"https://github.com/KinderRiven/miku_desktop\" target=\"_blank\">初音桌面宠物（QT）</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 竞技","url":"/2019/10/31//articles/2019/10/31/1572473544000.html/","content":"<a href=\"https://github.com/inkeast/tick-Qt-game\" target=\"_blank\">双人非对称竞技游戏</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 解决报错","url":"/2019/10/31//articles/2019/10/31/1572473543000.html/","content":"问题\n```\nProject ERROR: Unknown module(s) in QT: androidextras\n```\n原因\n```\n编译选错成MinGW，应当选android版本\n```\n\n问题\n```\nerror: no matching function for call to 'QGraphicsScene::items(int, int&, int, int, Qt::ItemSelectionMode)'\n         QList<QGraphicsItem *>list=scene()->items(199,y,202,2,Qt::ContainsItemShape);\n```\n参考\n<a href=\"https://blog.csdn.net/weixin_39978855/article/details/83082095\" target=\"_blank\">Qt 信号与槽使用错误 ：error: no matching function for call to……</a>\n\n\n问题\n```\nNo rule to make target '', needed by 'release/qrc_res.cpp'.\n```\n参考\n```\nhttps://blog.csdn.net/jsu519/article/details/79460767\nhttps://www.cnblogs.com/swing07/p/10428712.html\n```\n解决办法\n```\nQt项目做完了把资源文件夹下已经不用的图片文件删掉，运行时报错（编译不报错）：No rule to make target `images/图片文件名', needed by `debug/qrc_images.cpp'.  Stop. “清理项目”删除中间文件也没有效果，最后想到这个项目是从另一台电脑拷贝过来，手工重设了构建目录，于是把 .user 文件删掉，重新打开.pro项目文件，自动弹出设置界面重新选择构建目录，问题解决。\n```\n\n\n问题\n```\nUnknown module(s) in QT: webkit\n```\n原因\n```\n改成\nwebkits\n```\n\n\n编译指令问题\n<a href=\"https://www.jianshu.com/p/ec1ab7fb1365\" target=\"_blank\">unterminated conditional directive</a>\n\n<a href=\"https://blog.csdn.net/wpb92/article/details/53365952\" target=\"_blank\">error C2143:语法错误: 缺少“)”(在“}”的前面)</a>\n\n常量中有换行符\n<a href=\"https://blog.csdn.net/xuancailinggan/article/details/50373415\" target=\"_blank\">参考1</a>\n<a href=\"https://jingyan.baidu.com/article/ab0b5630b2a7d7c15bfa7d57.html\" target=\"_blank\">sublime转换文件编码</a>\n<a href=\"https://www.cnblogs.com/code-fisher/p/8192909.html\" target=\"_blank\">参考2</a>\n```\n（1）可以使用的minGW编译器\n（2）解决方案：QT菜单 --> 编辑 --> 选择编码（select Encoding）--> 文本编码 --> UTF-8 --> 按编码保存\n```\n（3）<a href=\"https://www.cnblogs.com/Braveliu/p/9987152.html\" target=\"_blank\">Qt && 常量中有换行符 && 中文</a>\n```\nVS + QT开发环境，中文内容编译时提示错误error C2001：常量中有换行符\n解决方案：VC的编译器，把代码格式改为带BOM的UTF8就好了\n建议步骤：\n（1）用Notepad++打开cpp文件\n（2）打开菜单栏中[编码]项\n（3）设置选择[转为UTF-8-BOM编码]\n（4）保存。\n重新编译文件，成功。\n```\n\n<a href=\"https://blog.csdn.net/lingsnoopy/article/details/79454758\" target=\"_blank\">QT-无法定位程序输入点</a>\n\nerror: C2143: 语法错误: 缺少“)”(在“return”的前面)\n```\n```\n\nerror: no member named 'startDown' in 'Ui::MainWindow'\n```\n```\n\nerror: 'class QString' has no member named 'toAscii'\n```\nhttps://blog.csdn.net/weixin_43791511/article/details/100737812\n\n.toLatin1()\n```\n\nerror: 'FALSE' was not declared in this scope\n```\n返回 false\n```\n\nundefined reference to libvlc_new\n```\nhttps://stackoverflow.com/questions/55484472/libvlcmake-undefined-reference-to-libvlc-new\n\nLIBVLC_INCLUDE_DIRS to LIBVLC_INCLUDE_DIR\nLIBVLC_LIBRARIES to LIBVLC_LIBRARY\n```\n\n'setCodecForTr' is not a member of 'QTextCodec'\n```\n#include <QTextCodec>\n\n\n#if (QT_VERSION <= QT_VERSION_CHECK(5,0,0))\n#if _MSC_VER\n    QTextCodec *codec = QTextCodec::codecForName(\"gbk\");\n#else\n    QTextCodec *codec = QTextCodec::codecForName(\"utf-8\");\n#endif\n    QTextCodec::setCodecForLocale(codec);\n    QTextCodec::setCodecForCStrings(codec);\n    QTextCodec::setCodecForTr(codec);\n#else\n    QTextCodec *codec = QTextCodec::codecForName(\"utf-8\");\n    QTextCodec::setCodecForLocale(codec);\n#endif\n```\n\nCan't open database: Driver not loaded Driver not loaded(找不到指定的模块。)\n```\n参考\nhttps://blog.csdn.net/qq_41596552/article/details/97104215\n将MySQL安装路径下lib(如：C:\\Program Files\\MySQL\\MySQL Server 8.0\\lib)文件夹中的libmysql.dll文件拷贝到exe文件的同级目录\n\n1.缺少驱动文件，libmysql.dll。将MYSQL目录里面的libmysql.dll放到，工程运行目录（我的方法就是不知道具体哪个，debug,release都放）。\n\n2.将QT的sqldrivers文件夹也拷贝到工程运行目录。\n\n3.将libmysql.dll放到C:\\Windows里\n```\n","tags":["qt"]},{"title":"[qt] 宠物小精灵对战游戏","url":"/2019/10/31//articles/2019/10/31/1572473542000.html/","content":"<a href=\"https://www.jianshu.com/p/db8753b6c45d\" target=\"_blank\">[源码和文档分享]Qt实现的宠物小精灵对战游戏阶段三-联网对战</a>\n<a href=\"https://www.write-bug.com/article/2280.html\" target=\"_blank\">Qt实现的宠物小精灵对战游戏阶段三-联网对战</a>\n","tags":["qt"]},{"title":"[qt] QCharts的简单应用","url":"/2019/10/31//articles/2019/10/31/1572473541000.html/","content":"<a href=\"https://blog.csdn.net/LKZYnih/article/details/81915436\" target=\"_blank\">QCharts的简单应用</a>\n```\n```\n","tags":["qt"]},{"title":"[软硬件] 博客","url":"/2019/10/29//articles/2019/10/29/1572357782000.html/","content":"<a href=\"https://www.cnblogs.com/sigma0/p/7220334.html#4326013\" target=\"_blank\">Qt开发北斗定位系统融合百度地图API及Qt程序打包发布</a>\n<a href=\"https://github.com/lifimlt\" target=\"_blank\">lifimlt</a>","tags":["软硬件"]},{"title":"[qt-qml-android] 专栏","url":"/2019/10/29//articles/2019/10/29/1572357781000.html/","content":"<a href=\"https://blog.csdn.net/luoyayun361/article/category/6754547\" target=\"_blank\">luoyayun361</a>\n<a href=\"https://github.com/luoyayun361/QtScrcpy\" target=\"_blank\">Android实时投屏控制软件</a>\n<a href=\"https://github.com/luoyayun361/QtAndroidAlbum\" target=\"_blank\">QML for Android 实现手机相册浏览功能</a>\n","tags":["qt-qml-android"]},{"title":"[qt-android] 专栏","url":"/2019/10/29//articles/2019/10/29/1572357780000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://github.com/luoyayun361/QML-Android-ScanCode\" target=\"_blank\">QML for Android 实现二维码扫描功能（QML+QZXing</a>\n<a href=\"https://blog.csdn.net/luoyayun361/column/info/26183\" target=\"_blank\">Qt for Android</a>\n<a href=\"https://github.com/luoyayun361\" target=\"_blank\">luoyayun361</a>\n<a href=\"https://github.com/luoyayun361/Qt-QML-Example\" target=\"_blank\">Qt、QML 示例集合</a>\n\n<a href=\"https://github.com/barry-ran/QtScrcpy\" target=\"_blank\">QtScrcpy</a>\n\n一套酷炫的QtQuick/Qml基础库和示例(a cool QtQuick/qml component library and demo)\n<a href=\"https://github.com/jaredtao/TaoQuick\" target=\"_blank\">TaoQuick</a>\n\n\n```\n加入通话和离开通话\n实现一对一视频聊天\n静音和解除静音\n```\n<a href=\"https://github.com/AgoraIO/Agora-with-QT\" target=\"_blank\">Agora-with-QT</a>\n\n基于Qt开发的网络库\n<a href=\"https://github.com/188080501/JQNetwork\" target=\"_blank\">JQNetwork</a>\n","tags":["qt-android"]},{"title":"[qt-android] 调用java代码实现自动更新APP","url":"/2019/10/29//articles/2019/10/29/1572357779000.html/","content":"<a href=\"https://blog.csdn.net/u012230798/article/details/87346311\" target=\"_blank\">qt for android 调用java代码 实现自动更新APP</a>\n```\n```\n","tags":["qt-android"]},{"title":"[qt-android] 蓝牙控制小车","url":"/2019/10/29//articles/2019/10/29/1572357778000.html/","content":"<a href=\"https://www.cnblogs.com/xiaolanchong/p/9079522.html\" target=\"_blank\">Qt on android 蓝牙开发(控制小车)</a>\n```\nhttps://pan.baidu.com/s/15JjHSm-KQIsbN-zHOFW6IQ\n密码：\nnxc0\n```\n","tags":["qt-android"]},{"title":"[qt-android] 蓝牙","url":"/2019/10/29//articles/2019/10/29/1572357777000.html/","content":"<a href=\"https://www.cnblogs.com/sigma0/p/5769527.html\" target=\"_blank\">Qt on Android 蓝牙通信开发</a>\n```\n百度云链接：\nhttp://pan.baidu.com/s/1dEB5LoX\n提取码：\nzykk\n```\n","tags":["qt-android"]},{"title":"[qt-android] 解决报错","url":"/2019/10/29//articles/2019/10/29/1572357776000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nerror: cannot find -lc++\nlinker command failed with exit code 1 (use -v to see invocation)\n```\n\n<a href=\"https://blog.csdn.net/qq_34598635/article/details/100164080\" target=\"_blank\">QT for Android 安卓报错 -LC++</a>\n<a href=\"https://www.jianshu.com/p/8490e06e5cb9\" target=\"_blank\">QT for Android 使用arm64_v8a编译器</a>\n```\n主要是因为Qt 5.13.x for Android有一个bug\n修改如下两个文件\nQt/5.13.0/android_armv7/mkspecs/android-clang/qmake.conf\nQt/5.13.0/android_arm64_v8a/mkspecs/android-clang/qmake.conf\n\n在48后面补上 -nostdlib++\n\nANDROID_CXX_STL_LIBS = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc+.so.$$replace(ANDROID_PLATFORM, \"android-\", \"\") -nostdlib++\n\n```\n","tags":["qt-android"]},{"title":"[qt-android] windows+QT5+Android开发环境搭建","url":"/2019/10/29//articles/2019/10/29/1572357775000.html/","content":"<a href=\"https://blog.csdn.net/qq_28643619/article/details/86589252\" target=\"_blank\">windows下基于QT5.10.0的Android开发环境搭建</a>\n```\n修改如下两个文件\nQt/5.13.0/android_armv7/mkspecs/android-clang/qmake.conf\nQt/5.13.0/android_arm64_v8a/mkspecs/android-clang/qmake.conf\n\n在48后面补上 -nostdlib++\n\nANDROID_CXX_STL_LIBS = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libc+.so.$$replace(ANDROID_PLATFORM, \"android-\", \"\") -nostdlib++\n```\n","tags":["qt-android"]},{"title":"[qt] 蓝牙","url":"/2019/10/29//articles/2019/10/29/1572357774000.html/","content":"<a href=\"https://blog.csdn.net/qq_21835111/article/details/86745320\" target=\"_blank\">QT蓝牙库基础</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 51单片机","url":"/2019/10/29//articles/2019/10/29/1572357771000.html/","content":"<a href=\"https://blog.csdn.net/abcvincent/article/details/83420154\" target=\"_blank\">QT笔记（8）——Qt与51单片机串口通讯</a>\n\n<a href=\"https://blog.csdn.net/mao19931004/article/details/51852573\" target=\"_blank\">Qt (六) - Qt5.5.1实现通用串口程序</a>\n\n\n<a href=\"https://github.com/eitail/QT_Printer\" target=\"_blank\">QT_Printer</a>\n```\n\n（1）开发环境：windows+QT5.9/Qt5.12\n（2）调用打印机打印图片\n（3）图片导出到pdf\n```\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E5%8D%95%E7%89%87%E6%9C%BA&ref=simplesearch\" target=\"_blank\">github搜索qt+单片机</a>\n\n基于51单片机的自动浇花项目，附带Qt制作的上位机软件\n<a href=\"https://github.com/shilxjxj/Automatic_Watering.git\" target=\"_blank\">Automatic_Watering</a>\n\n\n上位机\n<a href=\"https://github.com/gyhgeit/QT_RTT\" target=\"_blank\">QT_RTT</a>\n```\n基于QT编写的RTT上位机，供ARM单片机调试时使用\n```\n\n基于STM32的智能设备控制系统\n<a href=\"https://github.com/shilxjxj/Smat_Device\" target=\"_blank\">Smat_Device</a>\n\n<a href=\"https://blog.csdn.net/abcvincent/article/details/83420154\" target=\"_blank\">QT笔记 Qt与51单片机串口通讯</a>\n\n<a href=\"https://blog.csdn.net/weixin_42837024/article/details/81669540\" target=\"_blank\">QT串口通讯</a>\n\n<a href=\"https://www.jianshu.com/p/f577cee6e108\" target=\"_blank\">QT读取串口数据</a>\n\n<a href=\"https://www.jianshu.com/p/f577cee6e108\" target=\"_blank\">Qt5 串口数据读取</a>\n\n","tags":["qt"]},{"title":"[笑话] 让我来","url":"/2019/10/29//articles/2019/10/29/1572351322000.html/","content":"\n让我来\n```\n丈夫回家，见妻子在揍孩子，忍了忍没理她，走到厨房看见桌上煮好一锅混沌，于是吃了一碗。吃光见老婆还在揍儿子，终于忍不住了，教育小孩不能老用暴力，要多讲道理嘛！\n\n妻子说：好好的一锅馄饨，他居然撒了一泡尿进去，你说气人不气人，丈夫听后马上说：媳妇你歇一会，让我来揍！\n```\n","tags":["笑话"]},{"title":"[笑话] 大全","url":"/2019/10/29//articles/2019/10/29/1572351321000.html/","content":"<a href=\"https://www.telnote.cn/xiaohua/\" target=\"_blank\">生活日记/笑话</a>\n\n公交坐座位\n```\n公交车上一位小伙子上车没有找到座位，就往后一直走。走到一位小朋友的面前。对小朋友说：\"小朋友你是不是坐累了，坐累了告诉叔叔，叔叔替你坐会。\"小朋友看了看叔叔说：\"叔叔，你放心我能坚持住。\"\n```\n\n狂吐槽的小年轻,情绪大的很啊!\n```\n1、能者多劳，不能者多爽！\n\n2、我的眼睛不是染缸，装不下你的各种脸色。\n\n4、你瞅你那五官，各长各的，官威一个比一个大，谁都不服谁。\n\n5、你加我，不跟我聊天，不给我点赞，也不来勾搭我，你这是要找机会暗算我吗？\n\n6、孤独这两个字拆开来看，有孩童，有瓜果，有小犬，有蚊蝇，足以撑起一个盛夏傍晚间的巷子口，人情味十足。稚儿擎瓜柳棚下，细犬逐蝶窄巷中，人间繁华多笑语，惟我空余两鬓风。\n这就叫孤独。\n\n7、你男朋友是不是以为你缺氧，所以每个节日都送你空气！\n\n12、成年人的世界，到处都是“容易”二字。容易胖、容易老、容易头发变稀少；容易困、容易丑、容易变成单身狗。容易加班没补贴，容易失眠一整夜，容易被催找对象，容易穷的叮当响。\n```\n\n做个逗B,生活最有乐!\nhttps://www.telnote.cn/xiaohua/49/48590.htm\n```\n1、昨天有人说我丑，我当时我就哭了，我很难过。。。年纪轻轻就瞎了！\n\n3、其实之前也考虑过劳斯莱斯和宾利，到最后还是选择了公交，因为人多热闹。\n\n4、生活的烦恼跟妈妈说说——她嫌我懒。工作的事情找爸爸谈谈——他嫌我笨。\n\n5、上班时间，你的同事在群里很活跃，但他又不在位置上，他大概率是在带薪拉屎。\n\n6、你不用故作冷淡，我没有想过继续纠缠你，最后一次了，真的，最后一次，帮我砍下拼多多，谢谢！\n\n7、刚才在路上，有人叫我古天乐，我礼貌地说：“你认错人了，我只是晒黑了的吴彦祖。”\n\n9、“只要你答应我一件事，这100块就归你了。”\n“好。”\n“给我200块。”\n\n```\n","tags":["笑话"]},{"title":"[软件] 美图秀秀","url":"/2019/10/29//articles/2019/10/29/1572351226000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n\n```\n","tags":["软件"]},{"title":"[内网穿透] ngrok","url":"/2019/10/29//articles/2019/10/29/1572351225000.html/","content":"<a href=\"https://ngrok.com/\" target=\"_blank\">ngrok.com</a>\n```\n\n```\n","tags":["内网穿透"]},{"title":"[内网穿透] frp","url":"/2019/10/29//articles/2019/10/29/1572351224000.html/","content":"<a href=\"https://www.jianshu.com/p/17fd507a01e0\" target=\"_blank\">内网穿透神器</a>\n<a href=\"https://www.jianshu.com/p/00c79df1aaf0\" target=\"_blank\">一款很好用的内网穿透工具--FRP</a>\n<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\">frp/releases</a>\n```\n\n```\n","tags":["内网穿透"]},{"title":"[概念稿] app概念设计","url":"/2019/10/29//articles/2019/10/29/1572351223000.html/","content":"```\n概念设计：\n（1）颜色\n（2）界面设计\n（3）规范\n1）颜色规范\n2）图标规范\n3）控件规\n4）字体规范\n```\n\n<a href=\"https://www.zcool.com.cn/work/ZMjE1ODk3NzY=.html\" target=\"_blank\">七斤智能-智能家居App</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjE2MjQ1NDA=.html\" target=\"_blank\">懒人食谱APP概念设计</a>\n<a href=\"https://www.zcool.com.cn/work/ZNDAxODQxNTY=.html\" target=\"_blank\">项目复盘-分布式云盘BitDisk</a>\n","tags":["概念稿"]},{"title":"[编译] cmake示例","url":"/2019/10/29//articles/2019/10/29/1572351222000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/wzpan/cmake-demo\" target=\"_blank\">cmake-demo</a>\n<a href=\"https://blog.csdn.net/u011520181/article/details/81702460\" target=\"_blank\">使用 cmake 编译可执行文件</a>\n\n\n安装cmake\n```\nhttp://www.cmake.org/cmake/resources/software.html\nhttps://cmake.org/download/\n```\n<a href=\"https://blog.csdn.net/u011231598/article/details/80338941\" target=\"_blank\">Windows下CMake安装教程</a>\n```\n若勾选同时添加环境变量，则安装完后不用手动添加环境，但是此时必须得重启电脑，变量才能使用\n```\n\n<a href=\"https://github-production-release-asset-2e65be.s3.amazonaws.com/537699/097e6d80-f329-11e9-857b-20e0ddd7dffa?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20191029%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20191029T015127Z&X-Amz-Expires=300&X-Amz-Signature=7c05d2821f284286090170c49bbc8ca6d1f0fe7070900164d6acea1b4f8a3dd9&X-Amz-SignedHeaders=host&actor_id=49379976&response-content-disposition=attachment%3B%20filename%3Dcmake-3.16.0-rc2-win64-x64.msi&response-content-type=application%2Foctet-stream\" target=\"_blank\">cmake-3.16.0-rc2-win64-x64.msi</a>\n\n<a href=\"https://github.com/taglib/taglib/releases\" target=\"_blank\">taglib</a>\n<a href=\"https://blog.csdn.net/AntiHips/article/details/48687945\" target=\"_blank\">windows下编译taglib</a>\n```\ncmake -G\n\n先删除CMakeCache.txt文件\n\ncmake -G \"Visual Studio 15 2017\" -DCMAKE_INSTALL_PREFIX=C:\\Libraries\\taglib\n```\n\n遇到一些问题\n```\n#添加环境变量\nC:\\Program Files\\CMake\\bin\n\n问题1：\nCMake Error at CMakeLists.txt:3 (project):\n  Failed to run MSBuild command:\n\n    C:/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuild.exe\n\n用everything搜索\nMSBuild\n\ncmake -G \"Visual Studio 14 2015\" -DENABLE_STATIC=ON -DHAVE_ZLIB=0 -DWITH_MP4=0 -DMAKE_TAGLIB_LIB=1\ncmake -G \"Visual Studio 15 2017\" -DENABLE_STATIC=ON -DHAVE_ZLIB=0 -DWITH_MP4=0 -DMAKE_TAGLIB_LIB=1\n\n#务必安装的cmake版本高于给定的最低版本，否则终止构建\nCMAKE_MINIMUM_REQUIRED(VERSION 3.2 FATAL_ERROR)\nPROJECT(NEWHELLO)\nADD_SUBDIRECTORY(src)\n\n问题2：\ncmake之 No cmake_minimum_required command is present\nhttps://blog.csdn.net/weixin_39956356/article/details/100404980\n\ncmake --version\ncmake --build .\n\n问题3：\nhttps://blog.csdn.net/wangxiaolingtong/article/details/75734801\nDoes not match the generator used previously: Visual Studio 10 2010\n```\n\n<a href=\"https://www.jianshu.com/p/cea1e22e7a0d\" target=\"_blank\">CMake整理</a>\n<a href=\"https://blog.csdn.net/WAN_EXE/article/details/79173953\" target=\"_blank\">CMake加入第三方库</a>\n\n\n<a href=\"https://tnie.github.io/2018/12/03/cmake/\" target=\"_blank\">cmake命令</a>\n```\ncmake -G \"Visual Studio 14 2015\" -A Win32 / cmake -G \"Visual Studio 15 2017\" -A Win32\ncmake -G \"Visual Studio 14 2015\" -A x64 / cmake -G \"Visual Studio 15 2017\" -A x64\ncmake -G \"Visual Studio 14 2015\" -A ARM / cmake -G \"Visual Studio 15 2017\" -A ARM\ncmake -G \"Visual Studio 15 2017\" -A ARM64\n```","tags":["编译"]},{"title":"[sublime] 格式化C语言代码","url":"/2019/10/29//articles/2019/10/29/1572351221000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://www.cnblogs.com/aichenxy/p/7845769.html\" target=\"_blank\">修改 Sublime 按快捷键 ctrl+s 自动格式化(reindent lines)的问题</a>\n```\n\t{ \"keys\": [\"ctrl+s\"], \"command\": \"save\" },\n```\n\n<a href=\"https://my.oschina.net/u/171860/blog/754867\" target=\"_blank\">Sublime Text 3 自带的格式化代码功能（reindent）</a>\n```\n1、打开设置快捷键的界面（分左右两块区域，左边为编辑器默认，通常为了保证不影响正常功能，左边的默认设置不作修改，而修改右边的User区域）：\nPreferences → Key Bindings – User\n\n2、在其中添加代码，快捷键组合可按需设置：\n{\"keys\": [\"ctrl+shift+r\"], \"command\": \"reindent\" , \"args\":{\"single_line\": false}}\n```\n","tags":["sublime"]},{"title":"[qt] 添加taglib","url":"/2019/10/29//articles/2019/10/29/1572351220000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n度娘搜索windows qt taglib\n```\n\ndemo\n<a href=\"https://blog.csdn.net/ubuntutouch/article/details/75581507\" target=\"_blank\">使用taglib来提取在音乐文件中的封面信息</a>\n```\nhttps://github.com/liu-xiao-guo/coverinfo\n```\n\n<a href=\"https://blog.csdn.net/u011535148/article/details/20733105\" target=\"_blank\">windows编译taglib1.91</a>\n```\ncmake -G\n\n先删除CMakeCache.txt文件\n\ncmake -G \"Visual Studio 15 2017\" -DCMAKE_INSTALL_PREFIX=C:\\Libraries\\taglib\n```\n\n```\n1. Build the Makefiles:\n\ncmake -G\ncmake -G \"GENERATOR\" -DCMAKE_INSTALL_PREFIX=C:\\Libraries\\taglib\n\n  2. Build the project:\n       MSVS:\n         C:\\GitRoot\\taglib> msbuild all_build.vcxproj /p:Configuration=Release\n           OR (Depending on MSVS version or personal choice)\n         C:\\GitRoot\\taglib> devenv all_build.vcxproj /build Release\n       MinGW:\n         C:\\GitRoot\\taglib> gmake\n           OR (Depending on MinGW install)\n         C:\\GitRoot\\taglib> mingw32-make\n     Or in the MSVS GUI:\n       1. Open MSVS.\n       2. Open taglib solution.\n       3. Set build type to: Release (look in the tool bars)\n       2. Hit F7 to build the solution. (project)\n  3. Install the project:\n       (Change 'install' to 'uninstall' to uninstall the project)\n       MSVS:\n         C:\\GitRoot\\taglib> msbuild install.vcxproj\n           OR (Depending on MSVC version or personal choice)\n         C:\\GitRoot\\taglib> devenv install.vcxproj\n       MinGW:\n         C:\\GitRoot\\taglib> gmake install\n           OR (Depending on MinGW install)\n         C:\\GitRoot\\taglib> mingw32-make install\n     Or in the MSVS GUI:\n       1. Open project.\n       2. Open Solution Explorer.\n       3. Right Click: INSTALL\n       4. Select: Project Only\n       5. Select: Build Only INSTALL\nTo build a static library enable the following two options with CMake.\n  -DENABLE_STATIC=ON -DENABLE_STATIC_RUNTIME=ON\n```\n\n\n其它\n<a href=\"https://bbs.csdn.net/topics/340261657\" target=\"_blank\">添加taglib</a>\n```\nQMAKE_CXXFLAGS += -I /usr/include/taglib -I /usr/include/taglib-extras\nQMAKE_LIBS += -ltag\n```","tags":["qt"]},{"title":"[qt] QT5开发及实例PDF+源码+PPT","url":"/2019/10/29//articles/2019/10/29/1572351219000.html/","content":"<a href=\"https://www.52pojie.cn/thread-841505-1-1.html\" target=\"_blank\">QT5开发及实例PDF+源码+PPT</a>\n\n```\nQt5开发及实例网盘链接\n链接:\nhttps://pan.baidu.com/s/1bZvoGHEAs7YSnooH5GYcQQ\n提取码:\n95e3\n\n\n还有一本Qt Creator快速入门，包含源码：\nQt Creator快速入门\n链接:\nhttps://pan.baidu.com/s/1bidQXNzGwErQKfvp0A3mRg\n提取码: \nv9re\n```\n","tags":["qt"]},{"title":"[qt] QT+openface作刷脸机","url":"/2019/10/29//articles/2019/10/29/1572351218000.html/","content":"<a href=\"https://blog.csdn.net/ren1335654481/article/details/54563923\" target=\"_blank\">QT+openface作刷脸机</a>\n\n<a href=\"https://github.com/TadasBaltrusaitis/OpenFace\" target=\"_blank\">安装OpenFace</a>\n","tags":["qt"]},{"title":"[python] 爬虫","url":"/2019/10/29//articles/2019/10/29/1572351217000.html/","content":"<a href=\"https://github.com/daleyzou?tab=repositories\" target=\"_blank\">python爬虫</a>\n","tags":["python"]},{"title":"[ps] 制作APP展示图","url":"/2019/10/29//articles/2019/10/29/1572351216000.html/","content":"<a href=\"http://www.16xx8.com/photoshop/jiaocheng/2015/140574.html\" target=\"_blank\">制作APP展示图</a>\n\n","tags":["ps"]},{"title":"[java] 刷脸登录","url":"/2019/10/29//articles/2019/10/29/1572351214000.html/","content":"<a href=\"https://blog.csdn.net/qq_41186788/article/details/80025135\" target=\"_blank\">java实现人脸识别登录教程 前台+后台整合</a>\n","tags":["java"]},{"title":"[51单片机] 基于STC89C516的多游戏实现","url":"/2019/10/29//articles/2019/10/29/1572351213000.html/","content":"<a href=\"https://blog.csdn.net/ljcc122/article/details/79637520\" target=\"_blank\">人脸识别系统_人脸注册</a>\n","tags":["51单片机"]},{"title":"[android] widget桌面组件","url":"/2019/10/29//articles/2019/10/29/1572351212000.html/","content":"<a href=\"https://blog.csdn.net/harvic880925/article/details/41445407\" target=\"_blank\">桌面widget详解（一）基本demo构建</a>\n```\n```\n","tags":["android"]},{"title":"[51单片机] 问题排查","url":"/2019/10/29//articles/2019/10/29/1572351211000.html/","content":"\n可能存在的几个问题:\n```\n1.单片机坏掉了；\n2.下载线路不对或者坏掉；\n3.单片机跟板子电路直接虚连；\n4.供电是否跟单片机要求的一致（3.3v单片机，5v供电时程序下载不了）\n\n排查：\n1.单片机是否正常工作；\n2.短接发送接收脚，串口调试助手是否能正常收发；\n3.串口收发线是否畅通；\n4.电源电压是否正确\n```","tags":["51单片机"]},{"title":"[51单片机] 入门","url":"/2019/10/29//articles/2019/10/29/1572351210000.html/","content":"<a href=\"https://blog.csdn.net/qq_19799765/article/details/83686274\" target=\"_blank\">51单片机入门教程</a>\n","tags":["51单片机"]},{"title":"[单片机] 基于STC89C516的多游戏实现","url":"/2019/10/29//articles/2019/10/29/1572351209000.html/","content":"<a href=\"https://www.cnblogs.com/yxsrt/p/9650987.html\" target=\"_blank\">简讯\n基于STC89C516的多游戏实现</a>\n```\nhttps://pan.baidu.com/s/19O0d92iTBRRgMoPU3UIYMw\n密码：\neu9m\n```\n","tags":["单片机"]},{"title":"[qt-qml] QML专栏","url":"/2019/10/29//articles/2019/10/29/1572350168000.html/","content":"<a href=\"https://blog.csdn.net/qq_40194498/article/category/7580030\" target=\"_blank\">QML进阶教程</a>\n```\nQML进阶教程\n\n```\n","tags":["qt-qml"]},{"title":"[qt] 自定义控件","url":"/2019/10/29//articles/2019/10/29/1572350167000.html/","content":"<a href=\"https://blog.csdn.net/qq_15094525/article/category/5863621\" target=\"_blank\">QT自定义控件</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 专栏","url":"/2019/10/29//articles/2019/10/29/1572350166000.html/","content":"<a href=\"https://blog.csdn.net/w464960660/article/category/9294445\" target=\"_blank\">Winter_world - QT开发</a>\n\n<a href=\"https://blog.csdn.net/baidu_36669549/article/category/7989479\" target=\"_blank\">凌空的桨 - Qt</a>\n\n<a href=\"https://blog.csdn.net/u011012932/article/category/9265357\" target=\"_blank\">一去丶二三里 - 《Qt 实战一二三》</a>\n\n<a href=\"http://kevinlq.com/categories/#Qt%E5%AD%A6%E4%B9%A0\" target=\"_blank\">鹅卵石 - Qt学习</a>\n\n<a href=\"https://blog.csdn.net/feiyangqingyun/article/category/9278894\" target=\"_blank\">Qt自定义控件大全+UI定制+输入法</a>\n","tags":["qt"]},{"title":"[qt] 右键菜单-五种实现方法","url":"/2019/10/29//articles/2019/10/29/1572350165000.html/","content":"<a href=\"https://blog.csdn.net/qq_37233607/article/details/78649151\" target=\"_blank\">Qt实现右键菜单的五种方法!(以QListWidget为例)</a>\n\nc.h\n```\n#include \"c.h\"\n#include \"ui_c.h\"\n\nc::c(QWidget *parent)\n    : QMainWindow(parent),\n      ui(new Ui::c)\n{\n    ui->setupUi(this);\n    //修改策略.\n    ui->listWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n    ui->listWidget->addItem(\"zx\");\n    //加入事件过滤器.\n    ui->listWidget->installEventFilter(this);\n\n    m_contextMenu = new QMenu;\n    m_addAction = new QAction(\"add Item\", this);\n    m_delAction = new QAction(\"del Item\", this);\n\n    m_contextMenu->addAction(m_addAction);\n    m_contextMenu->addAction(m_delAction);\n\n    //和该策略对应的信号，showListWidgetMenuSlot为自己定义的槽函数.\n    connect(ui->listWidget, SIGNAL(customContextMenuRequested(QPoint)),this, SLOT(showListWidgetMenuSlot(QPoint)));\n}\n\nvoid c::showListWidgetMenuSlot(QPoint pos)\n{\n    m_contextMenu->exec(QCursor::pos());\n}\n\nbool c::eventFilter(QObject *o, QEvent *event)\n{\n    if (o == ui->listWidget)\n    {\n        if (event->type() == QEvent::ContextMenu)\n        {\n            m_contextMenu->exec(QCursor::pos());\n            return true;\n        }\n    }\n    return QObject::eventFilter(o,event);\n}\n\nc::~c()\n{\n    delete ui;\n}\n```\n\nc.cpp\n```\n#include \"c.h\"\n#include \"ui_c.h\"\n\nc::c(QWidget *parent)\n    : QMainWindow(parent),\n      ui(new Ui::c)\n{\n    ui->setupUi(this);\n    //修改策略.\n    ui->listWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n    ui->listWidget->addItem(\"zx\");\n    //加入事件过滤器.\n    ui->listWidget->installEventFilter(this);\n\n    m_contextMenu = new QMenu;\n    m_addAction = new QAction(\"add Item\", this);\n    m_delAction = new QAction(\"del Item\", this);\n\n    m_contextMenu->addAction(m_addAction);\n    m_contextMenu->addAction(m_delAction);\n\n    //和该策略对应的信号，showListWidgetMenuSlot为自己定义的槽函数.\n    connect(ui->listWidget, SIGNAL(customContextMenuRequested(QPoint)),this, SLOT(showListWidgetMenuSlot(QPoint)));\n}\n\nvoid c::showListWidgetMenuSlot(QPoint pos)\n{\n    m_contextMenu->exec(QCursor::pos());\n}\n\nbool c::eventFilter(QObject *o, QEvent *event)\n{\n    if (o == ui->listWidget)\n    {\n        if (event->type() == QEvent::ContextMenu)\n        {\n            m_contextMenu->exec(QCursor::pos());\n            return true;\n        }\n    }\n    return QObject::eventFilter(o,event);\n}\n\nc::~c()\n{\n    delete ui;\n}\n\n```\n\nQMyListWidget.h\n```\n#ifndef QMYLISTWIDGET_H\n#define QMYLISTWIDGET_H\n#include <QListWidget>\n#include <QMenu>\n#include <QAction>\n#include <QContextMenuEvent>\n#include <QMouseEvent>\n\nclass QMyListWidget : public QListWidget\n{\n    Q_OBJECT\npublic:\n    QMyListWidget(QWidget *parent);\n    ~QMyListWidget();\nprotected:\n    void mousePressEvent(QMouseEvent *event);\n    void contextMenuEvent(QContextMenuEvent *event);\nprivate:\n    QMenu *m_contextMenu;\n    QAction *m_addAction;\n    QAction *m_delAction;\n};\n\n#endif // QMYLISTWIDGET_H\n```\n\nQMyListWidget.cpp\n```\n#include \"QMyListWidget.h\"\nQMyListWidget::QMyListWidget(QWidget *parent)\n    : QListWidget(parent)\n{\n    //创建一个菜单，后面不在解释.\n    m_contextMenu = new QMenu;\n    m_addAction = new QAction(\"add Item\",this);\n    m_delAction = new QAction(\"del Item\",this);\n    m_contextMenu->addAction(m_addAction);\n    m_contextMenu->addAction(m_delAction);\n}\nQMyListWidget::~QMyListWidget()\n{\n}\nvoid QMyListWidget::mousePressEvent(QMouseEvent *event)\n{\n    //确保右键点击，然后跳出菜单.\n    if (event->button() == Qt::RightButton)\n    {\n        m_contextMenu->exec(event->globalPos());\n    }\n    //要继续保留QListWidget原有的点击事件.\n    QListWidget::mousePressEvent(event);\n}\n\nvoid QMyListWidget::contextMenuEvent(QContextMenuEvent *event)\n{\n    //让菜单移动到鼠标位置并显示.\n    m_contextMenu->exec(event->globalPos());\n}\n```\n","tags":["qt"]},{"title":"[qt] 右键菜单-给控件添加右键菜单","url":"/2019/10/29//articles/2019/10/29/1572350164000.html/","content":"<a href=\"https://www.cnblogs.com/LifeoFHanLiu/p/9931192.html\" target=\"_blank\">给控件添加右键菜单</a>\n\n","tags":["qt"]},{"title":"[qt] 用户协议窗口","url":"/2019/10/29//articles/2019/10/29/1572350163000.html/","content":"<a href=\"https://blog.csdn.net/baidu_36669549/article/details/75334569\" target=\"_blank\">QT实现生成用户协议的窗口</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 音乐播放器","url":"/2019/10/29//articles/2019/10/29/1572350162000.html/","content":"\n```\n使用的开源的VLC，该播放器可以在windows和linux播放\n```\n<a href=\"https://github.com/kevinlq/MusicPlay\" target=\"_blank\">MusicPlay</a>\n\n\n```\n基于Qt开发的音乐播放器，支持多种格式音频文件播放。可网络控制播放状态，支持LRC歌词同步显示等\n```\n<a href=\"https://github.com/FeihongKing/MusicPlayer\" target=\"_blank\">MusicPlayer</a>\n\n安装cmake\n<a href=\"https://github-production-release-asset-2e65be.s3.amazonaws.com/537699/097e6d80-f329-11e9-857b-20e0ddd7dffa?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20191029%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20191029T015127Z&X-Amz-Expires=300&X-Amz-Signature=7c05d2821f284286090170c49bbc8ca6d1f0fe7070900164d6acea1b4f8a3dd9&X-Amz-SignedHeaders=host&actor_id=49379976&response-content-disposition=attachment%3B%20filename%3Dcmake-3.16.0-rc2-win64-x64.msi&response-content-type=application%2Foctet-stream\" target=\"_blank\">cmake-3.16.0-rc2-win64-x64.msi</a>\n<a href=\"https://blog.csdn.net/u011231598/article/details/80338941\" target=\"_blank\">Windows下CMake安装教程</a>\n```\n若勾选同时添加环境变量，则安装完后不用手动添加环境，但是此时必须得重启电脑，变量才能使用\n```\n\n<a href=\"https://github.com/taglib/taglib/releases\" target=\"_blank\">github taglib</a>\n<a href=\"https://blog.csdn.net/AntiHips/article/details/48687945\" target=\"_blank\">windows下编译taglib</a>\n先删除CMakeCache.txt文件\n```\ncmake -G \"Visual Studio 15 2017\" -DCMAKE_INSTALL_PREFIX=C:\\Libraries\\taglib\n```\n\n```\nQQuickImageProvider的引入\nhttps://doc.qt.io/qt-5/qquickimageprovider.html\n\n```","tags":["qt"]},{"title":"[qt] 样式表的使用","url":"/2019/10/29//articles/2019/10/29/1572350161000.html/","content":"<a href=\"https://blog.csdn.net/goforwardtostep/article/details/60884870\" target=\"_blank\">样式表的使用</a>\n","tags":["qt"]},{"title":"[qt] 线条阴影","url":"/2019/10/29//articles/2019/10/29/1572350160000.html/","content":"<a href=\"https://blog.csdn.net/qq_40194498/article/details/79612891\" target=\"_blank\">Qt线条阴影</a>\nQt中实现线条阴影有两种办法：\n\n一、用label控件\n```\n1、label控件上鼠标右键，改变样式表\n2、编辑样式表，添加颜色\n3、编辑如下： \nborder-top: 3px solid rgb(255, 255, 255); \nborder-bottom: 1.5px solid rgb(66, 66, 66); \n```\n\n二、绘制两条线\n```\nvoid Widget::paintEvent(QPaintEvent *){\n\tQPainter painter(this);\n\tQPen pen;\n\tpen.setColor(Qt::white); \n\tpainter.drawLine(2,502,602,502);  //绘制阴影线条，画笔默认为黑色\n\tpainter.setPen(pen);//此处将画笔变为白色\n\tpainter.drawLine(0,500,600,500); //绘制线条\n}\n```\n","tags":["qt"]},{"title":"[qt] 线程","url":"/2019/10/29//articles/2019/10/29/1572350159000.html/","content":"<a href=\"https://www.cnblogs.com/doker/p/11171684.html\" target=\"_blank\">Qt + 线程 QImage</a>\n```\n```\n\n<a href=\"\" target=\"_blank\"></a>\n","tags":["qt"]},{"title":"[qt] 显示在线图片","url":"/2019/10/29//articles/2019/10/29/1572350158000.html/","content":"<a href=\"https://github.com/thunderobot/ImageView\" target=\"_blank\">ImageView</a>\n","tags":["qt"]},{"title":"[qt] 显示当前时间(年-月-日 时：分：秒 周几)","url":"/2019/10/29//articles/2019/10/29/1572350157000.html/","content":"<a href=\"https://blog.csdn.net/qq_40194498/article/details/79697518\" target=\"_blank\">显示当前时间(年-月-日 时：分：秒 周几)</a>\n\nQt5中的Lambda表达式\n```\n//设置时间显示的字体\nQPalette palette;\npalette.setColor(QPalette::WindowText,Qt::red);\nui->label_CurrentTime->setPalette(palette);\n\n//定时器\nQTimer *CurrentTime = new QTimer(this);\nCurrentTime->start(0);\n\n//使用定时器信号槽，尽快更新时间的显示\nconnect(CurrentTime,&QTimer::timeout,[=](){\n\tQDateTime current_time = QDateTime::currentDateTime(); \n\t//显示时间，格式为：年-月-日 时：分：秒 周几\n\tQString StrCurrentTime = current_time.toString(\"yyyy-MM-dd hh:mm:ss ddd\"); \n\t//时间显示格式可自由设定，如hh:mm ddd 显示 时：分 周几 \n\t//具体格式见函数QString QDateTime::​toString(const QString & format) const\n\tui->label_CurrentTime->setText(StrCurrentTime); \n});\n```\n","tags":["qt"]},{"title":"[qt] 网格","url":"/2019/10/29//articles/2019/10/29/1572350155000.html/","content":"<a href=\"https://blog.csdn.net/q862343646/article/details/53409843\" target=\"_blank\">Qt实现网格显示（图标文本）功能</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 图片预览","url":"/2019/10/29//articles/2019/10/29/1572350154000.html/","content":"<a href=\"https://blog.csdn.net/douzhq/article/details/84933222\" target=\"_blank\">Qt 图片预览（等比例显示、放大、缩小、平移图像）显示</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 通讯录","url":"/2019/10/29//articles/2019/10/29/1572350153000.html/","content":"<a href=\"https://blog.csdn.net/qq_37233607/article/details/79119867\" target=\"_blank\">通讯录小demo(附全源码)</a>\n```\n该程序主要实现了以下几个功能: \n1.对QListWidget子项的显示进行了修改,同时显示了姓名,电话,地址,头像等\n2.在QListWidget控件的不同位置点击右键菜单,产生不同的菜单提供给用户操作\n3.在添加用户的对话框中,对电话输入框进行了输入限制\n4.用户可以自己提供图片作为头像,窗口对外来图片的操作\n```\n\nc.h\n```\n#ifndef C_H\n#define C_H\n\n#include <QtWidgets/QWidget>\n#include \"ui_c.h\"\n#include <QListWidget>\n#include <QListWidgetItem>\n#include <QHBoxLayout>\n#include \"MyItemDrawer.h\"\n#include <QMenu>\n#include \"PeopleMesDialog.h\"\n\n\nclass c : public QWidget\n{\n    Q_OBJECT\n\npublic:\n    c(QWidget *parent = 0);\n    ~c();\n    QListWidgetItem* c::setItemValue(QString name, QString phone, QString address, QString pixmap);\n    void c::insertPeoMes(QString name, QString phone, QString address, QString pixmap);\n    void c::addPeoMes(QString name, QString phone, QString address, QString pixmap);\nprivate slots:\n    void showContextMenuSlot(const QPoint&);\n    void addItemSlot();\n    void insertItemSlot();\n    void delItemSlot();\nprivate:\n    Ui::cClass ui;\n    QListWidget *m_listWidget;\n    QMenu *m_menu;\n    QAction *m_addAction;\n    QAction *m_delAction;\n    QAction *m_insertAction;\n    PeopleMesDialog *m_dialog;\n\n    QListWidgetItem *m_selectedItem;\n    int m_insertIndex;\n};\n\n#endif // C_H\n```\n\nc.cpp\n```\n#include \"c.h\"\n\nc::c(QWidget *parent)\n    : QWidget(parent)\n{\n    ui.setupUi(this);\n\n    this->setWindowTitle(QString::fromLocal8Bit(\"通讯录\"));\n    this->setFixedSize(300,600);\n\n    //初始化对象.\n    m_dialog = new PeopleMesDialog(this);\n\n    //初始化容器和布局.\n    m_listWidget = new QListWidget();\n    QHBoxLayout *layout = new QHBoxLayout(this);\n    layout->addWidget(m_listWidget);\n\n    addPeoMes(\"st\", \"15158047646\", QString::fromLocal8Bit(\"杭州滨江xxx号\"), \"\");\n    addPeoMes(QString::fromLocal8Bit(\"成龙\"), \"15158047647\", QString::fromLocal8Bit(\"北京xxx号\"), \"\");\n    addPeoMes(QString::fromLocal8Bit(\"刘德华\"), \"15158047648\", QString::fromLocal8Bit(\"香港xxx号\"), \"\");\n    addPeoMes(QString::fromLocal8Bit(\"古天乐\"), \"15158047649\", QString::fromLocal8Bit(\"湖南滨江xxx号\"), \"\");\n    addPeoMes(QString::fromLocal8Bit(\"张家辉\"), \"15158047650\", QString::fromLocal8Bit(\"贪玩蓝月xxx号\"), \"\");\n\n    m_listWidget->setItemDelegate(new MyItemDrawer(m_listWidget));\n    m_listWidget->setContextMenuPolicy(Qt::CustomContextMenu);\n\n    m_addAction = new QAction(QString::fromLocal8Bit(\"新增\"), this);\n    m_delAction = new QAction(QString::fromLocal8Bit(\"删除\"), this);\n    m_insertAction = new QAction(QString::fromLocal8Bit(\"插入\"), this);\n\n    connect(m_listWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showContextMenuSlot(const QPoint&)));\n    connect(m_addAction, SIGNAL(triggered()), this, SLOT(addItemSlot()));\n    connect(m_insertAction, SIGNAL(triggered()), this, SLOT(insertItemSlot()));\n    connect(m_delAction, SIGNAL(triggered()), this, SLOT(delItemSlot()));\n}\n\nc::~c()\n{\n    delete m_listWidget;\n}\nvoid c::showContextMenuSlot(const QPoint& pos)\n{\n    m_menu = new QMenu;\n\n    //如果鼠标在项上.\n    if (m_listWidget->itemAt(pos))\n    {\n        //记录.\n        m_selectedItem = m_listWidget->itemAt(pos);\n        m_insertIndex = m_listWidget->row(m_selectedItem);\n\n        m_menu->addAction(m_insertAction);\n        m_menu->addAction(m_delAction);\n    }\n    else\n    {\n        m_menu->addAction(m_addAction);\n    }\n    m_menu->exec(QCursor::pos());\n}\nvoid c::addItemSlot()\n{\n    int status = m_dialog->exec();\n    //如果用户选择的是保存.\n    if (status == QDialog::Accepted)\n    {\n        QString name = m_dialog->getName();\n        QString phone = m_dialog->getPhone();\n        QString address = m_dialog->getAddress();\n        QString image = m_dialog->getImage();\n        auto item = setItemValue(name, phone, address, image);\n        m_listWidget->addItem(item);\n    }\n    //进行清空处理.\n    m_dialog->clear();\n}\nvoid c::insertItemSlot()\n{\n    int status = m_dialog->exec();\n\n    //如果用户选择的是保存.\n    if (status == QDialog::Accepted)\n    {\n        QString name = m_dialog->getName();\n        QString phone = m_dialog->getPhone();\n        QString address = m_dialog->getAddress();\n        QString image = m_dialog->getImage();\n        auto item = setItemValue(name, phone, address, image);\n        m_listWidget->insertItem(m_insertIndex - 1, item);\n    }\n    //进行清空处理.\n    m_dialog->clear();\n}\nvoid c::delItemSlot()\n{\n    //删除选中项.\n    int index = m_listWidget->row(m_selectedItem);\n    QListWidgetItem *tempItem = m_listWidget->takeItem(index);\n    delete tempItem;\n    m_selectedItem = NULL;\n}\nQListWidgetItem* c::setItemValue(QString name, QString phone, QString address, QString pixmap)\n{\n    QListWidgetItem *item = new QListWidgetItem();\n\n    item->setData(Qt::UserRole, name);\n    item->setData(Qt::UserRole + 1, phone);\n    item->setData(Qt::UserRole + 2, address);\n    item->setData(Qt::UserRole + 3, pixmap);\n\n    return item;\n}\nvoid c::insertPeoMes(QString name, QString phone, QString address, QString pixmap)\n{\n    auto item = setItemValue(name, phone, address, pixmap);\n    m_listWidget->insertItem(m_insertIndex, item);\n}\nvoid c::addPeoMes(QString name, QString phone, QString address, QString pixmap)\n{\n    auto item = setItemValue(name, phone, address, pixmap);\n    m_listWidget->addItem(item);\n}\n\n```\n\n对委托的自定义操作\nMyItemDrawer.h\n```\n#ifndef MYITEMDRAWER_H\n#define MYITEMDRAWER_H\n\n#include <QStyledItemDelegate>\n#include <QPainter>\n\nclass MyItemDrawer : public QStyledItemDelegate\n{\n    Q_OBJECT\n\npublic:\n    MyItemDrawer(QObject *parent = 0);\n    ~MyItemDrawer();\nprivate:\n    // 决定该单元格的推荐大小\n    virtual QSize  sizeHint(const QStyleOptionViewItem & option,const QModelIndex & index) const;\n\n    // 决定如何绘图\n    virtual void  paint(QPainter * painter,const QStyleOptionViewItem & option,const QModelIndex & index) const;\nprivate:\n    mutable QPixmap m_defaultPixmap;\n};\n\n#endif // MYITEMDRAWER_H\n```\n\nMyItemDrawer.cpp\n```\n#include \"MyItemDrawer.h\"\n\nMyItemDrawer::MyItemDrawer(QObject *parent)\n    : QStyledItemDelegate(parent)\n{\n    m_defaultPixmap.load(\"./Pixmaps/default.png\");\n\n}\n\nMyItemDrawer::~MyItemDrawer()\n{\n\n}\nQSize MyItemDrawer::sizeHint(const QStyleOptionViewItem & option, const QModelIndex & index) const\n{\n    QSize  size = QStyledItemDelegate::sizeHint(option, index);\n    size.setHeight(80);\n    return size;\n}\n\n// 决定如何绘图\nvoid MyItemDrawer::paint(QPainter * painter, const QStyleOptionViewItem & option, const QModelIndex & index) const\n{\n    QRect rect = option.rect; // 目标矩形\n\n    // 取得该项对应的数据\n    QString name = index.data(Qt::UserRole).toString();\n    QString address = index.data(Qt::UserRole + 1).toString();\n    QString phone = index.data(Qt::UserRole + 2).toString();\n    QString fileName = index.data(Qt::UserRole + 3).toString();\n\n    if (fileName.trimmed().isEmpty())\n        m_defaultPixmap.load(\"./Pixmaps/default.png\");\n    else\n        m_defaultPixmap.load(fileName);\n\n    //在进行图片处理.\n    m_defaultPixmap = m_defaultPixmap.scaled(70, 70);\n\n    // 状态显示: 若该项被选中\n    if (option.state & QStyle::State_Selected)\n    {\n        painter->setBrush(Qt::gray);\n        painter->drawRoundedRect(rect, 2, 2);\n    }\n\n    //画头像.头像长和高都为70.\n    QRect area(rect.topLeft(),QPoint(70, 70));\n    painter->drawPixmap(area, m_defaultPixmap);\n\n    // 画名字.\n    QPoint pos = rect.topLeft() + QPoint(100, 20);\n    painter->drawText(pos, QString::fromLocal8Bit(\"姓名:\") + name);\n\n    //画电话.\n    pos = rect.topLeft() + QPoint(100, 40);\n    painter->drawText(pos, QString::fromLocal8Bit(\"电话:\") + phone);\n\n    //画地址.\n    pos = rect.topLeft() + QPoint(100, 60);\n    painter->drawText(pos, QString::fromLocal8Bit(\"地址:\") + address);\n\n    m_defaultPixmap.load(\"./Pixmaps/default.png\");\n}\n\n```\n\n添加用户对话框\nPeopleMesDialog.h\n```\n#ifndef PEOPLEMESDIALOG_H\n#define PEOPLEMESDIALOG_H\n\n#include <QDialog>\n#include \"ui_PeopleMesDialog.h\"\n#include <QIntValidator>\n#include <QRegExp>\n#include <QMessageBox>\n#include <QMimeData>\n#include <QDragEnterEvent>\n#include <QDropEvent>\n\nclass PeopleMesDialog : public QDialog\n{\n    Q_OBJECT\n    typedef enum\n    {\n        tag_Cancel = 0,\n        tag_Saved = 1\n    }Tag_status;\n\npublic:\n    PeopleMesDialog(QWidget *parent = 0);\n    ~PeopleMesDialog();\n    QString getName();\n    QString getPhone();\n    QString getAddress();\n    QString getImage();\n    void clear();\nprotected:\n    void dragEnterEvent(QDragEnterEvent *event);\n    void dragMoveEvent(QDragMoveEvent *event);\n    void dropEvent(QDropEvent *event);\nprivate slots:\n    void onSaveButtonSlot();\n    void clearPictureSlot();\nprivate:\n    Ui::PeopleMesDialog ui;\n    int m_status;\n    QString m_picturePath;\n};\n\n#endif // PEOPLEMESDIALOG_H\n```\n\nPeopleMesDialog.cpp\n```\n#include \"PeopleMesDialog.h\"\n\nPeopleMesDialog::PeopleMesDialog(QWidget *parent)\n    : QDialog(parent)\n{\n    ui.setupUi(this);\n    this->setAcceptDrops(true);\n    this->setWindowTitle(QString::fromLocal8Bit(\"增加用户\"));\n    m_status = 0;\n    m_picturePath = \"\";\n\n    ui.pictureLabel->setAlignment(Qt::AlignCenter);\n    ui.pictureLabel->setText(QString::fromLocal8Bit(\"你可以拖动图片进来\"));\n    ui.pictureLabel->setFrameShape(QFrame::StyledPanel);\n\n    //设置简单的验证器.\n    QIntValidator *validator = new QIntValidator();\n    QRegExp regexp(\"[0-9]{11,11}\");\n    ui.phoneLineEdit->setValidator(new QRegExpValidator(regexp));\n\n    //连接信号与槽.\n    connect(ui.saveButton, SIGNAL(clicked()), this, SLOT(onSaveButtonSlot()));\n    connect(ui.cancelButton, SIGNAL(clicked()), this, SLOT(close()));\n    connect(ui.clearButton,SIGNAL(clicked()), this, SLOT(clearPictureSlot()));\n}\n\nPeopleMesDialog::~PeopleMesDialog()\n{\n\n}\nvoid PeopleMesDialog::onSaveButtonSlot()\n{\n    //对用户的输入进行判断.\n    if (ui.addressLineEdit->text().trimmed().isEmpty())\n    {\n        QMessageBox::warning(this, \"warning\", QString::fromLocal8Bit(\"地址不能为空!\"));\n        return;\n    }\n    if (ui.nameLineEdit->text().trimmed().isEmpty())\n    {\n        QMessageBox::warning(this, \"warning\", QString::fromLocal8Bit(\"姓名不能为空!\"));\n        return;\n    }\n    if (!ui.phoneLineEdit->hasAcceptableInput())\n    {\n        QMessageBox::warning(this, \"warning\", QString::fromLocal8Bit(\"手机号码必须为11位的!\"));\n        return;\n    }\n\n    //对标识符进行修改.\n    m_status = tag_Saved;\n    this->accept();\n}\nQString PeopleMesDialog::getName()\n{\n    if (m_status)\n        return ui.nameLineEdit->text().trimmed();\n    return NULL;\n}\nQString PeopleMesDialog::getPhone()\n{\n    if (m_status)\n        return ui.phoneLineEdit->text().trimmed();\n    return NULL;\n}\nQString PeopleMesDialog::getAddress()\n{\n    if (m_status)\n        return ui.addressLineEdit->text().trimmed();\n    return NULL;\n}\nQString PeopleMesDialog::getImage()\n{\n    if (m_status)\n    {\n        return m_picturePath;\n    }\n    return NULL;\n}\nvoid PeopleMesDialog::clear()\n{\n    m_status = 0;\n    m_picturePath = \"\";\n    ui.nameLineEdit->clear();\n    ui.addressLineEdit->clear();\n    ui.phoneLineEdit->clear();\n    ui.pictureLabel->clear();\n}\nvoid PeopleMesDialog::dragEnterEvent(QDragEnterEvent *event)\n{\n    if (event->mimeData()->hasUrls())\n    {\n        //设置为移动动作,并且接受.\n        event->setDropAction(Qt::MoveAction);\n        event->accept();\n    }\n}\nvoid PeopleMesDialog::dragMoveEvent(QDragMoveEvent *event)\n{\n    if (event->mimeData()->hasUrls())\n    {\n        //设置为移动动作,并且接受.\n        event->setDropAction(Qt::MoveAction);\n        event->accept();\n    }\n}\nvoid PeopleMesDialog::dropEvent(QDropEvent *event)\n{\n    QPoint baseMapPoint = ui.pictureLabel->mapFromParent(event->pos());\n    QSize size = ui.pictureLabel->size();\n    QRect rect(QPoint(0,0),QPoint(size.width(),size.height()));\n    if (rect.contains(baseMapPoint))\n    {\n        QString path = event->mimeData()->urls().at(0).toLocalFile();\n        QPixmap pixmap(path);\n        if (pixmap.isNull())\n            return;\n        m_picturePath = path;\n        ui.pictureLabel->setPixmap(QPixmap(path));\n    }\n}\nvoid PeopleMesDialog::clearPictureSlot()\n{\n    ui.pictureLabel->clear();\n    ui.pictureLabel->setText(QString::fromLocal8Bit(\"你可以拖动图片进来\"));\n    m_picturePath = \"\";\n}\n```\n\nmain.cpp\n```\n#include \"c.h\"\n#include <QtWidgets/QApplication>\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n    c w;\n    w.show();\n    return a.exec();\n}\n```\n","tags":["qt"]},{"title":"[qt] 调用自己写的dll文件","url":"/2019/10/29//articles/2019/10/29/1572350152000.html/","content":"<a href=\"https://blog.csdn.net/baidu_36669549/article/details/82228425\" target=\"_blank\">Qt调用自己写的dll文件</a>\n\n","tags":["qt"]},{"title":"[qt] 调试","url":"/2019/10/29//articles/2019/10/29/1572350151000.html/","content":"<a href=\"https://blog.csdn.net/dennis_sck/article/details/80828701\" target=\"_blank\">QT5 掌握debug调试的方法（简要内容：Memory查看内存地址的数值 和 查看变量值）（图文并茂）</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 自定义控件","url":"/2019/10/29//articles/2019/10/29/1572350150000.html/","content":"<a href=\"https://blog.csdn.net/qq_15094525/article/category/5863621\" target=\"_blank\">QT自定义控件</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 实现tab切换","url":"/2019/10/29//articles/2019/10/29/1572350148000.html/","content":"顶部\n<a href=\"https://blog.csdn.net/baidu_36669549/article/details/76012689\" target=\"_blank\">QT手动生成选项卡窗口</a>\n\n左边横向\n<a href=\"https://blog.csdn.net/csu_passer/article/details/79160042\" target=\"_blank\">QT：选项卡界面实现总结</a>\n\n\n<a href=\"https://github.com/toby20130333/PageChanged\" target=\"_blank\">PageChanged</a>\n```\n一个简单的Qt-Widget页面的切换\n```\n\n<a href=\"https://github.com/hanxiaoluo/MultiPageDemo\" target=\"_blank\">MultiPageDemo</a>\n```\nqt实现的切换页效果\n```\n\n","tags":["qt"]},{"title":"[qt] 嵌入式监控","url":"/2019/10/29//articles/2019/10/29/1572350147000.html/","content":"<a href=\"https://github.com/Ranpop/QT-Monitor\" target=\"_blank\">QT-Monitor</a>\n```\nQT嵌入式实现监控，曲线绘制，视频图像显示，tcp/udp通信，Share内存通信等\n```\n","tags":["qt"]},{"title":"[qt] 嵌入式","url":"/2019/10/29//articles/2019/10/29/1572350146000.html/","content":"<a href=\"https://github.com/justdoit-mqr/Translation\" target=\"_blank\">Translation</a>\n```\n这是一个基于Qt开发的平移组件，主要应用在嵌入式触摸显示屏上，通过手触滑动切换页面显示。\n```\n","tags":["qt"]},{"title":"[qt] 列表","url":"/2019/10/29//articles/2019/10/29/1572350145000.html/","content":"<a href=\"https://www.jianshu.com/p/8fedc14b3ea8\" target=\"_blank\">Qt学习笔记（十三）列表（QListWidget）</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 利用QOpenGLWidget类进行opengl绘图","url":"/2019/10/29//articles/2019/10/29/1572350144000.html/","content":"<a href=\"https://blog.csdn.net/CPWWHSU/article/details/79773235\" target=\"_blank\">利用QOpenGLWidget类进行opengl绘图</a>\n```\nQT +=core gui opengl\nLIBS+=-lopengl32 -lglu32\n\n如果程序运行的结果为白框，不为黑框，可在main.cpp中，main函数第一行添加如下代码：\nQCoreApplication::setAttribute(Qt::AA_UseDesktopOpenGL);\n```\n","tags":["qt"]},{"title":"[qt] 局域网五子棋游戏","url":"/2019/10/29//articles/2019/10/29/1572350143000.html/","content":"<a href=\"https://blog.csdn.net/qq_32815807/article/details/78389453\" target=\"_blank\">csdn - Qt实现的局域网对战五子棋</a>\n<a href=\"https://segmentfault.com/a/1190000011769956\" target=\"_blank\">segmentfault - Qt实现的局域网对战五子棋</a>\n<a href=\"https://github.com/BENULL/GoBang\" target=\"_blank\">github GoBang</a>","tags":["qt"]},{"title":"[qt] 基本图形绘制：圆、圆角矩形、圆弧、椭圆、扇形","url":"/2019/10/29//articles/2019/10/29/1572350141000.html/","content":"<a href=\"https://www.cnblogs.com/lifexy/p/9203929.html\" target=\"_blank\">QT-QPainter介绍</a>\n```\n\n```\n\n<a href=\"https://blog.csdn.net/qq_40194498/article/details/79650641\" target=\"_blank\">Qt基本图形绘制（圆、圆角矩形、圆弧、椭圆、扇形等）</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 画板","url":"/2019/10/29//articles/2019/10/29/1572350140000.html/","content":"<a href=\"https://github.com/luoyayun361/Qt-WritingBoard\" target=\"_blank\">Qt-WritingBoard</a>\n<a href=\"https://www.cnblogs.com/douzujun/p/5790904.html\" target=\"_blank\">Qt5简易画板</a>\n```\nhttp://pan.baidu.com/s/1hsc41Ek\n密码:\n5hdg\n```\n","tags":["qt"]},{"title":"[qt] 电路设计、嵌入式编程、算法","url":"/2019/10/29//articles/2019/10/29/1572350139000.html/","content":"<a href=\"https://blog.csdn.net/liyuanbhu/article/category/1151068\" target=\"_blank\">qt电路设计、嵌入式编程、算法</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 地图","url":"/2019/10/29//articles/2019/10/29/1572350138000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E5%9C%B0%E5%9B%BE&ref=simplesearch\" target=\"_blank\">github qt 地图</a>\n\nQt和百度地图交互示例\n<a href=\"https://github.com/wtpluscn/lightmap.git\" target=\"_blank\">lightmap</a>\n\n使用Qt调用百度地图API\n<a href=\"https://github.com/toby20130333/QtBaiduMapApi\" target=\"_blank\">QtBaiduMapApi</a>\n```\nProject ERROR: Unknown module(s) in QT: webkit\nProject ERROR: Unknown module(s) in QT: widgets webkitwidgets\n\n\n根据Qt官方的解释（在Qt的帮助文档里也可以看到），在5.6版本以及之后的版本，Qt已经移除了webkitwidgets模块，并用一个新的模块webenginewidgets替代之。\nQt5.5.1是最后一个支持webkitwidgets的版本。\n\nQT       += core gui webenginewidgets\n```\n\n\nwebenginewidgets\nMingGW不能编译，要使用MSVC2017\n```\nhttps://doc.qt.io/archives/qt-5.6/qtwebenginewidgets-index.html\n\n示例1：\nhttps://github.com/doritang1/markdowneditor\n\n示例2：\nhttps://www.cnblogs.com/countryboy666/p/11071647.html\n```\n","tags":["qt"]},{"title":"[qt] 登录界面","url":"/2019/10/29//articles/2019/10/29/1572350137000.html/","content":"<a href=\"https://blog.csdn.net/qq_29132123/article/details/80423755\" target=\"_blank\">QT实现登陆注册界面并于Mysql相连接</a>\n\n<a href=\"https://blog.csdn.net/nanfeibuyi/article/details/79959043\" target=\"_blank\">QT 简单的QT用户登录界面</a>\n例子打包\n```\n链接:\nhttps://pan.baidu.com/s/1HEpNFghMDrBguMt93aRJ_A\n提取码:\nbg4n\n```\n\n登录界面\n<a href=\"https://github.com/CGLingit/QT5_login\" target=\"_blank\">QT5_login</a>\n```\n```\n\n使用 OpenCV 和 Qt 实现人脸（刷脸）登录\n<a href=\"https://github.com/huihut/FaceLogin\" target=\"_blank\">FaceLogin</a>\n```\nunzip att_faces.zip -d ./dataset  # 数据集文件夹名必须是 dataset\n```\n\nQT登录界面\n<a href=\"https://github.com/sy-long/login_demo_by_QT\" target=\"_blank\">login_demo_by_QT</a>\n\nQt登录功能含mysql数据库连接\n<a href=\"https://github.com/sumiting/QtLogin\" target=\"_blank\">QtLogin</a>\n","tags":["qt"]},{"title":"[qt] Widgets模块之QDesktopWidget","url":"/2019/10/29//articles/2019/10/29/1572350135000.html/","content":"<a href=\"https://blog.csdn.net/Explorer_day/article/details/80882327\" target=\"_blank\">Widgets模块之QDesktopWidget</a>\n```\n#include <QDesktopWidget>\n\nQT += widgets\n```\n","tags":["qt"]},{"title":"[qt] restful请求","url":"/2019/10/29//articles/2019/10/29/1572350134000.html/","content":"<a href=\"https://blog.csdn.net/u014378771/article/details/97759043\" target=\"_blank\">Qt调用RestFul服务</a>\n\nGET和POST请求代码例子\n<a href=\"https://github.com/xiefgen/QTRestFulDemo\" target=\"_blank\">QTRestFulDemo</a>\n","tags":["qt"]},{"title":"[qt] Qt在MacOSX下的编程环境搭建","url":"/2019/10/29//articles/2019/10/29/1572350133000.html/","content":"<a href=\"https://www.cnblogs.com/yiyi17/p/9359706.html\" target=\"_blank\">Qt在MacOSX下的编程环境搭建</a>\n在Mac OS X下使用Qt开发，需要配置Qt库和编译器。编译器只能使用苹果公司自主研发的Clang\n```\n1、分别下载并安装XCode和Command Line Tools(必须安装)，安装完毕后，Clang就有了\nhttps://developer.apple.com/downloads/\n```\n\n2、下载Qt并默认安装\n```\nhttp://download.qt.io/official_releases/qtcreator/\n得到安装包\nqt-creator-opensource-mac-x86_64-3.4.0.dmg\n\nhttp://download.qt.io/official_releases/qt/\n得到安装包\nqt-opensource-mac-5.10.1.dmg\nqt-opensource-mac-4.8.7-debug-libs.dmg\n\n前者是Qt release版的SDK，必须安装；\n后者是debug版的SDK，可选安装，如果用户需要单步断点调试，则必须安装。\n```\n\n```\nLLVM和Clang\nhttp://www.llvm.org/\nhttp://clang.llvm.org/\n\nMinGW和GCC\nhttp://www.mingw.org/\nhttp://gcc.gnu.org/\n```\n","tags":["qt"]},{"title":"[qt] QT实战一二三","url":"/2019/10/29//articles/2019/10/29/1572350132000.html/","content":"<a href=\"https://blog.csdn.net/u011012932/article/category/9265357/6\" target=\"_blank\">《Qt 实战一二三》</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] QT将tableview导出到Excel表格","url":"/2019/10/29//articles/2019/10/29/1572350131000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/kangshuaibing/article/details/86467630\" target=\"_blank\">QT将tableview导出到Excel表格</a>\n```\nQT       += axcontainer\n\n#include<QAxObject>\n```\n\nExcelUtil.h\n```\n#ifndef EXCELUTIL_H\n#define EXCELUTIL_H\n\n//#pragma once\n#include <ActiveQt/QAxObject>\n#include <QDir>\n#include <QFile>\n#include <qstring.h>\n\nclass ExcelUtil\n{\npublic:\n    ExcelUtil();\n    ~ExcelUtil();\n\n    //将数据保存为excel\n    bool static save(QString filePath,QStringList headers,QList<QStringList> data,QString comment=\"\");\n    //将QTableView保存为excel\n    bool static saveFromTable(QString filePath,QTableView *tableView,QString comment=\"\");\n    bool static insert(QSqlQuery& query, QString sheetName, QStringList slist);\n\n};\n\n#endif // EXCELUTIL_H\n```\n\nExcelUtil.cpp\n```\n#include \"ExcelUtil.h\"\n\nExcelUtil::ExcelUtil()\n{\n}\n\nExcelUtil::~ExcelUtil()\n{\n}\n\nbool ExcelUtil::saveFromTable(QString filePath, QTableView *tableView, QString comment)\n{\n    QAbstractItemModel *model=tableView->model();\n    const int column=model->columnCount();\n    const int row=model->rowCount();\n \n    //header\n    QStringList headers;\n    for(int i=0;i<column;i++)\n    {\n        //隐藏列\n        if(tableView->isColumnHidden(i))\n            continue;\n        headers<<model->headerData(i,Qt::Horizontal).toString();\n    }\n \n    //data\n    QStringList list;\n    QList<QStringList> data;\n    for(int i=0;i<row;i++)\n    {\n        if(model->index(i,0).data().isNull())\n            continue;\n        list.clear();\n        for(int j=0;j<column;j++){\n            //隐藏列\n            if(tableView->isColumnHidden(j))\n                continue;\n            list<<model->index(i,j).data().toString();\n        }\n        data<<list;\n    }\n    return ExcelUtil::save(filePath,headers,data,comment);\n}\nbool ExcelUtil::save(QString filePath, QStringList headers, QList<QStringList> data,QString comment)\n{\n    QString sheetName = \"Sheet1\";\n \n    // 创建一个数据库实例， 设置连接字符串\n    QSqlDatabase dbexcel = QSqlDatabase::addDatabase(\"QODBC\",\"excelexport\");\n    if(!dbexcel.isValid())\n    {\n        qDebug()<<\"数据库驱动异常\";\n        return false;   //! type error\n    }\n \n    QString dsn = QString(\"DRIVER={Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)};DSN='';FIRSTROWHASNAMES=1;READONLY=FALSE;CREATE_DB=\\\"%1\\\";DBQ=%2\").\n                  arg(filePath).arg(filePath);\n    qDebug()<<dsn;\n    dbexcel.setDatabaseName(dsn);\n \n    // open connection\n    if(!dbexcel.open())\n    {\n         qDebug()<<\"无法打开数据库\";\n        return false;  //! db error\n    }\n \n    QSqlQuery query(dbexcel);\n    QString sql;\n \n    // drop the table if it's already exists\n    sql = QString(\"DROP TABLE [%1]\").arg(sheetName);\n    query.exec( sql);\n    //create the table (sheet in Excel file)\n    sql = QString(\"CREATE TABLE [%1] (\").arg(sheetName);\n    foreach (QString name, headers) {\n        sql +=QString(\"[%1] varchar(200)\").arg(name);\n        if(name!=headers.last())\n            sql +=\",\";\n    }\n    sql += \")\";\n    query.prepare(sql);\n    if( !query.exec()) {\n        //ExcelUtil::printError( query.lastError());\n        dbexcel.close();\n        return false;\n    }\n    foreach (QStringList slist, data) {\n        insert(query,sheetName,slist);\n    }\n    if(!comment.isEmpty())\n    {\n        QStringList slist;\n        slist<<comment;\n        for(int i=0,n=headers.size()-1;i<n;i++)\n        {\n            slist<<\"\";\n        }\n        insert(query,sheetName,slist);\n    }\n \n    dbexcel.close();\n    return true;\n}\nbool ExcelUtil::insert(QSqlQuery &query, QString sheetName, QStringList slist)\n{\n    QString sSql = QString(\"INSERT INTO [%1] VALUES(\").arg(sheetName);\n    for(int i=0,n=slist.size();i<n;i++)\n    {\n        sSql+=QString(\":%1\").arg(i);\n        if(i!=n-1)\n            sSql+=\",\";\n        else\n            sSql+=\")\";\n    }\n    query.prepare(sSql);\n    for(int i=0,n=slist.size();i<n;i++)\n    {\n        query.bindValue(QString(\":%1\").arg(i),slist.at(i));\n    }\n    if( !query.exec()) {\n \n        return false;\n    }\n    return true;\n}\n```\n\n\n```\n有一点需要注意的是，在调用Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)注意中间有空格\n```\n\n```\nvoid on_pushButtonOutExcel_clicked();\n```\n\nmainwindow.cpp\n```\nvoid MainWindow::on_pushButtonOutExcel_clicked()\n{\n    QFileDialog dlg;\n    QString filename;\n    dlg.setAcceptMode(QFileDialog::AcceptSave);\n    //  Qt 5\n    dlg.setDirectory(QStandardPaths::writableLocation(QStandardPaths::DesktopLocation));\n    //  Qt 4\n    //  dlg.setDirectory(QDesktopServices::storageLocation(QDesktopServices::DesktopLocation));\n    dlg.setNameFilter(\"*.xls\");\n    filename=QDate::currentDate().toString(\"yyyy-MM-dd\")+\"body.xls\"; \n    dlg.selectFile(filename);\n    if(dlg.exec()!= QDialog::Accepted)\n        return;\n    QString filePath=dlg.selectedFiles()[0];//得到用户选择的文件名\n    qDebug()<<filePath;\n    if(UIDemo01::saveFromTable(filePath,ui->tableViewCheck,\"注释：无\")) {\n        QMessageBox::information(this,tr(\"提示\"),tr(\"保存成功\"));\n    }\n    else{\n        QMessageBox::information(this,tr(\"提示\"),tr(\"保存失败\"));\n    }\n}\n```\n","tags":["qt"]},{"title":"[qt] QPropertyAnimation几行代码快速制作流畅的动画效果","url":"/2019/10/29//articles/2019/10/29/1572350130000.html/","content":"<a href=\"https://www.cnblogs.com/senior-engineer/p/8125300.html\" target=\"_blank\">QPropertyAnimation几行代码快速制作流畅的动画效果</a>\n\nmainwindow.h\n```\n#ifndef MAINWINDOW_H  \n#define MAINWINDOW_H  \n#include <QMainWindow>  \nnamespace Ui {  \nclass MainWindow;  \n}  \n  \nclass MainWindow : public QMainWindow  \n{  \n    Q_OBJECT  \npublic:  \n    explicit MainWindow(QWidget *parent = 0);  \n    ~MainWindow();  \nprivate:  \n    Ui::MainWindow *ui;  \n};  \n#endif // MAINWINDOW_H\n```\n\nmainwindow.cpp\n```\n#include <QPropertyAnimation>  \n#include \"mainwindow.h\"  \n#include \"ui_mainwindow.h\"  \n  \nMainWindow::MainWindow(QWidget *parent) :  \n    QMainWindow(parent),  \n    ui(new Ui::MainWindow)  \n{  \n    ui->setupUi(this);  \n  \n    /*  声明动画类，并将控制对象 this (this一定是继承自QObject的窗口部件)  以及属性名 \"geometry\" 传入构造函数  */  \n    QPropertyAnimation* animation = new QPropertyAnimation(this, \"geometry\");  \n    /*  设置动画持续时长为 2 秒钟  */  \n    animation->setDuration(2000);  \n    /*  设置动画的起始状态 起始点 (1,2)  起始大小 (3,4)  */  \n    animation->setStartValue(QRect(1, 2, 3, 4));  \n    /*  设置动画的结束状态 结束点 (100,200)  结束大小 (300,400)  */  \n    animation->setEndValue(QRect(100, 200, 300, 400));  \n    /*  设置动画效果  */  \n    animation->setEasingCurve(QEasingCurve::OutInExpo);  \n    /*  开始执行动画 QAbstractAnimation::DeleteWhenStopped 动画结束后进行自清理(效果就好像智能指针里的自动delete animation) */  \n    animation->start(QAbstractAnimation::DeleteWhenStopped);  \n}  \n  \nMainWindow::~MainWindow()  \n{  \n    delete ui;  \n}  \n```\n\n位置示例\n```\nvoid OEasyWebNotice::onShow() {  \n    QRect rect = QApplication::desktop()->availableGeometry();  \n    const int &endy = rect.height() - height();  \n    QPropertyAnimation *animation= new QPropertyAnimation(this,\"pos\");  \n    animation->setDuration(2000);  \n    animation->setStartValue(QPoint(rect.width() - width(), rect.height()));  \n    animation->setEndValue(QPoint(rect.width() - width(), endy));  \n    animation->setEasingCurve(QEasingCurve::OutCubic);  \n  \n    connect(animation, SIGNAL(finished()),  \n            this, SLOT(animationFinished()));  \n    show();  \n    animation->start(QAbstractAnimation::DeleteWhenStopped);  \n}\n```\n\n透明度示例\n```\nvoid OEasyWebNotice::onClose(void) {  \n    disconnect(closeButton_.get(),SIGNAL(clicked()),  \n            this, SLOT(onClose()));  \n  \n    QPropertyAnimation* animation = new QPropertyAnimation(this, \"windowOpacity\");  \n    animation->setDuration(1000);  \n    animation->setStartValue(1);  \n    animation->setEndValue(0);  \n    animation->setEasingCurve(QEasingCurve::InCirc);  \n    connect(animation, SIGNAL(finished()),  \n            this, SLOT(deleteLater()));  \n    show();  \n    animation->start(QAbstractAnimation::DeleteWhenStopped);  \n}\n```\n","tags":["qt"]},{"title":"[qt] QImage彩色图像转换为灰度图","url":"/2019/10/29//articles/2019/10/29/1572350129000.html/","content":"<a href=\"https://blog.csdn.net/liyuanbhu/article/details/46659725\" target=\"_blank\">Qt 中彩色图像转换为灰度图</a>\n```\nQImage toGray( QImage image )\n{\n    int height = image.height();\n    int width = image.width();\n    QImage ret(width, height, QImage::Format_Indexed8);\n    ret.setColorCount(256);\n    for(int i = 0; i < 256; i++)\n    {\n        ret.setColor(i, qRgb(i, i, i));\n    }\n    switch(image.format())\n    {\n    case QImage::Format_Indexed8:\n        for(int i = 0; i < height; i ++)\n        {\n            const uchar *pSrc = (uchar *)image.constScanLine(i);\n            uchar *pDest = (uchar *)ret.scanLine(i);\n            memcpy(pDest, pSrc, width);\n        }\n        break;\n    case QImage::Format_RGB32:\n    case QImage::Format_ARGB32:\n    case QImage::Format_ARGB32_Premultiplied:\n        for(int i = 0; i < height; i ++)\n        {\n            const QRgb *pSrc = (QRgb *)image.constScanLine(i);\n            uchar *pDest = (uchar *)ret.scanLine(i);\n \n            for( int j = 0; j < width; j ++)\n            {\n                 pDest[j] = qGray(pSrc[j]);\n            }\n        }\n        break;\n    }\n    return ret;\n}\n```\n","tags":["qt"]},{"title":"[qt] QGraphicsView平移缩放旋转","url":"/2019/10/29//articles/2019/10/29/1572350128000.html/","content":"<a href=\"https://blog.csdn.net/liang19890820/article/details/53543017\" target=\"_blank\">QGraphicsView平移缩放旋转</a>\n\ninteractive_view.h\n```\n#ifndef INTERACTIVE_VIEW_H\n#define INTERACTIVE_VIEW_H\n\n#include <QGraphicsView>\n\nclass QWheelEvent;\nclass QKeyEvent;\n\nclass InteractiveView : public QGraphicsView\n{\n    Q_OBJECT\npublic:\n    explicit InteractiveView(QWidget *parent = 0);\n\n    // 平移速度\n    void setTranslateSpeed(qreal speed);\n    qreal translateSpeed() const;\n\n    // 缩放的增量\n    void setZoomDelta(qreal delta);\n    qreal zoomDelta() const;\n\nprotected:\n    // 上/下/左/右键向各个方向移动、加/减键进行缩放、空格/回车键旋转\n    void keyPressEvent(QKeyEvent *event) Q_DECL_OVERRIDE;\n    // 平移\n    void mouseMoveEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\n    void mousePressEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\n    void mouseReleaseEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\n    // 放大/缩小\n    void wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\n\npublic Q_SLOTS:\n    void zoomIn();  // 放大\n    void zoomOut();  // 缩小\n    void zoom(float scaleFactor); // 缩放 - scaleFactor：缩放的比例因子\n    void translate(QPointF delta);  // 平移\n\nprivate:\n    Qt::MouseButton m_translateButton;  // 平移按钮\n    qreal m_translateSpeed;  // 平移速度\n    qreal m_zoomDelta;  // 缩放的增量\n    bool m_bMouseTranslate;  // 平移标识\n    QPoint m_lastMousePos;  // 鼠标最后按下的位置\n    qreal m_scale;  // 缩放值\n};\n\n#endif // INTERACTIVE_VIEW_H\n```\n\ninteractive_view.cpp\n```\n#include <QWheelEvent>\n#include <QKeyEvent>\n#include \"interactive_view.h\"\n\n#define VIEW_CENTER viewport()->rect().center()\n#define VIEW_WIDTH  viewport()->rect().width()\n#define VIEW_HEIGHT viewport()->rect().height()\n\nInteractiveView::InteractiveView(QWidget *parent)\n    : QGraphicsView(parent),\n      m_translateButton(Qt::LeftButton),\n      m_scale(1.0),\n      m_zoomDelta(0.1),\n      m_translateSpeed(1.0),\n      m_bMouseTranslate(false)\n{\n    // 去掉滚动条\n    setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n    setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n    setCursor(Qt::PointingHandCursor);\n    setRenderHint(QPainter::Antialiasing);\n\n    setSceneRect(INT_MIN/2, INT_MIN/2, INT_MAX, INT_MAX);\n    centerOn(0, 0);\n}\n\n// 平移速度\nvoid InteractiveView::setTranslateSpeed(qreal speed)\n{\n    // 建议速度范围\n    Q_ASSERT_X(speed >= 0.0 && speed <= 2.0,\n               \"InteractiveView::setTranslateSpeed\", \"Speed should be in range [0.0, 2.0].\");\n    m_translateSpeed = speed;\n}\n\nqreal InteractiveView::translateSpeed() const\n{\n    return m_translateSpeed;\n}\n\n// 缩放的增量\nvoid InteractiveView::setZoomDelta(qreal delta)\n{\n    // 建议增量范围\n    Q_ASSERT_X(delta >= 0.0 && delta <= 1.0,\n               \"InteractiveView::setZoomDelta\", \"Delta should be in range [0.0, 1.0].\");\n    m_zoomDelta = delta;\n}\n\nqreal InteractiveView::zoomDelta() const\n{\n    return m_zoomDelta;\n}\n\n// 上/下/左/右键向各个方向移动、加/减键进行缩放、空格/回车键旋转\nvoid InteractiveView::keyPressEvent(QKeyEvent *event)\n{\n    switch (event->key()) {\n    case Qt::Key_Up:\n        translate(QPointF(0, -2));  // 上移\n        break;\n    case Qt::Key_Down:\n        translate(QPointF(0, 2));  // 下移\n        break;\n    case Qt::Key_Left:\n        translate(QPointF(-2, 0));  // 左移\n        break;\n    case Qt::Key_Right:\n        translate(QPointF(2, 0));  // 右移\n        break;\n    case Qt::Key_Plus:  // 放大\n        zoomIn();\n        break;\n    case Qt::Key_Minus:  // 缩小\n        zoomOut();\n        break;\n    case Qt::Key_Space:  // 逆时针旋转\n        rotate(-5);\n        break;\n    case Qt::Key_Enter:  // 顺时针旋转\n    case Qt::Key_Return:\n        rotate(5);\n        break;\n    default:\n        QGraphicsView::keyPressEvent(event);\n    }\n}\n\n// 平移\nvoid InteractiveView::mouseMoveEvent(QMouseEvent *event)\n{\n    if (m_bMouseTranslate){\n        QPointF mouseDelta = mapToScene(event->pos()) - mapToScene(m_lastMousePos);\n        translate(mouseDelta);\n    }\n\n    m_lastMousePos = event->pos();\n\n    QGraphicsView::mouseMoveEvent(event);\n}\n\nvoid InteractiveView::mousePressEvent(QMouseEvent *event)\n{\n    if (event->button() == m_translateButton) {\n        // 当光标底下没有 item 时，才能移动\n        QPointF point = mapToScene(event->pos());\n        if (scene()->itemAt(point, transform()) == NULL)  {\n            m_bMouseTranslate = true;\n            m_lastMousePos = event->pos();\n        }\n    }\n\n    QGraphicsView::mousePressEvent(event);\n}\n\nvoid InteractiveView::mouseReleaseEvent(QMouseEvent *event)\n{\n    if (event->button() == m_translateButton)\n        m_bMouseTranslate = false;\n\n    QGraphicsView::mouseReleaseEvent(event);\n}\n\n// 放大/缩小\nvoid InteractiveView::wheelEvent(QWheelEvent *event)\n{\n    // 滚轮的滚动量\n    QPoint scrollAmount = event->angleDelta();\n    // 正值表示滚轮远离使用者（放大），负值表示朝向使用者（缩小）\n    scrollAmount.y() > 0 ? zoomIn() : zoomOut();\n}\n\n// 放大\nvoid InteractiveView::zoomIn()\n{\n    zoom(1 + m_zoomDelta);\n}\n\n// 缩小\nvoid InteractiveView::zoomOut()\n{\n    zoom(1 - m_zoomDelta);\n}\n\n// 缩放 - scaleFactor：缩放的比例因子\nvoid InteractiveView::zoom(float scaleFactor)\n{\n    // 防止过小或过大\n    qreal factor = transform().scale(scaleFactor, scaleFactor).mapRect(QRectF(0, 0, 1, 1)).width();\n    if (factor < 0.07 || factor > 100)\n        return;\n\n    scale(scaleFactor, scaleFactor);\n    m_scale *= scaleFactor;\n}\n\n// 平移\nvoid InteractiveView::translate(QPointF delta)\n{\n    // 根据当前 zoom 缩放平移数\n    delta *= m_scale;\n    delta *= m_translateSpeed;\n\n    // view 根据鼠标下的点作为锚点来定位 scene\n    setTransformationAnchor(QGraphicsView::AnchorUnderMouse);\n    QPoint newCenter(VIEW_WIDTH / 2 - delta.x(),  VIEW_HEIGHT / 2 - delta.y());\n    centerOn(mapToScene(newCenter));\n\n    // scene 在 view 的中心点作为锚点\n    setTransformationAnchor(QGraphicsView::AnchorViewCenter);\n}\n```\n\n","tags":["qt"]},{"title":"[qt] QDesktopServices打开文件、文件夹","url":"/2019/10/29//articles/2019/10/29/1572350127000.html/","content":"<a href=\"https://blog.csdn.net/mrfanhaibin/article/details/54315301\" target=\"_blank\">Qt之QDesktopServices</a>\n```\n#include  <QDesktopServices>\n```\n\n1、打开浏览器网页\n```\nQDesktopServices desktopServices;\nQUrl url(QString(\"www.baidu.com\"));\ndesktopServices.openUrl(url);\n```\n\n2、打开本地文件（夹）、可执行文件等\n```\nQString local_path = QString(\"E:/新建文件夹\"); //a.txt、a.exe、a.mp3、a.mp4、a.rmvb等\nQString path = QString(\"file:///\") + local_path;\nbool is_open = QDesktopServices::openUrl(QUrl(path, QUrl::TolerantMode));\n\n#注意：这里local_path可以是文件（夹）路径、可执行程序路径，当为文件时，会选择默认打开方式进行打开！ \n```\n\n3、获取桌面、我的文档、Home等目录的路径\n```\nQString desktop_path = QDesktopServices::storageLocation(QDesktopServices::DesktopLocation);\nQString document_path = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);\nQString home_path = QDesktopServices::storageLocation(QDesktopServices::HomeLocation);\nQString application_path = QDesktopServices::storageLocatio(QDesktopServices::ApplicationsLocation);\nQString temp_path = QDesktopServices::storageLocation(QDesktopServices::TempLocation);\n```\n\n4、QProcess也可以打开文件（夹）、可执行程序等\n```\nQString local_path = QString(\"E:\\\\新建文件夹\");\nbool is_start = QProcess::startDetached(\"explorer \" + local_path);\n```","tags":["qt"]},{"title":"[qt-qml] 博客专栏","url":"/2019/10/26//articles/2019/10/26/1572099610000.html/","content":"<a href=\"https://blog.csdn.net/zbw1185/article/category/6826425\" target=\"_blank\">QtQuick（QML）</a>\n```\nQML之自定义电池充电/电量显示效果\nhttps://blog.csdn.net/zbw1185/article/details/75042398\n\n\n```\n","tags":["qt-qml"]},{"title":"[qt-android] 智能家居","url":"/2019/10/26//articles/2019/10/26/1572099609000.html/","content":"<a href=\"https://github.com/zccrs/IntelligentHome\" target=\"_blank\">智能家居的客户端</a>\n","tags":["qt-android"]},{"title":"[qt-android] 词典","url":"/2019/10/26//articles/2019/10/26/1572099608000.html/","content":"<a href=\"https://github.com/Ji-Yuhang/dict-android\" target=\"_blank\">dict-android</a>\n","tags":["qt-android"]},{"title":"[qt] 在线手册","url":"/2019/10/26//articles/2019/10/26/1572099607000.html/","content":"<a href=\"http://shouce.jb51.net/qt-beginning/3.html\" target=\"_blank\">QT在线手册</a>\n```\n\n```\n\n","tags":["qt"]},{"title":"[qt] 游戏","url":"/2019/10/26//articles/2019/10/26/1572099606000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E6%B8%B8%E6%88%8F&ref=simplesearch\" target=\"_blank\">github qt 游戏</a>\n\n<a href=\"https://github.com/tashaxing/QtWuziqi\" target=\"_blank\">Qt 写的五子棋小游戏，带AI和双人对战</a>\n<a href=\"https://github.com/yeyinglong/MineSweep\" target=\"_blank\">Qt扫雷游戏</a>\n<a href=\"https://github.com/tashaxing/QtLianliankan\" target=\"_blank\">一个Qt写的连连看小游戏</a>\n<a href=\"https://github.com/xuchenqqq/SceneEditor\" target=\"_blank\">一款基于QT 5.3.2的游戏地图编辑器</a>\n<a href=\"https://github.com/moranzcw/FlappyBird\" target=\"_blank\">Qt编写的Flappy Bird游戏</a>\n<a href=\"https://github.com/2018YX-game/repo\" target=\"_blank\">使用MVVM框架开发的Qt小游戏</a>\n<a href=\"https://github.com/moranzcw/2048\" target=\"_blank\">2048</a>\n<a href=\"https://github.com/moranzcw/SuperHexagon\" target=\"_blank\">使用Qt编写的游戏SuperHexagon超级六边形</a>\n<a href=\"https://github.com/zwdnet/QTsnake\" target=\"_blank\">QT编程的贪食蛇游戏</a>\n<a href=\"https://github.com/zccrs/Aircraft-War\" target=\"_blank\">飞机大战</a>\n<a href=\"https://github.com/tashaxing/QtTetris\" target=\"_blank\">俄罗斯方块</a>\n<a href=\"https://github.com/Ji-Yuhang/maze\" target=\"_blank\">迷宫小游戏</a>\n<a href=\"https://github.com/inkeast/tick-Qt-game\" target=\"_blank\">双人非对称竞技游戏</a>\n<a href=\"https://github.com/ZaoHan415/GamePro\" target=\"_blank\">猫捉老鼠小游戏</a>\n<a href=\"https://github.com/LeoHsiao1/whack_a_mole\" target=\"_blank\">打地鼠游戏</a>\n<a href=\"https://github.com/CX1900/QTMap\" target=\"_blank\">RPG游戏</a>\n<a href=\"https://github.com/maybe4271/squared\" target=\"_blank\">拼图小游戏</a>\n<a href=\"https://github.com/justko/TankGame\" target=\"_blank\">坦克大战</a>\n<a href=\"https://github.com/1m188/PlayBricks_Qt\" target=\"_blank\">打砖块</a>\n<a href=\"https://github.com/3140102441/Chess-Game\" target=\"_blank\">翻转棋游戏</a>\n<a href=\"https://github.com/SeanLiaoy/Qt_FreeCell\" target=\"_blank\">纸牌游戏-当空接龙</a>\n<a href=\"https://github.com/LuoBingjun/Insaniquarium\" target=\"_blank\">怪怪水族馆游戏</a>\n<a href=\"https://github.com/XINCGer/AoDaMiaoTetris\" target=\"_blank\">Phonon框架编写的嗷大喵版俄罗斯方块小游戏</a>\n<a href=\"https://github.com/Ayle3125/SpongeBubble\" target=\"_blank\">2D射击类小游戏-实现了图像音乐等功能</a>\n<a href=\"https://github.com/cainxumo/629nb\" target=\"_blank\">流浪地球</a>\n\n\n<a href=\"https://www.haolovej.com/post/2018-03-07-%E5%9F%BA%E4%BA%8EQt%E5%BC%80%E5%8F%91%E5%9D%A6%E5%85%8B%E5%8A%A8%E8%8D%A1%E6%B8%B8%E6%88%8F%EF%BC%88%E6%8C%96%E5%9D%91%EF%BC%89.html\" target=\"_blank\">博客-坦克动荡</a>\n<a href=\"https://github.com/Bocity/tankwar\" target=\"_blank\">坦克动荡</a>\n","tags":["qt"]},{"title":"[qt] 硬件编程","url":"/2019/10/26//articles/2019/10/26/1572099605000.html/","content":"<a href=\"https://blog.csdn.net/xiaodingqq/article/details/86018954\" target=\"_blank\">QT实验分析教程 Qt中的字符串类，QString（9）</a>\n```\n\n```\n\n<a href=\"https://blog.csdn.net/qq_28877125/article/details/87400644#comments\" target=\"_blank\">Qt5--串口发送文件</a>","tags":["qt"]},{"title":"[qt] 音乐播放器(含代码)","url":"/2019/10/26//articles/2019/10/26/1572099604000.html/","content":"<a href=\"https://blog.csdn.net/xuancailinggan/article/details/49309761\" target=\"_blank\">自学QT之简易音乐播放器基于QT5.5</a>\n\n```\n播放器实现的功能：\n添加歌曲、上一首、暂停、下一首、切换歌曲、托盘、任务栏对歌曲进行操作\n```\n\nplayer.h\n```\n#ifndef PLAYER_H\n#define PLAYER_H\n \n#include <QWidget>\n#include <QMouseEvent>\n#include <QPoint>\n#include <QMediaPlayer>\n#include <QFileDialog>\n#include <QSystemTrayIcon>\n#include <QEvent>\n#include <QMenu>\n#include <QAction>\n#include \"about.h\"\n#include <QWinThumbnailToolButton>\n#include <QWinThumbnailToolBar>\n#include <QStandardItemModel>\n#include <QTableView>\n#include <QDirModel>\n#include <QDir>\n#include <QStringListIterator>\n#include <QMediaPlaylist>\n#include <QTimer>\n\n \nnamespace Ui {\nclass player;\n}\n \nclass player : public QWidget\n{\n    Q_OBJECT\n \npublic:\n    explicit player(QWidget *parent = 0);\n    ~player();\n    QPoint drag;//定义一个释放点\n    void mousePressEvent(QMouseEvent *);//窗口移动事件\n    void mouseMoveEvent(QMouseEvent *);//窗口移动事件\n    QMediaPlayer *myPlayer;\n    QSystemTrayIcon *trayIcon;\nprotected:\n    QAction *quitAction;\n    QAction *aboutAction;\n    QAction *nextAction;\n    QAction *pauseAction;\n    QAction *backAction;\n    QWinThumbnailToolButton *backToolBtn;\n    QWinThumbnailToolButton *pauseToolBtn;\n    QWinThumbnailToolButton *nextToolBtn;\n    QWinThumbnailToolBar *taskBar;\n    QStandardItemModel *songListModel;\n    QStringList path;\n    QMediaPlaylist *playList;\n    QTimer *timer;\n    qint64 pausePosition;\n    int currentIndex;\n \n \nprivate slots:\n    void on_closeBtn_clicked();\n    void on_miniBtn_clicked();\n    void on_pushButton_2_clicked();\n    void on_pauseBtn_clicked();\n    void on_volum_valueChanged(int value);\n    void tuopan(QSystemTrayIcon::ActivationReason reason);\n    void showAbout();\n    void myPlayerSlot(QModelIndex index);\n    void on_importBtn_clicked();\n    void setPosition();\n    void on_horizontalSlider_valueChanged(int value);\n    void on_nextBtn_clicked();\n    void on_backBtn_clicked();\n    void mediaChange(int);\n \nprivate:\n    Ui::player *ui;\n};\n \n#endif // PLAYER_H\n\n```\n\nplayer.cpp\n```\n#include \"player.h\"\n#include \"ui_player.h\"\n#include <QDebug>\n#include <QtWinExtras>\n#include <QList>\n \nplayer::player(QWidget *parent) :\n    QWidget(parent),\n    ui(new Ui::player)\n{\n    ui->setupUi(this);\n    this->setWindowFlags(Qt::FramelessWindowHint | Qt::WindowSystemMenuHint | Qt::WindowMinimizeButtonHint);//隐藏标题栏\n    setWindowIcon(QIcon(\":/new/prefix1/image/tray.jpg\"));\n    myPlayer=new QMediaPlayer();\n    ui->volum->setValue(50);\n    myPlayer->setVolume(ui->volum->value());\n    playList=new QMediaPlaylist;\n    trayIcon=new QSystemTrayIcon;\n    connect(trayIcon,SIGNAL(activated(QSystemTrayIcon::ActivationReason)),this,\n            SLOT(tuopan(QSystemTrayIcon::ActivationReason)));//将托盘图标和双击事件关联\n \n    QPixmap pixmap(\":/new/prefix1/image/background.jpg\");//当前文件夹下面的图片\n    QPalette palette = this->palette();\n    palette.setBrush(backgroundRole(), QBrush(pixmap));\n    connect(playList,SIGNAL(currentIndexChanged(int)),this,SLOT(mediaChange(int)));\n    setPalette(palette);\n \n    //任务栏按钮\n    QMenu * menu=new QMenu(this);\n    if (QtWin::isCompositionEnabled()) {\n        QtWin::enableBlurBehindWindow(menu);\n    } else{\n        QtWin::disableBlurBehindWindow(menu);\n        menu->hide();\n    }\n    taskBar=new QWinThumbnailToolBar();\n    taskBar->setWindow(windowHandle());\n    backToolBtn=new QWinThumbnailToolButton(taskBar);\n    backToolBtn->setToolTip(\"上一首\");\n    backToolBtn->setIcon(QIcon(\":/new/prefix1/image/back.png\"));\n    connect(backToolBtn,SIGNAL(clicked()),this,SLOT(on_backBtn_clicked()));\n    pauseToolBtn=new QWinThumbnailToolButton(taskBar);\n    connect(pauseToolBtn,SIGNAL(clicked()),this,SLOT(on_pauseBtn_clicked()));\n    pauseToolBtn->setToolTip(\"暂停\");\n    pauseToolBtn->setIcon(QIcon(\":/new/prefix1/image/pause.png\"));\n    nextToolBtn=new QWinThumbnailToolButton(taskBar);\n    nextToolBtn->setToolTip(\"下一首\");\n    nextToolBtn->setIcon(QIcon(\":/new/prefix1/image/next.png\"));\n    connect(nextToolBtn,SIGNAL(clicked()),this,SLOT(on_nextBtn_clicked()));\n    taskBar->addButton(backToolBtn);\n    taskBar->addButton(pauseToolBtn);\n    taskBar->addButton(nextToolBtn);\n    //歌曲列表\n    songListModel=new QStandardItemModel;\n    songListModel->setHorizontalHeaderItem(0,new QStandardItem(QObject::tr(\"歌曲列表\")));   \n    ui->songList->setModel(songListModel);\n    ui->songList->setColumnWidth(0,390);    \n    ui->songList->verticalHeader()->hide();\n    ui->songList->setEditTriggers(QAbstractItemView::NoEditTriggers);\n    ui->songList->setSelectionBehavior(QAbstractItemView::SelectRows);\n    connect(ui->songList,SIGNAL(doubleClicked(QModelIndex)),this,SLOT(myPlayerSlot(QModelIndex)));\n    //定时器\n    timer=new QTimer;\n    connect(timer,SIGNAL(timeout()),this,SLOT(setPosition()));\n}\n \nplayer::~player()\n{\n    delete ui;\n}\n \nvoid player::on_closeBtn_clicked()//单击关闭按钮，产生托盘和托盘菜单\n{\n    this->hide();\n    ui->nameLabel->styleSheet();\n    trayIcon->setIcon(QIcon(\":/new/prefix1/image/tray.jpg\"));\n    QMenu *trayMenu=new QMenu();\n    aboutAction=new QAction(tr(\"关于\"),this);\n    quitAction=new QAction(tr(\"退出\"),this);\n    trayMenu->addAction(aboutAction);\n    connect(aboutAction,SIGNAL(triggered(bool)),this,SLOT(showAbout()));\n    trayMenu->addAction(quitAction);\n    connect(quitAction,SIGNAL(triggered(bool)),this,SLOT(close()));\n    trayIcon->setContextMenu(trayMenu);\n    trayIcon->setToolTip(\"托盘图标\");\n    trayIcon->show();\n    trayIcon->showMessage(\"主人\",\"我在这里哦\",QSystemTrayIcon::Information,5000);//一定要放在这里，否则提示信息会不显示\n}\n \nvoid player::on_miniBtn_clicked()\n{\n    this->showMinimized();\n}\nvoid player::mousePressEvent(QMouseEvent *e)\n{\n    if(e->button()==Qt::LeftButton)//button()是按钮\n    {\n        drag=e->globalPos()-this->geometry().topLeft();//鼠标位置减去左上角的左边\n        e->accept();\n    }\n}\nvoid player::mouseMoveEvent(QMouseEvent *e)\n{\n    if(e->buttons()&Qt::LeftButton)//buttons()返回的是按钮状态\n    {\n        move(e->globalPos()-drag);\n        e->accept();\n    }\n}\n//选择歌曲\nvoid player::on_pushButton_2_clicked()\n{\n    QString path=QFileDialog::getOpenFileName(this,tr(\"选择一首歌曲\"),\"/\",\"*.mp3\");\n    QFileInfo fileInfo;\n    fileInfo=QFileInfo(path);\n    QString fileName=fileInfo.baseName();\n    ui->nameLabel->setText(fileName);\n    myPlayer->setMedia(QUrl::fromLocalFile(path));\n    myPlayer->play();\n \n}\n \n//暂停按钮\nvoid player::on_pauseBtn_clicked()\n{\n    switch (myPlayer->state()) {\n    case QMediaPlayer::PlayingState:\n        timer->stop();\n        currentIndex=playList->currentIndex();\n        pausePosition=myPlayer->position();\n        myPlayer->pause();\n        break;\n    case QMediaPlayer::PausedState:\n        myPlayer->setMedia(playList->media(currentIndex));\n        myPlayer->setPosition(pausePosition);\n        timer->start(1000);\n        myPlayer->play();\n        break;\n    default:\n        break;\n    }\n \n}\n//音量调节\nvoid player::on_volum_valueChanged(int value)\n{\n    myPlayer->setVolume(value);\n}\nvoid player::tuopan(QSystemTrayIcon::ActivationReason reason)//双击托盘图标，恢复程序正常界面\n{\n    switch (reason)\n    {\n    case QSystemTrayIcon::DoubleClick:\n        this->showNormal();\n        break;\n    default:\n        break;\n    }\n}\n//显示关于本程序对话框\nvoid player::showAbout()\n{\n    about showabout;\n    showabout.setModal(false);\n    showabout.setWindowTitle(\"关于本程序\");\n    showabout.exec();\n}\n \n//导入多首歌曲\nvoid player::on_importBtn_clicked()\n{\n    path=QFileDialog::getOpenFileNames(this,\"选择歌曲\",\"/\",\"(*.mp3)\");\n    int i=0;\n    QString addSongs;\n    QListIterator<QString> mylist(path);\n    while(mylist.hasNext())\n    {\n        addSongs=mylist.next();\n        QFileInfo fileInfo;\n        fileInfo=QFileInfo(addSongs);\n        QString fileName=fileInfo.fileName();\n        songListModel->setItem(i,0,new QStandardItem(fileName));\n        playList->addMedia(QUrl::fromLocalFile(addSongs));\n        i++;\n    }\n \n    playList->setPlaybackMode(QMediaPlaylist::Loop);\n    myPlayer->setPlaylist(playList);\n \n}\n//双击播放\nvoid player::myPlayerSlot(QModelIndex index)\n{\n \n    timer->start(1000);\n    int n=index.row();\n    playList->setCurrentIndex(n);\n \n//    myPlayer->setMedia(playList->currentMedia());这句话不能加，加了反而错误\n    myPlayer->play();\n}\n//设置播放进度条\nvoid player::setPosition()\n{\n    qint64 position=myPlayer->position();\n    ui->horizontalSlider->setMaximum(myPlayer->duration());\n    ui->horizontalSlider->setSliderPosition(position);\n}\nvoid player::on_horizontalSlider_valueChanged(int value)//快进和快退功能\n{\n    qint64 currentPosition=myPlayer->position();\n    if(qAbs(value-currentPosition)>2000&&(ui->horizontalSlider->value()!=0))\n    {\n        myPlayer->stop();\n        timer->stop();\n        myPlayer->setPosition(value);\n        timer->start();\n        myPlayer->play();\n    }\n}\n \nvoid player::on_nextBtn_clicked()//播放下一首\n{\n    if(playList->mediaCount()-playList->currentIndex()!=1)//这里注意的是，和我们正常数数一样，mediaCount是从1开始计数的\n    {\n        //myPlayer->setMedia(playList->media(playList->nextIndex()));\n        playList->setCurrentIndex(playList->nextIndex());\n        myPlayer->play();\n    }\n    else\n    {\n        playList->setCurrentIndex(0);\n       // myPlayer->setMedia(playList->media(0));\n        myPlayer->play();\n    }\n}\n \nvoid player::on_backBtn_clicked()//播放上一首\n{\n    if(playList->currentIndex()!=0)//这里注意的是，和我们正常数数一样，mediaCount是从1开始计数的\n    {\n        //myPlayer->setMedia(playList->media(playList->previousIndex()));\n        playList->setCurrentIndex(playList->previousIndex());\n        myPlayer->play();\n    }\n    else\n    {\n        playList->setCurrentIndex(playList->mediaCount()-1);\n        //myPlayer->setMedia(playList->media(playList->mediaCount()-1));\n        myPlayer->play();\n    }\n \n}\nvoid player::mediaChange(int i)\n{\n    ui->nameLabel->setText(path.at(i));\n}\n\n```\n\nabout.h\n```\n#ifndef ABOUT_H\n#define ABOUT_H\n \n#include <QWidget>\n#include <QDialog>\n \nclass about : public QDialog\n{\n    Q_OBJECT\npublic:\n    explicit about(QWidget *parent = 0);\n \nsignals:\n \npublic slots:\n};\n \n#endif // ABOUT_H\n```\n\nabout.cpp\n```\n#include \"about.h\"\n#include <QLabel>\n#include <QGridLayout>\n \nabout::about(QWidget *parent) : QDialog(parent){\n    QLabel *aboutLabel=new QLabel;\n    aboutLabel->setText(\"小黑版本QT音乐播放器\");\n    QHBoxLayout *mainLayout=new QHBoxLayout(this);\n    mainLayout->addWidget(aboutLabel,Qt::AlignCenter);\n}\n```\n\nmain.cpp\n```\n#include \"player.h\"\n#include <QApplication>\n \nint main(int argc, char *argv[]){\n    QApplication a(argc, argv);\n    player w;\n    w.show();\n \n    return a.exec();\n}\n```\n\n","tags":["qt"]},{"title":"[qt] 嵌入百度地图","url":"/2019/10/26//articles/2019/10/26/1572099602000.html/","content":"<a href=\"https://blog.csdn.net/qq_28877125/article/details/80561829\" target=\"_blank\">Qt5 - 嵌入百度地图</a>\n```\n\n\n```\n","tags":["qt"]},{"title":"[qt] 浏览器","url":"/2019/10/26//articles/2019/10/26/1572099601000.html/","content":"<a href=\"https://github.com/wurui1994/CefBrowser\" target=\"_blank\">CefBrowser</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 雷达图","url":"/2019/10/26//articles/2019/10/26/1572099600000.html/","content":"<a href=\"https://blog.csdn.net/qq_28877125/article/details/78429699\" target=\"_blank\">Qt5--雷达图</a>\n<a href=\"https://www.fearlazy.com/zb_users/upload/2017/09/CRadar.rar\" target=\"_blank\">CRadar.rar</a>\n```\n\n\n```\n","tags":["qt"]},{"title":"[qt] 动画","url":"/2019/10/26//articles/2019/10/26/1572099598000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E5%8A%A8%E7%94%BB&ref=simplesearch\" target=\"_blank\">github qt 动画</a>\n<a href=\"https://github.com/IfanTsai/flowers\" target=\"_blank\">qt表白动画程序</a>\n\n\n传统Qt C++开发应用程序（插件化框架搭建、酷炫的动画窗口、图表控件、多屏自适应、权限控制、VNC远程监控集成、WebEngine与Qt交互、按键声效）\n<a href=\"https://github.com/linuxzjh/traditionalDevelopment\" target=\"_blank\">traditionalDevelopment</a>\n\n<a href=\"https://github.com/YMhao/qt-animation\" target=\"_blank\">把链式图片做成动画</a>\n<a href=\"https://github.com/LonelySilen/ship\" target=\"_blank\">QT 动画练习</a>\n<a href=\"https://github.com/guochanglun/H5Creator-Qt\" target=\"_blank\">H5动画、声音贺卡</a>\n<a href=\"https://github.com/MRXY001/Bezier-Wave\" target=\"_blank\">贝塞尔曲线波浪</a>\n\n<a href=\"https://github.com/historyme/Shin.SpriteImage\" target=\"_blank\">精灵图片类</a>\n<a href=\"https://github.com/lsyefficient/qtfish\" target=\"_blank\">游动的鱼</a>\n<a href=\"https://github.com/MRXY001/Notification-Manager-V2\" target=\"_blank\">仿Windows消息控件</a>\n<a href=\"https://github.com/MRXY001/Notification-Manager\" target=\"_blank\">仿Windows消息，支持多通知、同时通知、开关动画</a>\n\n<a href=\"https://github.com/cyt2017/QGLViewer_animation\" target=\"_blank\">喷泉动画效果</a>\n```\n使用qt上封装的opengl，实现喷泉动画效果。\n粒子：三个函数：\n1、初始化，粒子的位置和速度；\n2、绘制，粒子的位置和颜色（使用opengl函数实现绘制）；\n3、动画，根据改变粒子的位置和速度，实现粒子动起来的效果。\n```\n\n<a href=\"https://github.com/lsyefficient/StartSplash\" target=\"_blank\">启动页闪屏动画</a>\n\n<a href=\"https://github.com/MRXY001/Interactive-Windows-Buttons\" target=\"_blank\">带动画交互的菜单、最小化、最大化、关闭按钮，强大自定义</a>\n```\n可交互的创意动态按钮\n特点\n所有颜色自定义\n鼠标悬浮渐变\n两种点击效果：鼠标点击渐变 / 水波纹动画（可多层波纹叠加）\n鼠标悬浮图标位置主动变化\n鼠标拖动图标抖动反弹效果\n鼠标进入父控件时开启出现效果，或启动时出现\n延迟出现的动画效果（多个按钮连续）\n记录开关状态\n直接设置 x、y 的圆角显示\n边框颜色设置\n禁用时半透明+点击穿透效果\n添加额外的边缘角标\n三种前景模式：图标、文字、带遮罩的图标（任意变色）\n支持QSS直接设置部分属性\n与父类 QPushButton 兼容\n时间准确性：根据时间戳计算动画进度，即使在低性能机器上也可准时完成动画\n稳定性：一按钮多功能，完美兼容多种情况下焦点事件\n极其强大的可扩展性，继承该按钮后可任意修改显示效果和动画效果\n```\n","tags":["qt"]},{"title":"[qt] 定时关机","url":"/2019/10/26//articles/2019/10/26/1572099597000.html/","content":"<a href=\"https://blog.csdn.net/what951006/article/details/53914877\" target=\"_blank\">Qt/C++ 定时关机-给女票用的</a>\n```\n```\n","tags":["qt"]},{"title":"[qt] 博客专栏","url":"/2019/10/26//articles/2019/10/26/1572099596000.html/","content":"<a href=\"https://blog.csdn.net/feiyangqingyun\" target=\"_blank\">飞扬青云 Qt自定义控件大全+UI定制+输入法</a>\n<a href=\"https://blog.csdn.net/yao_hou/article/category/9276099\" target=\"_blank\">张江键盘侠 - Qt开发教程专栏</a>\n\n\n<a href=\"https://blog.csdn.net/u013704336/article/category/2514049\" target=\"_blank\">流浪的鹅卵石 - QT项目</a>\n<a href=\"https://github.com/kevinlq\" target=\"_blank\">流浪的鹅卵石 - github</a>\n\n\n<a href=\"https://blog.csdn.net/HK_5788/article/details/42298925\" target=\"_blank\">Qt学习之路之文本编辑</a>\n<a href=\"https://blog.csdn.net/xiaomucgwlmx/article/category/7982757\" target=\"_blank\">SmallBottle-CGWLMX的博客</a>\n\nqt5 博客\n<a href=\"https://blog.csdn.net/mars_xiaolei/article/details/79424315\" target=\"_blank\">《Qt基础教程之Qt学习之路》</a>\n<a href=\"https://blog.csdn.net/qq_33154343/article/details/78587699#1.%E5%AE%89%E8%A3%85Qt5.9.2\" target=\"_blank\">VS2017专业版使用最新版Qt5.9.2教程（最新教材）</a>\n<a href=\"https://blog.csdn.net/mars_xiaolei/article/category/7098483/\" target=\"_blank\">《Qt学习笔记》</a>\n<a href=\"https://blog.csdn.net/qq_33154343/article/category/7454818\" target=\"_blank\">touwoyimuli - Qt</a>\n<a href=\"https://github.com/touwoyimuli/\" target=\"_blank\">github touwoyimuli</a>\n\n<a href=\"https://blog.csdn.net/wyansai/article/category/6189499\" target=\"_blank\">王严の博客</a>\n<a href=\"https://www.fearlazy.com/\" target=\"_blank\">www.fearlazy.com</a>\n<a href=\"https://blog.csdn.net/lmhuanying1012/article/category/7037259\" target=\"_blank\">Qt-网络编程</a>\n\n<a href=\"https://blog.csdn.net/what951006/article/category/9267735\" target=\"_blank\">Qt/C++开发实例教程</a>\n","tags":["qt"]},{"title":"[qt] 表白程序","url":"/2019/10/26//articles/2019/10/26/1572099594000.html/","content":"<a href=\"https://github.com/IfanTsai/flowers\" target=\"_blank\">qt表白动画程序-flowers</a>\n","tags":["qt"]},{"title":"[qt] 哔哩哔哩","url":"/2019/10/26//articles/2019/10/26/1572099593000.html/","content":"<a href=\"https://github.com/wurui1994/BiliPlayer\" target=\"_blank\">BiliPlayer</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] websocket","url":"/2019/10/26//articles/2019/10/26/1572099592000.html/","content":"<a href=\"https://github.com/zccrs/z-websocket-service\" target=\"_blank\">z-websocket-service</a>\n","tags":["qt"]},{"title":"[qt] QWebEngineView","url":"/2019/10/26//articles/2019/10/26/1572099591000.html/","content":"<a href=\"https://www.jianshu.com/p/352da0c95f3c\" target=\"_blank\">Qt嵌入浏览器（一）——QWebEngineView实现浏览器基本功能</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] qt5音乐播放器","url":"/2019/10/26//articles/2019/10/26/1572099590000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/daydream13580130043/article/details/79094643\" target=\"_blank\">Qt5 QMediaPlayer 音乐播放器</a>\n<a href=\"https://github.com/sundial-dreams/Qt5_Music/tree/master\" target=\"_blank\">Qt5_Music</a>\n\n<a href=\"https://blog.csdn.net/what951006/article/details/53746309\" target=\"_blank\">仿酷狗音乐播放器</a>\n<a href=\"https://github.com/what951006/KuGouDemo\" target=\"_blank\">KuGouDemo</a>\n","tags":["qt"]},{"title":"[qt] QT+HTML+JS混合编程","url":"/2019/10/26//articles/2019/10/26/1572099589000.html/","content":"<a href=\"https://blog.csdn.net/weixin_42436161/article/details/85265796\" target=\"_blank\">QT+HTML+JS混合编程(QT5.9+QWebEngineView +QWebchannel)</a>\n\n<a href=\"https://blog.csdn.net/sean_8180/article/details/81634425\" target=\"_blank\">QT QWebView/QWebEngineView使用</a>\n```\n1. Qt4中使用webkit模块；\n2. Qt5 ~Qt5.5使用webkitwidgets模块；\n3. Qt5.6以上版本使用webenginewidgets模块。\n\n```\n","tags":["qt"]},{"title":"[qt] markdown文本编辑器","url":"/2019/10/26//articles/2019/10/26/1572099588000.html/","content":"<a href=\"https://github.com/elerao/Smark\" target=\"_blank\">简洁的 Markdown 编辑器 Smark</a>\n```\n\n```\n","tags":["qt"]},{"title":"[sublime] 编码转换","url":"/2019/10/25//articles/2019/10/25/1571998266000.html/","content":"<a href=\"https://blog.csdn.net/lovewebeye/article/details/90374057\" target=\"_blank\">sublime文本编码自动识别，编码格式转换神器</a>\n```\n1，打开PackageControl ，输入install Package\n\n2, 输入ConvertToUtf8，安装该插件。\n```\n","tags":["sublime"]},{"title":"[qt] 中国象棋","url":"/2019/10/25//articles/2019/10/25/1571998265000.html/","content":"<a href=\"https://blog.csdn.net/weixin_33948416/article/details/93452152\" target=\"_blank\">基于QT的中国象棋</a>\n```\ndemo地址\nhttps://pan.baidu.com/s/1-eM0CM1KFkBTuPWpseM1bw\n提取码：\ntumq\n```\n\n<a href=\"https://www.cnblogs.com/daleyzou/p/9419927.html\" target=\"_blank\">基于Qt Creator实现中国象棋人机对战， c++实现</a>\n<a href=\"https://github.com/daleyzou/wobuku-ChineseChess\" target=\"_blank\">wobuku-ChineseChess（只包含登录和注册框）</a>\n<a href=\"https://github.com/daleyzou/wobuku\" target=\"_blank\">wobuku</a>\n\n<a href=\"https://www.write-bug.com/article/1552.html\" target=\"_blank\">Qt实现的宠物小精灵对战</a>\n\n<a href=\"https://blog.csdn.net/qq_33154343/article/details/89285968\" target=\"_blank\">QT5/C++项目：基于QT的跨平台网络对战象棋（二）（推荐★★★★）</a>\n","tags":["qt"]},{"title":"[qt] 图片打开、另存为、保存到指定位置操作","url":"/2019/10/25//articles/2019/10/25/1571998264000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_40388909/article/details/79241483\" target=\"_blank\">QT关于图片打开，另存为，保存到指定位置操作</a>\n```\n#include <QImage>\n#include <QPixmap>\n#include <QFileDialog>\n#include <QMessageBox>\n#include <QScreen>\n#include <QGuiApplication>\n\n\n```\n\n","tags":["qt"]},{"title":"[qt] 添加资源文件","url":"/2019/10/25//articles/2019/10/25/1571998263000.html/","content":"<a href=\"https://blog.csdn.net/goforwardtostep/article/details/79212468\" target=\"_blank\">Qt之实现图片轮播效果</a>\n```\n\n```\n\n<a href=\"https://blog.csdn.net/qq_38396292/article/details/83027300\" target=\"_blank\">QT 实现图片轮播</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 添加菜单","url":"/2019/10/25//articles/2019/10/25/1571998262000.html/","content":"<a href=\"https://blog.csdn.net/weixin_39510813/article/details/83348528\" target=\"_blank\">Qt添加菜单栏和工具栏</a>\n\n\n<a href=\"https://blog.csdn.net/yao_hou/article/details/80769560\" target=\"_blank\">Qt 添加菜单及菜单的事件响应（完整的示例）</a>\n```\n在设计上的菜单栏直接输入菜单名字，然后按【Enter】键，注意是【Enter】键\n\n然后就像按钮一样，响应 triggered() 信号，连接信号槽，代码和上面的一样\n```\n\nCaidan.h\n```\n#pragma once\n \n#include <QtWidgets/QMainWindow>\n#include \"ui_Caidan.h\"\n#include <QAction>\n \nclass Caidan : public QMainWindow\n{\n\tQ_OBJECT\n \npublic:\n\tCaidan(QWidget *parent = Q_NULLPTR);\n \nprivate slots:\n\tvoid pop1();\n\tvoid pop2();\n\tvoid pop3();\n \nprivate:\n\tUi::CaidanClass ui;\n\tQMenu *fileMenu;\n\tQMenu *editMenu;\n \n\tQAction *myAc1;\n\tQAction *myAc2;\n\tQAction *myAc3;\n};\n```\n\nCaidan.cpp\n```\n#include \"Caidan.h\"\n#include <QMessageBox>\n \nCaidan::Caidan(QWidget *parent)\n\t: QMainWindow(parent)\n{\n\tui.setupUi(this);\n\t\n\tmyAc1 = new QAction(this);\n\tmyAc1->setText(QString::fromLocal8Bit(\"新建\"));\n\tmyAc1->setStatusTip(\"This is ac1.\");      \n\t//myAc1->setShortcuts(QKeySequence::Print); //设置快捷方式\n\tmyAc1->setShortcut(QKeySequence(\"Ctrl+8\")); //随意指定快捷方式\n\tui.mainToolBar->addAction(myAc1);           //工具条\n\tconnect(myAc1, SIGNAL(triggered()), this, SLOT(pop1()));\n \n\tmyAc2 = new QAction(this);\n\tmyAc2->setText(QString::fromLocal8Bit(\"打开\"));\n\tmyAc2->setStatusTip(\"This is ac2\");\n\tconnect(myAc2, SIGNAL(triggered()), this, SLOT(pop2()));\n \n\tmyAc3 = new QAction(this);\n\tmyAc3->setText(QString::fromLocal8Bit(\"另存为\"));\n\tmyAc3->setStatusTip(\"This is ac3\");\n\tconnect(myAc3, SIGNAL(triggered()), this, SLOT(pop3()));\n \n\tfileMenu = menuBar()->addMenu(QString::fromLocal8Bit(\"文件\"));\n\tfileMenu->addAction(myAc1);\n\tfileMenu->addAction(myAc2);\n\tfileMenu->addAction(myAc3);\n \n\teditMenu = menuBar()->addMenu(QString::fromLocal8Bit(\"编辑\"));\n}\n \nvoid Caidan::pop1()\n{\n\tQMessageBox m(this);\n\tm.setWindowTitle(\"MyAction1\");\n\tm.setText(\"This is a messagebox for my action1.\");\n\tm.exec();\n}\n \nvoid Caidan::pop2()\n{\n\tQMessageBox m(this);\n\tm.setWindowTitle(\"MyAction2\");\n\tm.setText(\"This is a messagebox for my action2.\");\n\tm.exec();\n}\n \nvoid Caidan::pop3()\n{\n\tQMessageBox m(this);\n\tm.setWindowTitle(\"MyAction3\");\n\tm.setText(\"This is a messagebox for my action3.\");\n\tm.exec();\n}\n\n```\n","tags":["qt"]},{"title":"[qt] 串口通讯","url":"/2019/10/25//articles/2019/10/25/1571998260000.html/","content":"\nSerialWizard 串口调试助手\n<a href=\"https://github.com/changfeng1050/SerialWizard\" target=\"_blank\">SerialWizard</a>\n```\nSerialWizard是一个使用Qt & C++ 开发的跨平台串口调试工具\n```\n\n<a href=\"https://blog.csdn.net/imkelt/article/details/53000523\" target=\"_blank\">基于Qt 5.7 自己写一个漂亮的串口助手</a>\n<a href=\"https://blog.csdn.net/qq_40388909/article/details/79271266#comments\" target=\"_blank\">QT实现串口通讯</a>\n<a href=\"https://blog.csdn.net/u014695839/article/details/50611549\" target=\"_blank\">QT5串口编程 - 编写简单的上位机</a>\n\n\nlinux版本，基于QT的串口调试助手\n<a href=\"https://github.com/ninehills/serialtool\" target=\"_blank\">serialtool</a>","tags":["qt"]},{"title":"[qt] 摄像头拍摄","url":"/2019/10/25//articles/2019/10/25/1571998259000.html/","content":"<a href=\"https://blog.csdn.net/qq_40388909/article/details/79435432\" target=\"_blank\">QT 调用摄像头拍照</a>\n\nmainwindow.h\n```\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n \n#include <QMainWindow>\n#include <QCameraInfo>\n#include <QCameraViewfinder>\n#include <QCameraImageCapture>\n#include <QFileDialog>\n#include <QDebug>\n#include <QActionGroup>\n#include <QCamera>\n#include <QMediaRecorder>\n#include <QVariant>\n#include <QtWidgets>\n#include <QMediaRecorder>\n#include <QHBoxLayout>\n \nnamespace Ui {\nclass MainWindow;\n}\n \nclass MainWindow : public QMainWindow\n{\n    Q_OBJECT\n \npublic:\n    explicit MainWindow(QWidget *parent = 0);\n    ~MainWindow();\n \nprivate:\n    Ui::MainWindow *ui;\n    /* 摄像头设备 */\n    QCamera *camera;\n    /* 截图部件 */\n    QCameraImageCapture *imageCapture;\n    /* 摄像头取景器部件 */\n    QCameraViewfinder *viewfinder;\n \nprivate slots:\n \n    void setCamera(const QCameraInfo &cameraInfo);\n    void changeCameraDevice(QAction *action);\n};\n \n#endif // MAINWINDOW_H\n```\n\n","tags":["qt"]},{"title":"[qt] 设置窗体大小和背景颜色","url":"/2019/10/25//articles/2019/10/25/1571998258000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_40388909/article/details/79460175\" target=\"_blank\"></a>\n\n1、一种方法是设置它的最大窗口值和最小窗口值，并且使最大值和最小值相等\n```\n简单的示例：\nsetMinimumSize(370, 150);\nsetMaximumSize(370, 150);\n\n此时窗口大小便被固定为\n(370, 150)\n```\n\n2、一种方法是使用setFixedSize()，这样一句话就可以解决问题\n```\n简单的示例：\nsetFixedSize(365,240);\n```\n\n3、设置窗体背景颜色、窗口的最大化按钮将变得不可用\n```\nQPalette palette(this->palette());\npalette.setColor(QPalette::Background, Qt::black);\n```\n","tags":["qt"]},{"title":"[qt] 麦克风录制声音","url":"/2019/10/25//articles/2019/10/25/1571998257000.html/","content":"<a href=\"https://blog.csdn.net/qq_40388909/article/details/79436070\" target=\"_blank\">QT录制麦克风声音</a>\n```\n```\n\n","tags":["qt"]},{"title":"[qt] 轮播图","url":"/2019/10/25//articles/2019/10/25/1571998256000.html/","content":"\n<a href=\"https://github.com/MovingPig/CarouselImageWindow\" target=\"_blank\">CarouselImageWindow</a>\n\n<a href=\"https://blog.csdn.net/goforwardtostep/article/details/79212468\" target=\"_blank\">Qt之实现图片轮播效果</a>\n```\n\n```\n\n<a href=\"https://blog.csdn.net/qq_38396292/article/details/83027300\" target=\"_blank\">QT 实现图片轮播</a>\n```\n\n```\n\n<a href=\"https://www.jianshu.com/p/3ba5b6fe7980\" target=\"_blank\">QLabel实现图片轮播效果</a>\n\n","tags":["qt"]},{"title":"[qt] 局域网聊天","url":"/2019/10/25//articles/2019/10/25/1571998255000.html/","content":"\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E5%B1%80%E5%9F%9F%E7%BD%91%E8%81%8A%E5%A4%A9&ref=simplesearch\" target=\"_blank\">github 搜索 qt 局域网聊天</a>\n\n<a href=\"https://github.com/zchai/chat.git\" target=\"_blank\">简易局域网聊天工具（QT开发）</a>\n```\n#以上程序编译后还需要打包\nwindeployqt chat.exe\n\n\n#缺失的库文件（可忽略，无作用）\nlibgcc_s_seh-1.dll\nhttp://z1.zhaodll.net:8888/2017/l/libgcc_s_seh-1.zip\n\nhttp://360jq.jb51.net:81/dll/2013/libstdc6_dll_jb51.net.rar\nlibstdc++-6.dll\n\nhttp://tzidc.jb51.net:81/dll/2013/libgcc_s_sjlj-1_jb51.net.rar\nlibgcc_s_sjlj-1.dll\n```\n\n<a href=\"https://www.cnblogs.com/tornadomeet/archive/2012/07/04/2576355.html\" target=\"_blank\">qt 局域网聊天</a>\n```\ntcpclient.cpp文件内容有问题\n```\n\n```\n应用程序\nhttps://pan.baidu.com/s/1nhgeRdWWScAVRXhUMIHTbw \n密码: \npc5x\n```\n\n```\n基于webqq协议的qq客户端，qt开发，可跨平台\n```\n<a href=\"https://github.com/zccrs/QQStars\" target=\"_blank\">QQStars</a>","tags":["qt"]},{"title":"[qt] 截图、保存截图、复制到系统剪切板","url":"/2019/10/25//articles/2019/10/25/1571998254000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/w464960660/article/details/88317460\" target=\"_blank\">练习使用QPixmap、QDesktopWidget、QClipboard类</a>\n```\nQT5.1\n截图实现、保存截图、复制到系统剪切板：练习使用QPixmap、QDesktopWidget、QClipboard类\n```\n","tags":["qt"]},{"title":"[qt] 各种路径","url":"/2019/10/25//articles/2019/10/25/1571998253000.html/","content":"<a href=\"https://blog.csdn.net/liyuanbhu/article/details/53710249\" target=\"_blank\">Qt 程序获取程序所在路径、用户目录路径、临时文件夹等特殊路径的方法</a>\n```\n\n```\n\n","tags":["qt"]},{"title":"[qt] 打印机","url":"/2019/10/25//articles/2019/10/25/1571998252000.html/","content":"<a href=\"https://github.com/search?utf8=%E2%9C%93&q=qt+%E6%89%93%E5%8D%B0%E6%9C%BA&ref=simplesearch\" target=\"_blank\">qt 打印机</a>\n\n<a href=\"https://github.com/eitail/QT_Printer\" target=\"_blank\">QT_Printer</a>\n```\n\n```","tags":["qt"]},{"title":"[qt] 打包以及命令","url":"/2019/10/25//articles/2019/10/25/1571998251000.html/","content":"<a href=\"https://www.jianshu.com/p/c0323b4efc77\" target=\"_blank\">Qt程序打包</a>\n\n\n<a href=\"https://blog.csdn.net/lxj434368832/article/details/80814388\" target=\"_blank\">Qt程序打包发布方法（使用官方提供的windeployqt工具）</a>\n```\nwindeployqt hellomw.exe\nwindeployqt helloqml.exe\n```\n","tags":["qt"]},{"title":"[qt] QChart动态曲线","url":"/2019/10/25//articles/2019/10/25/1571998248000.html/","content":"<a href=\"https://blog.csdn.net/yao_hou/article/details/99485813\" target=\"_blank\">QChart教程（一）：QChart实现动态曲线</a>\n```\n\n```\n\n<a href=\"https://blog.csdn.net/yao_hou/article/details/99601664\" target=\"_blank\">QChart教程（二）：VS2017 Qt使用QChart实现柱状图，饼状图</a>\n\n<a href=\"https://blog.csdn.net/yao_hou/article/details/99659916\" target=\"_blank\">QChart教程（三）：QChart实现柱状图</a>\n\n","tags":["qt"]},{"title":"[ui] app视觉设计规范","url":"/2019/10/25//articles/2019/10/25/1571959020000.html/","content":"<a href=\"https://www.zcool.com.cn/work/ZMjk3ODEyOTI=.html\" target=\"_blank\">APP设计规范</a>\n","tags":["ui"]},{"title":"[android] 隐藏虚拟键","url":"/2019/10/25//articles/2019/10/25/1571958085000.html/","content":"\nandroid隐藏底部虚拟键Navigation Bar实现全屏(虚拟按键home，back，menu)\n<a href=\"https://blog.csdn.net/sweiqin/article/details/49884395\" target=\"_blank\">参考</a>\n```\n\n```\n","tags":["android"]},{"title":"[画册] 安防系统画册","url":"/2019/10/25//articles/2019/10/25/1571958083000.html/","content":"<a href=\"https://www.zcool.com.cn/work/ZMjA2NTI1NzI=.html\" target=\"_blank\">安防系统画册</a>\n","tags":["画册"]},{"title":"[ui] 常用设计图","url":"/2019/10/25//articles/2019/10/25/1571958082000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n================== app start ==================\n<a href=\"https://www.zcool.com.cn/work/ZMTQ5MDI4NDQ=.html\" target=\"_blank\">电商app</a>\n<a href=\"https://www.zcool.com.cn/collection/ZMjc1NjkyODQ=?from=search&word=%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2\" target=\"_blank\">app登录注册页面</a>\n<a href=\"https://www.zcool.com.cn/work/ZMTU0OTY5MzY=.html\" target=\"_blank\">产品APP的登录注册页面</a>\n\n<a href=\"https://www.zcool.com.cn/work/ZMjMxMzE0NzY=.html\" target=\"_blank\">时间范围</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjgyNDgyMDA=.html\" target=\"_blank\">手环app</a>\n<a href=\"https://www.zcool.com.cn/collection/ZMjY3MzA4NTI=?from=search&word=%E7%89%A9%E8%81%94%E7%BD%91\" target=\"_blank\">物联网app</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjUwODc4MDg=.html\" target=\"_blank\">物联网web</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzA3MTcyODA=.html\" target=\"_blank\">物业生活社区app</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjg5NDA5NzI=.html\" target=\"_blank\">移动端OA系统</a>\n<a href=\"https://www.zcool.com.cn/work/ZMTc2MTA1MzI=.html\" target=\"_blank\">智能家居</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzEwNjcwNDg=.html\" target=\"_blank\">租房app</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzk5NzY0NTI=.html\" target=\"_blank\">如程小程序改版</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjM0NTU4MzY=.html\" target=\"_blank\">设计APP</a>\n```\n交易明细\n手机验证码\n账号设置\n```\n<a href=\"https://www.zcool.com.cn/work/ZMjE2MzU0NDA=.html\" target=\"_blank\">嘟嘟社区商家版APP</a>\n```\n确认订单\n购物车\n商城分类\n\n家政（月嫂、保姆）服务，\n项目编辑页（含：图片编辑、文本域）\n```\n\n<a href=\"https://www.zcool.com.cn/work/ZMTUwOTk5NjA=.html\" target=\"_blank\">智能机器狗手机app界面设计</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzU5MjUyNTI=.html\" target=\"_blank\">登录注册页面大全</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzk2Nzg4MjQ=.html\" target=\"_blank\">金融理财app</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzk2MjEzNDA=.html\" target=\"_blank\">家居 app（含城市选择页）</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzkyNTUwNDA=.html\" target=\"_blank\">（推荐）善食商城APP提案</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzkyNTU2Mjg=.html\" target=\"_blank\">（推荐）UI中国APP提案</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjA2NjQ2MjQ=.html\" target=\"_blank\">（专项）智能空调界面</a>\n================== app end ==================\n\n\n<a href=\"https://www.zcool.com.cn/work/ZMjk3Nzg1Mjg=.html\" target=\"_blank\">产品宣传页</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjA2NTI1NzI=.html\" target=\"_blank\">安防系统画册</a>\n<a href=\"https://www.zcool.com.cn/search/content?&word=%E8%8F%9C%E5%8D%95\" target=\"_blank\">菜单</a>\n\n\n================== web start ==================\n<a href=\"https://www.zcool.com.cn/collection/ZMjg1NDQxNDQ=\" target=\"_blank\">pc系统</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzQ2MjU0Mjg=.html\" target=\"_blank\">OA管理系统</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzM5NzM5NzI=.html\" target=\"_blank\">erp系统</a>\n\n<a href=\"https://www.zcool.com.cn/work/ZMjQ0NDIxMzI=.html\" target=\"_blank\">web表单</a>\n<a href=\"https://www.zcool.com.cn/work/ZMzc3NTUwMDA=.html\" target=\"_blank\">web登录注册页面</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjI3OTc2Mjg=.html\" target=\"_blank\">财务业务系统</a>\n<a href=\"https://www.zcool.com.cn/collection/ZMjg1MDc2MTY=\" target=\"_blank\">考勤</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjgzNjEyNDQ=.html\" target=\"_blank\">课程培训系统</a>\n<a href=\"\" target=\"_blank\">列表页</a>\n<a href=\"\" target=\"_blank\">设置页</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjcyOTQyMzY=.html\" target=\"_blank\">数据表</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjcyNTIzNDQ=.html\" target=\"_blank\">数据可视化1</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjc3OTYyOTI=.html\" target=\"_blank\">数据可视化2</a>\n<a href=\"https://www.zcool.com.cn/collection/ZMjY0OTE5MDg=\" target=\"_blank\">后台数据页面</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjIzODA0OTI=.html\" target=\"_blank\">图表设计</a>\n<a href=\"https://www.zcool.com.cn/work/ZMjk3ODE0ODA=.html\" target=\"_blank\">企业网站</a>\n<a href=\"https://www.zcool.com.cn/work/ZMTkyODI3NDQ=.html\" target=\"_blank\">公司系统网站设计</a>\n\n================== web end ==================\n\n\n\n================== ppt start ==================\n<a href=\"https://www.zcool.com.cn/work/ZMjI1NzU3OTY=.html\" target=\"_blank\">企业PPT模板</a>\n================== ppt start ==================","tags":["ui"]},{"title":"[android] 图片压缩","url":"/2019/10/24//articles/2019/10/23/1571924656000.html/","content":"<a href=\"https://www.jianshu.com/p/e907eca48334\" target=\"_blank\">Android图片压缩（bitmap的五种压缩方式）</a>\n\n","tags":["android"]},{"title":"[qt] 追加库引用-官方文档","url":"/2019/10/24//articles/2019/10/23/1571924654000.html/","content":"<a href=\"https://doc.qt.io/qt-5/qwinthumbnailtoolbar.html\" target=\"_blank\">QWinThumbnailToolBar</a>\n```\n#include <QWinThumbnailToolBar>\n\nQT += winextras\n```\n","tags":["qt"]},{"title":"[qt] 添加事件","url":"/2019/10/24//articles/2019/10/23/1571924654000.html/","content":"<a href=\"https://blog.csdn.net/aaa123524457/article/details/78710180\" target=\"_blank\">QT 为按钮添加事件</a>\n```\n\n```\n","tags":["qt"]},{"title":"[qt] 网络请求","url":"/2019/10/24//articles/2019/10/23/1571924652000.html/","content":"\n<a href=\"https://www.cnblogs.com/Braveliu/p/9361792.html\" target=\"_blank\">Qt 添加 QtNetwork 库文件</a>\n```\n【1】若使用QTCreator开发程序\n在工程的pro文件中添加：QT += network\n\n【2】若使用VS + QT开发程序\n```\n\n<a href=\"https://blog.csdn.net/wyansai/article/details/80635028\" target=\"_blank\">QT - HTTP网络请求，使用curl模拟Network模块</a>\n\n<a href=\"https://blog.csdn.net/wyansai/article/details/52903692\" target=\"_blank\">QT-多线程知识（例子：多线程下载小说）</a>\n\n<a href=\"https://www.cnblogs.com/wurui1994/p/7661242.html\" target=\"_blank\">Qt5网络请求使用及WebRequest函数</a>\n\n<a href=\"https://blog.csdn.net/m0_37182645/article/details/82120668\" target=\"_blank\">如何使用Qt调用基于SpringCloud的Rest服务</a>\n```\n// URL\nQString url = \"http://localhost:8080/piedata\";\n\n// 请求\nQNetworkRequest request;\nrequest.setUrl(QUrl(url));\n\nQNetworkAccessManager *manager = new QNetworkAccessManager(this);\n// 发送请求,get\nQNetworkReply *replay = manager->get(request);\n\n// 开启一个局部的事件循环，等待响应结束，退出\nQEventLoop eventLoop;\nQObject::connect(manager, &QNetworkAccessManager::finished, &eventLoop, &QEventLoop::quit);\neventLoop.exec();\n\n// 获取响应信息\nQByteArray bytes = replay->readAll();\n```\n","tags":["qt"]},{"title":"[qt] 实现登录注册","url":"/2019/10/24//articles/2019/10/23/1571924650000.html/","content":"<a href=\"https://blog.csdn.net/qq_35153254/article/details/78233002\" target=\"_blank\">用Qt实现基于网络请求的用户登录（一）</a>\n","tags":["qt"]},{"title":"[qt] 日志输出","url":"/2019/10/24//articles/2019/10/23/1571924649000.html/","content":"<a href=\"https://blog.csdn.net/hp_cpp/article/details/83580525\" target=\"_blank\">Qt实现Logger日志 - 轻量级开源库QsLog的使用</a>\n\n<a href=\"https://www.cnblogs.com/brifuture/p/9203919.html\" target=\"_blank\">Qt学习（3）日志输出</a>\n<a href=\"https://github.com/BriFuture/blog-code-example/tree/master/18-06to09/xmlreader\" target=\"_blank\">xmlreader</a>\n<a href=\"https://www.hexcode.cn/article/show/qt5-log\" target=\"_blank\">Qt5中使用日志系统</a>\n","tags":["qt"]},{"title":"[cocos2dx] 跑酷游戏","url":"/2019/10/24//articles/2019/10/23/1571924648000.html/","content":"<a href=\"https://github.com/tashaxing/MyParkourGame\" target=\"_blank\">跑酷游戏</a>\n\n","tags":["cocos2dx"]},{"title":"[qt] 进度条","url":"/2019/10/24//articles/2019/10/23/1571924648000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/xuancailinggan/article/details/48398921\" target=\"_blank\">QT之进度条</a>\n\n\nQt进度条QProgressBar的使用\n<a href=\"https://blog.csdn.net/yao_hou/article/details/80179087\" target=\"_blank\">参考</a>\nSliderDemo.h\n```\n#pragma once\n\n#ifndef SLIDERDEMO_H\n#define SLIDERDEMO_H\n\n#include <QMainWindow>\n#include <QTimer>\n\nnamespace Ui {\nclass SliderDemo;\n}\n\nclass SliderDemo : public QMainWindow\n{\n    Q_OBJECT\n\npublic:\n    explicit SliderDemo(QWidget *parent = nullptr);\n    ~SliderDemo();\n\npublic slots:\n    void slotStart();\n    void slotStop();\n    void slotProcessBar();\n\nprivate:\n    Ui::SliderDemo *ui;\n    QTimer *m_timer;\n};\n\n#endif // SLIDERDEMO_H\n```\n\nSliderDemo.cpp\n```\n#include \"SliderDemo.h\"\n#include \"ui_sliderdemo.h\"\n\nSliderDemo::SliderDemo(QWidget *parent) :\n    QMainWindow(parent),\n    ui(new Ui::SliderDemo)\n{\n    ui->setupUi(this);\n\n    m_timer = new QTimer(this);\n\n    ui->progressBar->setRange(0, 99);\n    ui->progressBar->setValue(0);\n\n    connect(ui->btn_Start, SIGNAL(clicked()), this, SLOT(slotStart()));\n    connect(ui->btn_Stop, SIGNAL(clicked()), this, SLOT(slotStop()));\n\n    //接收到timeout信号，定时器工作\n    connect(m_timer, SIGNAL(timeout()), this, SLOT(slotProcessBar()));\n}\n\nSliderDemo::~SliderDemo()\n{\n    delete ui;\n}\n\n//控制进度条\nvoid SliderDemo::slotProcessBar()\n{\n    static int pos = 0;\n    if (pos == 100)\n    {\n        m_timer->stop();\n        return;\n    }\n\n    ui->progressBar->setValue(pos++);\n}\n\n//开启定时器\nvoid SliderDemo::slotStart()\n{\n    m_timer->start(100);\n}\n\n//关闭定时器\nvoid SliderDemo::slotStop()\n{\n    m_timer->stop();\n}\n```\n","tags":["qt"]},{"title":"[qt] 代码格式化","url":"/2019/10/24//articles/2019/10/23/1571924647000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\nQT格式化代码\n```\nctrl+A 全选\nctrl+I 格式化\n```","tags":["qt"]},{"title":"[qt] 打包发布","url":"/2019/10/24//articles/2019/10/23/1571924646000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://blog.csdn.net/wyansai/article/details/80550723\" target=\"_blank\">QT - 程序打包发布</a>\n```\n一、新建windows系统的菜单右键\n\n1、Win+R 运行regedit，打开注册表。\n\n2、新建目录：\nHKEY_CLASSES_ROOT\\*\\shell\\DeployQt\\command\n\n3、设置默认值为：\nD:\\AppData\\Qt\\5.8\\msvc2013\\bin\\windeployqt.exe \"%1\" --dir=output --no-translations --no-opengl-sw --no-system-d3d-compiler --release --no-compiler-runtime\n\n二、右键发布exe程序\n1、如图所示，即可在当前目录下生成需要发布的dll文件\n\n```\n","tags":["qt"]},{"title":"[qt] string转QBytearray","url":"/2019/10/24//articles/2019/10/23/1571924643000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nstructCameraInfo tmpCameraInfo;\nstring strData = tmpCalibrateReq.images(i).data();\nstring strCameraName = tmpCalibrateReq.images(i).camera_name();\nQFile file;\nQString strImgPath = qApp->applicationDirPath() + \"/\" + QString::fromStdString(strCameraName) + \".jpg\";\nfile.setFileName(strImgPath);\nif(file.open(QIODevice::WriteOnly))\n{\n    //QByteArray tmpByteArray = QString::fromStdString(strData).toLatin1();这种写法是错误的\n　　 QByteArray tmpByteArray(strData.c_str(), strData.length());//这才是正确的\n    file.write(tmpByteArray);\n    file.close();\n}\n```","tags":["qt"]},{"title":"[qt] json","url":"/2019/10/24//articles/2019/10/23/1571924641000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_35153254/article/details/78233002\" target=\"_blank\">QJson的生成与解析</a>\n\n常用的Json库\n```\nQJson\n\nQJson是一个基于Qt的开发包用来将JSON数据解析成QVariant对象，JSON的数组将被映射为QVariantList实例，而其他对象映射为QVariantMap实例。\n网址：\nhttp://qjson.sourceforge.net/\n\n关于Qt中对JSON的生成与解析，Qt5以前的版本，需要去进行单独下载、编译，才能使用。到了Qt5，提供了专门的QJsonDocument类来读取和写入JSON文档。\n```\n","tags":["qt"]},{"title":"[珠海] 居住证作用","url":"/2019/10/24//articles/2019/10/24/1571872292000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"http://zh.bendibao.com/live/2016428/43210.shtm\" target=\"_blank\">珠海居住证有什么用- 珠海本地宝</a>\n\n珠海居住证有什么用？\n```\n办理出入境证件（限广东省户籍）；\n\n换领、补领居民身份证（珠海可异地换领补领身份证的省份城市有哪些（动态更新））；\n\n机动车登记；\n\n申领机动车驾驶证；\n\n报名参加职业资格考试、申请授予职业资格；\n\n办理生育服务登记和其他计划生育证明材料；\n\n积分入学（2017珠海积分入学）；\n\n国家规定的其他便利。\n```\n\n","tags":["珠海"]},{"title":"[js] 时间范围工具","url":"/2019/10/23//articles/2019/10/23/1571834853000.html/","content":"<a href=\"https://blog.csdn.net/alan_liuyue/article/details/78311491\" target=\"_blank\">js根据当前时间获取指定范围内的时间段日期</a>\n","tags":["js"]},{"title":"[jfinal] 下载文件","url":"/2019/10/23//articles/2019/10/23/1571834852000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/m0_37934074/article/details/78130412\" target=\"_blank\">JFinal文件下载及设置路径</a>\n\n一：利用超链接\n```\n    <a href=\"/download/a.docx\">download</a>\n```\n二：java代码\n1.页面\n```\n    <a href=\"/download\">下载</a>\n```\n2.路径\n```\n    public void configConstant(Constants me) {\n        me.setBaseUploadPath(\"upload\");// 配置文件上传路径\n        me.setBaseDownloadPath(\"/download\");//配置文件下载路径\n    }\n```\n3.代码\n```\n    public void download() {\n        String path = getSession().getServletContext().getRealPath(\"download\");\n        File file = new File(path + \"/a.docx\");\n        System.out.println(path);\n        System.out.println(file.exists());\n        if (file.exists()) {\n            renderFile(file);\n        } else {\n            renderJson(\"文件不存在\");\n        }\n    }\n```\n\n<a href=\"https://yq.aliyun.com/articles/662197\" target=\"_blank\">jfinal框架文件下载功能代码</a>\n```\n    //jfinal文件下载，使用普通io流方式下载\n    public void downloadFile() throws IOException{\n\n        //通过pathkit.getwebrootpath获取项目的根目录，或者在config配置默认的文件下载根路径\n        String basePath = PathKit.getWebRootPath() +\"/upload/jpg\";\n\n        //获取前台的传递的文件名（包括文件格式，例如\"test.jpg\"）\n        String fileName = getPara(\"downFileName\");\n\n        //根据根目录和文件名，拼接成完整的file路径\n        String targetPath = basePath+File.separator+fileName;\n\n        //普通IO流实现下载的功能\n        HttpServletResponse res = getResponse(); //创建response回应\n        res.setContentType(\"text/html; charset=UTF-8\"); //设置编码字符\n        res.setContentType(\"application/x-msdownload\"); //设置内容类型\n        res.setHeader(\"Content-disposition\", \"attachment;filename=\"+fileName);//设置下载的文件名称\n        OutputStream out = res.getOutputStream();   //创建页面返回方式为输出流，可弹出下载框\n\n        //创建输入流读取文件\n        InputStream is = new FileInputStream(targetPath); \n        byte[] Buffer = new byte[4096];\n        int size = 0; \n        while((size=is.read(Buffer)) != -1){\n            out.write(Buffer, 0, size); \n        }\n\n        //关闭和释放流\n        out.flush();\n        out.close();\n        is.close();\n        renderNull();\n    }\n```\n\n```\nHttpSession session = getSession();\n```\n\n\n\nhttps://blog.csdn.net/qq_36073929/article/details/78326881\n```\n//下载\npublic void download(){\n\tString text = this.getPara(\"text\").replaceAll(\"/\", \"\\\\\\\\\");\n\n\t//要导出的数据文件\n\tString path=JFinal.me().getServletContext().getRealPath(\"/\")+text;\n\n\tFile file = new File(path);\n\n\t//判断文件是否存在\n\tif(file.exists()){\n\t\tSystem.out.println(\"yes \"); \n\t\tthis.setAttr(\"state\", \"0\");\n\t\tthis.renderJson();\n\t\treturn;\n\t}else{\n\t\tSystem.out.println(\"no \");\n\t\tthis.setAttr(\"state\", \"FAILED\");\n\t\tthis.renderJson();\n\t\treturn ;\n\t}\n}\n\t\n//下载成功\npublic void downloadOk(){\n\tString text = this.getPara(\"text\").replaceAll(\"/\", \"\\\\\\\\\");\n\t\n\tString path=JFinal.me().getServletContext().getRealPath(\"/\")+text;//要导出的数据文件\n\tSystem.out.println(path);\n\t\n\tthis.renderFile(new File(path));\n}\n```\n\n```\n//点击直接下载\nfunction clickDownload(text){\n    console.log(text);\n    $.ajax({\n        url:'${path}/qtxz/download',\n        type:'POST',\n        async:false,\n        data:{'text':text},\n        dataType:'json',\n        success:function(obj){\n        \tif(obj.state == \"0\"){\n        \t\twindow.open('${path}/qtxz/downloadOk?text='+text);\n        \t}else{\n        \t\talert(\"文件丢失\");\n        \t}\n    \t},\n        error:function(obj){\n            alert(\"系统错误!\");\n        }\n    });\n}\n```\n\n","tags":["jfinal"]},{"title":"[jfinal] 文档","url":"/2019/10/23//articles/2019/10/23/1571834851000.html/","content":"<a href=\"http://www.jfinal.com/doc/3-8\" target=\"_blank\">jfinal文档</a>\n","tags":["jfinal"]},{"title":"[jfinal] 日志打印","url":"/2019/10/23//articles/2019/10/23/1571834850000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\nhttps://blog.csdn.net/u013727805/article/details/79939643\n\n\nimport org.apache.log4j.Logger;\nimport com.jfinal.log.Log;\n\nprivate final static Logger LOGGER = Logger.getLogger(LogController.class);\nprivate final static Log LOG = Log.getLog(LogController.class);\n\n```\n","tags":["jfinal"]},{"title":"[jfinal] excel导出","url":"/2019/10/23//articles/2019/10/23/1571834849000.html/","content":"<a href=\"https://my.oschina.net/superzhu/blog/597915\" target=\"_blank\">JFinal学习-Excel导出</a>\n\n\n```\njfinal实现点击a标签直接下载文件\nhttps://blog.csdn.net/qq_36073929/article/details/78326881\n```\n\n```\npublic void download(){\n\tString text = this.getPara(\"text\").replaceAll(\"/\", \"\\\\\\\\\");\n\tString path=JFinal.me().getServletContext().getRealPath(\"/\")+text;//要导出的数据文件\n\t\n\t File file = new File(path);\n\t if(file.exists()){//判断文件是否存在\n\t\t System.out.println(\"yes \"); \n\t\t this.setAttr(\"state\", \"0\");\n\t\t this.renderJson();\n\t\t return;\n\t }else{\n\t\t System.out.println(\"no \");\n\t\t this.setAttr(\"state\", \"FAILED\");\n\t\t this.renderJson();\n\t\t return ;\n\t }\n}\n```\n","tags":["jfinal"]},{"title":"[jfinal] @Before(POST.class)以及@Before(GET.class)","url":"/2019/10/23//articles/2019/10/23/1571834848000.html/","content":"\n```\n@Before(POST.class) 以及 @Before(GET.class)\n```\n","tags":["jfinal"]},{"title":"[jfinal] jfinal-ext文档","url":"/2019/10/23//articles/2019/10/23/1571834847000.html/","content":"<a href=\"https://github.com/b1412/jfinal-ext/blob/master/doc/doc.org\" target=\"_blank\">jfinal-ext文档</a>\n\n","tags":["jfinal"]},{"title":"[layui] 时间范围选择","url":"/2019/10/23//articles/2019/10/23/1571834765000.html/","content":"<a href=\"https://blog.csdn.net/qq_21178933/article/details/78581206\" target=\"_blank\">layui时间控件选择时间范围</a>\n```\n```\n","tags":["layui"]},{"title":"[js] json转换url参数","url":"/2019/10/23//articles/2019/10/23/1571834764000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nvar json = { sh: '上海' }\n\nvar params = Object.keys(json).map(function (key) {\n\treturn encodeURIComponent(key) + \"=\" + encodeURIComponent(json[key]);\n}).join(\"&\");\n```\n","tags":["js"]},{"title":"[ui] 物联网-智能家居","url":"/2019/10/23//articles/2019/10/23/1571831035000.html/","content":"<a href=\"https://www.zcool.com.cn/collection/ZMjY3MzA4NTI=?from=search&word=%E7%89%A9%E8%81%94%E7%BD%91\" target=\"_blank\">智能家居</a>\n","tags":["ui"]},{"title":"[单片机] 哔哩哔哩Proteus仿真基础教程","url":"/2019/10/23//articles/2019/10/23/1571831034000.html/","content":"<a href=\"https://www.bilibili.com/video/av44785314\" target=\"_blank\">哔哩哔哩Proteus仿真基础教程</a>\n```\n```\n","tags":["单片机"]},{"title":"[ui] 电气监控","url":"/2019/10/23//articles/2019/10/23/1571831033000.html/","content":"<a href=\"https://www.zcool.com.cn/work/ZMjMwNTQwMjg=.html\" target=\"_blank\">ui 电气监控</a>\n","tags":["ui"]},{"title":"[qt] 项目作品","url":"/2019/10/23//articles/2019/10/23/1571831032000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://www.cnblogs.com/feiyangqingyun/category/1296899.html\" target=\"_blank\">Qt编写自定义控件1 至 72</a>\n```\n超过160个精美控件，涵盖了各种仪表盘、进度条、进度球、指南针、曲线图、标尺、温度计、导航条、导航栏，flatui、高亮按钮、滑动选择器、农历等。远超qwt集成的控件数量。\n每个类都可以独立成一个单独的控件，零耦合，每个控件一个头文件和一个实现文件，不依赖其他文件，方便单个控件以源码形式集成到项目中，较少代码量。qwt的控件类环环相扣，高度耦合，想要使用其中一个控件，必须包含所有的代码。\n全部纯Qt编写，QWidget+QPainter绘制，支持Qt4.6到Qt5.13的任何Qt版本，支持mingw、msvc、gcc等编译器，支持任意操作系统比如windows+linux+mac+嵌入式linux等，不乱码，可直接集成到Qt Creator中，和自带的控件一样使用，大部分效果只要设置几个属性即可，极为方便。\n每个控件都有一个对应的单独的包含该控件源码的DEMO，方便参考使用。同时还提供一个所有控件使用的集成的DEMO。\n每个控件的源代码都有详细中文注释，都按照统一设计规范编写，方便学习自定义控件的编写。\n每个控件默认配色和demo对应的配色都非常精美。\n超过130个可见控件，6个不可见控件。\n部分控件提供多种样式风格选择，多种指示器样式选择。\n所有控件自适应窗体拉伸变化。\n集成自定义控件属性设计器，支持拖曳设计，所见即所得，支持导入导出xml格式。\n自带activex控件demo，所有控件可以直接运行在ie浏览器中。\n集成fontawesome图形字体+阿里巴巴iconfont收藏的几百个图形字体，享受图形字体带来的乐趣。\n所有控件最后生成一个动态库文件(dll或者so等)，可以直接集成到qtcreator中拖曳设计使用。\n目前已经有qml版本，后期会考虑出pyqt版本，如果用户需求量很大的话。\n自定义控件插件开放动态库使用（永久免费），无任何后门和限制，请放心使用。\n目前已提供32个版本的dll，其中qt_5_7_0_mingw530_32这个版本会一直保证最新的完整的。\n不定期增加控件和完善控件，不定期更新SDK，欢迎各位提出建议，谢谢！\nQt入门书籍推荐霍亚飞的《Qt Creator快速入门》《Qt5编程入门》，Qt进阶书籍推荐官方的《C++ GUI Qt4编程》。\n强烈推荐程序员自我修养和规划系列书《大话程序员》《程序员的成长课》《解忧程序员》，受益匪浅，受益终生！\nSDK地址：https://gitee.com/feiyangqingyun/QUCSDK https://github.com/feiyangqingyun/qucsdk\n```\n<a href=\"https://gitee.com/feiyangqingyun/QUCSDK\" target=\"_blank\">QUCSDK</a>\n<a href=\"https://github.com/feiyangqingyun/qucsdk\" target=\"_blank\">qucsdk</a>\n\n\n<a href=\"https://www.cnblogs.com/feiyangqingyun/p/11257191.html\" target=\"_blank\">Qt编写项目作品大全（自定义控件+输入法+大屏电子看板+视频监控+楼宇对讲+气体安全等）</a>\n\n```\n一、自定义控件大全\nSDK下载链接：\nhttps://pan.baidu.com/s/1A5Gd77kExm8Co5ckT51vvQ\n提取码：\n877p\n\n\n二、输入法\n体验地址：\nhttps://pan.baidu.com/s/1vIyEdB4QGo5OvxLYj7kq5g\n提取码：\nsysn\n\n三、气体安全管理系统\n体验地址：\nhttps://pan.baidu.com/s/1uQsDQO5E5crUBN2J-nPeLQ\n提取码：\n1jkp\n\n四、可视化大屏电子看板系统\n体验地址：\nhttps://pan.baidu.com/s/1o97IGvZgTgDhlkuXQa4B0w\n提取码：\nr2bv\n\n五、视频监控系统\nhttps://pan.baidu.com/s/1bbL2ZughZAgfIGrexyN-9g\n提取码：\nzkeh\n名称：\nbin_video_system\n\n六、楼宇对讲管理平台\n体验地址：\nhttps://pan.baidu.com/s/1uQsDQO5E5crUBN2J-nPeLQ\n提取码：\n1jkp\n名称：\nbin_TB.zip\n\n\n七、视频监控内核\n体验地址：\nhttps://pan.baidu.com/s/1bbL2ZughZAgfIGrexyN-9g\n提取码：\nzkeh\n名称：\nbin_video_vlc\nbin_video_ffmpeg\n\n\n八、皮肤生成器+UIDemo\n体验地址：\nhttps://pan.baidu.com/s/1uQsDQO5E5crUBN2J-nPeLQ\n提取码：\n1jkp\n名称：\nbin_uidemo.zip\n\n\n九、Onvif搜索和云台控制工具\n体验地址：\nhttps://pan.baidu.com/s/1bbL2ZughZAgfIGrexyN-9g\n提取码：\nzkeh\n名称：\nbin_video_onvif.zip\n\n\n十、控件属性设计器\n体验地址：\nhttps://pan.baidu.com/s/1A5Gd77kExm8Co5ckT51vvQ\n提取码：\n877p\n名称：\n可执行文件.zip\n\n十一、自定义曲线图柱状图\nhttps://pan.baidu.com/s/1uQsDQO5E5crUBN2J-nPeLQ\n提取码：\n1jkp\n名称：\nbin_customplot.zip\n\n\n十二、 数据导出到Excel及Pdf和打印数据\nhttps://pan.baidu.com/s/1uQsDQO5E5crUBN2J-nPeLQ\n提取码：\n1jkp\n名称：\nbin_dataout.zip\n\n```\n","tags":["qt"]},{"title":"[qt] 编译android产生的问题","url":"/2019/10/23//articles/2019/10/23/1571831029000.html/","content":"```\nerror: cannot find -lc++\nlinker command failed with exit code 1 (use -v to see invocation)\n```\n","tags":["qt"]},{"title":"[office_word] 创建目录","url":"/2019/10/23//articles/2019/10/23/1571831028000.html/","content":"<a href=\"https://blog.csdn.net/keepiss/article/details/79651999\" target=\"_blank\">office_word_如何创建目录</a>\n","tags":["office_word"]},{"title":"[qt] Qt5.12.2+vs2017开发","url":"/2019/10/20//articles/2019/10/20/1571575463000.html/","content":"<a href=\"https://www.cnblogs.com/YiYA-blog/p/10735334.html\" target=\"_blank\">Qt第一个小程序(使用vs2017开发)</a>\n","tags":["qt"]},{"title":"[qt] 实战","url":"/2019/10/20//articles/2019/10/20/1571572467000.html/","content":"<a href=\"https://blog.csdn.net/xiaomucgwlmx/article/category/7982757\" target=\"_blank\">QT实战项目应用</a>\n","tags":["qt"]},{"title":"[qt] ubuntu16+QtCreator+C项目示例","url":"/2019/10/20//articles/2019/10/20/1571572466000.html/","content":"<a href=\"https://www.cnblogs.com/hbtmwangjin/articles/9023218.html\" target=\"_blank\">Qt Creator的安装及创建C项目示例</a>\n","tags":["qt"]},{"title":"[单片机] 自制甲醛检测仪","url":"/2019/10/20//articles/2019/10/20/1571572007000.html/","content":"<a href=\"https://www.jianshu.com/p/ea649c23e6c3\" target=\"_blank\">自制甲醛检测仪</a>\n<a href=\"http://pan.baidu.com/s/1kVDtBZT\" target=\"_blank\">度娘 Chinked-out工作室资料合辑</a>\n","tags":["单片机"]},{"title":"[单片机] 专栏","url":"/2019/10/20//articles/2019/10/20/1571572006000.html/","content":"<a href=\"https://www.jianshu.com/c/1968a329778e\" target=\"_blank\">单片机学习</a>\n<a href=\"https://blog.csdn.net/xiaocheng_sky/category_6353142.html\" target=\"_blank\">51单片机</a>\n<a href=\"https://www.jianshu.com/u/80d050ea3288\" target=\"_blank\">兔子泽</a>\n<a href=\"https://blog.csdn.net/xiaocaidayong/category_6843881.html\" target=\"_blank\">单片机c语言</a>\n<a href=\"https://mrs.pub/category/51mcu\" target=\"_blank\">单片机 瑞生网</a>\n<a href=\"http://www.51hei.com/bbs/dpj-118059-1.html\" target=\"_blank\">单片机DHT11温度湿度测试仪设计报告(非常详细) </a>\n\nArduino\n```\nDHT11温湿度传感器模块使用方法和驱动代码实现\nhttps://www.cnblogs.com/lulipro/p/10815338.html\n```\n","tags":["单片机"]},{"title":"[单片机] 嵌入式系统仿真开发软件proteus","url":"/2019/10/20//articles/2019/10/20/1571572004000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\n链接: \nhttps://pan.baidu.com/s/11pmRzzS83W7lTDyLsega4g\n提取码:\nm3uq\n```\n","tags":["单片机"]},{"title":"[单片机] 开发工具及使用","url":"/2019/10/20//articles/2019/10/20/1571572003000.html/","content":"<a href=\"https://blog.csdn.net/qq_44713454/article/details/98889913\" target=\"_blank\">keil5使用教程</a>\n\n<a href=\"https://blog.csdn.net/weixin_42602730/article/details/81007685\" target=\"_blank\">嵌入式STM32开发环境之Keil5的安装(附资源)</a>\n","tags":["单片机"]},{"title":"[单片机] 工具USR-TCP232-Test-V1.3的使用","url":"/2019/10/20//articles/2019/10/20/1571572002000.html/","content":"含有 工具USR-TCP232-Test-V1.3的使用\n<a href=\"https://www.jianshu.com/p/f95441572a31\" target=\"_blank\">参考</a>\n","tags":["单片机"]},{"title":"[单片机] 单片机小白学步(0) ~ (9)","url":"/2019/10/20//articles/2019/10/20/1571572001000.html/","content":"\n<a href=\"https://www.jianshu.com/c/94142cd62309\" target=\"_blank\">单片机小白学步 专栏</a>\n<a href=\"https://www.jianshu.com/p/0313064872ac\" target=\"_blank\">单片机小白学步(0) 序</a>\n<a href=\"https://www.jianshu.com/p/79d8c51a37cb\" target=\"_blank\">单片机小白学步(1) 单片机的前世今生</a>\n<a href=\"https://www.jianshu.com/p/c127d198021b\" target=\"_blank\">单片机小白学步(2) 爱上单片机的一万个理由</a>\n<a href=\"https://www.jianshu.com/p/6f8fd2e7109c\" target=\"_blank\">单片机小白学步(4) 模拟电路、传统数字电路与单片机</a>\n<a href=\"https://www.jianshu.com/p/e37133a86b39\" target=\"_blank\">单片机小白学步(5) 集成电路、封装相关知识</a>\n<a href=\"https://www.jianshu.com/p/bc805a6d9fc8\" target=\"_blank\">单片机小白学步(6) 单片机最小系统——麻雀虽小，五脏俱全</a>\n<a href=\"https://www.jianshu.com/p/7376041830e8\" target=\"_blank\">单片机小白学步(7) 准备实验板——萝卜青菜，各有所爱</a>\n<a href=\"https://www.jianshu.com/p/bdbad55e77ba\" target=\"_blank\">单片机小白学步(8) 用面包板搭建实验电路</a>\n<a href=\"https://www.jianshu.com/p/16219329816e\" target=\"_blank\">单片机小白学步(9) 用万用焊板搭建实验电路</a>\n","tags":["单片机"]},{"title":"[单片机] 程序","url":"/2019/10/20//articles/2019/10/20/1571572000000.html/","content":"<a href=\"https://www.jianshu.com/p/f2a4599a9d3c\" target=\"_blank\">12864液晶屏并口驱动</a>\n```\nhttps://pan.baidu.com/s/1nvEAo21\n```\n\n\nChinked-out工作室资料合辑\n```\nhttps://pan.baidu.com/s/1kVDtBZT\n```","tags":["单片机"]},{"title":"[单片机] 常见软件工具介绍","url":"/2019/10/20//articles/2019/10/20/1571571999000.html/","content":"<a href=\"https://www.jianshu.com/p/f95441572a31\" target=\"_blank\">参考</a>\n\nUartAssist\n串口调试助手，用来给单片机发送消息\n<a href=\"http://pan.baidu.com/s/1mig8GE8\" target=\"_blank\">度娘网盘</a>\n\nNetAssist\n网络调试助手，在电脑端建立TCP连接与单片机的ESP8266进行通信\n<a href=\"http://pan.baidu.com/s/1geHGPIr\" target=\"_blank\">度娘网盘</a>\n\nSTC-ISP\nSTC单片机工具集，很强大，可烧录程序，可串口调试等等\n<a href=\"http://pan.baidu.com/s/1bpvKAUN\" target=\"_blank\">度娘网盘</a>\n\nCH340驱动\nCH340的USB驱动，如果没有这个驱动，你的电脑可能识别不到单片机（识别到CH340就相当于识别到单片机的串口。）\n<a href=\"http://pan.baidu.com/s/1o879y8U\" target=\"_blank\">度娘网盘</a>\n\n51单片机波特率初值计算工具\t\n用于计算在各种波特率和晶振频率等参数下计时器的初值，属于辅助工具，省的还得算。\n<a href=\"http://pan.baidu.com/s/1dF5jVod\" target=\"_blank\">度娘网盘</a>\n\n","tags":["单片机"]},{"title":"[arduino] 博主专栏","url":"/2019/10/20//articles/2019/10/20/1571571998000.html/","content":"<a href=\"https://www.jianshu.com/u/230e0eec8036\" target=\"_blank\">驴友花雕</a>\n```\nhttps://www.jianshu.com/u/230e0eec8036\n```\n","tags":["arduino"]},{"title":"[51单片机] 实战","url":"/2019/10/20//articles/2019/10/20/1571571997000.html/","content":"<a href=\"https://www.jianshu.com/p/88dfc09e7403\" target=\"_blank\">51单片机实战：Proteus、Keil入门及点亮一个虚拟LED</a>\n<a href=\"https://www.jianshu.com/p/f95441572a31\" target=\"_blank\">51单片机实战：物联网初步のESP8266无线网络模块</a>\n\n<img src=\"https://upload-images.jianshu.io/upload_images/1704151-ed82df554d71a4d5.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/750/format/webp\"/>\nQX-MINI51\n\n<a href=\"https://link.jianshu.com/?t=https://item.taobao.com/item.htm?spm=a1z10.1-c-s.w4004-6543279843.5.cC5KBR&id=41542952683\" target=\"_blank\">淘宝链接</a>\n\nQX-MINI51电路图\n<img src=\"https://upload-images.jianshu.io/upload_images/1704151-75dc38c117bf8676.png?imageMogr2/auto-orient/strip|imageView2/2/w/1011/format/webp\"/>\n","tags":["51单片机"]},{"title":"[项目] 家政服务","url":"/2019/10/19//articles/2019/10/19/1571425965000.html/","content":"<a href=\"https://blog.csdn.net/ardo_pass/article/details/78574367\" target=\"_blank\">大致需求</a>\n<a href=\"http://sunbbb.axshare.cn/#p=%E5%AE%B6%E6%94%BF%E6%9C%8D%E5%8A%A1%EF%BC%88p080%EF%BC%89&g=1\" target=\"_blank\">家政服务在线axure</a>\n<a href=\"https://github.com/Flians/Housekeeping-service\" target=\"_blank\">Housekeeping-service</a>\n\n","tags":["项目"]},{"title":"[react-native] 令react-native-printer支持打印图片","url":"/2019/10/19//articles/2019/10/19/1571425964000.html/","content":"\nreact-native工程安装react-native-printer\n```\nnpm install --save react-native-printer\nreact-native link react-native-printer\n```\n\nModule: react-native-printer\nbuild.gradle\n```\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    implementation \"com.android.support:appcompat-v7:23.0.1\"\n    implementation \"com.facebook.react:react-native:+\"\n    testImplementation 'junit:junit:4.12'\n}\n```\n\n-------------------------  USB方式  -------------------------\n\ncom.pinmi.react.printer.RNUSBPrinterModule\n新增\n```\n    @ReactMethod\n    public void printImageFile(String imageFilePath, Callback callback) {\n        adapter.printImageFile(imageFilePath, callback);\n    }\n```\n\ncom.pinmi.react.printer.adapter.USBPrinterAdapter\n新增\n```\n    public void printImageFile(String imageFilePath, Callback errorCallback) {\n        final String filePath = imageFilePath;\n        Log.v(LOG_TAG, \"图片文件路径： \"+filePath);\n        boolean isConnected = openConnection();\n        if (isConnected) {\n            Log.v(LOG_TAG, \"连接到设备\");\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    byte[] bytes = readFile(new File(filePath));\n                    int b = mUsbDeviceConnection.bulkTransfer(mEndPoint, bytes, bytes.length, 100000);\n                    Log.i(LOG_TAG, \"返回状态: b-->\"+b);\n                }\n            }).start();\n        } else {\n            String msg = \"连接设备失败\";\n            Log.v(LOG_TAG, msg);\n            errorCallback.invoke(msg);\n        }\n    }\n```\n\n-------------------------  BLE方式  -------------------------\n\ncom.pinmi.react.printer.adapter.BLEPrinterAdapter\n```\n    @Override\n    public void printImageFile(String imageFilePath, Callback errorCallback) {\n        final String filePath = imageFilePath;\n        if (this.mBluetoothSocket == null) {\n            errorCallback.invoke(\"bluetooth connection is not built, may be you forgot to connectPrinter\");\n            return;\n        }\n        final BluetoothSocket socket = this.mBluetoothSocket;\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                byte[] bytes = readFile(new File(filePath));\n                try {\n                    OutputStream printerOutputStream = socket.getOutputStream();\n                    printerOutputStream.write(bytes, 0, bytes.length);\n                    printerOutputStream.flush();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n\n            }\n        }).start();\n    }\n\n    //file文件读取成byte[]\n    private byte[] readFile(File file) {\n        RandomAccessFile rf = null;\n        byte[] data = null;\n        try {\n            rf = new RandomAccessFile(file, \"r\");\n            data = new byte[(int) rf.length()];\n            rf.readFully(data);\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        } finally {\n            closeQuietly(rf);\n        }\n        return data;\n    }\n\n    //关闭读取file\n    private void closeQuietly(Closeable closeable) {\n        try {\n            if (closeable != null) {\n                closeable.close();\n            }\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        }\n    }    \n```\n\n-------------------------  网络方式  -------------------------\n\ncom.pinmi.react.printer.adapter.NetPrinterAdapter\n```\n    @Override\n    public void printImageFile(String imageFilePath, Callback errorCallback) {\n        final String filePath = imageFilePath;\n        if(this.mSocket == null){\n            errorCallback.invoke(\"bluetooth connection is not built, may be you forgot to connectPrinter\");\n            return;\n        }\n        final Socket socket = this.mSocket;\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try{\n                    byte [] bytes = readFile(new File(filePath));\n                    OutputStream printerOutputStream = socket.getOutputStream();\n                    printerOutputStream.write(bytes, 0, bytes.length);\n                    printerOutputStream.flush();\n                }catch (IOException e){\n                    e.printStackTrace();\n                }\n            }\n        }).start();\n    }\n\n    //file文件读取成byte[]\n    private byte[] readFile(File file) {\n        RandomAccessFile rf = null;\n        byte[] data = null;\n        try {\n            rf = new RandomAccessFile(file, \"r\");\n            data = new byte[(int) rf.length()];\n            rf.readFully(data);\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        } finally {\n            closeQuietly(rf);\n        }\n        return data;\n    }\n\n    //关闭读取file\n    private void closeQuietly(Closeable closeable) {\n        try {\n            if (closeable != null) {\n                closeable.close();\n            }\n        } catch (Exception exception) {\n            exception.printStackTrace();\n        }\n    }    \n```\n\nreact-native-printer js新增\nnode_modules/react-native-printer/index.js\n```\nexport const USBPrinter = {\n  ...\n\n  printPicture: (text) => RNUSBPrinter.printImageFile(imageFilePath, (error) => console.warn(error)),\n}\n```\n\njs中调用\n```\nimport {USBPrinter} from 'react-native-printer';\n\nUSBPrinter.printPicture('file://data/data/xxx',(msg)=>{\n\n});\n```\n","tags":["react-native"]},{"title":"[postman] 提交文件","url":"/2019/10/19//articles/2019/10/19/1571425963000.html/","content":"<a href=\"https://blog.csdn.net/maowendi/article/details/80537304\" target=\"_blank\">Postman Post请求上传文件</a>\n","tags":["postman"]},{"title":"[jfinal] 获取multipart/form-data","url":"/2019/10/19//articles/2019/10/19/1571425962000.html/","content":"<a href=\"https://www.oschina.net/question/2305051_2264918\" target=\"_blank\">参考</a>\n```\nHttpKit.readData(getRequest())\n```\n","tags":["jfinal"]},{"title":"[小程序] 人脸识别","url":"/2019/10/19//articles/2019/10/19/1571424121000.html/","content":"<a href=\"https://www.jianshu.com/p/fdcbbc8466f3\" target=\"_blank\">微信小程序+人脸识别</a>\n\n","tags":["小程序"]},{"title":"[奶茶] 自制奶茶","url":"/2019/10/19//articles/2019/10/19/1571424120000.html/","content":"```\n哔哩哔哩搜索\n自制奶茶\n```\n<a href=\"https://search.bilibili.com/all?keyword=%E8%87%AA%E5%88%B6%E5%A5%B6%E8%8C%B6\" target=\"_blank\">链接</a>\n\n【自制奶茶】味道好口感超棒的自制奶茶，一首歌的时间你就能喝到\n<a href=\"https://www.bilibili.com/video/av20648150\" target=\"_blank\">链接</a>\n","tags":["奶茶"]},{"title":"[vs] 报错解决","url":"/2019/10/19//articles/2019/10/19/1571424119000.html/","content":"<a href=\"https://blog.csdn.net/qq_41727666/article/details/84330959\" target=\"_blank\">找不到Windows SDK版本8.1</a>\n```\n打开VS2017，点击工具 -> 获取工具和更新 -> 点击C++ -> 选取Window8.1\n```\n","tags":["vs"]},{"title":"[qt] 示例","url":"/2019/10/19//articles/2019/10/19/1571424118000.html/","content":"<a href=\"https://github.com/feiyangqingyun\" target=\"_blank\">github 飞扬青云</a>\n\n<a href=\"https://github.com/yiminyangguang520/qt\" target=\"_blank\">github qt demo</a>\n\n<a href=\"https://github.com/BriFuture/blog-code-example/tree/master/18-06to09/xmlreader\" target=\"_blank\">xmlreader</a>\n\n<a href=\"https://www.cnblogs.com/newstart/p/4337873.html\" target=\"_blank\">大量的QT控件及示例发放</a>\n```\nQT属性控件项目\nhttps://github.com/lexxmark/QtnProperty\n\n比特币交易软件\nhttps://github.com/JulyIGHOR/QtBitcoinTrader\n\n导航控件\nhttp://qt-apps.org/content/show.php/NavBar?content=162885\n\n虚拟键盘\nhttp://qt-apps.org/content/show.php/VirtualKeyboard?content=107388\n\n扩展控件\nhttp://qt-apps.org/content/show.php/ExpanderWidget?content=163843\n\n导航条(类似tab)\nhttp://qt-apps.org/content/show.php/DMSNavigation?content=163730\n\n类似Xp左侧的扩展组工具\nhttp://qt-apps.org/content/show.php/iisTaskPanel?content=79286\n\n仪表控件\nhttp://qt-apps.org/content/show.php/AnalogWidgets?content=87780\n\n\n遮罩控件\nhttp://qt-apps.org/content/show.php/QLightBoxWidget?content=162277\n\n又一个简单的属性控件\nhttp://qt-apps.org/content/show.php/Simple+Object+Inspector?content=162244\n\n按钮样式设计器\nhttp://qt-apps.org/content/show.php/Button+Styler?content=162217\n\n\n密集网格控件\nhttp://qt-apps.org/content/show.php/GridView?content=158138\n\n全屏适配器\nhttp://qt-apps.org/content/show.php/QFullScreenAdapter?content=153900\n\n多选下拉列表\nhttp://qt-apps.org/content/show.php/QMultiComboBox?content=149416\n\n数字键盘\nhttp://qt-apps.org/content/show.php/NUMPAD?content=155032\n\ntable表头控件\nhttp://qt-apps.org/content/show.php/QSpreadsheetHeaderView?content=154405\n\n指令应答控件(类似控制台)\nhttp://qt-apps.org/content/show.php/ReplWidget?content=152031\n\n十六进制控件未下载成功\nhttp://qt-apps.org/content/show.php/QHexEdit?content=133189\nhttps://code.google.com/p/qhexedit2/source/checkout\n\n侧边控件(类安卓)\nhttp://qt-apps.org/content/show.php/Sidebar+?content=147860\n\n多表头控件\nhttp://qt-apps.org/content/show.php/HierarchicalHeaderView?content=103154\n\n\n仪表控件\nhttp://qt-apps.org/content/show.php/QNeedleIndicator?content=118474\n\n\n有很多控件的集合\nhttp://qt-apps.org/content/show.php/wwWidgets?content=126142\n\n图标动态变大小的工具条cool\nhttp://qt-apps.org/content/show.php/QIrDock?content=115318\n\n\n属性控件\nhttp://qt-apps.org/content/show.php/yape+%28Yet+another+property+editor%29?content=100064\n\n\n很牛的Grid，带树，带分隔\nhttp://qt-apps.org/content/show.php/QExtendedWidgets?content=103163\n\n像wpf的照片墙(无法下载)\nhttp://qt-apps.org/content/show.php/THCoverFlow?content=102200\n\n液晶板控件(较粗)\nhttp://qt-apps.org/content/show.php/QLedMatrix?content=101193\n\n属性控件\nhttp://qt-apps.org/content/show.php/Value+Browser?content=50717\n\n数据列表控件（可打印）\nhttp://qt-apps.org/content/show.php/Thetyss+Data+Browser?content=76696\n\n\nMacNavBar\nhttp://qt-apps.org/content/show.php/QfMacNavBar?content=78749\n\n\n倒影控件\nhttp://qt-apps.org/content/show.php/QReflex?content=75962\n\n音量控件\nhttp://qt-apps.org/content/show.php/QVUMeter?content=75678\n\n\n照片墙控件像wpf\nhttp://qt-apps.org/content/show.php/PictureFlow?content=75348\n\n\n液晶板控件(细)\nhttp://qt-apps.org/content/show.php/QSlide?content=75303\n\n\n下拉按钮\nhttp://qt-apps.org/content/show.php/EnumComboBox?content=166012\n\n加速器(悬浮按钮)\nhttp://qt-apps.org/content/show.php/modern+computer+flatboat?content=156221\n```\n\n<a href=\"https://gitee.com/feiyangqingyun/QWidgetDemo\" target=\"_blank\">QWidgetDemo</a>\n<a href=\"https://github.com/kevinlq/LQFramKit\" target=\"_blank\">LQFramKit</a>\n","tags":["qt"]},{"title":"[js] 时间字符串转时间","url":"/2019/10/19//articles/2019/10/19/1571424117000.html/","content":"<a href=\"https://blog.csdn.net/jinqianwang/article/details/82804783\" target=\"_blank\">js时间字符串转换成时间</a>\n```\nvar date = '2015-03-05 17:59:00';\n\nvar dateFormat = function (dateStr) {\n    dateStr = dateStr.substring(0, 19);\n    dateStr = dateStr.replace(/-/g, '/');\n    var timestamp = new Date(dateStr).getTime();\n    var date = new Date(timestamp);\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n\n    if (hours <= 9) {\n        hours = \"0\" + hours\n    }\n    if (minutes <= 9) {\n        minutes = \"0\" + minutes\n    }\n    return hours + \":\" + minutes;\n};\n\ndateFormat(date)\n```\n","tags":["js"]},{"title":"[jq] 时间范围选择框","url":"/2019/10/19//articles/2019/10/19/1571424116000.html/","content":"<a href=\"http://www.jq22.com/yanshi4611\" target=\"_blank\">基于Bootstrup 3的jQuery日期时间选择器</a>\n\n<a href=\"https://www.jb51.net/article/123667.htm\" target=\"_blank\">jq 时间范围</a>\n\n<a href=\"https://blog.csdn.net/qq_39762120/article/details/86536716\" target=\"_blank\">timepicker</a>\n```\n$('#date_hhmmss').prop(\"readonly\", true).timepicker({\n    timeText: '时间',\n    hourText: '小时',\n    minuteText: '分钟',\n    secondText: '秒',\n    currentText: '现在',\n    closeText: '完成',\n    showSecond: true, //显示秒  \n    timeFormat: 'HH:mm:ss' //格式化时间  \n});\n```\n\n\n```\nJquery时间段选择器\nhttps://www.cnblogs.com/xachary/p/3990869.html\n\njquery日期范围选择器插件\nhttp://www.htmleaf.com/jQuery/Calendar-Date-Time-picker/201712164883.html\n\n双日历插件--jq datepicker时间范围选择\nhttps://www.cnblogs.com/dongxiaolei/p/5865606.html\n```\n\n\n<a href=\"https://www.cnblogs.com/ziyoublog/p/9044905.html\" target=\"_blank\">Bootstrap 时间控件datetimepicker与timepicker</a>\n```\n<div class=\"form-group\">\n    <label class=\"col-sm-3 control-label\">时间范围<font color=\"red\">*</font></label>\n\n    <div class=\"col-sm-7\">\n        <div class=\"col-md-3\">\n            <input type=\"text\"\n                   id=\"startTime\"\n                   name=\"startTime\"\n                   readonly=\"readonly\"\n                   class=\"form-control timepicker timepicker-default\"\n                   placeholder=\"从\">\n        </div>\n\n        <div class=\"col-md-3\">\n            <input type=\"text\"\n                   id=\"endTime\"\n                   name=\"endTime\"\n                   readonly=\"readonly\"\n                   class=\"form-control timepicker timepicker-default\"\n                   placeholder=\"到\">\n        </div>\n    </div>\n</div>\n```\n\njs部分\n```\n    $(document).ready(function () {\n        $(\"#startTime\").timepicker({\n            defaultTime: '9:00',\n            showMeridian: false,\n        });\n        $(\"#openTime\").timepicker({\n            defaultTime: '21:00',\n            showMeridian: false,\n        });\n    });\n```\n","tags":["jq"]},{"title":"[java] jfinal时间选择器","url":"/2019/10/19//articles/2019/10/19/1571424115000.html/","content":"<a href=\"https://blog.csdn.net/zj420964597/article/details/79259060\" target=\"_blank\">jfinal时间选择器</a>\n\n1.：\n```\n<input class=\"form-control date-picker\" type=\"text\" name=\"year1\" placeholder=\"选择年\" data-date-format=\"yyyy\">\n\n<script type=\"text/javascript\">\n   $(document).ready(function () {\n        $('[name=year1]').datepicker({\n            startView: 'decade',\n            minView: 'decade',\n            format: 'yyyy',\n            maxViewMode: 2,\n            minViewMode:2,\n            autoclose: true\n        });\n    });\n</script>\n```\n\n2.时间：\n```\n<input class=\"form-control date-picker\" type=\"text\" name=\"attr.date_start\" placeholder=\"时间开始\" data-date-format=\"yyyy-mm-dd\" id=\"input_monday\">\n\n<script type=\"text/javascript\">\n    $(document).ready(function () {\n        $('.date-picker').datepicker({\n            autoclose: true,\n            startView:'months',\n            minViewMode:'days',\n            todayHighlight: true,\n        });\n    });\n</script>\n```\n","tags":["java"]},{"title":"[android] 手机清理","url":"/2019/10/19//articles/2019/10/19/1571423701000.html/","content":"<a href=\"https://github.com/whyalwaysmea/MobileSafe\">github MobileSafe</a>\n这是一个android版的手机卫士，包含一下功能：\n```\n1.手机防盗\n\n2.黑名单设置\n\n3.软件管理\n\n4.进程管理\n\n5.流量统计\n\n6.缓存清理\n\n7.手机杀毒\n\n8.来电归属地显示\n\n9.号码归属地查询\n\n10.程序锁\n```\n","tags":["android"]},{"title":"[android] 分类页","url":"/2019/10/17//articles/2019/10/17/1571315713000.html/","content":"<a href=\"https://blog.csdn.net/qq_31927865/article/details/79972080\" target=\"_blank\">Android 仿京东、拼多多商品分类页的示例代码</a>\n\n","tags":["android"]},{"title":"[android] 微信分享","url":"/2019/10/17//articles/2019/10/17/1571315712000.html/","content":"<a href=\"https://github.com/kevinTutu/WXShare\" target=\"_blank\">github WXShare</a>","tags":["android"]},{"title":"[android] 解析富文本","url":"/2019/10/17//articles/2019/10/17/1571315711000.html/","content":"<a href=\"https://www.jianshu.com/p/050ffa5b762c\" target=\"_blank\">干货！！！Android富文本实现图文混排</a>\n<a href=\"https://github.com/StevenYan88/RichTextView\" target=\"_blank\">RichTextView</a>\n\n<a href=\"https://blog.csdn.net/qq_40441190/article/details/82734875\" target=\"_blank\">Android中富文本RichText框架使用</a>\n","tags":["android"]},{"title":"[android] support-v4版本28","url":"/2019/10/17//articles/2019/10/17/1571315710000.html/","content":"```\ndependencies {\n   implementation 'com.android.support:appcompat-v7:28.0.0'\n   implementation 'com.android.support:support-v4:28.0.0'\n}\n```\n\n```\nError: Program type already present: android.support.v4.app.FragmentTransitionCompat21$1\n```\n<a href=\"https://www.jianshu.com/p/ea4484fb4837\" target=\"_blank\">参考</a>\n","tags":["android"]},{"title":"[android] 底部导航栏","url":"/2019/10/17//articles/2019/10/17/1571315709000.html/","content":"<a href=\"https://blog.csdn.net/afei__/article/details/80950288\" target=\"_blank\">Android底部导航栏，三种风格和实现（含有中间加号按钮，可切换颜色）</a>\n<a href=\"https://gitee.com/afei_/BottomTabbar\" target=\"_blank\">BottomTabbar</a>\n\n<a href=\"https://github.com/lhmAchIne/FinancialManage\" target=\"_blank\">商户进货售卖管理和统计android应用（点击底部、不替换图标颜色）</a>\n\n<a href=\"https://github.com/forvv231/EasyNavigation\" target=\"_blank\">含有中间加号按钮</a>\n","tags":["android"]},{"title":"[android] 张鸿洋的安卓github","url":"/2019/10/17//articles/2019/10/17/1571315708000.html/","content":"<a href=\"https://github.com/hongyangAndroid\" target=\"_blank\">hongyangAndroid</a>\n","tags":["android"]},{"title":"[android] 轮播图","url":"/2019/10/17//articles/2019/10/17/1571315707000.html/","content":"<a href=\"https://github.com/youth5201314/banner\" target=\"_blank\">较全</a>\n```\nAndroid广告图片轮播控件，支持无限循环和多种主题，可以灵活设置轮播样式、动画、轮播和切换时间、位置、图片加载框架等！\n```\n\n<a href=\"https://github.com/AlpsDog/Banner\" target=\"_blank\">Android轮播图</a>\n","tags":["android"]},{"title":"[android] 仿饿了么订单","url":"/2019/10/17//articles/2019/10/17/1571315706000.html/","content":"<a href=\"https://github.com/guxun12/ele_demo\" target=\"_blank\">ele_demo</a>\n\n```\n1.带阻尼回弹效果----BounceScrollView\n\n2.下拉刷新----RefreshableListView\n\n3.带section和header的ListVIew ----StickyListHeadersListView\n\n4.虚线----DashedLineView\n\n5.购物车动画效果\n\n6.两列面板（menu和content）的切换 ----SlidingPaneLayout\n\n7.自带清除输入文字的EditTextView----ClearEditTextView\n\n8.可能是最好用的图片加载控件----universal-image-loader\n\n9.圆形图片的处理\n\n10.简单的时间轴示例\n\n11.图片滤镜,需要引入开源项目gpuimage的library,具体添加方法是:eclipse中项目右键-properties-android-add\n\n12.常用存储类SharedPreferences----SharedPreferencesUtil（demo中记录登录状态）\n\n10.fragment，webview，selector等其他细节布局控件的使用\n```\n","tags":["android"]},{"title":"[android] 根据图片路径显示图片","url":"/2019/10/17//articles/2019/10/17/1571315705000.html/","content":"<a href=\"https://www.cnblogs.com/kingsam/p/5644037.html\" target=\"_blank\">android根据图片路径显示图片</a>\n```\nFile file = new File(path);\n\nImageView img = (ImageView) findViewById(R.id.img);\n\nif(file.exists()){\n\n       Bitmap bm = BitmapFactory.decodeFile(path);\n\n       img.setImageBitmap(bm);\n\n}\n```\n\n","tags":["android"]},{"title":"[特产] 广东有名特产","url":"/2019/10/17//articles/2019/10/17/1571315296000.html/","content":"<a href=\"https://zhidao.baidu.com/question/942589225436516532.html\" target=\"_blank\">广东有名特产</a>\n```\n广东有名特产\n杏仁饼、姜糖、腊肠、海产品的干货。水果的话就是龙眼、荔枝、大树菠萝、火龙果。\n以及广东三宝:陈皮、老姜、禾秆草。广东特产红茶、粤绣、牙雕、端砚、陶瓷等。\n送人的话吃的就送红茶，粤绣最好。易于保存，不易损坏。吃的话送一些海产品。\n\n\n1. 马蹄糕。第一眼看到这个名字有人会好奇是不是和它的形状有关，但其实前两个字是来源于食材。使用荸荠也就是马蹄，磨成浆之后再加上别的辅料蒸制成型，比一般的小零食要健康得多。\n2. 梅菜。大家知道这种食材都是因为某一道名菜，在很多地方都有制作的传统，但与此同时它也可以加入其它的菜品当中形成非常独特的风味。经过当地人的巧手，可以变成单独的一道菜，或者蒸肉，或者煮汤，都是当地孩子从小很享受的食物。\n3. 盲公饼。据说它是被一位盲人创造出来的，所以才有了这个名字，同时制作过程也非常复杂。首先要加入各种高级食材，然后还要经过很多个严格的步骤才能成型，当年当地人能吃到的机会也非常少。幸好现在被研发出了大批量制作的方法，外地人也能尝到和当地差不多的口味了。\n4. 杏仁饼。顾名思义，它是由杏仁制作的，从这一点就能看出它具备杏仁的优势，对身体是有好处的。制作方法也并不困难，所以当年有很多商家竞争，如今能保留下的都是非常出色的品牌而且还一度出口到国外。\n5. 白糖糕。这一种糕点最主要的原料是米浆，其次就是白糖，看起来非常简单，但是要把味道融合的恰到好处还是有难度的，没有当地人的巧思很难学会哦！\n6. 河粉。前几张里糕点比较多，而这一种一般都是被当做主食的。原料也是米浆蒸出来的，只不过成品非常薄，然后要切成细条加入各种的作料，喝一些凉拌菜的做法有相似之处不过更加有特色。\n7. 菊花糕。这一种是其中最漂亮的一款了，透明的糕底上有花瓣点缀，看起来就让人很有食欲。口感甜软酥松，而且还具有清凉去火的功效，你想不想尝一块？\n8. 牛肉丸。最后一种也是名气最大的，在很多影视剧当中有过出场，所以经常会有外地人特意慕名前去品尝。你能想起来它都在哪些热播剧中出现过吗？\n```","tags":["特产"]},{"title":"[设计] 在线原型xiaopiu","url":"/2019/10/17//articles/2019/10/17/1571315295000.html/","content":"<a href=\"https://www.jianshu.com/p/f84c002a8f60\" target=\"_blank\">工具类App「xiaopiu」 原型分享</a>\n\n<a href=\"https://www.xiaopiu.com/square/page?searchText=xiaopiu&libPop=page&libId=5a59bdff1888fd50c0a54b9c\" target=\"_blank\">精选广场</a>\n\n<a href=\"https://www.xiaopiu.com/help#/content/1.start/CreateProject?v=2.0.0\" target=\"_blank\">上手指南</a>\n","tags":["设计"]},{"title":"[react-native] 文件读写操作react-native-filesystem","url":"/2019/10/17//articles/2019/10/17/1571315294000.html/","content":"<a href=\"https://www.jianshu.com/p/6a386bbc1305\" target=\"_blank\">react-native 文件读写操作</a>\n","tags":["react-native"]},{"title":"[react-native] 调用原生封装获取SD卡路径","url":"/2019/10/17//articles/2019/10/17/1571315293000.html/","content":"<a href=\"https://blog.csdn.net/shizhihua11/article/details/88931201\" target=\"_blank\">react-native调用原生封装获取SD卡路径</a>\n","tags":["react-native"]},{"title":"[react-native] 调用摄像头扫描身份证","url":"/2019/10/17//articles/2019/10/17/1571315292000.html/","content":"\n```\n调用摄像头扫描身份证\n```\n<a href=\"https://github.com/mmjbds999/react-native-scanidcard\" target=\"_blank\">react-native-scanidcard</a>\n\n","tags":["react-native"]},{"title":"[react-native] 调用nfc读写cpu卡、m1卡","url":"/2019/10/17//articles/2019/10/17/1571315291000.html/","content":"<a href=\"https://www.jianshu.com/p/d2df25352431\" target=\"_blank\">react-native调用nfc读写cpu卡、m1卡-android篇</a>\n","tags":["react-native"]},{"title":"[react-native] 定时器","url":"/2019/10/17//articles/2019/10/17/1571315290000.html/","content":"<a href=\"https://gitee.com/preterchan/react-native-background-timer\" target=\"_blank\">react-native-background-timer</a>\n","tags":["react-native"]},{"title":"[react-native] handler问题","url":"/2019/10/17//articles/2019/10/17/1571315289000.html/","content":"```\nreact-native Can't create handler inside thread that has not called Looper.prepare()\n```\n<a href=\"https://blog.csdn.net/qq_38356174/article/details/90378201\" target=\"_blank\">参考</a>\n\n\n报错原因可能是以下几种情况：\n```\n1. 不是在主线程中开启了新的线程\n2. 异步操作中执行UI显示（在异步操作中调用UI函数，如Toast）\n```\n\n```\nLooper.prepare();\n\nToastUtils.show(\"这是一条Toast\");\n\nLooper.loop();\n```\n\n<a href=\"https://blog.csdn.net/ying1414058425/article/details/51381550\" target=\"_blank\">handler 的Looper.prepare()的问题</a>\n```\n解决方法： \n方法一： \n在主线程中创建Handler（不用添加Looper.prepare()）。\n\n方法二： \n如果Handler是在子线程中创建的，那就handler在创建的时候，传入context.getMainLooper()参数（不用添加Looper.prepare()）\nHandler mhandler = new Handler(context.getMainLooper());\n```\n","tags":["react-native"]},{"title":"[react-native] CameraRoll问题","url":"/2019/10/17//articles/2019/10/17/1571315288000.html/","content":"<a href=\"https://www.jianshu.com/p/6a386bbc1305\" target=\"_blank\">react-native CameraRoll问题</a>\n```\nnpm install @react-native-community/cameraroll --save\nreact-native link @react-native-community/cameraroll\n```\n\n```\nimport CameraRoll from \"@react-native-community/cameraroll\";\n```\n","tags":["react-native"]},{"title":"[qt] qt5环境搭建","url":"/2019/10/17//articles/2019/10/17/1571315286000.html/","content":"<a href=\"https://blog.csdn.net/yzk1062913581/article/details/91534529\" target=\"_blank\">Qt Creator 开发环境搭建</a>\n\n","tags":["qt"]},{"title":"[豆果网] 珍珠奶茶","url":"/2019/10/17//articles/2019/10/20/1571573316000.html/","content":"<a href=\"https://www.douguo.com/cookbook/1703491.html\" target=\"_blank\">自制珍珠</a>\n```\n红糖 100g\n木薯淀粉 180g\n水 110g\n```","tags":["豆果网"]},{"title":"[豆果网] 官网","url":"/2019/10/17//articles/2019/10/20/1571573315000.html/","content":"<a href=\"https://www.douguo.com\" target=\"_blank\">豆果网</a>\n```\n\n```","tags":["豆果网"]},{"title":"[qt] Qt5.12.2+vs2017","url":"/2019/10/17//articles/2019/10/17/1571315285000.html/","content":"<a href=\"https://blog.csdn.net/nicai_xiaoqinxi/article/details/84995134\" target=\"_blank\">Qt 5.12长期支持版本正式发布(带下载链接)</a>\n\n<a href=\"http://download.qt.io/archive/qt/5.12/5.12.2/\" target=\"_blank\">Qt 5.12.2下载链接:</a>\n<a href=\"http://download.qt.io/archive/qt/\" target=\"_blank\">Qt 各版本下载链接:</a>\n\n<a href=\"https://www.jianshu.com/p/ac22d511aea6\" target=\"_blank\">Qt5.12.2 + VS2017 环境搭建</a>\n```\nQt5.11.2有mingw32版，VS2015有32位和64位， VS2017只有64位；\nQt5.12.0只有mingw64版，VS2017有32位和64位，VS2015只有64位；\nQt5.12.2有mingw32、64版，VS2017有32位和64位，VS2015只有64位；\n```\n\n<a href=\"https://docs.microsoft.com/zh-cn/visualstudio/releasenotes/vs2017-relnotes\" target=\"_blank\">vs2017-relnotes</a>\n\n<a href=\"https://blog.csdn.net/hk_5788/article/details/44902933\" target=\"_blank\">Qt学习之路之解决unable to find a qt build，to solve this problem specify a qt build</a>\n\n<a href=\"https://blog.csdn.net/hk_5788/article/category/2796089\" target=\"_blank\">QT获取文件信息</a>\n","tags":["qt"]},{"title":"[ui] ui设计师的作品展示","url":"/2019/10/17//articles/2019/10/20/1571573314000.html/","content":"<a href=\"https://www.zcool.com.cn/work/ZMzA1NzkwNzI=.html\" target=\"_blank\">PPT作品集展示</a>\n","tags":["ui"]},{"title":"[ps~ae~axure~xd] 练习题","url":"/2019/10/17//articles/2019/10/17/1571315284000.html/","content":"<a href=\"https://www.jianshu.com/p/134c822f2079\" target=\"_blank\">（1）ps 风景转油画</a>\n<a href=\"\" target=\"_blank\">（2）xd动画进度条</a>\n<a href=\"https://www.jianshu.com/p/dabf3665aa59\" target=\"_blank\">（3）axure进度条</a>\n<a href=\"https://www.bilibili.com/video/av3130922\" target=\"_blank\">（4）AE的水波纹loading教程</a>\n<a href=\"https://www.bilibili.com/video/av15241965\" target=\"_blank\">（5）AE制作小鱼跳动</a>\n<a href=\"https://www.jianshu.com/p/5a4a90b2f0f5\" target=\"_blank\">（6）ps 通道抠图</a>\n<a href=\"https://www.jianshu.com/p/f588d0c67f07\" target=\"_blank\">（7）ps 玻璃字体</a>\n<a href=\"https://www.jianshu.com/p/c1655285c54f\" target=\"_blank\">（8）ae 飘散文字</a>\n\n\n附上\n```\nAE专栏\nhttps://www.jianshu.com/c/18daa256bae7\n\nPS专栏\nhttps://www.jianshu.com/u/74ceb83a0857\n\nAdobe XD专栏\nhttps://www.jianshu.com/c/2883ca17b400\n\naxure专栏\nhttps://www.jianshu.com/c/5a3fbba8f0e7\n```\n","tags":["ps~ae~axure~xd"]},{"title":"[springboot] 点餐系统","url":"/2019/10/17//articles/2019/10/20/1571573313000.html/","content":"<a href=\"https://blog.csdn.net/qq_35275233/article/details/89041647\" target=\"_blank\">点餐系统</a>\n<a href=\"https://github.com/IceSeaOnly/waimai\" target=\"_blank\">微信外卖+快递综合平台</a>","tags":["springboot"]},{"title":"[docker] docker中搭建直播流服务器","url":"/2019/10/17//articles/2019/10/17/1571315283000.html/","content":"<a href=\"https://blog.csdn.net/wang3375/article/details/92442672\" target=\"_blank\">Docker中搭建RTMP直播流服务器</a>\n","tags":["docker"]},{"title":"[axure] 中文网","url":"/2019/10/17//articles/2019/10/17/1571315282000.html/","content":"<a href=\"https://www.axure.com.cn/resource/\" target=\"_blank\">axure中文网</a>\n\n<a href=\"https://www.bilibili.com/video/av13807841\" target=\"_blank\">极客学院axure</a>\n","tags":["axure"]},{"title":"[android] 中国老黄历","url":"/2019/10/17//articles/2019/10/17/1571315281000.html/","content":"<a href=\"https://github.com/2666fff/ChineseAlmanac\" target=\"_blank\">ChineseAlmanac</a>\n<a href=\"https://github.com/OCNYang/QBox\" target=\"_blank\">小秋魔盒</a>\n```\n图片依次是（多动图，加载较慢，图片不显示刷新页面）：\n1.新闻模块(如果你下载的 apk 没有显示新闻模块，开启方式：设置页长按头部直至出现提醒 > 设置页长按底部直至出现提醒 > 退出重启应用)\n2.文章模块\n3.日历模块\n4.天气模块\n5.颜色画板\n6.盒子布局\n7.魔力数字排序列表\n8.下拉果冻弹跳效果\n9.引导页\n10.手势图片\n11.能力图表格\n12.视差图片\n```\n\n地址一：\n<a href=\"http://fir.im/qbox\" target=\"_blank\">qbox</a>\n地址二：\n<a href=\"https://raw.githubusercontent.com/OCNYang/QBox/master/apk/QBox.apk\" target=\"_blank\">QBox.apk</a>","tags":["android"]},{"title":"[springboot] vue个人博客系统","url":"/2019/10/17//articles/2019/10/20/1571573311000.html/","content":"<a href=\"https://blog.csdn.net/pycharm_u/article/details/95167459\" target=\"_blank\">springboot+vue个人博客系统（五） 博客系统初步建成及展示</a>\n```\nGitHub地址\n前端：\nhttps://github.com/sustly/blog_vue_web\n后端：\nhttps://github.com/sustly/blog_vue_server\n```\n","tags":["springboot"]},{"title":"[android] 判断文件是否存在","url":"/2019/10/17//articles/2019/10/17/1571315280000.html/","content":"<a href=\"https://blog.csdn.net/zx1091515459/article/details/78901932/\" target=\"_blank\">android 判断文件是否存在</a>\n```\n//判断文件是否存在  \n    private boolean fileIsExists(String strFile) {\n        try {\n            File f = new File(strFile);\n            if (!f.exists()) {\n                return false;\n            }\n\n        } catch (Exception e) {\n            return false;\n        }\n        return true;\n    }\n```\n","tags":["android"]},{"title":"[springboot] vue登录注册","url":"/2019/10/17//articles/2019/10/20/1571573310000.html/","content":"<a href=\"https://blog.csdn.net/pycharm_u/article/details/90673079\" target=\"_blank\">springboot+vue个人博客系统（一）框架搭建以及登陆注册实现</a>\n","tags":["springboot"]},{"title":"[android] 打印html","url":"/2019/10/17//articles/2019/10/17/1571315279000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://www.w3cschool.cn/android_training_course/android_training_course-tbfl27f3.html\" target=\"_blank\">Android打印HTML文档</a>\n\n<a href=\"https://blog.csdn.net/qq_16810075/article/details/93752408\" target=\"_blank\">Android 5.0以上使用原生的打印功能的方式来实现将webview的html转pdf</a>\n\n<a href=\"https://blog.csdn.net/dengpeng_/article/details/60869509\" target=\"_blank\">android连接打印机打印(讲解)</a>\n","tags":["android"]},{"title":"[react-native] 解决真机闪退问题","url":"/2019/10/17//articles/2019/10/20/1571573309000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/qq_35275233/article/details/89041647\" target=\"_blank\">参考一</a>\n```\n手动cd到项目文件夹下该目录android/app/src/main/，创建一个名为assets的文件夹\n```\n\n<a href=\"https://www.jianshu.com/p/1a0c541ab156\" target=\"_blank\">react-native打包release版启动闪退的原因之一</a>\n```\ndebug版正常，release版一启动就闪退，没有一点提示。有一个原因就是代码检测工具哪个地方写错造成的，我的问题是：propTypes使用了View.PropTypes。文档上有说： 出于性能原因，propTypes 只在开发模式下进行检查。 但是这样写却造成了release版闪退。\n\nTag.propTypes = {\n  containerStyle: View.PropTypes.style\n}\n新版中View.propTypes已经被废弃使用ViewPropTypes替代，\n原文：ReactNative 'View.propTypes' have been deprecated in favor of 'ViewPropTypes'\n```\n\n<a href=\"https://blog.csdn.net/suwu150/article/details/81079093\" target=\"_blank\">react-native打包release版本闪退</a>\n```\n在发布版本的时候删掉代码中的propsType校验TextInput.propTypes.style和View.propTypes.style或者直接就不用\n```","tags":["react-native"]},{"title":"[android] usb打印","url":"/2019/10/17//articles/2019/10/17/1571315278000.html/","content":"android 小票打印机（usb，蓝牙，wifi）\n<a href=\"https://github.com/wang2793312458/MyPinter\" target=\"_blank\">MyPinter</a>\n\ngithub搜索： android usb 打印\n<a href=\"https://github.com/search?q=android+usb+%E6%89%93%E5%8D%B0&type=Repositories\" target=\"_blank\"></a>\n\nAndroid USB、蓝牙、网口小票打印机开发示例\n<a href=\"https://github.com/beibe218/peripheral\" target=\"_blank\">peripheral</a>\n","tags":["android"]},{"title":"[ppt] 产品宣传","url":"/2019/10/17//articles/2019/10/20/1571573308000.html/","content":"<a href=\"http://www.pptjia.com/cpxc.html\" target=\"_blank\">产品宣传ppt</a>\n\n","tags":["ppt"]},{"title":"[android] app上架","url":"/2019/10/17//articles/2019/10/17/1571315277000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n```\nhttps://account.fir.im/signin\n\n安卓APP发布上架的方法\nhttps://blog.csdn.net/qq_31093755/article/details/81735709\n\n\n一、华为应用市场：\nhttps://developer.huawei.com/consumer/cn/wiki/index.php?title=%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95 \n1. 先注册开发者账号，填写资料，提交审核； \n2. 审核通过后，首页-分发模块，上传应用。\n\n二、 小米应用商店：\nhttps://dev.mi.com/docs/appsmarket/distribution/account_register/ \n1. 先注册成为开发者，填写资料，同意开发协议并注册； \n2. 首页轮播图点击上传应用，或者首页-应用分发-小米应用商店-上传应用。\n\n三、 百度手机助手、安卓市场、91助手\nhttp://app.baidu.com/ \n1. 先注册开发者账号，填写资料，等待审核； \n2. 审核通过后，首页-发布应用。\n\n四、腾讯应用宝：\nhttp://wiki.open.qq.com/wiki/%E6%B3%A8%E5%86%8C%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7 \n1. 注册开发者账号，填写资料-验证邮箱，邮箱验证成功后，如需创建应用，可点击“立即创建”，提交应用审核时，开发者资质会一并提交审核； \n2. 审核通过后，首页-应用接入。\n\n其他应用市场上架方法请参考： \nhttps://blog.csdn.net/niezhipeng8/article/details/79103436\n```\n","tags":["android"]},{"title":"[html] 游戏","url":"/2019/10/17//articles/2019/10/20/1571573307000.html/","content":"<a href=\"https://github.com/IceSeaOnly/morningBirder\" target=\"_blank\">基于区块链游戏--早期的鸟儿有虫吃</a>\n\n","tags":["html"]},{"title":"[qt] 人脸识别视频教程","url":"/2019/10/17//articles/2019/10/17/1571315277000.html/","content":"<a href=\"https://www.bilibili.com/video/av42219323\" target=\"_blank\">【编程开发】 QT《人脸识别》+《音乐播放器》 C++/C#项目实战</a>\n\n","tags":["qt"]},{"title":"[AE] 插件大全","url":"/2019/10/17//articles/2019/10/17/1571315276000.html/","content":"<a href=\"https://www.newasp.net/k/aecjdq/\" target=\"_blank\">AE 插件大全</a>\n","tags":["AE"]},{"title":"[AE] 版本缺失的效果与字体","url":"/2019/10/17//articles/2019/10/17/1571315275000.html/","content":"```\nOptical Flares\nParticular\n```\n","tags":["AE"]},{"title":"[react-native] 调原生代码时报Unhandled promise rejection","url":"/2019/10/17//articles/2019/10/17/1571312122000.html/","content":"<a href=\"https://blog.csdn.net/hanjiyu/article/details/79863930\" target=\"_blank\">Possible Unhandled Promise Rejection (id: 2):TypeError</a>\n```\n\n```\n","tags":["react-native"]},{"title":"[react-native] 身份证号码识别","url":"/2019/10/17//articles/2019/10/17/1571312121000.html/","content":"<a href=\"https://www.jianshu.com/p/08e89bba5595\" target=\"_blank\">react-native 身份证号码识别</a>\n```\nhttps://github.com/ribuluo000/IDCardRecognition\n```\n\npackage.json 添加\n```\n  \"dependencies\": {\n    \"react-native-IDRecognition\": \"git+https://github.com/ribuluo000/IDCardRecognition.git\",\n  },\n```\n\n安装\n```\nnpm i\nreact-native link react-native-android-auto-update\n```\n\n身份证扫描（react-native）/二代身份证识别／准确率满足普通项目需求\n```\nhttps://github.com/mmjbds999/react-native-scanidcard\n```","tags":["react-native"]},{"title":"[react-native] Looper.prepare()问题","url":"/2019/10/17//articles/2019/10/17/1571312120000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\n\n```\n","tags":["react-native"]},{"title":"[react-native] android原生代码示例","url":"/2019/10/17//articles/2019/10/17/1571312119000.html/","content":"<a href=\"https://blog.csdn.net/u013783000/article/details/98053063\" target=\"_blank\">地址</a>\n```\npublic class KeyboardModule extends ReactContextBaseJavaModule {\n    private ReactApplicationContext _context=null;\n    public KeyboardModule(ReactApplicationContext reactContext){\n        super(reactContext);\n        _context=reactContext;\n    }\n    @Override\n    public String getName(){\n        return \"KeyboardFunctionalities\";\n    }\n\n    @ReactMethod\n    public void hideKeyboard(){\n        final Activity activity = getCurrentActivity();\n        InputMethodManager imm = (InputMethodManager)Assertions.assertNotNull(activity.getSystemService(Activity.INPUT_METHOD_SERVICE));\n        imm.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);\n    }\n    @ReactMethod\n    public void printExec(String ip, String port,String data,Promise promise){\n        Map<String,String> map=new HashMap<String,String>();\n        map.put(\"code\",\"404\");\n        Socket socket=new Socket();\n        try{\n            SocketAddress socAddress = new InetSocketAddress(ip, Integer.parseInt(port));\n            socket.connect(socAddress, 3000);\n            if(socket.isConnected()){\n                BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n                bw.write(data);\n                bw.flush();\n                bw.close();\n                socket.close();\n                map.put(\"code\",\"200\");\n                map.put(\"message\",\"打印成功\");\n            }else{\n                map.put(\"message\",\"连接打印机失败\");\n            }\n        }catch (Exception ex){\n            map.put(\"message\",ex.getMessage().toString());\n        }\n        Gson gson=new Gson();\n        promise.resolve(gson.toJson(map));\n    }\n    @ReactMethod\n    public void GetPrinterList(String IP, String Port, String VendorName,Promise promise) {\n        Gson gson=new Gson();\n        Map<String,String> mmap=new HashMap<String,String>();\n        mmap.put(\"code\",\"404\");\n        SocketUDP socket = new SocketUDP();\n        String printerList = null;\n        try {\n            printerList = socket.SendData(IP, Integer.valueOf(Port), \"RequestPrinterReportList\");\n            if (printerList.equals(\"\")) {\n                mmap.put(\"message\",\"当前地址没有安装打印机\");\n            } else {\n                List<Map<String, Object>> mlist = new ArrayList<Map<String, Object>>();\n                String[] mArray = printerList.split(\",\");\n                for (int i = 0; i < mArray.length; i++) {\n                    Map<String, Object> map = new HashMap<String, Object>();\n                    map.put(\"isChecked\", false);\n                    map.put(\"IP\", IP);\n                    map.put(\"Port\", Port);\n                    map.put(\"VendorName\", VendorName);\n                    map.put(\"PrinterName\", mArray[i]);\n                    mlist.add(map);\n                }\n                mmap.put(\"code\",\"200\");\n                mmap.put(\"message\",gson.toJson(mlist));\n            }\n        } catch (IOException e) {\n            mmap.put(\"message\",\"获取打印机列表失败\");\n        }\n        promise.resolve(gson.toJson(mmap));\n    }\n    @ReactMethod\n    public void installapk(String path,Promise promise){\n        try{\n            Runtime.getRuntime().exec(\"chmod 777 \"+path);\n            Intent intent = new Intent(Intent.ACTION_VIEW);\n            intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n            intent.setDataAndType(Uri.parse(\"file://\" + path),\"application/vnd.android.package-archive\");\n            _context.startActivity(intent);\n            promise.resolve(\"ok\");\n        }catch (Exception ex){\n            ex.printStackTrace();\n            promise.resolve(\"Exception:\"+ex.getMessage());\n        }\n    }\n    /**\n     * TCP 条码打印\n     * @param mIP\n     * @param mPort\n     * @param mData\n     */\n    private String TCPSocketPrint(String mIP,int mPort,String mData) {\n        Socket socket=new Socket();\n        try {\n            // 创建一个Socket对象，并指定服务端的IP及端口号\n            SocketAddress socAddress = new InetSocketAddress(mIP, mPort);\n            socket.connect(socAddress, 3000);\n            if(socket.isConnected())\n            {\n                BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(\n                        socket.getOutputStream()));\n                writer.write(mData);\n                writer.flush();\n                writer.close();\n                socket.close();\n            }\n            return \"打印成功\";\n        }  catch (IOException e) {\n            //e.printStackTrace();\n            return \"网络连接错误\";\n        } catch (Exception e) {\n            //e.printStackTrace();\n            return \"网络连接错误\";\n        }\n    }\n\n    private static final int REQUEST_CODE_CAMERA = 102;\n    @ReactMethod\n    public void TestScan(Promise promise){\n        Map<String,Object> map=new HashMap<String,Object>();\n        map.put(\"status\",String.valueOf(Session.gethasGotToken()));\n        boolean hastoken=Session.gethasGotToken();\n        if(!hastoken){\n            map.put(\"msg\",Session.getBaidu_message());\n            promise.resolve(new Gson().toJson(map));return;\n        }else{\n            Session.setPromise(promise);\n            final Activity activity = getCurrentActivity();\n            ///身份证正面\n            Intent intent = new Intent(activity, CameraActivity.class);\n            intent.putExtra(CameraActivity.KEY_OUTPUT_FILE_PATH,FileUtil.getSaveFile(activity.getApplication()).getAbsolutePath());\n            intent.putExtra(CameraActivity.KEY_CONTENT_TYPE, CameraActivity.CONTENT_TYPE_ID_CARD_FRONT);\n            activity.startActivityForResult(intent, REQUEST_CODE_CAMERA);\n        }\n    }\n    @ReactMethod\n    public void TestScanBarCode(Promise promise){\n        Map<String,Object> map=new HashMap<String,Object>();\n        map.put(\"status\",String.valueOf(Session.gethasGotToken()));\n        boolean hastoken=Session.gethasGotToken();\n        if(!hastoken){\n            map.put(\"msg\",Session.getBaidu_message());\n            promise.resolve(new Gson().toJson(map));return;\n        }else{\n            Session.setPromise(promise);\n            final Activity activity = getCurrentActivity();\n            // 身份证正面\n            Intent intent = new Intent(activity, CameraActivity.class);\n            intent.putExtra(CameraActivity.KEY_OUTPUT_FILE_PATH,FileUtil.getSaveFile(activity.getApplication()).getAbsolutePath());\n            intent.putExtra(CameraActivity.KEY_NATIVE_ENABLE, true);\n            intent.putExtra(CameraActivity.KEY_NATIVE_MANUAL, true);\n            intent.putExtra(CameraActivity.KEY_CONTENT_TYPE, CameraActivity.CONTENT_TYPE_ID_CARD_FRONT);\n            activity.startActivityForResult(intent, REQUEST_CODE_CAMERA);\n        }\n    }\n}\n\n```","tags":["react-native"]},{"title":"[AE] 制作漂亮雪花动画","url":"/2019/10/17//articles/2019/10/17/1571312118000.html/","content":"<a href=\"https://www.fevte.com/tutorial-29484-1.html\" target=\"_blank\">AE制作漂亮雪花动画</a>\n```\n\n\n```\n","tags":["AE"]},{"title":"[AE] 制作加载小动画","url":"/2019/10/17//articles/2019/10/17/1571312117000.html/","content":"<a href=\"https://www.fevte.com/tutorial-34855-1.html\" target=\"_blank\">AE制作加载动画小教程</a>\n```\n\n\n```\n","tags":["AE"]},{"title":"[AE] 调节动画的曲线","url":"/2019/10/17//articles/2019/10/17/1571312116000.html/","content":"<a href=\"https://jingyan.baidu.com/article/636f38bb9c5d28d6b84610ed.html\" target=\"_blank\">AE调节动画的曲线</a>\n```\n点击时间线最边缘的按钮，打开曲线编辑器\n\nAlt + 滚轮 ： 缩放曲线图\n```\n","tags":["AE"]},{"title":"[AE] 快捷键","url":"/2019/10/17//articles/2019/10/17/1571312115000.html/","content":"\nAE中素材整体在轨道中向前或向后移动一帧\n```\n方法一：\n选中素材按 alt+page up 素材整体向前一帧，alt+page down素材整体向后一帧\n\n方法二：\n选择图层按P，就可以调出所有的位置关键帧\n然后用鼠标点击一下位置这个属性，就可以发现所有的关键帧都被选中了\n记住一个重点，时间线要在关键帧上面，任意一个关键帧都可以\n然后你就可以整体调整关键帧的属性及位置了\n```\n\n```\n移动时间轴5帧\nctrl + shift + 左右方向键\n```\n\n\n<a href=\"https://www.jianshu.com/p/f959d4de7837\" target=\"_blank\">AE关键帧</a>\n```\n选中某图层按u，查看所有关键帧\n```\n\n<a href=\"https://www.jianshu.com/p/1e73751d62a7\" target=\"_blank\">AE快捷键</a>\n```\n选择工具：V\n\n抓手工具：H\n\n缩放工具：Z\n\n旋转工具：W\n\n摄像机：C\n\n锚点工具：Y\n\n形状工具：Q\n\n钢笔工具：G\n\n文字工具：CMD+T\n\n画笔工具：CMD+B\n\n人偶控制：CMD+P\n\n临时抓手：空格\n\n缩放工具：按滚轮进行缩放\n\n剪辑快捷键:\n\n前进/后退 1 帧：Ctrl + → / ←\n\n前进/后退10帧：Shift + → / ←\n\n跳到图层入点：I\n\n跳到图层出点：O\n\n设置图层入点：[\n\n设置图层出点：]\n\n删除当前时间之前：Alt + [\n\n删除当前时间之后：Alt + ]\n\n设定工作区域起始：B\n\n设定工作区域结束：N\n\n预览合成：空格\n\n给图层添加标记：Ctrl+8\n\n标尺工具：Ctrl+R\n\n参考线：Ctrl+；\n\n属性：\n\n不透明度 ：T\n\n旋转 ：R\n\n缩放： S\n\n关键帧值： U\n```\n","tags":["AE"]},{"title":"[AE] 打造碎片文字","url":"/2019/10/17//articles/2019/10/17/1571312114000.html/","content":"<a href=\"https://www.fevte.com/tutorial-23464-2.html\" target=\"_blank\">AE打造碎片文字</a>\n```\n工程文件下载地址：\nhttp://pan.baidu.com/s/1hqIIYOW\n```\n","tags":["AE"]},{"title":"[AE] 打开函数","url":"/2019/10/17//articles/2019/10/17/1571312113000.html/","content":"<a href=\"https://jingyan.baidu.com/article/4ae03de3aa47193efe9e6b63.html\" target=\"_blank\">AE打开函数</a>\n```\nAlt + 鼠标左键选中 小时钟图标\n```\n","tags":["AE"]},{"title":"[树莓派&Android] socket通信","url":"/2019/10/08//articles/2019/10/08/1570493433000.html/","content":"<a href=\"https://blog.csdn.net/fm0517/article/details/80939173\" target=\"_blank\">树莓派与Android客户端进行socket通信</a>\n\n<a href=\"https://blog.csdn.net/qq_23320955/article/details/80141775\" target=\"_blank\">基于 Socket 的 Android与树莓派通信</a>\n<a href=\"https://github.com/hhuaibo/socket\" target=\"_blank\">github socket</a>\n\n<a href=\"https://github.com/search?utf8=%E2%9C%93&q=android+%E6%A0%91%E8%8E%93%E6%B4%BE&ref=simplesearch\" target=\"_blank\">github搜索 android 树莓派</a>\n\n\n<a href=\"https://github.com/xiaoloudongfeng/raspberrypi_service\" target=\"_blank\">基于树莓派的室内温湿度监控服务 C Demo</a>\n<a href=\"https://github.com/xiaoloudongfeng/android_demo\" target=\"_blank\">基于树莓派室内温湿度监控服务的Android Demo</a>\n\n\n<a href=\"https://www.jianshu.com/p/9a6b059e0d79\" target=\"_blank\">树莓派+Android Things使用超声波测距模块HC-SR04</a>\n<a href=\"https://github.com/marlboro3420/UltrasonicDome\" target=\"_blank\">github demo</a>\n\n\n一个基于树莓派的环境检测系统的Android端\n```\nhttps://github.com/1074143547/rjgcapp\n```\n\n调用传感器，采集数据，绘图显示，实时存取。\n```\nhttps://github.com/1074143547/MotionSensor\n```\n","tags":["树莓派&Android"]},{"title":"[react-native] 适配工具","url":"/2019/10/08//articles/2019/10/08/1570493432000.html/","content":"<a href=\"https://github.com/junhaotong/react-native-scale-size/blob/master/index.js\" target=\"_blank\">react-native-scale-size</a>\n```\n/**\n * React Native 适配工具类\n * 以iPhone6为基准\n */\nimport {\n    Dimensions,\n    PixelRatio,\n} from 'react-native';\n  \n// iPhone6 尺寸\nconst defaultDevice = {\n    width: 375,\n    height: 667\n}\n  \n// 设备的宽\nconst {\n    width: deviceWidth\n} = Dimensions.get('window');\n\n// 字体大小缩放比例(Android下可设置字体大小)\nlet fontScale = PixelRatio.getFontScale();\n\n// 获取缩放比例\nconst scale = deviceWidth / defaultDevice.width;\n\n/**\n * 设置text\n * 如Android设备下不需要根据系统设置做字体缩放，可全面使用ScaleSize\n * @param {number} size\n * @returns {number}\n */\nexport const ScaleText = size => {\n size = Math.round(size * scale * fontScale);\n return size;\n}\n\n/**\n * 设置size\n * @param {number} size\n * @returns {number}\n */\nexport const ScaleSize = size => {\n    size = Math.round(size * scale);\n    return size;\n}\n  \n```\n","tags":["react-native"]},{"title":"[react-native] 身份验证加server","url":"/2019/10/08//articles/2019/10/08/1570493431000.html/","content":"\nReact Native APP 身份验证模块示例\n<a href=\"https://github.com/hezhii/react-native-auth-example\" target=\"_blank\">react-native-auth-example</a>\n","tags":["react-native"]},{"title":"[react-native] 瀑布流","url":"/2019/10/08//articles/2019/10/08/1570493430000.html/","content":"\nReact Native 瀑布流组件\n```\n#安装\nnpm i react-native-waterfall-layout --save\n\n#导入\nimport Waterfall from 'react-native-waterfall-layout';\n```\n\n示例\n<a href=\"https://github.com/junhaotong/react-native-waterfall/blob/master/example/index.js\" target=\"_blank\">react-native-waterfall</a>\n","tags":["react-native"]},{"title":"[react-native] 蓝牙聊天","url":"/2019/10/08//articles/2019/10/08/1570493429000.html/","content":"```\nreact-native-ble-plx\n```\n\n<a href=\"https://blog.csdn.net/weixin_33889665/article/details/91374095\" target=\"_blank\">React Native 蓝牙4.0 BLE开发</a>\n```\nyarn add react-native-ble-plx\n// 辅助数据发送接收buffer工具类\nyarn add buffer\nreact-native link react-native-ble-plx\n```\n\n修改build.gradle中的最低sdk版本为18\n```\nandroid {\n    defaultConfig {\n        minSdkVersion 18\n    }\n}\n```\n\n添加权限\n```\n<uses-permission android:name=\"android.permission.BLUETOOTH\"/>\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\"/>\n<uses-permission-sdk-23 android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n<uses-feature android:name=\"android.hardware.bluetooth_le\" android:required=\"true\"/>\n```\n\nandroid权限申请\njs\n```\nconst permissions: Permission[] = ['android.permission.ACCESS_COARSE_LOCATION'];\n\n\nif (Platform.OS == \"android\") {\n  for (const permission of permissions) {\n    const check = await PermissionsAndroid.check(permission);\n    console.log(`permission ${permission} check ${check}`);\n    if (!check) {\n      await PermissionsAndroid.request(permission);\n    }\n  }\n}\n```\n","tags":["react-native"]},{"title":"[react-native] 底部、顶部tabbar+statusbar","url":"/2019/10/08//articles/2019/10/08/1570493428000.html/","content":"<a href=\"https://blog.whezh.com/react-native-statusbar/\" target=\"_blank\">React Native 中的状态栏</a>\n\n<a href=\"https://github.com/hezhii/rn_statusbar\" target=\"_blank\">rn_statusbar</a>\n","tags":["react-native"]},{"title":"[react-native] BlE蓝牙连接打印机","url":"/2019/10/08//articles/2019/10/08/1570493427000.html/","content":"<a href=\"https://www.jianshu.com/p/2804d6efb68d\" target=\"_blank\">React Native BlE蓝牙连接打印机</a>\n<a href=\"https://github.com/zhanguangao/react-native-ble-plx-demo\" target=\"_blank\">react-native-ble-plx-demo</a>\n\n<a href=\"https://www.cnblogs.com/smart-girl/p/10916346.html\" target=\"_blank\">【水滴石穿】react-native-ble-demo</a>\n<a href=\"https://github.com/hezhii/react-native-ble-demo\" target=\"_blank\">github react-native-ble-demo</a>\n","tags":["react-native"]},{"title":"[flutter] 干货","url":"/2019/10/08//articles/2019/10/08/1570493426000.html/","content":"<a href=\"https://blog.csdn.net/sinat_17775997/article/details/82835143\" target=\"_blank\">一个很棒的Flutter学习资源列表</a>\n<a href=\"http://www.devio.org/tags/#Flutter\" target=\"_blank\">贾鹏辉的技术博客官网 Flutter</a>\n","tags":["flutter"]},{"title":"[android] 动画","url":"/2019/10/08//articles/2019/10/08/1570493425000.html/","content":"<a href=\"https://github.com/xiaoyanger0825/AnimationSummary\" target=\"_blank\">Android动画基础总结</a>\n<a href=\"https://github.com/weileng11/TransitionDemo-master\" target=\"_blank\">过度动画TransitionDemo</a>\n","tags":["android"]},{"title":"[android] github","url":"/2019/10/08//articles/2019/10/08/1570493424000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n```\nRecyclerView侧滑菜单，Item拖拽，滑动删除Item，自动加载更多，HeaderView，FooterView，Item分组黏贴\n```\n<a href=\"https://github.com/weileng11/SwipeRecyclerView-master\" target=\"_blank\">github SwipeRecyclerView</a>\n\n探索ListView的A-Z字母排序功能实现选择城市\n<a href=\"https://github.com/weileng11/SelectCityDome\" target=\"_blank\">github SelectCityDome</a>\n\n可拖拽图片网格列表\n<a href=\"https://github.com/weileng11/android-drag-square-master\" target=\"_blank\">android-drag-square</a>\n\n通知栏消息\n<a href=\"https://github.com/weileng11/YCNotification-master\" target=\"_blank\">YCNotification</a>\n```\n#使用该库\n#compile 'cn.yc:notificationLib:1.0.2'\nimplementation 'cn.yc:notificationLib:1.0.2'\n```\n\n\n支持Gif图片以及普通图片预览\n<a href=\"https://github.com/kymjs/KJGallery\" target=\"_blank\">KJGallery</a>\n\nAndroid 引导蒙层（指示器）\n<a href=\"https://github.com/weileng11/NewbieGuide-master\" target=\"_blank\">NewbieGuide</a>\n\nAndroid 切换夜间模式\n<a href=\"https://github.com/weileng11/Kepler-master\" target=\"_blank\">Kepler-master</a>\n\nAndroid 骨架屏效果\n<a href=\"https://github.com/weileng11/Skeleton-master\" target=\"_blank\">Skeleton-master</a>\n\nAndroid 指纹识别\n<a href=\"https://github.com/weileng11/BiometricPromptDemo-master\" target=\"_blank\">BiometricPromptDemo-master</a>\n\nandroid图片浏览,带各种动画\n<a href=\"https://github.com/weileng11/MNImageBrowser-master\" target=\"_blank\">MNImageBrowser-master</a>\n\n应用添加角标99\n<a href=\"https://github.com/weileng11/ShortcutBadger-master\" target=\"_blank\">ShortcutBadger-master</a>\n\nAndroid仿Qzone底部导航栏加号弹出菜单\n<a href=\"https://github.com/weileng11/WindowMenuDemo-master\" target=\"_blank\">WindowMenuDemo-master</a>\n\nAndroid 级联地址选择器\n<a href=\"https://github.com/weileng11/AddressSelector-master\" target=\"_blank\">AddressSelector-master</a>\n\nAndroid应用自动更新库\n<a href=\"https://github.com/weileng11/android-auto-update-master\" target=\"_blank\">android-auto-update-master</a>\n\nAndroid常用工具类\n<a href=\"https://github.com/weileng11/AndroidUtils-master\" target=\"_blank\">AndroidUtils-master</a>\n```\n完全退出\n全局异常捕获\n\nTimeUtil\n\nBitmapCompressUtil\n图片压缩类\n\nAppUtils\n指定小数输出\n关闭键盘\nBitmap转Byte\nMD5加密\n安装apk\n直接拨号，需要增加CALL_PHONE权限\n跳到拨号盘-拨打电话\n\nDisplayMetricsUtil\n\nRegexUtil\n手机号码，中间4位星号替换\n银行卡号，保留最后4位，其他星号替换\n身份证号，中间10位星号替换\n是否为车牌号\n验证Email\n验证身份证号码\n验证手机号码\n验证固定电话号码\n验证整数（正整数和负整数）\n\nLogUtil\n\nSharedPreferencesUtil\n```\n","tags":["android"]},{"title":"[住房] 公积金-单位存缴业务登记","url":"/2019/10/08//articles/2019/10/08/1570490134000.html/","content":"<a href=\"http://www.gdzwfw.gov.cn/portal/guide/1244040045592850X632014055001\" target=\"_blank\">单位缴存登记业务</a>\n\n","tags":["住房"]},{"title":"[珠海] 2019年第一季度珠海经济运行情况分析","url":"/2019/10/08//articles/2019/10/08/1570490133000.html/","content":"<a href=\"http://www.gd.gov.cn/zwgk/sjfb/dssj/content/post_2285899.html\" target=\"_blank\">2019年第一季度珠海经济运行情况分析</a>\n","tags":["珠海"]},{"title":"[政府] 工作报告","url":"/2019/10/08//articles/2019/10/08/1570490132000.html/","content":"<a href=\"http://www.gd.gov.cn/gkmlpt/content/2/2165/post_2165590.html\" target=\"_blank\">政府工作报告</a>\n\n","tags":["政府"]},{"title":"[汕头] 2019年1-7月汕头市经济运行简况","url":"/2019/10/08//articles/2019/10/08/1570490131000.html/","content":"<a href=\"http://www.gd.gov.cn/zwgk/sjfb/dssj/content/post_2285899.html\" target=\"_blank\">2019年1-7月汕头市经济运行简况</a>\n","tags":["汕头"]},{"title":"[qt] 棋对战","url":"/2019/10/08//articles/2019/10/08/1570490130000.html/","content":"<a href=\"https://github.com/daleyzou/wobuku-ChineseChess\" target=\"_blank\">基于Qt Creator实现中国象棋人机对战， c++实现</a>\n","tags":["qt"]},{"title":"[android] 小屏播放","url":"/2019/10/08//articles/2019/10/08/1570490129000.html/","content":"<a href=\"https://github.com/xiaoyanger0825/NiceVieoPlayer\" target=\"_blank\">github NiceVieoPlayer</a>\n","tags":["android"]},{"title":"[android] 清除缓存","url":"/2019/10/08//articles/2019/10/08/1570490128000.html/","content":"<a href=\"https://github.com/weileng11/ClearCache\" target=\"_blank\">github ClearCache</a>\n\n清理缓存；计算缓存大小；缓存大小格式化\n<a href=\"https://github.com/TankSao/ClearCacheDemo\" target=\"_blank\">github ClearCache</a>\n\n<a href=\"https://blog.csdn.net/baidu_30084597/article/details/79692299\" target=\"_blank\">Android清除缓存、清除数据</a>\n```\n\nimport android.content.Context;\nimport android.os.Environment;\n \nimport java.io.File;\nimport java.math.BigDecimal;\n\npublic class DataCleanManager {\n\n    /**\n     * 获取缓存大小\n     * @param context\n     * @return\n     * @throws Exception\n     */\n    public static String getTotalCacheSize(Context context) throws Exception {\n        long cacheSize = getFolderSize(context.getCacheDir());\n        if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n            cacheSize += getFolderSize(context.getExternalCacheDir());\n        }\n        return getFormatSize(cacheSize);\n    }\n\n    /**\n     * 清除缓存\n     * @param context\n     */\n    public static void clearAllCache(Context context) {\n        deleteDir(context.getCacheDir());\n        if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {\n            deleteDir(context.getExternalCacheDir());\n        }\n    }\n\n    private static boolean deleteDir(File dir) {\n        if (dir != null && dir.isDirectory()) {\n            String[] children = dir.list();\n            for (int i = 0; i < children.length; i++) {\n                boolean success = deleteDir(new File(dir, children[i]));\n                if (!success) {\n                    return false;\n                }\n            }\n        }\n        return dir.delete();\n    }\n\n    // 获取文件大小\n    //Context.getExternalFilesDir() --> SDCard/Android/data/你的应用的包名/files/ 目录，一般放一些长时间保存的数据\n    //Context.getExternalCacheDir() --> SDCard/Android/data/你的应用包名/cache/目录，一般存放临时缓存数据\n    public static long getFolderSize(File file) throws Exception {\n        long size = 0;\n        try {\n            File[] fileList = file.listFiles();\n            for (int i = 0; i < fileList.length; i++) {\n                // 如果下面还有文件\n                if (fileList[i].isDirectory()) {\n                    size = size + getFolderSize(fileList[i]);\n                } else {\n                    size = size + fileList[i].length();\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return size;\n    }\n\n    /**\n     * 格式化单位\n     * @param size\n     * @return\n     */\n    public static String getFormatSize(double size) {\n        double kiloByte = size / 1024;\n        if (kiloByte < 1) {\n//            return size + \"Byte\";\n            return \"0K\";\n        }\n\n        double megaByte = kiloByte / 1024;\n        if (megaByte < 1) {\n            BigDecimal result1 = new BigDecimal(Double.toString(kiloByte));\n            return result1.setScale(2, BigDecimal.ROUND_HALF_UP)\n                    .toPlainString() + \"K\";\n        }\n\n        double gigaByte = megaByte / 1024;\n        if (gigaByte < 1) {\n            BigDecimal result2 = new BigDecimal(Double.toString(megaByte));\n            return result2.setScale(2, BigDecimal.ROUND_HALF_UP)\n                    .toPlainString() + \"M\";\n        }\n\n        double teraBytes = gigaByte / 1024;\n        if (teraBytes < 1) {\n            BigDecimal result3 = new BigDecimal(Double.toString(gigaByte));\n            return result3.setScale(2, BigDecimal.ROUND_HALF_UP)\n                    .toPlainString() + \"GB\";\n        }\n        BigDecimal result4 = new BigDecimal(teraBytes);\n        return result4.setScale(2, BigDecimal.ROUND_HALF_UP).toPlainString()\n                + \"TB\";\n    }\n}\n```","tags":["android"]},{"title":"[android] 列表","url":"/2019/10/08//articles/2019/10/08/1570490127000.html/","content":"<a href=\"https://www.jianshu.com/p/f267f6c841d1\" target=\"_blank\">recyclerview</a>\n","tags":["android"]},{"title":"[android] 联系人列表","url":"/2019/10/08//articles/2019/10/08/1570490126000.html/","content":"<a href=\"https://github.com/kymjs/Contacts.git\" target=\"_blank\">github Contacts</a>\n","tags":["android"]},{"title":"[android] 获取电池电量","url":"/2019/10/08//articles/2019/10/08/1570490125000.html/","content":"<a href=\"https://www.jianshu.com/p/6c8286d451c8\" target=\"_blank\">Android获取电池电量</a>\n\n手机电池监控\n<a href=\"https://github.com/Dianjoy/battery-monitor-android\" target=\"_blank\">github</a>\n\n根据电池电量更改电池中的电量颜色\n<a href=\"https://github.com/ChenYXin/BatteryView\" target=\"_blank\">github BatteryView</a>\n","tags":["android"]},{"title":"[android] Picasso图片加载","url":"/2019/10/08//articles/2019/10/08/1570490124000.html/","content":"<a href=\"https://blog.csdn.net/qq_43377749/article/details/90601709\" target=\"_blank\">Picasso Android 教程 - 从URL加载图片</a>\n","tags":["android"]},{"title":"[AE] 基础动画","url":"/2019/10/08//articles/2019/10/08/1570490123000.html/","content":"<a href=\"https://www.bilibili.com/video/av34273555\" target=\"_blank\">公园动画</a>\n<a href=\"https://space.bilibili.com/95769692\" target=\"_blank\">丛伊俊Life_studio</a>\n<a href=\"https://www.bilibili.com/video/av34656286/\" target=\"_blank\">【3】AE零基础入门教程 . MG动画_弹吉他的老爷爷</a>\n\n<a href=\"https://www.bilibili.com/video/av54975034/\" target=\"_blank\">【AE教程】非常棒的MG动画基础课程</a>\n```\n素材包链接: \nhttps://pan.baidu.com/s/1S_CaxpdEbzDYFzDfdoMchA\n提取码:\npdex\n```\n","tags":["AE"]},{"title":"[树莓派] 手册","url":"/2019/10/07//articles/2019/10/07/1570435409000.html/","content":"<a href=\"http://blog.lxx1.com/%E6%A0%91%E8%8E%93%E6%B4%BE-wiringpi-%E7%94%A8%E6%88%B7%E6%89%8B%E5%86%8C#_Toc26151\" target=\"_blank\">科技爱好者博客</a>\n\n<a href=\"https://github.com/balena-io/etcher/releases/download/v1.5.45/balenaEtcher-Portable-1.5.45.exe\" target=\"_blank\">balenaEtcher-Portable-1.5.45.exe</a>\n\n```\n普通难度的DIY\n用树莓派打造一个家庭影院\n把树莓派配置成无线路由器\n用树莓派搭建BT下载服务器\n拿树莓派当FTP文件服务器\n在树莓派上搭建代码托管服务(SVN)\n用树莓派当网络收音机播放FM电台\n在树莓派上搭建LNMP环境，作为网站服务器\n基于 Samba 实现 NAS 系统（网络存储中心）\n用树莓派实现网络批量自动安装CentOS\n用树莓派建立家庭媒体中心\n在树莓派上搭建LAMP服务\n在树莓派上获取美国天气预报\n使用Markdown On Raspberry Pi 写博客\n树莓派制作单双休闹钟\n用树莓派搭建Git私有服务器\n用树莓派做VPN路由网关\n树莓派上使用迅雷远程下载\n树莓派做下载机，Aria2！\n树莓派下搭建shadowsocks服务器\n空气指数之 PM2.5 显示器（基于SAKS扩展板）\n站点宕机指示（基于SAKS扩展板）\n数字温度计（基于SAKS扩展板）\n\n\n较高难度的DIY\n给树莓派安装摄像头模块实现拍照、摄像功能\n在树莓派上实现文字转语音服务\n树莓派使用MJPG-Streamer实现网络监控\n树莓派+温度传感器实现室内温度监控\n用树莓派实现网站访客LED闪亮提醒\n树莓派用作FM电台发射器\n用树莓派改装的智能微博炉\n树莓派打造超低成本廉价盲文显示器\n用树莓派打造一个带WIFI的数码照相机\n用树莓派做个专属iBeacon基站\n树莓派搭建 hadoop 集群\n将树莓派打造成音乐播放服务器\n红外感应模块+蜂鸣器实现简易报警\n树莓派DIY自带特效的智能安全门\n使用树莓派进行简易人脸识别\n直播续章：用树莓派搭建B站直播“点歌台”\n叮当：一个开源的树莓派中文智能音箱项目/a>\n使用叮当声控智米电风扇\n用树莓派DIY六足行走的机器人\n家具变智能：用HomeKit+Siri声控家里电器\n用树莓派DIY共享鱼缸，支持微信远程喂鱼\n用树莓派做 RTMP 流直播服务器，可推送至斗鱼直播\n```\n","tags":["树莓派"]},{"title":"[面试题] ui","url":"/2019/10/07//articles/2019/10/07/1570435408000.html/","content":"<a href=\"https://blog.csdn.net/qq_40801316/article/details/81702894\" target=\"_blank\">UI技术面试题库</a>\n\n<a href=\"https://www.cnblogs.com/leolei/p/10718156.html\" target=\"_blank\">2019新版UI设计面试题汇总（附答案）</a>\n```\n问题一、Android手机的常用设计尺寸有_________.怎么适配ios和安卓。\n\n答案：安卓320 X 480是常规模拟器、但现在的开发都是用360x640做一倍率。480 X 800（1.5倍率）、720 X 1280（2倍率）、1920*1080（3倍率）\n\nios用sketch软件出375*812的1倍率的设计图，直接生产标注，1倍率中1px=1pt=1dp。方便程序员理解。\n\nIos适配安卓将375缩小间距至360，文字大小不变，图标大小不变，图片按等比缩小。也出一倍率标注。1px=1dp。适合程序员开发。\n\n问题二、认为UI和平面的区别是\n\n答案：UI是英文User和interface的缩写，是用户与界面2个部分组成。带交互及用户体验，一个好的UI设计师，更多的价值体现在用户体验及交互上的优势。\n\n怎么样设计出更符合人操作习惯的用户界面，怎么设计出更简洁明了的用户界面，怎么更符合用户群体的审美。如手机手势的使用，移动场景变化的时候，界面的呈现，手持设备的交互等。\n\n平面的更多是纯图形的设计。考虑更多的是产品的受众人群，符合他们的审美观点，符合他们的使用习惯，符合他们的价值区间的设计。更多考虑的是现实场景中的使用状态。如海报，VI，易拉宝等。\n\n问题三、你如何使用色彩?\n\n答案：去寻找自己app的配色心理学的色彩分析，具体用文字说明。用户群体，年龄分析，app的内容分析点方面去考虑。\n\n考虑明度的对比，我国色盲男性5%-8%，女性0.5%-1%。全球男性8%，女性0.5%，所以在设计的时候，要充分考虑到色盲大众群体的需求。\n\n问题四、你怎么理解UI设计的一致性原则。\n\n答案：制作app的初始的规范设计，包括从色彩，字号，按钮，图标细节等各方面的一致性设计。主要是考虑到；\n\n风格的一致性：用户友好度更好，降低用户学习成本，同样条件的情况下更快速的识别。\n\n问题五、做过平面类的设计吗，平面印刷要注意什么。\n\n答案：做过，一年或两年。平面印刷就是要注意吸引人的目光，争取在3秒中能够给用户留下的印象。选择CMYK颜色，ps的分辨率300，印刷的时候注意通道，特别是字体，尽量用单色通道去做设计，保证文字的清晰度。常规很多时候都使用k100这样的方式做设计。\n\n问题六、怎么做app的适配。\n\n答案：之前我设计app用的软件是sketch，因为是矢量软件，所以用一倍率设计的，一倍率的时候，1px等于1pt和1dp。在这样情况去兼容ios和android很方便，一般我做375*667的界面先，适配安卓的时候，做360*640的界面，iphoneplus的适配再出一套414*736的界面。基本上就是图标文字不动，适当的缩小间距或者放大间距就好。\n\n特殊用html5做app的时候，一般是640*960的尺寸做界面。\n\nIpad的话一倍率是用1024*768做一倍率。\n\n问题七、你怎么和程序员交接的。\n\n答案：交付规范文档；交付效果图；各个倍率的切图，ios的23倍率，安卓的加个1.5倍率；交接标注好的文件；svg直接交付1倍率的矢量文件。psd文件再交付源文件给程序员，在像素大厨中直接看发开模式。也可以使用蓝湖看标注。\n\n有特殊效果的时候，交接ae动效，或者和程序员面对面进行沟通，保证顺利完成。还要做后续的界面bug的测试。保证项目的最终效果和效果图一致。\n\n问题八、在这个项目中你的角色是什么。\n\n答案：应该说我是主创，当时同事一起每个人出了2-3个方案，老板最后选了我设计的，初始规范文档也是在我的方案基础上扩展的。包括色彩，文字，图标，按钮等基本规范。\n\n问题九、说一说你最满意的作品，及满意在哪？\n\n答案：这个在自己的项目基础上认真准备。每个人根据自己的项目情况做个3分钟左右的详细的介绍。\n\n问题十、有关注现在的流行趋势吗？常去的网站和关注的设计师有哪些？\n\n答案：这个至少要说3-5个网站名称，外国的，并且要举例说出关注的，喜欢的设计师，喜欢的原因。每个人都要问这个问题。\n\n问题十一、现在流行扁平化的设计，有什么优势？\n\n答：扁平化忽略了真实环境中的渐变环节，更简洁，更直观，识别度更好，在同样的设计图形图像上，扁平化的设计更容易获得关注力。\n\n而且扁平化的设计色彩单纯，所占内存更小，更优化，更适合移动设备。\n\n问题十二、大学期间，你的主要课程有哪些?\n\n答案：根据自己的专业，一定要记下来自己的专业课程内容。背诵下来。\n\n问题十三、当下流行的风格是什么?\n\n答案：扁平风，极简风，孟菲斯风格等。图标前段时间流行MBE，比较可爱，还有二次元风格什么的。风格流行不特别落后就好，最主要还是要适合自己的产品，才是最好的。\n\n问题十四、怎么保证项目进行时，和别人的配合顺利进行。\n\n答案：和设计师合作，一定在项目初始阶段就做好基础规范，统一好节目界面上的基础元素。\n\n例如：\n\n文字的规范，在标题，正文，标注上的字号大小及颜色的规范；\n\n色彩的规范，主题色的运用在什么场合中运用；\n\n线框的规范，线框颜色，粗细等。\n\n列表规范，列表高度，及列表的呈现方式等。\n\n图标的规范，线性图标的轮廓粗细，转角的一致性。扁平图标的色彩范围，大小及是否有投影等。\n\n按钮的规范，按钮大小啊，高度啊，在不同文字情况下的宽度变化。点击的状态和产品经理的沟通就是原型图的理解，看着原型做设计，要是有不明白的要马上问，不要自己猜测。有发现不合理的交互及用户体验上可优化的地方，先和产品经理沟通，提出自己的意见，如果意见不一致，可保留自己的意见。\n\n和程序员的沟通，就是交接的东西要清晰，这些刚才在说交接细则上已经说明白了，具体看第7条。\n```\n","tags":["面试题"]},{"title":"[工作] 日常工作","url":"/2019/10/07//articles/2019/10/07/1570435407000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fzhaopin.baidu.com%2F10111436903&query=%E6%99%AE%E5%B7%A5&city=%E7%8F%A0%E6%B5%B7&is_promise=&is_direct=2&vip_sign=1&asp_ad_job=\" target=\"_blank\">普工</a>\n```\n4500-5500元/月\n\n职位类型：普工|技工|生产|机械\n\n要求：\n两班倒坐班\n男18一45岁，女18一45岁\n\n生产车间：\n空调环境，普通工衣\n\n基本工资：\n1950元/月\n\n平时加班工资(1.5倍): 16.81元/小时，休息日加班工资(2倍):22.41元/小时，法定假日加班工资(3倍):33.62元/小时\n\n餐费补贴：\n先吃后扣；早餐1元；中餐3元；晚餐2.25元；宵夜2元\n\n集体奖金（最高）:\n计时员工：280元/月（效率奖120元，质量奖160元）\n计件员工：集体质量奖金160元/月；\n全勤奖:60元/月；\n\n夜班补贴:10元/晚；\n工龄奖:\n满1年：70元/月，\n满2年：140元/月，\n满3年及以上：210元/月，\n有五险一金和年终奖金\n\n1. 有竞争力的薪酬制度，收入稳定，每月15日前准时发工资，月收入4000~5000元\n2. 试用期1个月；\n3. 全额工资购买五险一金，补充意外险等；\n4. 住房公积金，以个人工资总额为基数购买（个人缴5%，公司缴5%）；\n5. 员工宿舍；空调宿舍；餐补；健康检查；工会福利。\n\n工作地址：\n科技园6号\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=https%3A%2F%2Fwww.pgjob.net%2Fjob%2F358570.html&query=%E6%99%AE%E5%B7%A5&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">小林电子厂高薪招男女普工</a>\n```\n职位描述：\n1. 招聘岗位：\n生产作业员（主要从事变压器的绕线、装磁芯、整理针脚等工作）坐着上班，座椅可自由调节高度应征条件：18 - 45周岁，初中学历以上\n2. 工作时间：\n（1）每周5天8小时标准工作制（平常及周末需视生产状况安排加班），保证每周有一天休息（平时加班1.5倍工资，休息日加班2倍工资）\n（2）班次：\n白、晚两班制（白班8:00 - 17:00 晚班：20：00 - 次日5:00）\n（3）入职资料：\n个人有效身份证原件（有效期大于三个月）及身份证复印件3份，个人1寸免冠彩照1张，珠海市镇级及镇级以上公立医院颁发的合格健康体检证明。\n3. 薪资福利：\n（1）月平均工资约4200- -5000元/月，每月15日准时发工资\n（2）员工食堂：空调环境，供应早、中、晚餐、宵夜。\n（3）提供免费的凉茶或列汤，并有中西风味的膳食超过20多种（炒菜、面食、汤粉、饺子、点心、扬州炒饭、特色小炒等），指纹刷卡用餐\n4. 面试时间：\n周一至周六早上8.00面试​，自备一寸照片和身份证复印件3张。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010247%2Feaf394c980744acdb52b59e395a2851a&query=%E6%99%AE%E5%B7%A5&city=%E7%8F%A0%E6%B5%B7&is_promise=1&is_direct=1&vip_sign=&asp_ad_job=\" target=\"\">普工长白班包吃住</a>\n```\n3000-3500元/月\n\n应聘要求：\n18-45岁，男女不限，做事积极主动，热爱食品行业\n\n工作时间：\n08：30-17：30月休4天8小时；包吃住，买社保\n\n工作地点：金鼎工业园30号\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=https%3A%2F%2Fwww.fdcjob.cn%2Fjob%2F503697.html&query=%E6%99%AE%E5%B7%A5&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=&vip_sign=&asp_ad_job=\" target=\"_blank\">伟创力招普工18元/小时</a>\n```\n伟创力招普工18元/小时\n3500-6000元/月申请\n学历：大专经验\n\n\n职位描述\n公司福利：五险一金加班补助包住包吃房补绩效奖金通讯补贴\n\n\n工作内容：\n珠海斗门伟创力招聘小时工多名，单价18元/小时，月收入5000元；\n\n珠海斗门伟创力，公司成立以来发展迅速，业务不断发展壮大我公司主要经营电脑 ; \n电子元件，主要生产最新上市的手机、电脑、平板、数码、电子通讯产品，现因订单增加，现急招男女操作工多名，加班充足，月综合工资5000元。\n\n【招聘职位】\n普工，主要以手机电子为主。主做华为手机组装装配，工作简单好上手。\n\n【福利待遇】\n食宿：包住提供吃，先吃后扣，水电费平摊，入职发饭卡，厂区有篮球场，电视房、桌球室、图书室等，工厂交通方便、地段繁华，环境优美。《住宿环境》6-8人间,独立卫生间,24小时热水供应,有空调,有阳台。\n\n职位要求：\n1、年龄条件：18-40周岁，无需经验，有本人真实有效身份证，身体健康，\n2、应聘人员面试带齐个人行李物品、身份证原件、复印件4张、一寸照片一张，当天安排进厂住宿。（符合条件带行李身份证入职，当天安排住宿）\n\n工作时间：\n每天11个小时、月休4天。\n```\n\n\n学校中的 <a href=\"https://zhaopin.baidu.com/szzw?query=%E5%8E%A8%E5%B8%88&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5463-zp_exact_new&id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010247%2Ff3fab1ba3c60aadcbb12c64e04304818&is_promise=1\" target=\"_blank\">中厨师长</a> <a href=\"https://zhaopin.baidu.com/szzw?query=%E5%8E%A8%E5%B8%88&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5463-zp_exact_new&id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010247%2Fb1cdb1abb9262ee4dda366ab62e2ead0&is_promise=1\" target=\"_blank\">西厨师长</a>\n```\n职位类型：行政主厨/厨师长\n\n岗位描述：\n1. 负责厨房整体运作；\n2. 执行餐饮总监下达的各项工作任务；\n3. 负责制订厨房的各种工作计划；\n4. 负责餐厅出品的研发和品质控制；\n5. 协助餐饮总监督导厨房各岗位，把控食品安全管理；\n6. 督导厨房各分部主厨对食品原料的管理，使所有食品始终符合标准食谱规定，合理地控制食品成本；\n7. 保持对员工队伍特别是厨师以上厨房员工的教育和培训，使之不断提高；\n\n岗位要求：\n1. 从事酒店餐饮5年以上，自带团队，持有厨师资格证书、厨师等级证书优先\n2. 年龄三十岁以上，高中以上学历，身体健康、精力充沛\n3. 具有强烈的责任心，勇于开拓和创新，作风干练；\n4. 了解创意型粤菜的制作；\n5. 对成本控制管理、食品营养学、厨房的设备知识拥有相当的基础\n6. 精通粤菜并熟悉其他菜系，有实际管理和操作经验，可自带团队\n\n福利待遇：\n1. 八小时工作制，月休假四天，带薪年假五天；\n2. 提供员工餐厅一天四顿，五菜一汤、饮料任饮；\n3. 免费年度体检；\n4. 免费员工制服、鞋袜，不收取任何押金；\n5. 集体宿舍免费提供床上用品，配空调、饮水机、电视、24小时热水供应，Wi-Fi网络；\n6. 五险一金、奖励旅游、节日补贴、员工培训，丰富多彩的员工集体活动；\n7. 季度奖金、半年奖金、年终双薪、绩效奖金，月均300元，高温补贴月均150元；\n8. 每满一年工龄奖金每月加100元；\n9. 可借助于校园内的体育设施与教学设施满足休闲娱乐与学习的需求\n\n乘车路线：\n金鼎、上冲方向乘坐70路；\n创新海岸生活区及城轨珠海北站方向乘坐72A、珠海北站专线a；\n市区方向乘坐69路、10A路、K3、B9路往“北师大”巴士站下车，步行至“北师大国际交流中心”一楼人力资源部\n\n面试时间：\n周一至周五9：00-11：00、14：00-16：00，请提前预约\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fwww.doumi.com%2Fauth%2Fbaidu%2Fjumpdetail%2F8151075%3Fcity%3Dzhuhai%26ca_platform%3D1%26ca_source%3Dbaiduzhaopin%26group_id%3D75&query=%E5%8E%A8%E5%B8%88&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">厨师助理</a>\n```\n职位描述：\n诚聘厨师助理/学徒招2人，工作地点位于珠海市香洲区-拱北，薪资待遇5000-5500元/月，学历要求不限，工作经验要求不限\n\n岗位职责：\n1、协助厨师完成后厨工作；\n2、按照菜谱学习本店菜品制作，不断提高烹调技术。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F0%2Faf31e4e59d24d364458c80f06354ae0d&query=&city=%E7%8F%A0%E6%B5%B7&is_promise=1&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">珠海青春无限高铁乘务员</a>\n```\n职位描述：\n（女性岗位）乘务员/客运员/安检员/ 贵宾厅VIP接待\n（男性岗位）安全员/乘警/客运员/安检员/动车检修/站内特勤\n\n招聘要求：\n1.年龄18至30周岁，女性身高1.60以上（男性172cm以上），学历高中以上，形象大众话，能接受服务行业，热爱客运工作，条件气质佳者（可放宽至1.58cm）\n2.身体健康，五官端正，身材匀称，口齿清晰，无色盲，。无慢性、传染性恶疾。身体健康,能适应列车员连续工作的特点,无传染病、心脏病、晕车等。\n3.服从组织统一安排，热爱铁路事业，思想政治素质好、能吃苦耐劳、有团队精神\n\n\n工作时间：\n动车组乘务人员目前工作时间是“跟二休三”(即跟车两天休息三天)\n一个月上12天班，休息18天，靠工作证坐高铁动车只要不跨国旅游都免费，无论上下班坐车都免费。\n\n工资待遇：\n工资待遇:前三个月试用期工资在3000左右，试用期过后工资正常在4000--6000元左右,有吃住,交五险一金。\n\n上班一天8-11小时,晚上住铁路公寓。休息3天,回家时可以凭工作证坐高铁动车免费\n\n\n报名方式和面试：\n一、报名初试：\n1、现场报名初试时间为近期每周一到周六，早9点半到下午6点之间均可。\n2、应聘人员报名时需提交以下材料：身份证、原件和复印件及本人近期一寸蓝底照片4张，学历证书复印件可后期补上\n\n\n聘用流程及薪资待遇：\n1、经过面试、考核确定的拟聘用人员，参加单位的岗位集中岗前培训一周，直接上岗（培训内容有：铁路基本知识、服务礼仪礼节、行业纪律、体能体态训练、企业文化、实地礼仪礼节练习）。\n\n2、培训期满后上车实习，实习期为1到3个月（包含培训期）。基本工资3000元左右/月，转正后综合工资4000-6000元/月。（基本工资 出车趟数 工作质量 列车效益 奖金 补助）。每年随铁路的正常工资调整机制调整。按国家规定签合同、足额缴纳社会保险。法定节假日加班时，按国家有关规定执行；享受节假日等发放的食物。\n\n3、工作时间：做2休3，每天工作8到10个小时左右，一个月上12天班，靠工作证坐车回家或旅游只要不跨国都免费，提供工作餐，住铁路公寓宿舍。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fwww.doumi.com%2Fauth%2Fbaidu%2Fjumpdetail%2F8133569%3Fcity%3Dzhuhai%26ca_platform%3D1%26ca_source%3Dbaiduzhaopin%26group_id%3D69&query=&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">饿了么美团招聘送餐员</a>\n```\n职位类型：餐饮|酒店|超市|服务业\n\n工作职责\n1、所属区域内，安全，快速，友善的将餐点送至指定地点；\n2、客户的维护，客户咨询的处理和意见的反馈；\n3、突发事件的处理；\n\n职位要求：\n1、18-50岁左右，品行端正，无不良嗜好。\n2、具备快速的学习能力，会骑电瓶车，灵活的使用智能手机，熟悉使用手机地图，导航。\n3、有良好的服务意识、和服务精神。\n4、吃苦耐劳，有强烈的目标感；\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010291%2Fb81f83a239ce3c1b9a165d3a71548b30&query=&city=%E7%8F%A0%E6%B5%B7\" target=\"_blank\">研发工程师(生物工程）</a>\n```\n8333-12500元/月\n\n职位描述：\n蛋白质工程、基因工程、分子生物学专业，（论文内容与分子生物学相关）\n```\n\n\n<a href=\"\" target=\"_blank\">焊工</a>\n```\n职位类型：运输/物流/仓管\n\n8001-10000元/月\n\n岗位职责：\n1、根据焊接工艺指导书，选择合适的焊接工艺和原材料，进行产品零件、设备的焊接；\n2、进行焊条烘干、零件预热，焊渣清除，必要时进行焊后热处理，并做好焊接记录，确保焊接质量；\n3、焊接完成后，检验夹渣、未焊透现象，及时进行补焊、重焊；\n4、定期对焊机、箱式炉、烘干炉进行维护保养，独立或配合其他人完成焊接设备的维修。\n\n任职资格：\n1、中专及以上学历，持有焊工证；\n2、二年以上焊工经验；\n3、熟悉各种设备的焊接材料及其相应的焊接要求，并使用熟练；\n4、有进取心、高度的事业心、责任感和良好的职业道德；\n5、服从主管安排，能团结同事，做人厚道实在。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010247%2Fa00c85fa1b976176f166059e367746fc&query=&city=%E7%8F%A0%E6%B5%B7&is_promise=1&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">拉面店招聘拉面师傅</a>\n```\n职位类型：生活服务业\n\n职位描述：\n某拉面店招聘拉面师傅公司类型拉面店职位名称拉面师傅性别年龄男女不限，25-50岁语言要求语言不限;\n上班时间:12小时，中间包含有吃饭休息时间工资待遇试用期工资10000mop，包吃包住，每月休息4天\n\n工作要求：\n有拉面相关工作经验，负责后厨拉面、拔面剂子、揉面其他备注6天年假、6天病假，放年假有来回车费报销信息提供参考；\n\n具体福利待遇以面试为准\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010247%2F2e710fd484c5d1e71ed32325bd7024f8&query=%E6%99%AE%E5%B7%A5&city=%E7%8F%A0%E6%B5%B7&is_promise=1&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">珠海市香洲韵达快递有限责任公司 普工，操作员，扫描员</a>\n```\n职位类型：\n调度员\n\n岗位职责：\n1、女性负责快递件简单扫描、分拣、打包工作；\n2、一般男性负责快递件扫描、打包、称重；\n3、重要岗位：男性，负责快递件卸货、装叠货，薪酬高于第1、2项员工\n\n二、薪资福利\n1、男女普工3700-4500元上班8小时\n2、社保意外险，工龄200元年，封顶1000元，生日200元，重大节日发礼品等\n\n三、说明：\n1、固定夜班下午5：30至晚上00:30，操作完可提前下班不扣工资，平均上班时5-8小时\n2、固定早班早上2：30-8:30及中午11:30-13:30，操作完可提前下班，平均5-8小时\n3、非常适合住在前山人力资源、十四村、造贝村、南屏附近或是可考虑在公司附近租房的男女普工\n```\n","tags":["工作"]},{"title":"[工作] 公司中的岗位职责","url":"/2019/10/07//articles/2019/10/07/1570435406000.html/","content":"\n<a href=\"https://baike.baidu.com/item/%E4%BA%BA%E4%BA%8B%E5%B7%A5%E4%BD%9C/483626?fr=aladdin\">人事行政部门的工作职责：</a>\n```\n1、负责本部的行政管理和日常事务，协助总经理搞好各部门之间的综合协调，落实公司规章制度，沟通内外联系，保证上情下达和下情上报，负责对会议文件决定的事项进行催办，查办和落实，负责全公司组织系统及工作职责研讨和修订。\n2、人力资源管理与发展\n（1）组织架构的设计、岗位描述、人力规划编制、考勤管理的工作。\n（2）招聘使用\n（3）工作报酬\n（4）培训开发\n（5）人员考核\n\n3、负责公司各项规章制度的修订、制定及检查监督。\n4、负责总务管理\n5、安全保卫\n6、强调企业精神，创建公司的企业文化\n7、塑造企业形象\n```\n\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fwww.doumi.com%2Fauth%2Fbaidu%2Fjumpdetail%2F8330256%3Fcity%3Dbj%26ca_platform%3D1%26ca_source%3Dbaiduzhaopin%26group_id%3D56\" target=\"_blank\">财务部门会计：</a>\n```\n职位类型：财务会计\n\n岗位职责：\n1、负责公司日常的费用报销\n2、原始审核凭证，编制记账凭证，保证账务处理及时，出具财务报表；\n3、做好现金的日常管理及收付工作；及时登记各类账簿\n4、负责每天日报表整理、统计数据；及时登记现金及银行存款日记账\n\n任职要求：\n1、条理清晰，有良好的表达能力及沟通能力；\n2、做事认真负责，有上进心，有责任感。\n```\n\n<a href=\"https://zhidao.baidu.com/question/327577131.html\" target=\"_blank\">财务的主要工作 类型一&二：</a>\n```\n类型一：\n1. 账务处理：\n即整理原始单据、填写记账凭证、对账、结账、编制财务报表等；\n2. 开票和报税：\n发生销售业务时，及时并正确开票；\n发生付款业务时，确认发票的回收；\n3. 月末、季末、年末通过柜台或者网上申报的方式，替公司申报当期应交税费，报送报表，包括增值税、营业税及附加、所得税、印花税等各项税款，并及时催促出纳缴交税款；\n4. 档案管理：\n定期装订凭证、装订帐簿、以及整理、保管其他相关会计档案。\n注意：\n根据不同行业、不同公司，可能对具体的岗位有具体的要求，例如有的财务会计内容还会涉及到盘点、统计、税筹等特殊职能。\n\n\n类型二：\n财务会计主要负责公司的凭证审核，账簿登记，纳税税申，会计档案保管工作。\n1. 熟悉掌握财务制度、会计制度和有关法规。遵守各项收费制度、费用开支范围和开支标准，保证专款专用。\n2. 编制并严格执行部门预算，对执行中发现的问题，提出建议和措施。\n3. 按照会计制度，审核记账凭证，做到凭证合法、内容真实、数据准确、手续完备;账目健全、及时记账算账、按时结账、如期报账、定期对账(包括核对现金实有数)。保证所提供的会计信息合法、真实、准确、及时、完整。\n4. 严格票据管理，保管和使用空白发票，收据要合规范。票据领用要登记，收回要销号。\n5. 妥善保管会计凭证、会计账簿、财务会计报表和其他会计资料，负责会计档案的整理和移交。\n6. 及时清理往来款项，协助资产管理部门定期做好财产清查和核对工作，做到账实相符。\n7. 遵守《会计法》，维护财经纪律，执行财务制度，实行会计监督。负责对出纳会计及其他有关财务人员的业务指导。\n8. 对主管部门和审计、财政、税务等部门依照法律和有关规定进行的监督，要如实提供会计凭证、会计账簿、财务会计报表和有关资料，不得拒绝、隐匿、谎报。\n9. 会计调离本岗位时，要将会计凭证、会计账簿、财务会计报表、预算资料、印章、票据、有关文件、会计档案、债权债务和未了事项，向接办人移交情楚，并编制移交清册，办妥交接手续。\n10. 遵守职业道德，做到廉洁奉公、坚持原则、实事求是、一丝不苟、热忱服务。\n\n```\n\n<a href=\"https://zhidao.baidu.com/question/327577131.html\" target=\"_blank\">财务工作总结：</a>\n```\n职能管理\n1、会计审核\n2、材料核算\n3、会计内部报表执行\n4、销售管理\n5、税务政策及纳税申报\n（一）核算工作\n（二）审计工作\n（三）财务分析\n（四）资金管理\n（五）预算管理\n\n年终总结\n1. 大体描述一年的工作，包括指导思想和职业操守等；\n如：\n(1) 正确履行会计职责和行使权限,认真学习国家财经政策、法令，熟悉财经制度;\n(2) 积极钻研会计业务，精通专业知识，掌握会计技术方法;\n(3) 热爱本职工作，忠于职守，廉洁奉公，严守职业道德，严守法纪，坚持原则，执行有关的会计法规;\n(4) 在局会计工作规范化检查评比标准中荣获第一名。\n\n2. 工作跟进以及与其他部门的配合，做好财务工作；\n如：按照上级规定的财务制度和开支标准，经常了解各部门的经费需要情况和使用情况，主动帮助各有关部门合理使用好各项资金。公司上半年曾一度出现资金短缺. 会计室通过努力. 保证了职工工资按时足额发放及其他各项急需资金的落实。\n3. 工作中的具体细节；\n如：工作中审核一切开支凭证，及时结算记账，做到各项开支都符合规定，一切账目都清楚准确。对经费的使用情况和存在问题，经常向有关领导请示汇报。\n4. 是否充分做好财务工作的汇报；\n如：按照规定编造全年、每季、每月的各种预算报表统计资料和月度结算，做到准确无误，并及时报告分管领导。\n5. 关于财务凭证的处理；\n如：所有财务凭证，及时整理、装订和保存。\n6. 财务处理一个重要环节，是否和其他部门充分合作，并推进工作；\n如：经常与各部门管财产的同志联系，建立必要的手续，做到各单位的财产和全校的总账相符合.\n7. 与机关单位的合作；\n如：配合、督促各有关单位，及时处理一切暂收、暂付款项。\n8. 配合出纳的工作；\n如:指导和帮助出纳工作。\n9. 总的概括及2012展望。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?query=%E8%B4%A2%E5%8A%A1+%E5%B7%A5%E4%BD%9C&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5306-zp_exact_new&id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2010291%2F41339cb65d2642e57e0e1558fcd9b30f&is_promise=1\" target=\"_blank\">财务经理职位描述：</a>\n```\n职位类型：财务/审计/统计类\n\n职位描述：\n任职要求：\n1. 财会专业专科以上学历，具有中级会计师以上职称或注册会计师职称；\n2. 6年以上财务相关工作经验，3年以上财务管理职位经验，1年以上建筑、电力、燃气、市政工程企业财务管理工作经验，具有社会公共资源关系者优先；\n3. 具有较强的成本费用管理、风险控制和财务分析能力；\n4. 具有较强的判断和决策能力、人际沟通和协调能力、计划与执行能力；\n5. 具有良好的职业道德、较强的工作热情和责任感。\n\n岗位职责：\n1. 在总经理的领导下，全面负责公司的财务管理工作；\n2. 负责编制、审核公司年度财务预算、监督实施、并主持公司月度预算分析与平衡会议；\n3. 负责构建财务管理体系，包括各项目的财务制度、业务流程、实施标准等；\n4. 掌握公司财务状况、经营成果和资金变动情况，及时向总经理汇报工作情况；\n5. 负责参与公司重大投资、发展战略、业务问题的决策；\n6. 组织执行国家有关财务法律、法规、方针、政策和制度，保障公司合法经营，维护股东权益；\n```\n\n\n<a href=\"https://zhaopin.baidu.com/szzw?query=%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5463-zp_exact_new&id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2011615%2Fb6c6e26708355dbc8c1fe0f9380ba316&is_promise=1\" target=\"_blank\">前端开发工程师的岗位职责：</a>\n```\n职位描述：\n岗位职责：\n1. 负责公司平台中后台产品的开发；\n2. 负责公司小程序应用的开发；\n3. Web前沿技术研究和新技术调研。\n\n任职资格：\n1. 计算机相关专业，本科及以上学历。\n2. JS基础扎实，掌握ES6，熟悉W3C标准及规范，了解网站性能优化、体验优化等；\n3. 熟练使用主流框架(Vue)，熟悉ECMAScript编程，熟悉微信小程序、MpVue；\n4. 有使用npm、gulp、grunt，webpack等开发工具的经验，对前端工程化与模块化开发有一定了解，并有实践经验；\n5. 学习能力强，具备良好的问题定位、分析及解决能力；\n6. 对代码质量有要求，了解前端的最佳实践，对自己要求严格的同学优先；\n7. 如有，请附上个人博客和Github链接。 \n\n【福利待遇】\n1. 感恩1+1福利：校招生拿毕业证后签署正式合同的当月享受双倍工资，1份给父母，1份给员工；\n2. 亲情3+5：正式员工自愿从个人工资支出300元，公司支出500元，合计800元每月定时汇入员工父母任何一方的银行账户；\n3. 爱心互助资金会：公司为员工或员工直系亲属遭遇意外灾害、事故或者重大疾病时，提供爱心帮助；\n4. 正式员工享受每年年假10天；\n5. 正式员工享受每个月1天的带薪病假；\n6. 员工年度体检；\n7. 公司给员工购买五险一金（一档综合医疗，公积金按12%比例购买）；\n8. 国家规定的节假日福利礼包、生日礼包、每月的部门团建活动、公司组织的员工茶话会以及篮球、羽毛球、徒步活动等\n\n【公司氛围】\n1. 自由、开放、平等以及不断创新的互联网化工作文化氛围！\n2. 帅哥美女多，要脱单的来了解一下！周末双休，脱完单还有时间可以去拍拍小拖！思为人是注重劳逸结合的思密达~~\n3. If you are a 人才，股票期权激励等你拿！\n```\n<a href=\"http://www.jianliben.com/article/detail/20257\" target=\"_blank\">前端开发工程师完整简历范文</a>\n```\n基本信息\n姓名：简小历\n\n年龄：27岁\n\n电话：131****3851\n\n邮箱：14768****@qq.com\n\n经验：5年\n\n意向：前端开发工程师\n\n教育背景\n时间：2011-09 - 2015-06\n\n学校：简历本大学 | 专业：计算机科学与技术 | 学历：本科\n\n工作经历\n工作时间：2015-09 - 2017-05\n\n公司名称：简历本信息互动有限公司 | 所在部门： | 所在岗位：web前端开发工程师\n\n工作描述：\n重度棋牌部门德州扑克项目组：\n1、负责移动端、PC端的项目开发；\n2、利用div+css布局完成页面,使用less对css进行后期维护；\n3、配合产品经理和UI设计师，依据产品需求完成高质量的web前端的开发和维护；\n4、使用HTML5、CSS3、JS、JQ、BS等技术实现页面动态效果以及布局展示；\n5、AJAX、AngularJs完成web前端页面、数据等方面开发，并且协助后台完成数据对接。\n6、微信公众号接口的调用，朋友圈功能实现；\n7、移动端设备调试，兼容各大手机屏幕；\n8、PC端兼容各大浏览器；\n9、SEO优化，对网页进行优化后期的维护。\n\n工作时间：2015-12 - 2017-06\n\n公司名称：简历本网络科技有限公司 | 所在部门： | 所在岗位：前端开发\n\n工作描述：\n1、与UI设计师一同工作，创建高性能、高可用性的基于浏览器的WEB/Mobile应用；\n2、充分理解项目需求，包括产品的目标、可用性标准及时间要求，解决各大浏览器代\t码兼容问题，同时进行代码优化等工作；\n3、与项目经理及技术团队进行充分的沟通与协作；\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?query=%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5463-zp_exact_new&id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2011615%2Fa30a5fa5bb78bdfc37b9e8996ed7f7e0&is_promise=1\" target=\"_blank\">base珠海横琴 运维工程师任职要求：</a>\n```\n职位描述：\n注意：该项目为大粤网的横琴新区智慧旅游项目。需base珠海横琴办公。属于大粤网编制（非外包）。\n\n岗位职责：\n1、根据项目安排前期需要驻点珠海横琴，负责软硬件以及服务器设备的巡检工作，并定期做巡检报告，以及对客户的服务器系统进行保障和维护。2、根据业务需求，规划、设计服务器架构方案，搭建具备高性能、高可靠性、易伸缩、可扩展、安全的运营平台。\n3、云服务、网络、CDN和基础服务的建设（LVS、FTP、HTTP、DNS）；负责资产管理，服务器选型、交付和维护。\n4、线上服务的变更、服务状态监控、服务容灾和数据备份等工作，对服务进行例行排查、故障应急处理等工作。\n\n运维技能需求：\n 1、具备一定硬件维护以及排障能力。\n 2、熟悉TCP/IP协议，HTTP协议、服务器和网络设备的主要参数和性能指标；\n 3、掌握网络设备,防火墙、交换机，路由器，排查网络、服务器故障，能处理iptables、DNS、路由等问题；\n 4、掌握Keepalive/LVS/Nginx/HAProxy等负载均衡技术；\n 5、掌握常用服务的安装及配置如Nginx/Tomcat/Java_jar/Sping-Cloud组件等安装、监控、排错、运维；\n 6、掌握MySQL/mongodb/Memcached/Redis等软件系统的安装、监控、排错、运维和调优能力；\n 7、掌握ELK日志监控管理平台的部署使用；\n 8、掌握VPN软件使用管理；\n 9、熟悉系统堡垒机的使用管理；\n10、精通Linux及各类操作系统、数据库、应用服务、虚拟化服务；\n11、精通Nagios,Cacti,Zabbix等监控维护技术，熟练使用Shell/Perl/Python脚本处理问题；\n12、熟悉主流云计算平台,如腾讯云服务器的部署、运维；\n13、有较强的沟通及协调能力，学习能力强，做事沉稳细致、具有良好文档编写和文字表达能力。\n```\n\n<a href=\"http://www.xuexila.com/fwn/gangweizhize/c58930.html\" target=\"_blank\">Java开发工程师的岗位职责</a>\n```\n任职要求： \n1、大专及以上，软件工程计算机科学与技术信息系统管理或相关专业；\n2、3年及以上JAVA开发经验； \n3、精通Java语言，有良好的代码规范编写习惯，具备扎实的java编程基础； \n4、编程功底扎实，熟悉BS架构和J2EE技术（ JSP、XML、SpringMVC 、Struts2、WebService等），熟练使用Eclipse等开发工具； \n5、熟悉ORACLE、SQL SERVER数据库，熟练使用PLSQL； \n6、具有良好的工作计划能力、逻辑思维能力、解决复杂问题的能力； 7、具有高度的敬业精神及高涨的工作激情，能接受高强度的工作，工作态度积极乐观； \n8、具有良好的人际沟通协调能力。 \n\n工作职责: \n1、负责公司系统开发工作； \n2、负责配合公司IT项目需求做相关开发； \n3、完成上级指派的其它工作。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fwww.doumi.com%2Fauth%2Fbaidu%2Fjumpdetail%2F7584441%3Fcity%3Dzhuhai%26ca_platform%3D1%26ca_source%3Dbaiduzhaopin%26group_id%3D41&query=&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">诚聘产品经理：</a>\n```\n诚聘产品经理\n12000-20000元/月\n\n职位描述：\n产品经理（15-25K，详情面议）\n\n岗位职责\n1. 研究教育行业的市场发展，分析用户需求及各方反馈，优化产品功能已提升用户体验\n2. 负责推进公司与各个关键客户之间的项目和业务，从项目需求到项目运营前期的全流程跟踪\n3. 能独立分析客户需求，梳理项目及产品合作方案并最终落地\n4. 跟进产品整个生命周期，定期制定产品线结合应用系统解决方案，对产品负责\n\n岗位要求\n1. 3年以上工作经验，互联网/教育行业相关产品设计/项目管理工作经验者优先\n2. 了解项目执行的各个环节，能够设计合理的项目流程，对项目具备充分的管理与掌控能力\n3. 具有较强的需求分析/产品规划/整体解决方案能力，以及较强的风险管理意识\n4. 具有强烈的责任心和上进心，具备良好的团队合作精神，积极主动，能承受较大的工作压力。\n```\n\n<a href=\"https://wenku.baidu.com/view/92bcfaf7f9c75fbfc77da26925c52cc58bd690eb.html\" target=\"_blank\">产品经理的岗位职责：</a>\n```\n职位描述：\n1、负责项目前期的市场调研和分析工作并深入了解市场，搜集行业动态和相关政策信息，研究和拟定营销线新项目的开发；  2、深度挖掘用户需求，根据公司产品战略独立完成产品规划、产品需求文档;\n编制市场规划、设计方案；\n编写方案设计报告、实施方案报告；\n3、根据客户需求对项目产品的成本核算进行评估，编写提交评估报告；\n4、与客户保持良好沟通，实时把握客户需求，定期与公司技术人员对接，全程对项目需求分析、设计、开发、测试等进行指导和监控，确保按时交付项目，为客户提供主动、热情、满意、周到的服务，建立良好的长期合作关系；\n5、能独立完成数据分析、数据报表的整理、数据占比分析. 拓宽市场渠道，督促解决产品实施过程中可能出现的功能、性能、稳定性问题；\n6、不定期收集市场销售信息、新技术产品开发信息，分析及跟踪竞争对手，定期进行产品分析，吸取行业发展优点；  \n7、负责公司现有项目产品的完善和开发、合作洽谈、合同签订、售后服务等相关工作； \n8、完成公司下达的年度、月度经营目标任务；\n9、完成领导交办的其他临时性工作。\n\n岗位要求：\n1、大专以上学历，具有网络应用程序的市场推广研发经验，电子商务、传播学、市场营销等相关专业优先。\n2、熟练使用办公软件，工作认真细致，对数据敏感，具有较强的数据分析能力。\n3、有较强的文字功底，可以起草项目推广方案。\n4、具备良好的客户意识以及业务拓展能力，性格开朗、积极主动、讲效率、乐于接受挑战、具有较强的沟通能力及交际技巧，具有亲和力，具有较强的学习能力。\n5、有较强的市场感知能力，敏锐地把握市场动态、市场方向的能力。\n6、有独立工作能力和团队合作精神。\n```\n\n<a href=\"https://baike.baidu.com/item/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E7%90%86\" target=\"_blank\">项目经理的岗位职责：</a>\n```\n基本素质：\n项目经理应对承接的项目所涉及的专业有一个全面的了解。\n项目经理要有一定的财务知识。\n项目经理要有一定的法律知识（民法）。\n项目经理应对按合同完成项目建设有必胜信心，并在实际工作中做到言行一致。\n工程建设合同的签订尽量避免感情因素。\n\n权力：\n1.生产指挥权\n项目经理有权按工程承包合同的规定，根据项目随时出现的人、财、物等资源变化情况进行指挥调度，对于施工组织设计和网络计划，也有权在保证总目标不变的前提下进行优化和调整，以保证项目经理能对施工现场临时出现的各种变化应付自如。\n2.人事权\n项目班子的组成人员的选择、考核、聘任和解聘，对班子成员的任职、奖惩、调配、指挥、辞退，在有关政策和规定的范围内选用和辞退劳务队伍等是项目经理的权力。\n3.财权\n项目经理必须拥有承包范围内的财务决策权，在财务制度允许的范围内，项目经理有权安排承包费用的开支，有权在工资基金范围内决定项目班子内部的计酬方式、分配方法、分配原则和方案，推行计件工资、定额工资、岗位工资和确定奖金分配。对风险应变费用、赶工措施费用等都有使用支配权。\n4.技术决策权\n主要是审查和批准重大技术措施和技术方案，以防止决策失误造成重大损失。必要时召集技术方案论证会或外请咨询专家，以防止决策失误。\n5.设备、物资、材料的采购与控制权\n```\n\n\n<a href=\"https://www.jianshu.com/p/709e644bd74b\" target=\"_blank\">互联网项目经理工作流：</a>\n```\n1. 项目立项\n2. 需求评审\n3. 项目排期\n4. 开发阶段\n5. 测试阶段\n6. 上线阶段\n7. 运营阶段\n```\n\n\n\n<a href=\"https://zhaopin.baidu.com/szzw?query=%E5%8A%A8%E7%94%BB%E5%B8%88+%E5%B7%A5%E4%BD%9C&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5463-zp_exact_new&id=http%3A%2F%2Fwww.9zhouhr.com%2Fjobs%2Fjobs-show-412588-.htm&is_promise=0\" target=\"_blank\">AE动画设计师：</a>\n```\n岗位职责：\n1. 协助项目进行ae动画制作；\n2. 协助部门产品包装、广告宣传等的美术设计制作3.其他相关美术设计方面的工作；\n\n岗位要求：\n1. AE动画、美术相关专业毕业优先，有良好艺术修养；\n2. 精通After Effects、Photoshop等软件；\n3. 熟练使用AE插件、模板；\n4. 能根据脚本、分镜待相应素材，应用AE软件独立完成动画中各种角色造型的设计及动画制作；\n\n福利待遇：\n 1. 每月饭补500元；\n 2. 提供员工宿舍，在外租房或自住房每月房补200元；\n 3. 享有生日礼金100元、年终奖按月发放、国家法定各种节假日礼金100元，感恩节依据入职年限发放礼金100-1000元；\n 4. 转正后给予员工父母每月补贴500元、员工父母生日200元，符合入职时间条件春节父母礼金5000元；\n 5. 按国家法定节假日放假，带薪年假，春节假期大于10天；\n 6. 每年1~2次国内旅游；\n 7. 结婚、生子依据入职年限提供1000-10000元礼金，带薪婚假和产假；\n 8. 员工本人及直系亲属住院手术可获得爱心慰问金（小手术3000，大手术5000-10000元）；\n 9. 办公区域均设有自助食品小货架和冰柜，售价均按照市场售价降低1元-2元提供给员工；\n10. 办公区域均配备有台球桌、乒乓球桌提供员工业余时间活动，配置健身器材供工作之余健身；\n11. 办公区域配置有公司KTV区域、红酒吧台、咖啡机等\n12. 可免费的公司医务服务（免费问诊及取药）；\n13. 公司每年组织1次体检；\n14. 孕妇享有3个月的保胎假和3个月的带薪产假、怀孕、哺乳期周末双休；\n15. 大型节假日公司会举行聚餐等；\n16. 子女上学福利（公司子女帮培计划）、子女生日礼物（12周岁以下，200元标准）；\n17. 对于作出重大贡献的员工，会享有公司分房、配车和分配股份，公司基本执行全员持股制度；\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2004461%2Fe8d8c5a86f26b982733d93623da133da&query=%E5%8A%A8%E7%94%BB%E5%B8%88+%E5%B7%A5%E4%BD%9C&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">游戏动画师：</a>\n```\n职责描述： \n1. 根据工作需要制作3D游戏中的角色动画； \n2. 负责3D角色的动作设计与制作，并完成资源入库和协助程序实现； \n3. 在动作方面有良好的设计表现力。\n\n任职要求： \n1. 对3D MAX操作熟练，精通CS系统，能独立完成角色蒙皮；\n2. 有一定美术基础，了解模型布线与蒙皮、动画的关系；\n3. 了解人类、四足等各种物体的运动规律；\n4. 2年以上3D游戏制作相关工作经验；\n5. 具有团队合作精神，做事认真细致；\n6. 热爱游戏，对游戏富有激情；\n7. 语言表达能力强，有较好的沟通和协调能力；\n8. 有Unity项目经验者优先。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?id=http%3A%2F%2Fwww.doumi.com%2Fauth%2Fbaidu%2Fjumpdetail%2F7584576%3Fcity%3Dzhuhai%26ca_platform%3D1%26ca_source%3Dbaiduzhaopin%26group_id%3D76&query=&city=%E7%8F%A0%E6%B5%B7&is_promise=0&is_direct=1&vip_sign=&asp_ad_job=\" target=\"_blank\">UI设计师的岗位职责：</a>\n```\n8000-12000元/月\n\n职位类型：IT|互联网|通信|电子\n职位描述：\nUI设计师（10-15K,详情面议）\n\n岗位职责：\n1、负责带领团队完成公司旗下能手职教产品的整体UI设计与用户体验；\n2、对产品整体的视觉风格有一定的把握，传递符合产品定位的设计理念；\n3、参与产品设计讨论，准确理解产品需求，设计出高质量用户体验的界面效果图和流畅的可实现动效；并与开发保持沟通实现设计结果；\n4、参与设计规范的制定和优化；可以针对能手风格进行研究并提供可行化建议。\n\n岗位要求\n1、3年以上UI工作经验，精通 Sketch 、PS、AI，动效，熟悉AE、Principle；\n2、熟悉海外社交APP者加分：HOLLA、Monkey、Tinder、Badoo等；\n3、有良好的沟通能力和团队精神，能够在工作期间保持充分的效率；\n4、有较强的手绘能力，熟悉多种设计风格，对欧美、港澳文化有一定的了解；\n5、英语沟通能力者加分。\n\n工作地址：\n珠海市香洲区横琴总部大厦2309-2311\n\n```\n\n<a href=\"https://zhidao.baidu.com/question/1639124517940972060.html\" target=\"_blank\">UI设计师的岗位职责：</a>\n```\nUI岗位职责 要求类型一：\n1、负责公司移动客户端UI界面设计，为公司新产品与新功能提供创意及设计方案\n2、参与设计讨论，和开发团队共同创建用户界面，跟踪设计效果，提出设计优化方案。\n3、参与移动产品设计体验、流程的制定和规范；\n\nUI岗位职责 要求类型二：\n1、负责用户界面设计，根据产品原型进行具体效果图设计，视觉设计（包括主次界面风格化，版面布局细节处理，icon绘制等）\n2、独立完成UI相关制作，能根据产品的设计思路设计相应配套的UI。\n3、参与产品构思及软件界面优化，提出对产品界面规划，把握产品最终界面实现效果。\n4、结合用户体验，优化完善设计，制定可行的产品品质提升方案。\n5、拥有广告或互联网营销视觉设计经验，具有较强的执行能力。\n6、熟悉品牌文化与产品调性，具备丰富的平面设计和广告创意能力。\n7、熟悉常用设计工具，具备一定插画绘制能力，对后期处理及动效设计有一定了解。\n8、设计思路清晰，有丰富的创新思维、想象力及较强的视觉感知能力\n9、具备良好的沟通协作及抗压能力。\n\n\nUI岗位职责 要求类型三：\n1、根据产品需求，对产品的整体美术风格、交互设计、界面结构、操作流程等做出设计；\n2、负责项目中各种交互界面、图标、LOGO、按钮等相关元素的设计与制作；\n3、能积极与开发沟通，推进界面及交互设计的最终实现。\n4、负责软件界面的美术设计、创意工作和制作工作。\n5、根据各种相关软件的用户群，提出构思新颖、有高度吸引力的创意设计。\n6、对页面进行优化，使用户操作更趋于人性化。\n7、维护现有的应用产品。\n```\n\n<a href=\"https://baike.baidu.com/item/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%9B%91/10179044#3\" target=\"_blank\">技术总监的岗位职责：</a>\n```\n1、全面负责技术部工作，直接对总经理负责。\n2、 参与公司发展战略和计划的制定。\n3、 参加公司会议，将工作落实到位。\n4、 加强技术队伍建设和管理。\n5、 制定技术目标和工作方案。\n6、 组织网络开发工作的实施。\n7、 加强部门合作，提供技术支持。\n8、 加强计算机使用的管理。\n9、 参与制订电脑、网络软、硬件及耗材的采购计划。\n10、 负责网络安全管理。\n11、 对公司机密负有保密责任。\n12、 积极完成其它临时性工作。\n```\n\n\n<a href=\"https://baike.baidu.com/item/%E7%A1%AC%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88/9734475\" target=\"_blank\">硬件工程师的岗位职责：</a>\n```\n工作任务编辑\n1. 计算机产品硬件设计\n2. 了解计算\n\t(1) 硬件工程师的证书样本\n\t(2) 硬件工程师的证书样本\n\t(3) 机的结构及其发展趋势\n3. 对计算机硬件的销售及市场有较深刻的认识\n4. 区域市场管理\n5. 按照计划完成符合功能性能要求和质量标准的硬件产品；\n6. 根据产品详细设计报告，完成符合功能和性能要求的逻辑设计；\n7. 根据逻辑设计说明书，设计详细的原理图和PCB图；\n8. 编写调试程序，测试或协助测试开发的硬件设备，确保其按设计要求正常运行；\n9. 编写项目文档、质量记录以及其他有关文档；\n10. 维护管理或协助管理所开发的硬件。\n```\n\n<a href=\"https://zhaopin.baidu.com/szzw?query=%E7%A1%AC%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88&city=%E7%8F%A0%E6%B5%B7&zp_fr=aladdin-5463-zp_exact_new&id=http%3A%2F%2Fkg.baidu.com%2Fod%2F4002%2F2004461%2Fe4cfc920a555c0b615074537f4fffdee&is_promise=0\" target=\"_blank\">珠海优特智厨科技有限公司 硬件工程师任职要求：</a>\n```\n任职要求： \n1. 本科及以上学历，计算机、电子等相关专业； \n2. 23-35岁，2年以上硬件开发经验。 \n3. 熟悉ARM系列单片机，有较强的数字、模拟电路设计能力，有EMC整改经验优先。 \n4. 熟练使用Protel，Cadence等设计软件。 \n5. 动手能力强，具有独立发现问题解决问题的能力。 \n\n岗位职责： \n1. 负责智能餐饮相关产品硬件设计及生产打样。 \n2. 负责样机装配及调试，并解决相关问题。 \n3. 主动与其他相关的研发工程师进行设计沟通，确保产品达到总体设计要求。 \n4. 负责与测试、工程、生产、采购等成员沟通，确定生产及元器件标准，保证硬件的可测试性、可维护性和可生产性。 \n5. 在研发项目中，服从产品经理项目经理的领导，承担并及时完成所交付项目任务。\n```\n\n<a href=\"https://baike.baidu.com/item/%E4%BA%A7%E5%93%81%E8%BF%90%E8%90%A5/1978562\" target=\"_blank\">产品运营的岗位职责：</a>\n```\n工作内容\n1. 产品研发期——产品上线前：首先产品运营要搞清楚产品的定位以及目标用户。\n2. 产品种子期——产品内测期：在这个阶段，产品运营主要目的在于收集用户行为数据和相关的问题反馈，和产品策划一起分析讨论进行产品优化。 \n3. 产品成长期——产品爆发期：产品要爆发，活动策划是必不可少的一部分。\n4. 产品成熟期：稳定期对产品意义重大的就是小版本的迭代更新。产品运营就要做好产品策划和用户之间的桥梁作用。\n5. 产品衰退期：这个阶段，用户的流失加剧，用户活跃度也明显下滑，营收贡献也急剧下降。公司策略方面：技术的支持减少，新产品开始推出。\n\n三个层面：\n1、内容建设\n2、用户维护\n3、活动策划\n```\n\n<a href=\"https://baike.baidu.com/item/%E8%91%A3%E4%BA%8B%E9%95%BF/356514\" target=\"_blank\">董事长的岗位职责：</a>\n```\n管理职责：\n主持公司生产经营管理工作，对所承担的工作全面负责。\n董事会设董事长1名，由董事会全体董事过半数选举产生。从各国的公司立法看，董事长的权利不是由股东大会授予的，而是由公司法直接规定的。一般来说，董事长拥有如下权利：\n1、主持股东大会和召集、主持董事会会议；\n2、召集和主持公司管理委员会议，组织讨论和决定公司的发展规划、经营方针、年度计划以及日常经营工作 中的重大事项；\n3、检查董事会决议的实施情况，并向董事会提出报告；\n4、提名公司总经理和其他高层管理人员的聘用、决定报酬、待遇以及解聘，并报董事会批准和备案；\n5、审查总经理提出的各项发展计划及执行结果；\n6、定期审阅公司的财务报表和其他重要报表，全盘控制全公司系统的财务状况；\n7、签署批准公司招聘的各级管理人员和专业技术人员；\n8、签署对外重要经济合同、上报印发的各种重要报表、文件、资料；\n9、处理其他由董事会授权的重大事项；\n10、检查董事会决议的实施情况，并向董事会报告；\n11、签署公司股票、公司债券；\n12、由董事会授权董事长在董事会闭幕期间行使董事会的部分职权；\n13、提议召开临时董事会；\n14、除章程规定须由股东大会和董事会决定的事项外，董事长对公司重大业务和行政事项有权做出决定。\n\n任职条件：\n条 件\n《中华人民共和国公司法》第一百四十七条规定，有下列情形之一的，不得担任公司的董事、董事长：\n（一）无民事行为能力或者限制民事行为能力；\n（二）因贪污、贿赂、侵占财产、挪用财产或者破坏社会主义市场经济秩序，被判处刑罚，执行期满未逾五年，或者因犯罪被剥夺政治权利，执行期满未逾五年；\n（三）担任破产清算的公司、企业的董事或者厂长、经理，对该公司、企业的破产负有个人责任的，自该公司、企业破产清算完结之日起未逾三年；\n（四）担任因违法被吊销营业执照、责令关闭的公司、企业的法定代表人，并负有个人责任的，自该公司、企业被吊销营业执照之日起未逾三年；\n（五）个人所负数额较大的债务到期未清偿。\n类 别\n有限责任公司、股份有限公司设立董事会的，股东会会议由董事会召集，董事长主持。董事会会议由董事长召集和主持。\n国有独资公司\n是指国家单独出资、由国务院或者地方人民政府授权本级人民政府国有资产监督管理机构履行出资人职责的有限责任公司。国有独资公司的董事长、副董事长由国有资产监督管理机构从董事会成员中指定。\n任 期\n我国公司的董事长任期由公司章程规定，但每届任期不得超过3年，可以连选连任。\n\n\n董事长类别\n1. 超越型\n2. 指导型\n3. 分工型\n4. 全权型\n```\n","tags":["工作"]},{"title":"[动画] 短片制作","url":"/2019/10/07//articles/2019/10/07/1570435405000.html/","content":"<a href=\"https://www.zcool.com.cn/work/ZMzk1NDMzNDA=.html\" target=\"_blank\">动画短片《白日星辰》</a>\n","tags":["动画"]},{"title":"[react-native] 网络请求axios封装","url":"/2019/10/07//articles/2019/10/07/1570435404000.html/","content":"<a href=\"https://www.jianshu.com/p/8951810b2e88\" target=\"_blank\">React Native 网络请求axios封装</a>\n\n","tags":["react-native"]},{"title":"[react-native] 仿今日头条TabBar","url":"/2019/10/07//articles/2019/10/07/1570435403000.html/","content":"<a href=\"https://github.com/jjhappyforever/TouTiaoTabBar\" target=\"_blank\">React Native之android仿今日头条TabBar实现</a>\n","tags":["react-native"]},{"title":"[react-native] ART绘图","url":"/2019/10/07//articles/2019/10/07/1570435402000.html/","content":"<a href=\"https://www.jianshu.com/p/f6f57c3406ea\" target=\"_blank\">React-Native ART绘图</a>\n","tags":["react-native"]},{"title":"[ps] 扁平化图标","url":"/2019/10/07//articles/2019/10/07/1570435401000.html/","content":"<a href=\"https://www.bilibili.com/video/av6992942\" target=\"_blank\">【UI设计】 PS绘制扁平化清新图标</a>\n<a href=\"https://space.bilibili.com/10117138\" target=\"_blank\">时钟设计</a>\n","tags":["ps"]},{"title":"[ppt] 软件下载","url":"/2019/10/07//articles/2019/10/07/1570435400000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\n<a href=\"http://www.ddooo.com/softdown/94422.htm\" target=\"_blank\">powerpoint2013官方下载 免费完整版</a>\n<a href=\"https://pan.baidu.com/s/18FO9JNcfVIdKApOFrULg0g\" target=\"_blank\">度娘下载</a>\n<a href=\"https://u12680647.ctfile.com/dir/12680647-25664263-52be85/\" target=\"_blank\">城通网盘下载</a>\n<a href=\"https://www.pipipan.com/dir/12680647-25664263-52be85/\" target=\"_blank\">皮皮网盘下载</a>\n\n<a href=\"http://www.zdfans.com/html/29037.html\" target=\"_blank\">PowerPoint2019中文免费破解版</a>\n","tags":["ppt"]},{"title":"[cordova] vue项目打包成Android应用","url":"/2019/10/07//articles/2019/10/07/1570435399000.html/","content":"<a href=\"https://www.cnblogs.com/qirui/p/8421372.html\" target=\"_blank\">cordova+vue 项目打包成Android（apk）应用</a>\n","tags":["cordova"]},{"title":"[blog] axure","url":"/2019/10/07//articles/2019/10/07/1570435398000.html/","content":"<a href=\"https://www.jianshu.com/u/0bc6061cbea4\" target=\"_blank\">axure 艾宾浩斯ace</a>\n\n<a href=\"https://blog.csdn.net/qq_27884377/article/details/85007723\" target=\"_blank\">交互原型案例Axure50套</a>\n<a href=\"https://pan.baidu.com/s/1cu5cfebWMSeacEou-Lg6sA \" target=\"_blank\">下载</a>\n```\n提取码：\nd0i4\n```","tags":["blog"]},{"title":"[axure] layui","url":"/2019/10/07//articles/2019/10/07/1570435397000.html/","content":"<a href=\"https://fly.layui.com/jie/9842/\" target=\"_blank\">原汁原味layui风格的Axure组件包发布，产品交互设计利器</a>\n\n<a href=\"https://fly.layui.com/download/res/layui_web_1.0.9.rplib\" target=\"_blank\">layui_web_1.0.9.rplib</a>\n","tags":["axure"]},{"title":"[axure] ElementUI","url":"/2019/10/07//articles/2019/10/07/1570435396000.html/","content":"<a href=\"https://blog.csdn.net/xovspppp/article/details/81610224\" target=\"_blank\">Axure element 2.4.6元件库</a>\n\n<a href=\"https://pan.baidu.com/s/1kRd6qKCNPpVxTpcaqDp0_Q\" target=\"_blank\">度娘 Axure element2.4.6元件库</a>\n```\n提取码:\n4slz\n```","tags":["axure"]},{"title":"[android] 新闻app","url":"/2019/10/07//articles/2019/10/07/1570435395000.html/","content":"<a href=\"https://blog.csdn.net/qq_34149526/article/details/80992341\" target=\"_blank\">Android小项目——新闻APP</a>\n\n<a href=\"https://blog.csdn.net/qq_41105058/article/details/88130013\" target=\"_blank\">简单的Android端新闻App的实现</a>\n<a href=\"https://github.com/DhyanaCoder/WeNews\" target=\"_blank\">github WeNews</a>\n\n<a href=\"https://www.jianshu.com/p/48f6c2c6f14c\" target=\"_blank\">一个网易新闻的 API</a>\n\n<a href=\"https://github.com/daleyzou/zhbj\" target=\"_blank\">github 一个简单的Android版新闻APP，使用Android Studio开发</a>\n","tags":["android"]},{"title":"[android] 获取外接扫码设备的输入值","url":"/2019/10/07//articles/2019/10/07/1570435394000.html/","content":"<a href=\"https://blog.csdn.net/qq_22783769/article/details/79938797\" target=\"_blank\">Android没有EditText时如何获取外接扫码设备的输入值</a>\n","tags":["android"]},{"title":"[react-native] react-native-fs","url":"/2019/09/25//articles/2019/09/25/1569419817000.html/","content":"<a href=\"https://www.cnblogs.com/jackson-yqj/p/9554611.html\" target=\"_blank\">React Native之本地文件系统访问组件react-native-fs的介绍与使用</a>\n\n<a href=\"https://blog.csdn.net/weixin_44187730/article/details/87729100\" target=\"_blank\">React Native集成react-native-fs(本地文件系统)</a>\n\n<a href=\"https://www.jianshu.com/p/acf5a502f999\" target=\"_blank\">RN-第三方之-react-native-fs 文件下载、文本存储</a>\n\n<a href=\"https://www.cnblogs.com/hellotim/p/7827108.html\" target=\"_blank\">react-native webview读取本地图片</a>\n\n<a href=\"https://blog.csdn.net/sunshinezx8023/article/details/80702443\" target=\"_blank\">React Native 中使用 WebView 加载本地 html</a>\n\n<a href=\"http://ju.outofmemory.cn/entry/326099\" target=\"_blank\">bootstrapJS()</a>\n\n```\nReact Native - Webview 加载本地文件 + react-native-fs + ${RNFS.MainBundlePath}/web\n```\n<a href=\"https://my.oschina.net/xmqywx/blog/1580842\" target=\"_blank\"></a>\n","tags":["react-native"]},{"title":"[react-native] 把图片转成base64","url":"/2019/09/25//articles/2019/09/25/1569419817000.html/","content":"<a href=\"https://www.jianshu.com/p/9de4a7e8d269\" target=\"_blank\">react native 把图片转成base64</a>\n```\nRNFS.DocumentDirectoryPath\n```","tags":["react-native"]},{"title":"[设计] 素材网址","url":"/2019/09/25//articles/2019/09/25/1569418386000.html/","content":"<a href=\"http://www.lanrentuku.com/\" target=\"_blank\">懒人图库</a>\n","tags":["设计"]},{"title":"[react-native] 自定义辅助组件库","url":"/2019/09/25//articles/2019/09/25/1569418385000.html/","content":"<a href=\"https://github.com/gegeyang0124/react-native-lib-cus-com\" target=\"_blank\">react-native-lib-cus-com</a>\n```\nStyleSheetAdapt 样式表创建，适配各种机型、各种屏幕 与StyleSheet用法一致 react-native-stylesheet-adapt\nStyleSheetAdapt.create();//创建样式表单\nStyleSheetAdapt.getStyle();//得到样式属性的json对象\nStyleSheetAdapt.designSize = {width:768,height:1024};\n\n// 设置页面设计大小 可不设置 默认设计大小12寸平板电脑（{width:768,height:1024}）\n\n//数字后面可加以下字符 若加字符，加数字后面\n//'dw' 获取相对当前屏幕的设计宽比的宽\n//'w' 获取相对当前屏幕宽的宽\n//'n' 不进行屏幕比缩放\n//'dh' 获取相对当前屏幕的设计高比的宽\n//'h' 获取相对当前屏幕高比的宽\n//如：\nconst styles = StyleSheetAdapt.create({\n    testStyle2:{\n        width:'0.1w',//屏幕宽的10分之1\n        height:'0.1h',//屏幕高的10分之1\n    },\n    testStyle3:{\n            width:'100dw',//按设计大小宽比适配 会随屏幕调整布局\n            height:'100dw',//按设计大小宽比适配\n        },\n    testStyle:{\n        transform:[\n            {rotateX:'180deg'}\n        ],\n    },\n});\n\n//创建样式表单\n```","tags":["react-native"]},{"title":"[react-native] 像素工具","url":"/2019/09/25//articles/2019/09/25/1569418384000.html/","content":"\nreact-native屏幕适配\n\npx.js\n\n```\nimport { Dimesions, Platform, PixelRatio } from 'react-native';\n\nconst deviceWidth = Dimension.get('window').width;\n\nexport default function px(size) {\n    if (PixelRatio.get() >= 3 && Platform.Os === 'ios' && size === 1) {\n        return size;\n    }\n    return deviceWidth / 750 * size;\n}\n```","tags":["react-native"]},{"title":"[react-native] 网络状态监听","url":"/2019/09/25//articles/2019/09/25/1569418383000.html/","content":"<a href=\"https://www.cnblogs.com/yz1311/p/7651252.html\" target=\"_blank\">React Native组件系列之NetInfo</a>\n\n贡献者为了不造成breaking changes，所以直接新增新的api，将前面的api改为黄色警告\n```\n- `fetch`方法过时了，用`getConnection`替代\n- `change`事件过时了，用`connectionchange`替代.\n- `fetch`/`change`过时了，用`getConnection`/`connectionchange`替代。返回的枚举值也变了。具体查看下面的值\n```\n","tags":["react-native"]},{"title":"[react-native] 图片预览","url":"/2019/09/25//articles/2019/09/25/1569418382000.html/","content":"<a href=\"https://www.jianshu.com/p/7b8e7dd93bb0\" target=\"_blank\">react native 实现图片预览图片保存</a>\n\n安装\n```\nnpm i react-native-image-zoom-viewer --save\n```\n\nLookPhotoModal.js\n```\nimport React, {Component, PropTypes} from 'react';\nimport {\n    View,\n    Modal,\n    Dimensions,\n    ActivityIndicator,\n    CameraRoll,\n} from 'react-native';\n\nimport ImageViewer from 'react-native-image-zoom-viewer';\n\nconst screenWidth = Dimensions.get('window').width;\nconst screenHeight = Dimensions.get('window').height;\n\ntype Props = {\n    data: Object,\n    cancel: Function,\n    currentImage: string,\n    imageDataUrl: Array,\n    modalVisible: Boolean\n};\n\nexport default class LookPhotoModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.props.data,\n            animating: true,\n        };\n        this.renderLoad = this.renderLoad.bind(this);\n        this.savePhoto = this.savePhoto.bind(this);\n        this._Close = this._Close.bind(this);\n    }\n\n    _Close() {\n        this.props.cancel();\n    }\n\n    renderLoad() {\n        //这里是写的一个loading\n        return (\n            <View style={{marginTop: (screenHeight / 2) - 20}}>\n                <ActivityIndicator animating={this.state.animating} size={'large'}/>\n            </View>\n        );\n    }\n\n    savePhoto() {\n        let index = this.props.currentImage;\n        let url = this.props.imageDataUrl[index];\n        let promise = CameraRoll.saveToCameraRoll(url);\n        promise\n            .then(function (result) {\n                alert('已保存到系统相册');\n            })\n            .catch(function (error) {\n                alert('保存失败！\\n' + error);\n            });\n    }\n\n    render() {\n        let imageData = this.props.imageDataUrl;\n        // let IsArray = Array.isArray(this.props.imageDataUrl)\n        let ImageObjArray = [];\n        for (let i = 0; i < imageData.length; i++) {\n            let Obj = {};\n            Obj.url = imageData[i];\n            ImageObjArray.push(Obj);\n        }\n        return (\n            <View style={{position: 'absolute', top: 0, bottom: 0, left: 0, right: 0}}>\n                <Modal\n                    animationType={'slide'}\n                    transparent={true}\n                    visible={this.props.modalVisible}\n                    //    onRequestClose={() => { this._pressSignClose() }}\n                >\n                    <ImageViewer\n                        imageUrls={ImageObjArray} // 照片路径\n                        enableImageZoom={true} // 是否开启手势缩放\n                        saveToLocalByLongPress={true} //是否开启长按保存\n                        index={this.props.currentImage} // 初始显示第几张\n                        // failImageSource={} // 加载失败图片\n                        loadingRender={this.renderLoad}\n                        enableSwipeDown={false}\n                        menuContext={{'saveToLocal': '保存图片', 'cancel': '取消'}}\n                        onChange={(index) => {\n                        }} // 图片切换时触发\n                        onClick={() => { // 图片单击事件\n                            this._Close();\n                        }}\n                        onSave={(url) => {\n                            this.savePhoto(url);\n                        }}\n                    />\n                </Modal>\n            </View>\n        );\n    }\n\n}\n\n```\n\n使用\n```\n<LookPhotoModal\n    data={}\n    cancel={}\n    currentImage={}\n    imageDataUrl={}\n    modalVisible={}\n/>\n```\n","tags":["react-native"]},{"title":"[react-native] 屏幕适配","url":"/2019/09/25//articles/2019/09/25/1569418381000.html/","content":"\nreact-native屏幕适配\n\nAdapterUtil.js\n\n```\n\"use strict\"\n\nimport {Dimensions, StatusBar, Platform, PixelRatio} from 'react-native'\n\n//UI设计图的宽度\nconst designWidth = 750\n//UI设计图的高度\nconst designHeight = 1334\n\n//手机屏幕的宽度\nexport const width = Dimensions.get('window').width;\n//手机屏幕的高度\nexport const height = Dimensions.get('window').height;\n//计算手机屏幕宽度对应设计图宽度的单位宽度\nexport const unitWidth = width / designWidth\n//计算手机屏幕高度对应设计图高度的单位高度\nexport const unitHeight = height / designHeight\n\nexport const statusBarHeight = getStatusBarHeight();\nexport const safeAreaViewHeight = isIphoneX() ? 34 : 0\n//标题栏的高度\nexport const titleHeight = unitWidth * 100 + statusBarHeight;\n\n//字体缩放比例，一般情况下不用考虑。\n// 当应用中的字体需要根据手机设置中字体大小改变的话需要用到缩放比例\nexport const fontscale = PixelRatio.getFontScale()\n\n/**\n * 判断是否为iphoneX\n * @returns {boolean}\n */\nexport function isIphoneX() {\n    const X_WIDTH = 375;\n    const X_HEIGHT = 812;\n    return Platform.OS == 'ios' && (height == X_HEIGHT && width == X_WIDTH)\n}\n\n//状态栏的高度\nexport function getStatusBarHeight() {\n    if (Platform.OS == 'android') return StatusBar.currentHeight;\n    if (isIphoneX()) {\n        return 44\n    }\n    return 20\n}\n```\n\n使用方法 ，直接按照UI图的 标注尺寸*unitWidth\n```\nimport  React,{Component} from 'react'\nimport {\n  View,\n  StyleSheet,\n  Text\n} from 'react-native'\nimport {unitWidth, width}\"../../utils/AdapterUtil\";\n\nexport default class Demo extends Component {\n\n  render() {\n        const {backgroundColor, titleColor} = this.props\n        return (\n            <View style={styles.view}>\n                    <View  style={styles.view2}>\n            </View>\n        )\n  }\n\n}\n\nconst styles= StyleSheet.create({\n  view:{\n      flex:1,\n       alignItems: 'center', \n  },\n  view2:{\n      width:unitWidth*375,\n      height:unitWidth*375,\n      backgroundColor:'red'\n  }\n})\n\n```","tags":["react-native"]},{"title":"[react-native] 查错","url":"/2019/09/25//articles/2019/09/25/1569418380000.html/","content":"<a href=\"https://blog.csdn.net/qff_2464/article/details/81746572\" target=\"_blank\"></a>\n```\n#首先进入命令行,输入命令\n\naaptOptions.cruncherEnabled = false\naaptOptions.useNewCruncher = false\n\nandroid.enableAapt2=false\n```\n\n\n<a href=\"https://blog.csdn.net/weixin_43465451/article/details/83185112\" target=\"_blank\">Android Studio：resource android:attr/dialogCornerRadius not found 出错解决方案</a>\n```\n方法1：\n\"com.android.support:appcompat-v7:+\"\n改成固定版本\n\"com.android.support:appcompat-v7:27.1.1\"\n```\n\n```\nError:(9, 5) error: resource android:attr/dialogCornerRadius not found\n\n一直报错valve-v28下资源找不到，compileversion改成28也可以解决，原因是有依赖库使用了28，最终发现是photoview这个依赖库因为用了+导致，因为最新版是使用28的，解决办法就是使用之前的版本的就好\n```\n\nerror: resource android:attr/fontVariationSettings not found.error: resource android:attr/ttcIndex\n```\nhttps://blog.csdn.net/u011046452/article/details/86742039\n```\n\n26版本\n```\nconfigurations.all {\n    resolutionStrategy {\n        force \"com.android.support:appcompat-v7:26.1.0\"\n        force \"com.android.support:support-v4:26.1.0\"\n    }\n}\n```\n\n27版本\n```\nhttps://www.itread01.com/content/1544917356.html\n\nconfigurations.all {\n    resolutionStrategy {\n        force 'com.android.support:support-v4:27.1.1'\n        force 'com.android.support:appcompat-v7:27.1.1'\n    }\n}\n\n//configurations.all {\n//    resolutionStrategy {\n//        force \"com.android.support:appcompat-v7:28.0.3\"\n//        force \"com.android.support:support-v4:28.0.3\"\n//    }\n//}\n```\n\n28版本\n```\nconfigurations.all {\n    resolutionStrategy {\n        force \"com.android.support:appcompat-v7:28.0.3\"\n        force \"com.android.support:support-v4:28.0.3\"\n    }\n}\n\n28.0.0-rc02\n```\n\nAndroidStudio升级到3.1.1之后报错error: resource android:attr/fontVariationSettings not found.\n```\nhttps://juejin.im/post/5ae09d115188256727741925\n```\n\n```\n后来就在module的build.gradle文件中试了下，结果编译通过了，真是惊了个大喜了，好吧，其实就是把下面这行代码放到module的build.gradle文件中即可，要添加的代码：\n\nconfigurations.all {\n    resolutionStrategy.force 'com.android.support:support-v4:27.1.0'\n}\n```\n\n\n```\nFor instance, the following are compatible with compileSdkVersion 27:\n\ndependencies {\n    implementation 'com.android.support:appcompat-v7:27.1.1'\n    implementation 'com.android.support:support-v4:27.1.1'\n    implementation 'com.google.android.gms:play-services-maps:16.1.0'\n    implementation 'com.google.android.gms:play-services-location:16.0.0'\n    implementation 'com.google.firebase:firebase-core:16.0.9'\n    implementation 'com.google.firebase:firebase-messaging:18.0.0'\n}\nThe following will break with compileSdkVersion 27 and are only compatible with compileSdkVersion 28:\n\ndependencies {\n    implementation 'com.android.support:appcompat-v7:28.0.0'\n    implementation 'com.android.support:support-v4:28.0.0'\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\n    implementation 'com.google.android.gms:play-services-location:17.0.0'\n    implementation 'com.google.firebase:firebase-core:17.0.0'\n    implementation 'com.google.firebase:firebase-messaging:19.0.0'\n}\n```\n\n问题根本原因：\n```\ncompileSdkVersion 26 中不包含 SDK28 的资源，而 support 28 中找不到 SDK28 的资源 就 报错了。\n\n进而得知 compileSdkVersion 与 targetSdkVersion 并不是保持一致就行的。\n\ncompileSdkVersion 是最高引入SDK版本的资源。targetSdkVersion 是实际用到的SDK版本\n\n比如：当 compileSdkVersion=28 targetSdkVersion=22 时。安装后的 App 可以自动获取所需的权限。\n```\n","tags":["react-native"]},{"title":"[react-native] 本地webview","url":"/2019/09/25//articles/2019/09/25/1569418379000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://blog.csdn.net/sunshinezx8023/article/details/80702443\" target=\"_blank\">React Native 中使用 WebView 加载本地 html</a>\n```\n然后把\nrequire('./pages/demo.html')\n换成\n{uri: 'file:///android_asset/pages/demo.html'}\n```\n\n\n<a href=\"https://jintang.github.io/2018/12/04/react-native-%E4%B9%8B-webview/\" target=\"_blank\">react-native 之 webview</a>\n```\nyarn add react-native-webview\n```\n\nLocalWebView.js\n```\nimport React, {Component} from 'react';\nimport {\n    Button,\n    StyleSheet,\n    NativeModules,\n    Platform,\n    Text,\n    View,\n    WebView,\n    ActivityIndicator,\n} from 'react-native';\n\nimport {\n    WebView,\n} from 'react-native-webview';\n\nexport default class LocalWebView extends Component {\n\n    state = {\n        url: '',\n        webViewHeight: 200,\n    };\n\n    _onLoadEnd = () => {\n        const script = `window.postMessage(document.body.scrollHeight)`;\n        this.webView.injectJavaScript(script);\n    };\n\n    _onMessage = (event) => {\n        const height = parseInt(event.nativeEvent.data) || 0;\n        if (height > 0) {\n            this.setState({webViewHeight: height});\n        }\n    };\n\n    _onNavigationStateChange = (navState) => {\n        if (navState.title && (navState.title - this.state.webViewHeight > 0)) {\n            this.setState({\n                webViewHeight: parseInt(navState.title),\n            });\n        }\n    };\n\n    render() {\n        // const source = {uri: 'file:///android_asset/trivia-game/index.html'};\n        const source = require('./html/index.html');\n\n        return (\n            <WebView\n                ref={(webView) => this.webView = webView}\n                source={source}\n                originWhitelist={['file://', '*']}\n                style={{height: this.state.webViewHeight}}\n                javaScriptEnabled={true}\n                scrollEnabled={false}\n                domStorageEnabled={true}\n                scalesPageToFit={true}\n                startInLoadingState={true}\n                renderLoading={() => <ActivityIndicator/>}\n                onLoadEnd={this._onLoadEnd}\n                onMessage={this._onMessage}\n                onNavigationStateChange={this._onNavigationStateChange}\n                allowUniversalAccessFromFileURLs={true}\n                mediaPlaybackRequiresUserAction={false}\n            />\n        );\n    }\n}\n\nconst styles = StyleSheet.create({});\n```\n\nhtml/index.html\n```html\n<head>\n    <style>\n        #height-wrapper {\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n        }\n    </style>\n</head>\n<body>\n<script>\n    ;(function () {\n        var wrapper = document.createElement('div');\n        wrapper.id = 'height-wrapper';\n        while (document.body.firstChild) {\n            wrapper.appendChild(document.body.firstChild);\n        }\n        document.body.appendChild(wrapper);\n        var i = 0;\n\n        function updateHeight() {\n            document.title = wrapper.clientHeight;\n            window.location.hash = ++i;\n        }\n\n        window.addEventListener('load', function () {\n            updateHeight();\n        });\n    }());\n</script>\n</body>\n```\n\n<a href=\"https://www.jianshu.com/p/44365ec64e4a\" target=\"_blank\">React-Native Webview 和H5交互的两种方式</a>\n\n<a href=\"https://www.jianshu.com/p/c9306a0ac0e2\" target=\"_blank\">React-Native WebView与html交互</a>\n<a href=\"https://blog.csdn.net/weixin_34411563/article/details/91869582\" target=\"_blank\">React Native - Webview 加载本地文件</a>","tags":["react-native"]},{"title":"[ps] 练习网址","url":"/2019/09/25//articles/2019/09/25/1569418378000.html/","content":"<a href=\"http://www.ps-xxw.cn/shilijiaocheng/\" target=\"_blank\">ps练习</a>\n","tags":["ps"]},{"title":"[pr] 转场素材","url":"/2019/09/25//articles/2019/09/25/1569418377000.html/","content":"<a href=\"https://www.bilibili.com/video/av55051257\" target=\"_blank\">汉化的700多个Pr超级转场</a>\n```\n1775多个转场模板链接：\nhttps://pan.baidu.com/s/1o40mK4sJiFTks2Wslhsasw \n提取码：\ncm3m\n```\n\n","tags":["pr"]},{"title":"[hexo] webpack打包内存泄漏问题解决","url":"/2019/09/25//articles/2019/09/25/1569418376000.html/","content":"\n```\n#全局安装\nnpm install -g increase-memory-limit\n\n#进入工程目录，执行：\nincrease-memory-limit\n```\n","tags":["hexo"]},{"title":"[android] 监听usb插拔状态","url":"/2019/09/25//articles/2019/09/25/1569418375000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\nandroid 监听 USB 拔插广播消息\n```\nhttps://www.iteye.com/blog/171151394-2197402\n```\n\n1、定义广播类：\n```\nimport android.content.BroadcastReceiver;  \nimport android.content.Context;  \nimport android.content.Intent;  \nimport android.widget.Toast;  \n\npublic class USBBroadcastReceiver extends BroadcastReceiver{  \n      @Override  \n     public void onReceive(Context context, Intent intent) {  \n         // TODO Auto-generated method stub  \n         if(intent.getAction().equals(\"android.hardware.usb.action.USB_STATE\")){  \n              if (intent.getExtras().getBoolean(\"connected\")){  \n                 // usb 插入  \n                  Toast.makeText(context, \"插入\", Toast.LENGTH_LONG).show();  \n               }else{  \n                //   usb 拔出  \n                   Toast.makeText(context, \"拔出\", Toast.LENGTH_LONG).show();  \n               }  \n         }  \n     }  \n }  \n```\n\n2、在AndroidManifest.xml中注册广播：\n```\n<receiver android:name=\".USBBroadcastReceiver\">    \n   <intent-filter android:priority=\"800\">    \n       <action android:name=\"android.hardware.usb.action.USB_STATE\"/>  \n    </intent-filter>    \n</receiver>\n```\n","tags":["android"]},{"title":"[android] 监听usb插拔状态","url":"/2019/09/25//articles/2019/09/25/1569418375000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n\nxd的动效\n<a href=\"https://www.bilibili.com/video/av41378467\" target=\"_blank\">超人的电话亭公开课 - XD高级交互动画详解</a>\n<a href=\"https://www.zcool.com.cn/article/ZODY1OTQ4.html\" target=\"_blank\">酸梅干超人</a>\n\n素材\n<a href=\"\" target=\"_blank\"></a>\nhttps://xd.94xy.com/sucai/list/1.html\n\nXD中文网\n<a href=\"\" target=\"_blank\"></a>\nhttps://xd.94xy.com/\n\nXD资源网\n<a href=\"\" target=\"_blank\"></a>\nhttps://www.xdccpro.com/archives/1740\n\n\nui巴巴\n<a href=\"\" target=\"_blank\"></a>\nhttp://www.uibaba.com/category/747.html\n\n\n爱果果\n<a href=\"\" target=\"_blank\"></a>\nhttps://www.iguoguo.net/tag/xd\n爱果果新网站\n<a href=\"\" target=\"_blank\"></a>\nhttps://www.doupir.com/downloads/xd/\n\n\n按钮切换素材\n<a href=\"\" target=\"_blank\"></a>\nhttps://www.doupir.com/%e6%98%bc%e5%a4%9c%e5%88%87%e6%8d%a2%e5%bc%80%e5%85%b3%e6%8c%89%e9%92%ae-xd%e7%b4%a0%e6%9d%90%e4%b8%8b%e8%bd%bd/\n\n\nhttps://pan.baidu.com/s/1d7xRG4HtV4KJa0kreEeHQw\nv9de\n\n","tags":["android"]},{"title":"[android] 查错","url":"/2019/09/25//articles/2019/09/25/1569418374000.html/","content":"<a href=\"https://blog.csdn.net/dengweijunkedafu/article/details/80541104\" target=\"_blank\">Manifest merger failed with multiple errors, see logs问题处理</a>\n```\n#首先进入命令行,输入命令\ngradlew processDebugManifest --stacktrace\n```\n\n问题\n```\nError:resource android:style/TextAppearance.Material.Widget.Button.Borderless.Colored not found\n```\n修改方法：\n```\n将compileSdkVersion修改成25，并将对应的buildToolsVersion修改成25.0.2即可\n```\n\n```\nerror: resource android:attr/fontVariationSettings not found.error: resource android:attr/ttcIndex\n```\n<a href=\"http://www.pianshen.com/article/5082200802/\" target=\"_blank\">参考</a>\n\n\n\n<a href=\"https://blog.csdn.net/weixin_43465451/article/details/83185112\" target=\"_blank\">Android Studio：resource android:attr/dialogCornerRadius not found 出错解决方案</a>\n```\nconfigurations.all {\n    resolutionStrategy {\n        force \"com.android.support:appcompat-v7:27.1.1\"\n        force \"com.android.support:support-v4:27.1.1\"\n    }\n}\n\nandroid{\n    compileSdkVersion 28\n    buildToolsVersion '28.0.3'\n\n    defaultConfig {\n        minSdkVersion 16\n        targetSdkVersion 28\n    }\n}\n```\n\n\nINSTALL_FAILED_NO_MATCHING_ABIS\n<a href=\"https://blog.csdn.net/Leafage_M/article/details/86675699\" target=\"_blank\">解决参考</a>\napp/build.gradle\n```\nandroid {\n    splits {\n        abi {\n            enable true\n            reset()\n            include 'x86', 'armeabi-v7a', 'x86_64'\n            universalApk true\n        }\n    }\n}\n```\n\n<a href=\"https://blog.csdn.net/csdnfengli/article/details/80695769\" target=\"_blank\">unable to resolve dependency for app@debugcompileClasspath</a>\n```\n%USERPROFILE%\\.gradle\\gradle.properties\n\n#注释掉systemProp前缀\n```\n\n```\nFile -> Project Structure... -> app -> Properties -> Compile Sdk Version API 28\n\ncom.android.support:appcompat-v7:28.+\n```\n\n\n<a href=\"https://blog.csdn.net/waplyj/article/details/80604700\" target=\"_blank\">CreateProcess error=2, 系统找不到指定的文件。</a>\n```\n    packagingOptions {\n        doNotStrip '*/mips/*.so'\n        doNotStrip '*/mips64/*.so'\n    }\n```\n\n","tags":["android"]},{"title":"[ae] 万剑归宗","url":"/2019/09/25//articles/2019/09/25/1569418373000.html/","content":"<a href=\"https://www.bilibili.com/video/av54153519/\" target=\"_blank\">AE万剑归宗特效教学视频</a>\n<a href=\"https://www.bilibili.com/video/av51996734\" target=\"_blank\">万剑归宗，每个人都有一个武侠梦</a>","tags":["ae"]},{"title":"[ae] 模板下载","url":"/2019/09/25//articles/2019/09/25/1569418372000.html/","content":"<a href=\"http://www.cgahz.com/aemoban/vfx/\" target=\"_blank\">模板下载</a>\n\n","tags":["ae"]},{"title":"[ae] 粒子转场","url":"/2019/09/25//articles/2019/09/25/1569418371000.html/","content":"<a href=\"https://www.bilibili.com/video/av61569527\" target=\"_blank\">【AE教程/粒子】粒子转场效果，教你不一般的转场</a>\n```\nBGM:\n1.a little story\n2.星茶会\n3.青石巷\n4.斑光\n5.沐白\n6. κrOnё\n7.天空之城\n8.寂静之空\n\n粒子插件\n链接:\nhttps://pan.baidu.com/s/12RTKFl9_hmg_Q-znSZ0IaQ\n提取码:\neh7f\n\n成品视频\nhttps://b23.tv/av60094332\n```\n\n","tags":["ae"]},{"title":"[ae] 画面破碎","url":"/2019/09/25//articles/2019/09/25/1569418370000.html/","content":"<a href=\"\" target=\"_blank\"></a>\n<a href=\"https://www.bilibili.com/video/av67458288\" target=\"_blank\">AE画面破碎效果</a>\n```\n\n```\n\n","tags":["ae"]},{"title":"[ae] 传送门","url":"/2019/09/25//articles/2019/09/25/1569418369000.html/","content":"<a href=\"https://www.bilibili.com/video/av7331253\" target=\"_blank\">【AE教程】奇异博士——传送门特效</a>\n<a href=\"https://pan.baidu.com/s/1bp3Otp9\" target=\"_blank\">素材和工程文件</a>\n","tags":["ae"]},{"title":"[react-native] 与Android交互通信","url":"/2019/09/22//articles/2019/09/22/1569133336000.html/","content":"<a href=\"https://blog.csdn.net/baidu_39503346/article/details/87882951\" target=\"_blank\">React-Native与Android的交互通信</a>\n<a href=\"https://www.jianshu.com/p/edeb052740b2\" target=\"_blank\">React-Native 交互通信（Android）</a>\n\n\n<a href=\"https://www.jianshu.com/p/4028f0745feb\" target=\"_blank\">react-native 与 Android原生 交互 </a>\n<a href=\"https://www.jianshu.com/p/27d87c6167be\" target=\"_blank\">react-native 调用原生</a>\n<a href=\"https://blog.csdn.net/zhouhouyun/article/details/83786256\" target=\"_blank\">原生调用 react-native</a>\n```\n# 1、react-native 注册事件\nconst {EventEmitterManager} = NativeModules;\nconst tempEventEmitterManager = new NativeEventEmitter(EventEmitterManager);\n\nthis.remoteNoti = tempEventEmitterManager.addListener('RemoteNoti',(e)=>this.androidComeFrom(e));\n\n# 2、android端发送事件 使用 WritableMap传递参数\n//定义发送事件的函数\npublic static void sendEvent(ReactContext reactContext, String eventName, WritableMap params){\n    reactContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit(eventName,params);\n}\n```\n\n\n<a href=\"https://blog.csdn.net/houlin_jing/article/details/82803437\" target=\"_blank\">Android与React Native通信、互相调用</a>\n```\n1. 新建EventEmitter类，作为调用RN的统一入口\n2. 定义静态ReactContext\n3. 定义静态调用方法\npublic class EventEmitter {\n    private static final String TAG = \"EventEmitter\";\n\n    public static ReactContext mReactContext;// 在ReactPackage中的createNativeModules()初始化\n\n    /**\n     * 显示loading\n     *\n     * @param data 1显示，非1隐藏\n     */\n    public static void showLoading(int data) {\n        if (mReactContext == null) {\n            Log.e(TAG, \"ReactContext is null\");\n            return;\n        }\n        mReactContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit(\"loadingNotification\", data);\n    }\n}\n\n这样，在EventEmitter类中添加方法，就可以像工具类一样随心所欲的调用RN了。\n```\n","tags":["react-native"]},{"title":"[react-native] 选择弹框","url":"/2019/09/22//articles/2019/09/22/1569133335000.html/","content":"<a href=\"https://www.jianshu.com/p/42b4390e860e\" target=\"_blank\">react-native 封装选择弹出框(ios&android)</a>\n","tags":["react-native"]},{"title":"[react-native] 文件选择器","url":"/2019/09/22//articles/2019/09/22/1569133334000.html/","content":"React-native 文件选择器react-native-file-selector的使用\n```\nhttps://blog.csdn.net/qq_20652771/article/details/82184005\nhttps://my.oschina.net/HhhXxxJjj/blog/1936008\nhttps://github.com/prscX/react-native-file-selector\n```\n\n关于需不需要link的\n```\nhttps://blog.csdn.net/dick3741/article/details/89918262\n```\n\n```\nnpm install --save react-native-file-selector\nreact-native link react-native-file-selector\n```\n\n\nandroid/build.gradle\n```\nrepositories {\n    maven {\n        url  \"http://dl.bintray.com/lukaville/maven\"\n    }\n    maven { url \"https://maven.google.com\" }\n    ...\n}\n\nallprojects {\n    repositories {\n        mavenLocal()\n        jcenter()\n        maven { url \"https://maven.google.com\" }\n        ...\n    }\n}\n```\n\n在android\\app\\build.gradle中添加\n```\nimplementation project(':react-native-file-selector')\n```\n\n添加选择文件主题颜色，可以自定义\n```\n#增加文件\nandroid/app/src/main/res/values/colors.xml\n#内容\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"colorPrimary\">#3F51B5</color>\n    <color name=\"colorPrimaryDark\">#303F9F</color>\n    <color name=\"colorAccent\">#FF4081</color>\n</resources>\n```\n\n添加权限 android\\app\\src\\main\\AndroidManifest.xml\n```\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\n在android/app/build.gradle中加入\n```\nbuild.gradle\n\ndefaultConfig {\n    multiDexEnabled true\n}\n\ndependencies {\n    implementation  'com.android.support:appcompat-v7:27.1.0'\n    implementation  'com.android.support:design:27.1.0'\n    implementation  'com.android.support:support-v4:27.1.0'\n    implementation  'com.android.support:recyclerview-v7:27.1.0'\n    implementation  'com.android.support:multidex:1.0.3'\n}\n```\n\n\nandroid/build.gradle\n```\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext {\n        buildToolsVersion = \"28.0.3\"\n        minSdkVersion = 16\n        compileSdkVersion = 28\n        targetSdkVersion = 28\n        supportLibVersion = \"28.0.0\"\n    }\n    repositories {\n        google()\n        jcenter()\n        maven {\n            url \"http://dl.bintray.com/lukaville/maven\"\n        }\n        maven { url \"https://maven.google.com\" }\n    }\n    dependencies {\n        classpath('com.android.tools.build:gradle:3.3.0')\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        mavenLocal()\n        maven {\n            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n            url(\"$rootDir/../node_modules/react-native/android\")\n        }\n        maven {\n            // Android JSC is installed from npm\n            url(\"$rootDir/../node_modules/jsc-android/dist\")\n        }\n\n        maven { url \"https://jitpack.io\" }\n        maven { url \"https://maven.google.com\" }\n\n        jcenter { url \"http://jcenter.bintray.com/\" }\n\n        maven { url \"http://dl.bintray.com/lukaville/maven\" }\n\n        google()\n        jcenter()\n\n    }\n}\n```\n\nandroid/gradle/wrapper/gradle-wrapper.properties\n```\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.2-all.zip\nandroid.enableAapt2=true\n```\n\nreact-native-file-selector/build.gradle\n```\ncompile 改为 implement\n```\n\n\n闪退问题\n```\n记得添加colors.xml文件\nandroid/app/src/main/res/values/colors.xml\n```\n\n用法\n```\nimport RNFileSelector from 'react-native-file-selector';\n\n\nRNFileSelector.Show(\n    {\n        title: 'Select File',\n        onDone: (path) => {\n            console.log('file selected: ' + path)\n        },\n        onCancel: () => {\n            console.log('cancelled')\n        }\n    }\n)\n```\n","tags":["react-native"]},{"title":"[react-native] 文件系统","url":"/2019/09/22//articles/2019/09/22/1569133333000.html/","content":"<a href=\"http://www.bubuko.com/infodetail-2960571.html\" target=\"_blank\">react-native中显示手机本地图片/视频</a>\n```\n#已知文件路径\n'/data/user/0/com.ycdj/files/media/218787782/efa1d12f22d2/1235.jpg'\n#只需在路径前面拼上file:///即可，如：\n<Image source={{uri:`file:///${mediaPath}`}} style={{width:200, height:200}} resizeMode='contain'/>\n```\n\n<a href=\"https://www.jianshu.com/p/d62fc3ede61c\" target=\"_blank\">react-native-fs文件创建、查看、上传、下载</a>\n<a href=\"https://www.cnblogs.com/jackson-yqj/p/9554611.html\" target=\"_blank\">React Native之本地文件系统访问组件react-native-fs的介绍与使用</a>\n<a href=\"https://blog.csdn.net/weixin_44187730/article/details/87729100\" target=\"_blank\">React Native集成react-native-fs(本地文件系统)</a>\n```\n#安装\nnpm install --save react-native-fs\n\n#链接依赖\nreact-native link react-native-fs\n```\nreact-native-fs Demo\n```\nhttps://github.com/chjwrr/RN-react-native-fs\n```\n\n\n<a href=\"https://www.jianshu.com/p/4f7296753013\" target=\"_blank\">React Native拍照、从相册选择、录像的实现</a>\n<a href=\"https://github.com/gaoxiaosong/react-native-full-image-picker\" target=\"_blank\">github react-native-full-image-picker</a>\n一、功能介绍\n```\n使用相机拍照\n视频录制\n从相册选择\niPhone X系列设备的安全区域\n竖屏和横屏模式\n多选或多拍模式\n拍照、选择或录像后预览功能\n最大数量限制\n```\n二、安装react-native-full-image-picker\n```\nnpm install --save react-native-full-image-picker\nyarn add react-native-full-image-picker\n\nnpm install rn-camera-roll\nreact-native link rn-camera-roll\n\nyarn add react-native-camera\nyarn add react-native-video\nyarn add react-native-fs\n```\n三、权限\n```\n<uses-permission android:name=\"android.permission.CAMERA\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n```\n四、方法\n```\n#拍照: \nImagePicker.getCamera(options)\n\n#录像: \nImagePicker.getVideo(options)\n\n#从相册选择: \nImagePicker.getAlbum(options)\n```\n五、options\n```\noptions是一个对象，包含如下键:\n\n#回调方法，传回照片或视频的数组: \ncallback: (data: any[]) => void\n\n#照片的最大数量，在拍照和从相册选择模式下生效:\nmaxSize?: number\n\n#镜头，前置还是后置。在拍照和录像模式下生效: \nsideType?: RNCamera.Constants.Type\n\n#闪光灯，在拍照和录像模式下生效:\nflashMode?: RNCamera.Constants.FlashMode\n```\n\n\n<a href=\"https://www.jianshu.com/p/727c9d4c080c\" target=\"_blank\">React Native的照相机和图片react-native-image-picker</a>\n```\nyarn add react-native-image-picker\nreact-native link react-native-image-picker\n```\n一、示例：\n先定义\n```\nconst photoOptions = {\n    title:'请选择',\n    quality: 0.8,\n    cancelButtonTitle:'取消',\n    takePhotoButtonTitle:'拍照',\n    chooseFromLibraryButtonTitle:'选择相册',\n    allowsEditing: true,\n    noData: false,\n    storageOptions: {\n        skipBackup: true,\n        path: 'images'\n    }\n};\n```\n二、再使用\n```\n    choosePicker=()=>{\n        ImagePicker.showImagePicker(photoOptions, (response) => {\n            console.log('Response = ', response);\n            if (response.didCancel) {\n                console.log('User cancelled image picker');\n            }\n            else if (response.error) {\n                console.log('ImagePicker Error: ', response.error);\n            }\n            else if (response.customButton) {\n                console.log('User tapped custom button: ', response.customButton);\n            }\n            else {\n                let source = { uri: response.uri };\n                // You can also display the image using data:\n                // let source = { uri: 'data:image/jpeg;base64,' + response.data };\n                this.setState({\n                    avatarSource: source\n                });\n            }\n        });\n    }\n```\n","tags":["react-native"]},{"title":"[react-native] 通过安卓Socket连接打印机推送指令","url":"/2019/09/22//articles/2019/09/22/1569133332000.html/","content":"<a href=\"https://segmentfault.com/a/1190000013998316\" target=\"_blank\">React Native Socket 连接打印机推送指令</a>\n```\nimport com.facebook.react.bridge.Promise;\n\n\n    @ReactMethod\n    public void print(String ip, Integer port, String msg, Promise promise) {\n        try {\n            Socket socket = new Socket(ip, port);\n            if (socket.isConnected()) {\n                InputStream inputStream = socket.getInputStream();\n                OutputStream os = socket.getOutputStream();\n                BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(os));\n                bw.write(msg);\n                bw.flush();\n                promise.resolve(\"success\");\n            } else {\n                promise.reject(\"连接打印机失败\");\n            }\n        } catch (Exception ex) {\n            promise.reject(ex.fillInStackTrace());\n        }\n    }\n```\n\n```\nimport { NativeModules } from 'react-native'\nNativeModules.PrintExtension.print(\n\tprintAddr.split(':')[0],\n\n\tprintAddr.split(':')[1]*1,\n\n\t'^XA^FO100,75^BY3^B3N,N,100,Y,N^FD123ABC^XZ').then((c) => {\n        console.log(c)\n        if (c!==\"success\") {\n            Modal.alert('打印失败', c, [\n                { text: '确定'},\n              ])\n        }\n    },\n\n    (c)=>{\n        console.log(c)\n    });\n\n```","tags":["react-native"]},{"title":"[react-native] 调用原生","url":"/2019/09/22//articles/2019/09/22/1569133331000.html/","content":"<a href=\"https://www.jianshu.com/p/e34e50730ec9\" target=\"_blank\">react-native调用android原生方法！(Toast初试)</a>\n","tags":["react-native"]},{"title":"[react-native] 天气预报","url":"/2019/09/22//articles/2019/09/22/1569133330000.html/","content":"<a href=\"https://blog.csdn.net/qq_37815596/article/details/88369247\" target=\"_blank\">react-native天气预报应用开发</a>\n<a href=\"https://github.com/MeiJunNa/react-native-weather\" target=\"_blank\">github weather</a>\n\n","tags":["react-native"]},{"title":"[react-native] 搜索局域网设备","url":"/2019/09/22//articles/2019/09/22/1569133329000.html/","content":"<a href=\"https://blog.csdn.net/a10615/article/details/52427047\" target=\"_blank\">Android网络编程TCP、UDP（三）—— UDP实例：搜索局域网所有的设备</a>\n<a href=\"https://www.jianshu.com/p/128d2940dcc5\" target=\"_blank\">android 获取局域网IP与MAC 地址 毫秒级（详解）</a>\n<a href=\"https://gitee.com/kalshen/IpScanner/blob/master/app/src/main/java/com/yoofn/ipscanner/IpScanner.java\" target=\"_blank\">IpScanner.java</a>\n","tags":["react-native"]},{"title":"[react-native] 视频播放","url":"/2019/09/22//articles/2019/09/22/1569133328000.html/","content":"<a href=\"https://blog.csdn.net/qq_37815596/article/details/89521062\" target=\"_blank\">react-native-video 完整功能的demo</a>\n```\n1.实现播放、暂停视频；\n\n2.视频全屏、小屏播放视频\n\n3.实现视频进度条\n\n4.切换视频\n```","tags":["react-native"]},{"title":"[react-native] 史上最全react-native常用第三方组件汇总","url":"/2019/09/22//articles/2019/09/22/1569133327000.html/","content":"React Native 项目常用第三方组件汇总：\n<a href=\"https://www.cnblogs.com/gdsblog/p/7106859.html\" target=\"_blank\">cnblogs</a>\n<a href=\"https://www.jianshu.com/p/53ff78168acc\" target=\"_blank\">简书</a>\n\n收集了一些RN的第三方组件集合（含gif演示）\n<a href=\"https://github.com/Geek-ch/react-native-thirdparty\" target=\"_blank\">github react-native-thirdparty</a>\n```\n动画\nWeb相关\n综合\nUI\n文本相关\n工具\n系统相关\n数据存储\n多媒体\n其他\n```","tags":["react-native"]},{"title":"[react-native] 生成海报图片","url":"/2019/09/22//articles/2019/09/22/1569133326000.html/","content":"<a href=\"https://segmentfault.com/a/1190000012290519\" target=\"_blank\">截屏组件</a>\n<a href=\"https://blog.csdn.net/zww1984774346/article/details/78039841\" target=\"_blank\">React Native 生成图片</a>\n\nreact-native 生成海报图片，保存到本地\n```jsx\nimport React, { Component } from 'react';\n\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View,\n  NativeModules,\n  TouchableOpacity,\n  Image,\n  CameraRoll,\n} from 'react-native';\n\nvar  textCom = NativeModules.textCom;\n\nvar ReactNative = require('react-native');\n\nexport default class Rntextextends Component {\n\nconstructor(props){\n\nsuper(props);\n\n        this.state={\n\n            imageUrl:''\n\n}\n\n    }\n\nsaveImg(img) {\n\nvar promise= CameraRoll.saveToCameraRoll(img);\n\npromise.then(function(result) {\n\nalert('保存成功！地址如下：\\n' + result);\n\n}).catch(function(error) {\n\nalert('保存失败！\\n' + error);\n\n        });\n\n    }\n\n    takePhoto(){\n\n        ReactNative.takeSnapshot(this.refs.location, {format: 'png', quality: 1}).then(\n\n(uri)=> {console.log(uri);this.setState({imageUrl:uri})}\n\n        ).catch(\n\n(error)=> alert(error)\n\n        );\n\n    }\n\n  render() {\n\n    return (\n\n<View style={styles.container}>\n\n<View ref='location'>\n\n              {/*这个点击方法 无需注意 是我测试跟原生交互玩的*/}\n\n<TouchableOpacity activeOpacity={1}onPress={()=>{textCom.shareImage('123',(message =>{\n\nconsole.log(message);\n\n              }))}}>\n\n<Text style={styles.welcome}>\n\n 原生交互\n\nText>\n\n TouchableOpacity>\n\n<Text style={styles.instructions}>\n\n To get started, edit index.ios.js\n\nText>\n\n<TouchableOpacity activeOpacity={1}onPress={()=>{this.takePhoto()}}>\n\n<Text style={styles.instructions}>\n\n 生成一张图片\n\nText>\n\n TouchableOpacity>\n\n View>\n\n          {/*点击图片保存到本地*/}\n\n<TouchableOpacity activeOpacity={1}onPress={()=>{this.saveImg(this.state.imageUrl)}}>\n\n<Image source={{uri:this.state.imageUrl}}style={{marginTop: 100,height:100,width:200,backgroundColor:'gray'}} />\n\n TouchableOpacity>\n\n View>\n\n    );\n\n  }\n\n}\n\nconst styles= StyleSheet.create({\n\n  container: {\n\n    flex: 1,\n\n    justifyContent: 'center',\n\n    alignItems: 'center',\n\n    backgroundColor: '#F5FCFF',\n\n  },\n\n  welcome: {\n\n    fontSize: 20,\n\n    textAlign: 'center',\n\n    margin: 10,\n\n  },\n\n  instructions: {\n\n    textAlign: 'center',\n\n    color: '#333333',\n\n    marginBottom: 5,\n\n  },\n\n});\n\nAppRegistry.registerComponent('Rntext', ()=> Rntext);\n```\n\n<a href=\"https://segmentfault.com/a/1190000017279409\" target=\"_blank\">react-native中生成二维码和分享图片</a> \n","tags":["react-native"]},{"title":"[react-native] 全局存储","url":"/2019/09/22//articles/2019/09/22/1569133325000.html/","content":"<a href=\"https://www.cnblogs.com/huangjialin/p/6245122.html\" target=\"_blank\">react native AsyncStorage的使用</a>\n<a href=\"https://www.jianshu.com/p/abf4e19f245c\" target=\"_blank\">ReactNative之AsyncStorage本地存储</a>\n","tags":["react-native"]},{"title":"[react-native] navigationOptions禁止手势","url":"/2019/09/22//articles/2019/09/22/1569133324000.html/","content":"<a href=\"https://blog.csdn.net/csdn_aiyang/article/details/78397409\" target=\"_blank\">React Native 与 嵌入Android原生与Activity页面互相跳转</a>\n<a href=\"https://github.com/aiyangtianci/MyReactDemo\" target=\"_blank\">github MyReactDemo</a>\n\n<a href=\"https://blog.csdn.net/u012561510/article/details/81871478\" target=\"_blank\">ReactNative与Android原生页面的相互跳转以及相互通信</a>\n<a href=\"https://github.com/duxiwei/RNAndroid.git\" target=\"_blank\">github RNAndroid</a>\n\n<a href=\"https://blog.csdn.net/junhuahouse/article/details/80699705\" target=\"_blank\">react-native 之与\"android原生模块\"交互 ImageSelector</a>\n\n","tags":["react-native"]},{"title":"[react-native] 屏幕适配工具","url":"/2019/09/22//articles/2019/09/22/1569133323000.html/","content":"<a href=\"https://blog.csdn.net/qq_20032995/article/details/78783889\" target=\"_blank\">宽、高，字体大小屏幕适配工具</a>\n```\n'use strict'\nimport React from 'react';\nimport {Dimensions, PixelRatio} from 'react-native';\n\nvar utils = {\n    uiWidth: 375,//这里的值，是设计稿中的宽度，你们根据自己的设计稿改动，本人拿到的设计稿是iphone6的\n    uiHeight: 667,//这里的值，是设计稿中的高度，你们根据自己的设计稿改动，本人拿到的设计稿是iphone6的\n    pixel: 1 / PixelRatio.get(),\n    screenWidth: Dimensions.get('window').width,\n    screenHeith: Dimensions.get('window').height,\n    pixelRatio: PixelRatio.get(),\n    fontScale: PixelRatio.getFontScale(),\n    scale: Math.min(Dimensions.get('window').height / 667, Dimensions.get('window').width / 375),\n\n    /*宽度适配，例如我的设计稿某个样式宽度是50pt，那么使用就是：utils.autoWidth(50)*/\n    autoWidth: function (value) {\n        return Dimensions.get('window').width * value / this.uiWidth;\n    },\n    /*高度适配，例如我的设计稿某个样式高度是50pt，那么使用就是：utils.autoheight(50)*/\n    autoheight: function (value) {\n        return Dimensions.get('window').height * value / this.uiHeight;\n    },\n    get: function (url, successCallback, failCallback) {\n        fetch(url).then((response) => response.text())\n            .then((responseText) => {\n                successCallback(JSON.parse(responseText));\n            }).catch(function (err) {\n            failCallback(err);\n        });\n    },\n    /*字体大小适配，例如我的设计稿字体大小是17pt，那么使用就是：utils.setSpText(17)*/\n    setSpText: function (number) {\n        number = Math.round((number * this.scale + 0.5) * this.pixelRatio / this.fontScale);\n        return number / PixelRatio.get();\n    },\n    /*通过value删除数组元素*/\n    removeByValue: function (arr, value) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === value) {\n                arr.splice(i, 1);\n            }\n        }\n    },\n    /*判断是否存在数组*/\n    isInArray: function (arr, value) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === value) {\n                return true\n            }\n        }\n    }\n};\n\nmodule.exports = utils;\n\n```\n\nScreenUtil.js\n```\nhttps://github.com/lizhuoyuan/ReactNativeScreenUtil/blob/master/ScreenUtil.js\n```\n\nreact-native 屏幕尺寸和文字大小适配\nhttps://blog.csdn.net/u011272795/article/details/73824558\n```\n/**\n * Created by zhuoy on 2017/6/27.\n * 屏幕工具类\n * ui设计基准,iphone 6\n * width:750\n * height:1334\n */\n \n/**\n 设备的像素密度，例如：\n PixelRatio.get() === 1          mdpi Android 设备 (160 dpi)\n PixelRatio.get() === 1.5        hdpi Android 设备 (240 dpi)\n PixelRatio.get() === 2          iPhone 4, 4S,iPhone 5, 5c, 5s,iPhone 6,xhdpi Android 设备 (320 dpi)\n PixelRatio.get() === 3          iPhone 6 plus , xxhdpi Android 设备 (480 dpi)\n PixelRatio.get() === 3.5        Nexus 6\n*/\n\nimport {\n    Dimensions,\n    PixelRatio,\n} from 'react-native';\n \n \nexport const deviceWidth = Dimensions.get('window').width;      //设备的宽度\nexport const deviceHeight = Dimensions.get('window').height;    //设备的高度\nlet fontScale = PixelRatio.getFontScale();                      //返回字体大小缩放比例\n \nlet pixelRatio = PixelRatio.get();      //当前设备的像素密度\nconst defaultPixel = 2;                           //iphone6的像素密度\n//px转换成dp\nconst w2 = 750 / defaultPixel;\nconst h2 = 1334 / defaultPixel;\nconst scale = Math.min(deviceHeight / h2, deviceWidth / w2);   //获取缩放比例\n/**\n * 设置text为sp\n * @param size sp\n * return number dp\n */\nexport function setSpText(size: number) {\n    size = Math.round((size * scale + 0.5) * pixelRatio / fontScale);\n    return size / defaultPixel;\n}\n \nexport function scaleSize(size: number) {\n \n    size = Math.round(size * scale + 0.5);\n    return size / defaultPixel;\n}\n```\n","tags":["react-native"]},{"title":"[react-native] 轮播图","url":"/2019/09/22//articles/2019/09/22/1569133322000.html/","content":"<a href=\"https://www.npmjs.com/package/react-native-snap-carousel\" target=\"_blank\">npmjs介绍 react-native-snap-carousel</a>\n```\nnpm install --save react-native-snap-carousel\n```\n\nMyCarousel.js\n```\nimport Carousel from 'react-native-snap-carousel';\n \nexport class MyCarousel extends Component {\n \n    _renderItem ({item, index}) {\n        return (\n            <View style={styles.slide}>\n                <Text style={styles.title}>{ item.title }</Text>\n            </View>\n        );\n    }\n \n    render () {\n        return (\n            <Carousel\n              ref={(c) => { this._carousel = c; }}\n              data={this.state.entries}\n              renderItem={this._renderItem}\n              sliderWidth={sliderWidth}\n              itemWidth={itemWidth}\n            />\n        );\n    }\n}\n```\n\n<a href=\"https://www.jianshu.com/p/84294bf95f3a\" target=\"_blank\">轮播切换图片显示白屏(react-native-swiper|react-native-snap-carousel)</a>\n","tags":["react-native"]},{"title":"[react-native] 获取设备信息","url":"/2019/09/22//articles/2019/09/22/1569133319000.html/","content":"<a href=\"https://www.jianshu.com/p/c43dd8b9512c\" target=\"_blank\">React-Native获取设备信息, Android获取IEMI码</a>\n<a href=\"https://blog.csdn.net/u011272795/article/details/76686938\" target=\"_blank\">react-native获取网络状态</a>\n\n<a href=\"https://segmentfault.com/q/1010000007190898\" target=\"_blank\">获取当前已连接wifi的名称</a>\n```\nnpm install react-native-network-info --save\n\nvar NetworkInfo = require('react-native-network-info');\n \n// 获取当前 wifi 名称\nNetworkInfo.getSSID(ssid => {\n  console.log(ssid);\n});\n```\n\n<a href=\"https://github.com/react-native-community/react-native-device-info\" target=\"_blank\">DeviceInfo获取设备id</a>\n```\nDeviceInfo.getAndroidId().then(androidId => {\n  // androidId here\n});\n\nDeviceInfo.getDeviceId().then(deviceId => {\n  // iOS: \"iPhone7,2\"\n  // Android: \"goldfish\"\n  // Windows: ?\n});\n\n\nDeviceInfo.getSerialNumber().then(serialNumber => {\n  // iOS: unknown\n  // Android: ? (maybe a serial number, if your app is privileged)\n  // Windows: unknown\n});\n\nDeviceInfo.getUniqueId().then(uniqueId => {\n  // iOS: \"FCDBD8EF-62FC-4ECB-B2F5-92C9E79AC7F9\"\n  // Android: \"dd96dec43fb81c97\"\n  // Windows: ?\n});\n```\n\n一、安装\n```\n#官方参考链接:\nhttps://github.com/react-native-community/react-native-device-info\n\n#下载依赖\nnpm install --save react-native-device-info\n#链接原生库\nreact-ntive link react-native-device-info\n```\n\n二、权限配置\n```\n#编辑/android/app/src/main/AndroidManifest.xml文件加入权限信息\n <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/> \n <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" />\n```\n\n三、代码示例及效果\n代码示例\n```\nimport React, {Component} from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\nimport DeviceInfo from 'react-native-device-info';\n\nexport default class App extends Component<Props> {\n\n    constructor(props) {\n        super(props);\n    }\n\n    //初始加载、获取物理硬件信息\n    async componentWillMount() {\n        await console.log('api版本:', DeviceInfo.getAPILevel());\n        await console.log('品牌:', DeviceInfo.getBrand());\n        await console.log('当前应用名称:', DeviceInfo.getApplicationName());\n        await console.log('应用编译版本号:', DeviceInfo.getBuildNumber());\n        await console.log('获取应用程序包标识符:', DeviceInfo.getBundleId());\n        await console.log('运营商名称:', DeviceInfo.getCarrier());\n        await console.log('设备所处国家:', DeviceInfo.getDeviceCountry());\n        await console.log('设备ID:', DeviceInfo.getDeviceId());\n        await console.log('设备地区:', DeviceInfo.getDeviceLocale());\n        await console.log('设备名称:', DeviceInfo.getDeviceName());\n        await console.log('获取应用初始安装时间:', DeviceInfo.getFirstInstallTime());\n        await console.log('设备字体大小:', DeviceInfo.getFontScale());\n        await console.log('剩余存储容量(字节):', DeviceInfo.getFreeDiskStorage());\n        await DeviceInfo.getIPAddress().then(res => {\n            console.log('设备当前网络地址IP:', res);\n        });\n        await console.log('应用程序实例ID:', DeviceInfo.getInstanceID());\n        await console.log('获取应用上次更新时间:', DeviceInfo.getLastUpdateTime());\n        await DeviceInfo.getMACAddress().then(res => {\n            console.log('网络适配器MAC地址:', res);\n        });\n        await console.log('设备制造商:', DeviceInfo.getManufacturer());\n        await console.log('获取JVM试图使用的最大内存量(字节):', DeviceInfo.getMaxMemory());\n        await console.log('获取设备模式:', DeviceInfo.getModel());\n        await console.log('获取电话号码:', DeviceInfo.getPhoneNumber());\n        await console.log('获取应用程序可读版本:', DeviceInfo.getReadableVersion());\n        await console.log('设备唯一序列号:', DeviceInfo.getSerialNumber());\n        await console.log('获取系统名称:', DeviceInfo.getSystemName());\n        await console.log('获取系统版本:', DeviceInfo.getSystemVersion());\n        await console.log('系统时区:', DeviceInfo.getTimezone());\n        await console.log('完整磁盘空间大小(字节):', DeviceInfo.getTotalDiskCapacity());\n        await console.log('设备总内存(字节):', DeviceInfo.getTotalMemory());\n        await console.log('设备唯一ID:', DeviceInfo.getUniqueID());\n        await console.log('设备用户代理:', DeviceInfo.getUserAgent());\n        await console.log('设备版本:', DeviceInfo.getVersion());\n        await console.log('用户偏好是否设置为24小时格式:', DeviceInfo.is24Hour());\n        await console.log('程序是否允许在模拟器中:', DeviceInfo.isEmulator());\n        await console.log('是否是平板电脑:', DeviceInfo.isTablet());\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <Text>\n                    测试获取设备信息.....\n                </Text>\n            </View>\n        );\n    }\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#F5FCFF',\n    }\n});\n```","tags":["react-native"]},{"title":"[react-native] 获取wifi列表","url":"/2019/09/22//articles/2019/09/22/1569133318000.html/","content":"<a href=\"https://www.npmjs.com/package/react-native-android-wifi\" target=\"_blank\">npmjs介绍 react-native-android-wifi</a>\n\n```\n# 能满足题主的需求\nnpm install react-native-network-info --save\n\nvar NetworkInfo = require('react-native-network-info');\n \n// 获取当前 wifi 名称\nNetworkInfo.getSSID(ssid => {\n  console.log(ssid);\n});\n\n```\n","tags":["react-native"]},{"title":"[react-native] 滑动选项卡","url":"/2019/09/22//articles/2019/09/22/1569133317000.html/","content":"<a href=\"https://github.com/skv-headless/react-native-scrollable-tab-view\" target=\"_blank\">滑动选项卡 react-native-scrollable-tab-view</a>\n<a href=\"https://github.com/vczero/react-native-tab-menu\" target=\"_blank\">github react-native-tab-menu</a>\n\n\n<a href=\"https://www.cnblogs.com/shaoting/p/7069312.html\" target=\"_blank\">React-Native新列表组件FlatList和SectionList学习 | 联动列表实现</a>\n<a href=\"https://github.com/pheromone/RN-FlatList-SectionList\" target=\"_blank\">github RN-FlatList-SectionList</a>\n","tags":["react-native"]},{"title":"[react-native] 分页轮播","url":"/2019/09/22//articles/2019/09/22/1569133316000.html/","content":"<a href=\"https://www.jianshu.com/p/64e8e96681a0\" target=\"_blank\">react-native-page-scrollview的使用方法(实现酷炫的分页轮播效果,还支持自定义View)</a>\n<a href=\"https://github.com/geek-prince/react-native-page-scrollview\" target=\"_blank\">github react-native-page-scrollview</a>\n","tags":["react-native"]},{"title":"[react-native] 二维码扫描","url":"/2019/09/22//articles/2019/09/22/1569133315000.html/","content":"<a href=\"https://javascript.ctolib.com/Gou-Bo-react-native-barcode.html\" target=\"_blank\">React Native应用程序的智能二维码扫描器组件</a>\n```\nnpm install https://github.com/Gou-Bo/react-native-barcode.git --save\n```\n","tags":["react-native"]},{"title":"[react-native] 多项选择器","url":"/2019/09/22//articles/2019/09/22/1569133314000.html/","content":"<a href=\"https://github.com/hinet/react-native-checkboxlist\" target=\"_blank\">github 单、多项选择React Native组件</a>\n","tags":["react-native"]},{"title":"[react-native] 多图片选择器","url":"/2019/09/22//articles/2019/09/22/1569133313000.html/","content":"<a href=\"https://www.ctolib.com/mip/syanbo-react-native-syan-image-picker.html\" target=\"_blank\">react-native实现的多图片选择器</a>\n","tags":["react-native"]},{"title":"[react-native] 弹出的picker选择器","url":"/2019/09/22//articles/2019/09/22/1569133312000.html/","content":"<a href=\"https://www.jianshu.com/p/eb62279d1e4e\" target=\"_blank\">Lottie-让React-Native动画实现更简单</a>\n\n<a href=\"https://segmentfault.com/a/1190000007621628\" target=\"_blank\">【译】详解React Native动画</a>\n<a href=\"https://github.com/dwqs/blog/issues/41\" target=\"_blank\">issues/41</a>\n\n<a href=\"https://github.com/jiarWang/AnimBezierShape\" target=\"_blank\">绘制动画组件</a>\n\n<a href=\"http://xgfe.github.io/2016/08/21/lulutia/react-native-touch-animation/\" target=\"_blank\">React-Native 触摸与动画</a>\n","tags":["react-native"]},{"title":"[react-native] 倒计时组件","url":"/2019/09/22//articles/2019/09/22/1569133311000.html/","content":"<a href=\"ttps://jsonz1993.github.io/2017/06/react-native-countdown-RN%E7%9A%84%E5%80%92%E8%AE%A1%E6%97%B6%E7%BB%84%E4%BB%B6/\" target=\"_blank\">react-native-countdown RN的倒计时组件</a>\n","tags":["react-native"]},{"title":"[react-native] 倒计时工具","url":"/2019/09/22//articles/2019/09/22/1569133310000.html/","content":"<a href=\"https://www.jb51.net/article/126670.htm\" target=\"_blank\">React Native验证码倒计时工具类分享</a>\n```\nexport default class CountdownUtil {\n\n  /** 定时器 */\n  interval = null;\n\n  /**\n   * 创建定时器\n   *\n   */\n  static setTimer(countdownDate, callbak) {\n    this.interval = setInterval(() => {\n      let time = this.getDateData(countdownDate)\n      callbak && callbak(time)\n    }, 1000)\n  }\n\n\n  /**\n   * 侄计时计算 --> 通过此方法计算,可以解决应用退出后台的时候,定时器不走\n   * @param countdownDate\n   * @return {*}\n   */\n  static getDateData(countdownDate) {\n    let diff = (Date.parse(new Date(countdownDate)) - Date.parse(new Date)) / 1000;\n\n    if (diff <= 0) {\n     this.stop() // 倒计时为0的时候, 将计时器清除\n      return 0;\n    }\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      millisec: 0,\n    };\n\n    if (diff >= (365.25 * 86400)) {\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeft.years * 365.25 * 86400;\n    }\n    if (diff >= 86400) {\n      timeLeft.days = Math.floor(diff / 86400);\n      diff -= timeLeft.days * 86400;\n    }\n    if (diff >= 3600) {\n      timeLeft.hours = Math.floor(diff / 3600);\n      diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60);\n      diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n    return timeLeft;\n  }\n\n  /**\n   * 数字补零 --> 例: 00时01分59秒\n   * @param num\n   * @param length\n   * @return {*}\n   */\n  static leadingZeros(num, length = null) {\n\n    let length_ = length;\n    let num_ = num;\n    if (length_ === null) {\n      length_ = 2;\n    }\n    num_ = String(num_);\n    while (num_.length < length_) {\n      num_ = '0' + num_;\n    }\n    return num_;\n  }\n\n  /** 清除定时器 */\n  static stop() {\n    clearInterval(this.interval);\n  }\n};\n\n```\n\n```\n// 倒计时时间\nlet countdownDate = new Date(new Date().getTime() + 60 * 1000)\n\nCountdownUtil.settimer(countdownDate, (time) => {\n  this.setState({\n    timerTitle: time.sec > 0 ? time.sec + 's' : '重新获取'\n  }, () => {\n    if (this.state.timerTitle == \"重新获取\") {\n      this.setState({\n        isSentVerify: true\n      })\n    }\n  })\n})\n```\n\n```\n componentWillUnmount() {\n    CountdownUtil.stop()\n  }\n```","tags":["react-native"]},{"title":"[react-native] 倒计时按钮","url":"/2019/09/22//articles/2019/09/22/1569133309000.html/","content":"<a href=\"https://www.jianshu.com/p/51736baead49\" target=\"_blank\">React-Native中使用验证码倒计时的按钮</a>\n<a href=\"https://github.com/yongqianvip/RNCountDown\" target=\"_blank\">github RNCountDown</a>\n\n```\n\"use strict\";\n\nimport React,{PropTypes} from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    ViewPropTypes\n} from 'react-native';\n\nexport default class CountDownButton extends React.Component {\n    constructor(props) {\n      super(props)\n        this.state = {\n            timerCount: this.props.timerCount || 60,\n            timerTitle: this.props.timerTitle || '获取验证码',\n            counting: false,\n            selfEnable: true,\n        };\n        this._shouldStartCounting = this._shouldStartCounting.bind(this)\n        this._countDownAction = this._countDownAction.bind(this)\n    }\n    static propTypes = {\n      style: ViewPropTypes.style,\n      textStyle: Text.propTypes.style,\n      onClick: PropTypes.func,\n      disableColor: PropTypes.string,\n      timerTitle: PropTypes.string,\n      enable: PropTypes.oneOfType([PropTypes.bool,PropTypes.number]),\n      timerEnd: PropTypes.func\n    };\n\n    _countDownAction(){\n        const codeTime = this.state.timerCount;\n        const now = Date.now()\n        const overTimeStamp = now + codeTime * 1000 + 100/*过期时间戳（毫秒） +100 毫秒容错*/\n        this.interval = setInterval(() =>{\n            /* 切换到后台不受影响*/\n            const nowStamp = Date.now()\n            if (nowStamp >= overTimeStamp) {\n                /* 倒计时结束*/\n                this.interval&&clearInterval(this.interval);\n                this.setState({\n                    timerCount: codeTime,\n                    timerTitle: this.props.timerTitle || '获取验证码',\n                    counting: false,\n                    selfEnable: true\n                })\n                if (this.props.timerEnd) {\n                    this.props.timerEnd()\n                };\n            }else{\n                const leftTime = parseInt((overTimeStamp - nowStamp)/1000, 10)\n                this.setState({\n                    timerCount: leftTime,\n                    timerTitle: `重新获取(${leftTime}s)`,\n                })\n            }\n            /* 切换到后台 timer 停止计时 */\n            /*\n            const timer = this.state.timerCount - 1\n            if(timer===0){\n                this.interval&&clearInterval(this.interval);\n                this.setState({\n                    timerCount: codeTime,\n                    timerTitle: this.props.timerTitle || '获取验证码',\n                    counting: false,\n                    selfEnable: true\n                })\n            }else{\n                this.setState({\n                    timerCount:timer,\n                    timerTitle: `重新获取(${timer}s)`,\n                })\n            }\n            */\n        },1000)\n    }\n    _shouldStartCounting(shouldStart){\n        if (this.state.counting) {return}\n        if (shouldStart) {\n            this._countDownAction()\n            this.setState({counting: true,selfEnable:false})\n        }else{\n            this.setState({selfEnable:true})\n        }\n    }\n    componentWillUnmount(){\n        clearInterval(this.interval)\n    }\n    render(){\n        const {onClick,style,textStyle,enable,disableColor} = this.props\n        const {counting,timerTitle,selfEnable} = this.state\n        return (\n            <TouchableOpacity activeOpacity={counting ? 1 : 0.8} onPress={()=>{\n                if (!counting && enable && selfEnable) {\n                    this.setState({selfEnable:false})\n                    this.props.onClick(this._shouldStartCounting)\n                };\n            }}>\n                <View style={[{width:120, height:44,justifyContent:'center',alignItems:'center'},style]}>\n                    <Text style={[{fontSize: 16},textStyle,{color: ((!counting && enable && selfEnable) ? (textStyle ? textStyle.color : 'blue') : disableColor || 'gray')}]}>{timerTitle}</Text>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n}\n```\n\n```\nimport CountDownButton from './countDownButton.js'\n\n<CountDownButton\n    enable={phoneNumber.length}\n    style={{width: 110,marginRight: 10}}\n    textStyle={{color: 'blue'}}\n    timerCount={10}\n    timerTitle={'点击获取验证码'}\n    timerActiveTitle={['请在（','s）后重试']}\n    onClick={(shouldStartCounting)=>{\n      // shouldStartCounting是一个回调函数，根据调用接口的情况在适当的时候调用它来决定是否开始倒计时\n      //随机模拟发送验证码成功或失败\n      const requestSucc = Math.random() + 0.5 > 1; \n      shouldStartCounting(requestSucc)\n    }}/>\n```\n\n\n<a href=\"https://github.com/jackuhan/react-native-CountDowntimer\" target=\"_blank\">react-native-CountDowntimer</a>\n```\nnpm install --save react_native_countdowntimer\n```\n","tags":["react-native"]},{"title":"[react-native] 弹出的picker选择器","url":"/2019/09/22//articles/2019/09/22/1569133308000.html/","content":"<a href=\"https://www.jianshu.com/p/98e009b49092\" target=\"_blank\">react-native实用插件集合</a>\n","tags":["react-native"]},{"title":"[react-native] 大灰狼的小绵羊哥哥github","url":"/2019/09/22//articles/2019/09/22/1569133307000.html/","content":"<a href=\"https://github.com/gaiyaguang?tab=repositories\" target=\"_blank\">大灰狼的小绵羊哥哥github</a>\n","tags":["react-native"]},{"title":"[react-native] 打印机","url":"/2019/09/22//articles/2019/09/22/1569133306000.html/","content":"<a href=\"https://segmentfault.com/a/1190000013998316\" target=\"_blank\">React Native Socket 连接打印机推送指令</a>\n\n<a href=\"https://www.npmjs.com/package/react-native-printer\" target=\"_blank\">github react-native-printer</a>\n```\n\nUSBPrinter\nPrinter structure:\n{\n  device_name: '/usb/lp1',\n  vendor_id: 1155,\n  product_id: 22304,\n}\n\n\n\nBLEPrinter\nPrinter structure:\n{\n  device_name: '内部打印机',\n  inner_mac_address: 'XXXXX-XXXXXXXX',\n}\n\n\n\nNetPrinter\nPrinter structure:\n{\n  device_name: \"192.168.10.241:9100\",\n  host: '192.168.10.241',\n  port: 9100\n}\n```\n\n<a href=\"https://www.cnblogs.com/qiyecao/p/10103202.html\" target=\"_blank\">cnblogs react-native-printer</a>\n\n```\nimport com.facebook.react.bridge.Promise;\n\n\n    @ReactMethod\n    public void print(String ip,Integer port, String msg, Promise promise) {\n        try{\n            Socket socket = new Socket(ip, port);\n            if (socket.isConnected() ) {\n                InputStream inputStream = socket.getInputStream();\n                OutputStream os = socket.getOutputStream();\n                BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(os));\n                bw.write(msg);\n                bw.flush();\n                promise.resolve(\"success\");\n            } else {\n                promise.reject(\"连接打印机失败\");\n            }\n        }catch (Exception ex){\n            promise.reject(ex.fillInStackTrace());\n        }\n\n    }\n```\n\n.js\n```\nimport { NativeModules } from 'react-native';\n\n\n       NativeModules.PrintExtension.print(\n\t\t\t\t        printAddr.split(':')[0],\n\t\t\t\t        printAddr.split(':')[1]*1,\n            '^XA^FO100,75^BY3^B3N,N,100,Y,N^FD123ABC^XZ').then((c) => {\n                console.log(c)\n                if (c!==\"success\") {\n                    Modal.alert('打印失败', c, [\n                        { text: '确定'},\n                      ])\n                }\n            },(c)=>{\n                console.log(c)\n            })\n```","tags":["react-native"]},{"title":"[react-native] 报错解决","url":"/2019/09/22//articles/2019/09/22/1569133305000.html/","content":"<a href=\"https://blog.csdn.net/marswill/article/details/89000924\" target=\"_blank\">报错解决参考</a>\n```\nInvariant Violation: Invariant Violation: requireNativeComponent: \"RNSVGLinearGradient\" was not found\n```\n\n```\nreact-native link react-native-svg\n\nimplementation project(':react-native-svg')\n```\n\n\nMainApplication.java\n```\nimport com.code.svg.SvgPackage;\n\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n        new SvgPackage()\n       );\n    }\n\nreact-native link\n```\n\n","tags":["react-native"]},{"title":"[react-native] 百度地图开发的记录运动轨迹的app","url":"/2019/09/22//articles/2019/09/22/1569133304000.html/","content":"基于react-native，百度地图开发的记录运动轨迹的app\n<a href=\"https://github.com/zachrey/reactNativeMap\" target=\"_blank\">github reactNativeMap</a>\n\n<a href=\"https://github.com/react-native-community/react-native-maps\" target=\"_blank\">react-native-maps</a>\n```\nnpm install --save react-native-maps\n```\n","tags":["react-native"]},{"title":"[react-native] websocket","url":"/2019/09/22//articles/2019/09/22/1569133303000.html/","content":"<a href=\"https://github.com/pladaria/reconnecting-websocket\" target=\"_blank\">WebSocket重连reconnecting-websocket.js的使用</a>\n\n","tags":["react-native"]},{"title":"[react-native] toast","url":"/2019/09/22//articles/2019/09/22/1569133302000.html/","content":"<a href=\"https://www.jianshu.com/p/fe84046c9325\" target=\"_blank\">react-native-root-toast的使用</a> \n```\n\n```","tags":["react-native"]},{"title":"[react-native] TextInput+获取焦点","url":"/2019/09/22//articles/2019/09/22/1569133301000.html/","content":"<a href=\"https://www.jianshu.com/p/0e96bbc54d49\" target=\"_blank\">React-Native之TextInput组件</a>\n```\nimport React, { Component } from 'react';\nimport {\n    AppRegistry,\n    StyleSheet,\n    Text,\n    View,\n    TextInput,  // 引入组件库\n} from 'react-native';\n\n// 设备宽度\nvar Dimensions = require('Dimensions');   // 引入内库\nvar {width} = Dimensions.get('window');\n\nexport default class TextInputAssembly extends Component {\n    constructor(props) {\n      super(props);\n      this.state={\n        text: '我是默认字符',\n    };\n}\n\nrender() {\n  return (\n    <View style={styles.container}>\n      <TextInput\n      // 样式\n      style = {styles.textInputStyle}\n\n      // 默认文字\n      // value = {'12345'}\n\n      // 占位文字\n      placeholder = '我是占位文字'\n      // 占位文字字体颜色\n      placeholderTextColor = {'#0094ff'}\n\n      // 是否密文输入\n      // password={true}\n\n      // 键盘类型\n      keyboardType = {'default'}\n\n      // 键盘颜色\n      keyboardAppearance = {'default'}\n\n      // 多行显示(设置多行显示时，密文属性失效)\n      multiline={false}\n\n      // 最大字符长度\n      // maxLength = {40}\n\n      // 是否允许编辑\n      // editable = {true}\n\n      // 清除按钮出现的时机\n      clearButtonMode = {'unless-editing'}\n\n      // 如果为true,文本框会在提交的时候失焦。对于单行输入框默认值为ture,多行则为false。\n      // 注意：对于多行输入框来说，如果为ture情况下，则在按下回车键时就会失去焦点同事触发\n      // onSubmitEditing事件，而不会换行\n      blurOnSubmit = {true}\n\n      // 如果为false，会关闭键盘上拼写自动修正。默认值是true\n      autoCorrect = {false}\n\n      // 如果为true,在componentDidMount后会获得焦点。默认值false\n      autoFocus = {true}\n\n      // 订阅用户输入\n      onChangeText = {(text) => this.setState({text})}\n      value = {this.state.text}\n      />\n\n      <Text style={styles.textStyle}>\n        {this.state.text}\n      </Text>\n\n    </View>\n  );\n }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF',\n  },\n  textInputStyle: {\n    marginLeft: 20,\n    marginRight: 20,\n    marginTop: 50,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#ff00b8',\n    color: '#00baff',\n    fontSize: 15,\n  },\n  textStyle: {\n    margin: 20,\n    alignItems: 'center',\n    fontSize : 20,\n    backgroundColor: '#00f7ff',\n  }\n});\n\nAppRegistry.registerComponent('TextInputAssembly', () => TextInputAssembly);\n```\n\n<a href=\"https://blog.csdn.net/xjl271314/article/details/80185120\" target=\"_blank\">React-Native 中如何让TextInput获得焦点？</a>\n```\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { View, Text, TextInput,TouchableOpacity } from 'react-native'\n\nexport default class Example extends React.Component {\n\tconstructor(props) {\n        super(props)\n        this.state = {\n             value:'',\n             editable:false\n        }\n    }\n\trender(){\n\t\tconst { editable } = this.state;\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Text style={styles.secondText}>姓名</Text>\n                <View style={{flexDirection:'row',alignItems:'center'}}>\n                    {editable?\n                        <TextInput\n                             ref={input => this.input = input}\n                             value={this.state.value}\n                             autoFocus={true}\n                             underlineColorAndroid=\"transparent\"\n                             onChangeText={(e)=>this.setState({value:e.nativeEvent.text})}\n                         /> :\n                         <Text>{this.state.value}</Text>\n                     }\n                     <TouchableOpacity onPress={()=>{this.setState({editable:!this.state.editable})}}>\n\t\t\t\t\t\t\t<Text>点击input将获得焦点</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\t\t)\n\t}\n}\n```\n","tags":["react-native"]},{"title":"[react-native] React-Native与Android、iOS原生代码交互，完成JS发给原生","url":"/2019/09/22//articles/2019/09/22/1569133300000.html/","content":"<a href=\"https://www.jianshu.com/p/edeb052740b2\" target=\"_blank\">React-Native与Android、iOS原生代码交互，完成JS发给原生</a>\n\n","tags":["react-native"]},{"title":"[react-native] react-native-camera","url":"/2019/09/22//articles/2019/09/22/1569133299000.html/","content":"\n<a href=\"https://www.jianshu.com/p/5e7307408a8e\" target=\"_blank\">react-native 使用 react-native-camera 实现录制视频</a>\n```\nnpm install react-native-camera --save\n\n#接着运行如下命令链接相关的依赖库：\nreact-native link react-native-camera\n```\n\n报错\n```\nFound react-native-camera 'mlkit' but wasn't required\n```\n参考解决\n```\nhttps://github.com/react-native-community/react-native-camera/issues/2150\nhttps://www.e-learn.cn/content/qita/2365749\n```\n解决办法：\n```\nandroid/app/build.gradle\n\n#增加：\n\ndefaultConfig{\n\tmissingDimensionStrategy 'react-native-camera', 'general'\n}\n```\n\n同时在android/build.gradle文件的配置allprojects/repositories 中增加\n```\nmaven { url \"https://jitpack.io\" } \nmaven { url \"https://maven.google.com\" }\n```\n\n```\nallprojects {\n    repositories {\n        mavenLocal()\n        jcenter()\n        maven {\n            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm\n            url \"$rootDir/../node_modules/react-native/android\"\n        }\n        google()\n\n\t\tmaven { url \"https://jitpack.io\" } \n\t\tmaven { url \"https://maven.google.com\" }\n    }\n}\n```","tags":["react-native"]},{"title":"[react-native] PanResponder获取触点坐标","url":"/2019/09/22//articles/2019/09/22/1569133298000.html/","content":"<a href=\"https://blog.csdn.net/qq_37815596/article/details/89385091\" target=\"_blank\">PanResponder学习</a>\n```\n\n```","tags":["react-native"]},{"title":"[react-native] navigationOptions禁止手势","url":"/2019/09/22//articles/2019/09/22/1569133297000.html/","content":"<a href=\"https://blog.csdn.net/kevinlwf/article/details/81214635\" target=\"_blank\">React Native禁用右滑手势返回</a>\n```\nconst RootStackNavigator = StackNavigator({\n\n    Login: {\n      screen: LoginScreen\n    },\n    Main: {\n      screen: MainDrawerNavigator\n    }\n\n  },\n  {\n    index: 0,\n    initialRouteName: 'Login',\n    headerMode: 'none',\n    navigationOptions: {\n      gesturesEnabled: false\n    }\n  }\n);\n \n// 禁用某个页面的手势\nstatic navigationOptions = {\n     gesturesEnabled: false,\n};\n```","tags":["react-native"]},{"title":"[react-native] ImagePickerModule","url":"/2019/09/22//articles/2019/09/22/1569133296000.html/","content":"ImagePickerModule.java\n```\nhttps://github.com/RightOfHand/FirstApp/blob/master/android/app/src/main/java/com/firstapp/ImagePickerModule.java\n```","tags":["react-native"]},{"title":"[react-native] FlatList的使用","url":"/2019/09/22//articles/2019/09/22/1569133295000.html/","content":"<a href=\"https://www.jianshu.com/p/837f77d38fea\" target=\"_blank\">RN FlatList使用</a>\n","tags":["react-native"]},{"title":"[react-native] DeviceEventEmitter","url":"/2019/09/22//articles/2019/09/22/1569133294000.html/","content":"<a href=\"https://blog.csdn.net/j550341130/article/details/81773628\" target=\"_blank\">ReactNative 如何实现页面返回监听</a>\n<a href=\"https://github.com/YouCii/RNDemo\" target=\"_blank\">github RNDemo</a>\n","tags":["react-native"]},{"title":"[react-native] demos","url":"/2019/09/22//articles/2019/09/22/1569133293000.html/","content":"<a href=\"https://github.com/YouCii/RNDemo\" target=\"_blank\">github RNDemo</a>\n目前应用内用到的东西:\n```\n透明状态栏;\n图标库: react-native-vector-icons;\ncreateStackNavigator/createBottomTabNavigator, 以及跳转传值;\nfetch网络请求封装工具类;\nBase64Utils, JsonUtils, ToastUtils;\nreact-native-sound 播放音频;\nreact-native-camera 拍照/二维码扫描;\n指纹识别;\n二维码扫描位移动画/背景渐变动画;\n封装公共组件类(prop-types限制属性);\nCardView控件;\nBaseScreen封装android返回键监听, 一条属性切换返回键功能;\nDeviceEventEmitter实现界面返回监听;\nAsyncStorage持久化存储实现指纹登录/登录设置的逻辑控制;\nmodal实现的自定义对话框;\nRootSiblings实现的不依赖界面的自定义加载对话框('SpinKit'库);\n更易用的CheckBox;\nTabView相关的多层子界面数据传递;\n拍照图库选择的画廊展示效果;\n底部ActionSheet;\n```\n\n<a href=\"https://github.com/crazycodeboy/RNStudyNotes\" target=\"_blank\">github RNStudyNotes</a>\n\n","tags":["react-native"]},{"title":"[react-native] ActionSheet","url":"/2019/09/22//articles/2019/09/22/1569133292000.html/","content":"<a href=\"https://www.jianshu.com/p/2377cca9a58c\" target=\"_blank\">React Native的ActionSheet实现</a>\n```\nActionSheet.showActionSheetWithOptions(\n\t{\n\t  options: ['取消', '删除'],\n\t  destructiveButtonIndex: 1,\n\t  cancelButtonIndex: 0,\n\t},\n\t(buttonIndex) => {\n\t\tif (buttonIndex === 1) {\n\t\t\t/* 当接收到的索引为1，即点击了删除按钮时，执行对应操作 */\n\t\t}\n\t}\n);\n```","tags":["react-native"]},{"title":"[react-native] @ReactMethod与js参数映射关系","url":"/2019/09/22//articles/2019/09/22/1569133291000.html/","content":"<a href=\"https://blog.csdn.net/silencezmz/article/details/84678517\" target=\"_blank\">React Native 调用Android原生控件 传递数据</a> \n```\n  Boolean -> Bool\n  Integer -> Number\n  Double -> Number\n  Float -> Number\n  String -> String\n  Callback -> function\n  ReadableMap -> Object\n  ReadableArray -> Array\n```","tags":["react-native"]},{"title":"[react-native] @ReactMethod方法事例","url":"/2019/09/22//articles/2019/09/22/1569133290000.html/","content":"<a href=\"https://blog.csdn.net/asddavid/article/details/53338616\" target=\"_blank\">React-Native 与原生的3种交互通信（Android）</a> \n```\n    //延迟0.1秒获取时间。\n    @ReactMethod\n    public void getTime() {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Thread.sleep(100);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n                SimpleDateFormat formatDate = new SimpleDateFormat(\"yyyy年MM月dd日  HH:mm:ss\");\n                Date date = new Date(System.currentTimeMillis());   \n                String time = formatDate.format(date);\n\n                WritableMap writableMap = new WritableNativeMap();\n                writableMap.putString(\"key\", time);\n                sendTransMisson(mReactContext, \"EventName\", writableMap);\n\n            }\n        }).start();\n    }\n\n\n    /**\n     * @param reactContext\n     * @param eventName    事件名\n     * @param params       传惨\n     */\n    public void sendTransMisson(ReactContext reactContext, String eventName, @Nullable WritableMap params) {\n        reactContext\n                    .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)\n\t                .emit(eventName, params);\n\n    }\n\n```\n\n<a href=\"https://blog.csdn.net/u011068702/article/details/82719163\" target=\"_blank\">完整流程</a> \n\n","tags":["react-native"]},{"title":"[react-native] 隐藏状态栏","url":"/2019/09/14//articles/2019/09/14/1568425728000.html/","content":"<a href=\"https://blog.csdn.net/qq_28484355/article/details/81320019\" target=\"_blank\">ReactNative——如何隐藏状态栏（实现沉浸式）</a>\n<a href=\"https://blog.csdn.net/changsimeng/article/details/68068240\" target=\"_blank\">react-native沉浸式状态栏</a>\n\n\n```\nimport React,{Component} from 'react';\nimport {Text,View, StatusBar} from 'react-native';\n\nexport default class MainPage extends Component {\n    render() {\n        return(\n            <View style={{flex: 1}}>\n                <StatusBar backgroundColor=\"#ff0000\"\n                           translucent={true}\n                           hidden={true}\n                           animated={true}/>\n                <Text>HelloWord</>\n            </View>\n        )\n    }\n}\n```\n","tags":["react-native"]},{"title":"[react-native] 横竖屏","url":"/2019/09/14//articles/2019/09/14/1568425726000.html/","content":"\n<a href=\"https://www.jianshu.com/p/dc5581e22a48\" target=\"_blank\">react-native-orientation 横屏实现</a>\n```\nnpm install react-native-orientation --save\nreact-native link react-native-orientation\n```\n\n引入\n```\nimport Orientation from 'react-native-orientation';\n\n# 1.在进去这个页面的时候强制横屏\n\ncomponentWillMount() {\n       Orientation.lockToLandscape();\n}\n\n# 2.在退出当前页面的时候强制竖屏\n\ncomponentWillUnmount() {\n       Orientation.lockToPortrait();\n}\n```\n\nAppScreen.js\n```\nimport Orientation from 'react-native-orientation';\n\nexport default class AppScreen extends Component {\n  // ...\n\n  componentWillMount() {\n    // The getOrientation method is async. It happens sometimes that\n    // you need the orientation at the moment the JS runtime starts running on device.\n    // `getInitialOrientation` returns directly because its a constant set at the\n    // beginning of the JS runtime.\n\n     // 判断横竖屏幕\n    const initial = Orientation.getInitialOrientation();\n    if (initial === 'PORTRAIT') {\n      // do something\n    } else {\n      // do something else\n    }\n  },\n\n  componentDidMount() {\n    // this locks the view to Portrait Mode\n    Orientation.lockToPortrait();\n\n    // this locks the view to Landscape Mode\n    // Orientation.lockToLandscape();\n\n    // this unlocks any previous locks to all Orientations\n    // Orientation.unlockAllOrientations();\n\n    Orientation.addOrientationListener(this._orientationDidChange);\n  },\n\n  _orientationDidChange = (orientation) => {\n    if (orientation === 'LANDSCAPE') {\n      // do something with landscape layout\n    } else {\n      // do something with portrait layout\n    }\n  },\n\n  componentWillUnmount() {\n    Orientation.getOrientation((err, orientation) => {\n      console.log(`Current Device Orientation: ${orientation}`);\n    });\n\n\n    // Remember to remove listener\n    Orientation.removeOrientationListener(this._orientationDidChange);\n  }\n\n  render() {\n    // ...\n\n    return (\n      // ...\n    )\n  }\n}\n```\n","tags":["react-native"]},{"title":"[react-native] 预设占位placeholder","url":"/2019/09/13//articles/2019/09/13/1568332424000.html/","content":"<a href=\"https://www.jianshu.com/p/984ef99641f5\" target=\"_blank\">React Native预设占位placeholder</a>\n","tags":["react-native"]},{"title":"[react-native] 项目基本框架","url":"/2019/09/13//articles/2019/09/13/1568332423000.html/","content":"此项目致力于构建一套最基础，最精简，可维护的react-native项目，支持ios，android\n```\nhttps://github.com/duheng/Mozi\n```","tags":["react-native"]},{"title":"[react-native] 与android原生交互","url":"/2019/09/12//articles/2019/09/12/1568298537000.html/","content":"<a href=\"https://blog.csdn.net/qq_25827845/article/details/52862892\" target=\"_blank\">React-Native开发之原生模块封装（Android)升级版</a>\n\n<a href=\"https://blog.csdn.net/junhuahouse/article/details/80699705\" target=\"_blank\">react-native 与android原生交互</a>\n原生模块的逻辑实现:\n```\n编写原生逻辑 \n暴露原模块接口向js \n注册原生模块 \n导出、导入react-native原生模块\n```\n\n<a href=\"https://blog.csdn.net/qq_23575795/article/details/80899478\" target=\"_blank\">React-native调用Android原生模块</a>\n```\nhttps://github.com/RightOfHand/FirstApp\n```\n\n<a href=\"https://github.com/crazycodeboy/RNStudyNotes/blob/master/React%20Native%E5%8E%9F%E7%94%9F%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91/RN+Android%20%E5%8E%9F%E7%94%9F%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91.md\" target=\"_blank\">RN+Android 原生组件开发###</a>\n\n","tags":["react-native"]},{"title":"[react-native] 全局变量","url":"/2019/09/12//articles/2019/09/12/1568298536000.html/","content":"<a href=\"https://www.jianshu.com/p/75b7f67a3733\" target=\"_blank\">简书 | React Native 全局变量的使用</a>\n<a href=\"https://blog.csdn.net/u012878818/article/details/75103330\" target=\"_blank\">csdn | React Native 全局变量的使用</a>\n\n<a href=\"https://www.cnblogs.com/wukong1688/p/11009254.html\" target=\"_blank\">[RN] React Native 定义全局变量</a>\n```\n一、导出和导入\n// 定义的页面 global.js\nvar global = {authorization: null,language: 'English',token:'BMKHDHHE*&^^@@'};\nmodule.exports = global;\n\n// 调用的页面\nlet global = require('./global');\nglobal.userToken = 'token';\n\n\n二、声明全局变量（nodejs中的global对象：用于定义整个runtime时期的全局变量）        \n新建文件variables.js:\nglobal.variables = {authorization: null,language: 'English'}  \n\n\n入口文件（比如App.js文件）导入，全局使用\nimport './variables.js';     \n{global.variables.language}\n\n```\n\n\n<a href=\"https://www.jianshu.com/p/6f2f8a8a1984\" target=\"_blank\">React native全局变量的使用(跨组件的通信)</a>\n","tags":["react-native"]},{"title":"[react-native] 打包和安装到手机","url":"/2019/09/12//articles/2019/09/12/1568298534000.html/","content":"\n<a href=\"https://blog.csdn.net/u011272795/article/details/77161942\" target=\"_blank\">react-native 打包apk 之 安卓离线包全过程</a>\n\n```\nreact-native bundle --entry-file index.js --platform android --dev false --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res/\n```\n\n打安卓包的话，react-native bundle 可以替换为 react-native unbundle 做到拆分功能 \n```\nreact-native unbundle --entry-file index.js --platform android --dev false --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res/\n```\n\n```\ncd android && gradlew assembleRelease\ncd android && gradlew assembleDebug\n```\n\n\n<a href=\"https://www.cnblogs.com/yindada/p/9838517.html\" target=\"_blank\">使用adb命令安装安卓apk包</a>\n\n<a href=\"https://pan.baidu.com/s/1mgGkNZM\" target=\"_blank\">adb工具</a>\n\n命令\n```\nadb version\nadb devices\n#安装\nadb -s 设备编号 install apk的完整路径\n#卸载\nadb uninstall -r apk所在路径\n#覆盖安装\nadb install -r apk所在路径\n```","tags":["react-native"]},{"title":"[react-native] 编译打包","url":"/2019/09/12//articles/2019/09/12/1568298533000.html/","content":"<a href=\"https://reactnative.cn/docs/0.43/signed-apk-android.html\" target=\"_blank\">react-native官方打包</a>\n```\ncd android && ./gradlew assembleRelease\ncd android && ./gradlew assembleDebug\n```\n\n<a href=\"https://blog.csdn.net/u011272795/article/details/77161942\" target=\"_blank\">react-native 安卓离线包</a>\n```\nreact-native bundle --entry-file index.js --platform android --dev false --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res/\n\n\n#打安卓包的话，react-native bundle 可以替换为 react-native unbundle 做到拆分功能 \n\nreact-native unbundle --entry-file index.js --platform android --dev false --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res/\n```\n\n生成.keystore文件\n```\nkeytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000\n\n--alias别名参数后面 在 应用签名时需要用到\n\nKey store path : 签名文件路径\nPassword : 签名密码\nConfirm : 确认密码\nAlias : 别名\nValidity ( years ) : 有限期 （年）\nFirst and Last Name : 全名\nOrganizational Unit : 组织单位\nOrganization : 组织\nCity or Locality : 城市或地方\nState or Province : 州或省\nCountry Code(XX) : 国家代码\n```\n\ngradle.properties\n```\n~/.gradle/gradle.properties\n或\n%USERPROFILE%/.gradle/gradle.properties\n\nMYAPP_RELEASE_STORE_FILE=my-release-key.keystore\nMYAPP_RELEASE_KEY_ALIAS=my-key-alias\nMYAPP_RELEASE_STORE_PASSWORD=*****\nMYAPP_RELEASE_KEY_PASSWORD=*****\n```\n\nandroid/app/build.gradle\n```\nandroid {\n    ...\n    defaultConfig { ... }\n    signingConfigs {\n        release {\n            storeFile file(MYAPP_RELEASE_STORE_FILE)\n            storePassword MYAPP_RELEASE_STORE_PASSWORD\n            keyAlias MYAPP_RELEASE_KEY_ALIAS\n            keyPassword MYAPP_RELEASE_KEY_PASSWORD\n        }\n    }\n    buildTypes {\n        release {\n            ...\n            signingConfig signingConfigs.release\n        }\n    }\n}\n```\n\n生成签名apk\n```\n#在RN项目根目录运行:\n#生产包\ncd android && gradlew assembleRelease\n#测试包\ncd android && gradlew assembleDebug\n```\n\n<a href=\"https://www.jianshu.com/p/d6af7197d49f\" target=\"_blank\">发布RN项目的安卓Release版本</a>\n\n<a href=\"https://www.cnblogs.com/weizhxa/p/9950696.html\" target=\"_blank\">gradlew命令打包详细讲解</a>\n```\ngradlew compileDebug --stacktrace -info \n#或\ngradlew compileDebug --stacktrace -debug \n\n#显示的错误信息最详细，建议直接用这个\ngradlew compileDebugSources --stacktrace -info\n```\n\n<a href=\"https://blog.csdn.net/ddddwwww2/article/details/53085537\" target=\"_blank\">gradlew命令打包详细讲解</a>\n```\n1、全渠道release版本打包：\n./gradlew assembleRelease\n\n2、全渠道debug版本打包：\n./gradlew assembleDebug\n\n3、单个渠道release版本打包：\n./gradlew assembleGoogleRelease\n\n4、单个渠道debug版本打包：\n./gradlew assembleGoogleDebug\n\n5、单个渠道打包：\n./gradlew assembleGoogle\n\n这个会生成release和debug两个版本的apk\n```\n\n以下估计不管用，没试过；这边是将原先安装在手机上的测试包卸载，再重新运行打包安装上的\n报错\n```\nUnable to load script.Make sure you're either running a metro server\n（run 'react-native start' ） or that\nyour bundle 'index.android.bundle' is packaged correctly for release.\n```\n<a href=\"https://segmentfault.com/a/1190000019529044\" target=\"_blank\">segmentfault报以上错解决方案</a>\n```\nreact-native bundle --platform android --dev false --entry-file index.android.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res\n\nreact-native run-android\n```","tags":["android"]},{"title":"[pr] 40个拉镜转场模板+45个转场音效","url":"/2019/09/01//articles/2019/09/01/1567308548000.html/","content":"<a href=\"https://www.52pojie.cn/forum.php?mod=viewthread&tid=932752\" target=\"_blank\">Pr40个拉镜转场模板+45个转场音效，内附使用视频教程</a>\n\n<a href=\"https://pan.baidu.com/s/1CdSFz9j-2p9CbtPXxuTdbg\" target=\"_blank\"></a>\n```\n提取码:\nsaz4 \n```\n","tags":["pr"]}]