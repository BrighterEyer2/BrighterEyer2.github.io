<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-01-14T11:16:30.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[软件] AffinityDesigner</title>
    <link href="http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000590000.html/"/>
    <id>http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000590000.html/</id>
    <published>2020-01-14T11:16:30.000Z</published>
    <updated>2020-01-14T11:16:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.ddooo.com/softdown/110697.htm" target="_blank" rel="noopener">affinity designer windows破解版 v1.6.0.89中文版</a><br><a href="http://big1.ddooo.com/affinitydesigner_110697.rar" target="_blank">affinitydesigner_110697.rar</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.ddooo.com/softdown/110697.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;affinity designer windows破解版 v1.6.0.89中文版&lt;/a&gt;&lt;br&gt;&lt;a hre
      
    
    </summary>
    
    
    
      <category term="软件" scheme="http://brightereyer.xyz/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>[vbox] 菜单栏被隐藏的解决办法</title>
    <link href="http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000589000.html/"/>
    <id>http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000589000.html/</id>
    <published>2020-01-14T11:16:29.000Z</published>
    <updated>2020-01-14T11:16:29.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一定要是右边的Ctrl+C</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
    
      <category term="vbox" scheme="http://brightereyer.xyz/tags/vbox/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 使用malloc函数注意事项</title>
    <link href="http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000588000.html/"/>
    <id>http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000588000.html/</id>
    <published>2020-01-14T11:16:28.000Z</published>
    <updated>2020-01-14T11:16:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于keil-MDK环境中STM32使用malloc函数<br>对于malloc和free对内存堆栈块的空间操作，在keilMDK中需要满足下面几个条件：</p><p>1、使用的代码文件中需要包含头文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;stdlib.h&gt;</span><br></pre></td></tr></table></figure><p>2、勾选 工程属性中的 Use MicroLIB 选项</p><p>3、startup_stm32f429_439xx.s文件位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">工程名\Libraries\CMSIS\Device\ST\STM32F4xx\Source\Templates\arm\startup_stm32f429_439xx.s</span><br></pre></td></tr></table></figure><p>4、startup_stm32f429_439xx.s文件中的 Stack_Size 、Heap_Size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Stack_Size      EQU     0x00000400</span><br><span class="line"></span><br><span class="line">                AREA    STACK, NOINIT, READWRITE, ALIGN&#x3D;3</span><br><span class="line">Stack_Mem       SPACE   Stack_Size</span><br><span class="line">__initial_sp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; &lt;h&gt; Heap Configuration</span><br><span class="line">;   &lt;o&gt;  Heap Size (in Bytes) &lt;0x0-0xFFFFFFFF:8&gt;</span><br><span class="line">; &lt;&#x2F;h&gt;</span><br><span class="line"></span><br><span class="line">Heap_Size       EQU     0x00000200</span><br></pre></td></tr></table></figure><p>5、修改Heap_Size</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这时候原则上就可以使用空间申请和释放的两个操作函数了，但是由于STM32在startup_stm32f429_439xx.s中分配的堆空间只有0x00000200个字节，所以很多时候调用malloc函数时如果申请空间超过0X200则返回了NULL，这时候就需要到该文件对这个值进行设置。</span><br><span class="line"> </span><br><span class="line">上面工作完成后，我们就可以愉快地尽情使用malloc和free两个函数了！！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;关于keil-MDK环境中STM32使用malloc函数&lt;br&gt;对于malloc和free对内存堆栈块的空间操作，在keilMDK中需要满足下面几个条件：&lt;/p&gt;
&lt;p&gt;1、使用的代码文件中需要包含头文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[arm] windows平台交叉编译+arm+QT5.7</title>
    <link href="http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000587000.html/"/>
    <id>http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000587000.html/</id>
    <published>2020-01-14T11:16:27.000Z</published>
    <updated>2020-01-14T11:16:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41068712/article/details/89672143" target="_blank">Windows平台交叉编译Arm Linux平台的QT5.7库</a></p><p>1、Qt库源代码<br><a href="http://download.qt.io/archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.zip" target="_blank">qt-everywhere-opensource-src-5.7.0.zip</a><br>修改qmake.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">qtbase\mkspecs\linux-arm-gnueabi-g++\qmake.conf</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># qmake configuration for building with arm-linux-gnueabi-g++</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">MAKEFILE_GENERATOR      &#x3D; UNIX</span><br><span class="line">CONFIG                 +&#x3D; incremental</span><br><span class="line">QMAKE_INCREMENTAL_STYLE &#x3D; sublib</span><br><span class="line"></span><br><span class="line">include(..&#x2F;common&#x2F;linux.conf)</span><br><span class="line">include(..&#x2F;common&#x2F;gcc-base-unix.conf)</span><br><span class="line">include(..&#x2F;common&#x2F;g++-unix.conf)</span><br><span class="line"></span><br><span class="line"># modifications to g++.conf</span><br><span class="line">QMAKE_CC                &#x3D; arm-linux-gnueabihf-gcc</span><br><span class="line">QMAKE_CXX               &#x3D; arm-linux-gnueabihf-g++</span><br><span class="line">QMAKE_LINK              &#x3D; arm-linux-gnueabihf-g++</span><br><span class="line">QMAKE_LINK_SHLIB        &#x3D; arm-linux-gnueabihf-g++</span><br><span class="line"></span><br><span class="line"># modifications to linux.conf</span><br><span class="line">QMAKE_AR                &#x3D; arm-linux-gnueabihf-ar cqs</span><br><span class="line">QMAKE_OBJCOPY           &#x3D; arm-linux-gnueabihf-objcopy</span><br><span class="line">QMAKE_NM                &#x3D; arm-linux-gnueabihf-nm -P</span><br><span class="line">QMAKE_STRIP             &#x3D; arm-linux-gnueabihf-strip</span><br><span class="line">load(qt_config)</span><br></pre></td></tr></table></figure><p>修改kernel.pri</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">qtbase\src\corelib\kernel\kernel.pri</span><br><span class="line"></span><br><span class="line">SOURCES +&#x3D; \</span><br><span class="line">kernel&#x2F;qpoll.cpp \</span><br><span class="line">kernel&#x2F;qcore_unix.cpp \</span><br></pre></td></tr></table></figure><p>2、Perl<br><a href="https://www.cr173.com/soft/14302.html" target="_blank">ActivePerl-5.26.1</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将其bin目录添加到环境变量PATH中</span><br></pre></td></tr></table></figure><p>3、Python2.7以上<br><a href="https://www.python.org/downloads/ " target="_blank">Python</a></p><p>4、MinGW开发工具集（没用到）<br><a href="https://sourceforge.net/projects/mingw/" target="_blank">mingw-32</a><br><a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/" target="_blank">mingw-w64</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将其bin目录添加到环境变量PATH中</span><br></pre></td></tr></table></figure><p>5、交叉编译器<br><a href="http://releases.linaro.org/archive/14.07/components/toolchain/binaries/gcc-linaro-arm-linux-gnueabihf-4.9-2014.07-20140726_win32.exe" target="_blank">gcc-linaro-arm-linux-gnueabihf-4.9-2014.07-20140726_win32.exe</a><br><a href="https://www.veryarm.com/12506.html" target="_blank">【Linux开发】arm-linux-gnueabihf-gcc下载</a><br><a href="http://releases.linaro.org/archive/14.07/components/toolchain/binaries/" target="_blank">文件列表</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将其bin目录添加到环境变量PATH中</span><br></pre></td></tr></table></figure><p>6、安装qt opensource</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd qt-everywhere-opensource-src-5.7.0</span><br><span class="line"></span><br><span class="line">configure.bat -release -opensource -prefix X:\Qt\Qt5.7.0_ARM_Linux -nomake tests -nomake examples -no-opengl -skip qtvirtualkeyboard  -xplatform linux-arm-gnueabi-g++</span><br><span class="line"></span><br><span class="line">mingw32-make</span><br><span class="line">mingw32-make install</span><br></pre></td></tr></table></figure><p>7、Qt Creator + ARM设置<br><a href="https://download.qt.io/archive/qt/5.12/5.12.2/qt-opensource-windows-x86-5.12.2.exe" target="_blank">qt-opensource-windows-x86-5.12.2.exe</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(1)</span><br><span class="line">工具(Tools) -&gt; 选项(options) -&gt; Kits -&gt; 编译器 -&gt; Manual -&gt; 添加，选GCC -&gt; arm-linux-gnueabihf-g++</span><br><span class="line"></span><br><span class="line">(2)</span><br><span class="line">CMake -&gt; Manual -&gt; 点击Add -&gt; 找到minGW安装目录bin里的mingw32-make.exe，取个名后添加</span><br><span class="line"></span><br><span class="line">(3)调试功能</span><br><span class="line">Qt Versions -&gt; 手动设置 -&gt; 点击添加... -&gt; 找到Qt库安装目录bin里的qmake.exe，取名Qt5.70 for linux_armv7 后添加</span><br><span class="line"></span><br><span class="line">版本名称: Qt %&#123;Qt:Version&#125; for linux_armv7</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_41068712/article/details/89672143&quot; target=&quot;_blank&quot;&gt;Windows平台交叉编译Arm Linux平台的QT5.7库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1、Qt库源代码&lt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] Qt5.7移植到ARM开发板</title>
    <link href="http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000586000.html/"/>
    <id>http://brightereyer.xyz/2020/01/14/articles/2020/01/14/1579000586000.html/</id>
    <published>2020-01-14T11:16:26.000Z</published>
    <updated>2020-01-14T11:16:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/wangliang0633/article/details/77217424" target="_blank">Qt5.7移植到ARM开发板</a></p><p>一、需要下载的文件<br>下载qt5.7源码<br><a href="http://download.qt.io/archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz.mirrorlist" target="_blank">qt-everywhere-opensource-src-5.7.0.tar.xz</a></p><p>下载ARM交叉编译工具<br><a href="http://www.veryarm.com/arm-none-linux-gnueabi-gcc" target="_blank">arm-2014.05-29-arm-none-Linux-gnueabi-i686-pc-linux-gnu.tar.bz2</a><br><a href="https://www.veryarm.com/arm-none-linux-gnueabi-gcc" target="_blank">tslib1.4</a><br><a href="https://blog.csdn.net/kwame211/article/details/83902851" target="_blank">ubuntu16.04</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y lzop u-boot-tools autoconf automake libtool libstdc++6 lib32c-dev lib32stdc++6 lib32z1 lib32ncurses5</span><br></pre></td></tr></table></figure><p>Ubuntu16.04 系统编译 uboot 和 kernel<br><a href="http://www.android.com/versions/lollipop-5-0/" target="_blank">lollipop-5.1.1_r6</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;arm</span><br></pre></td></tr></table></figure><p>vim /root/.bashrc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin</span><br><span class="line">export CROSS_COMPILE&#x3D;arm-none-linux-gnueabi-</span><br><span class="line">source .bashrc</span><br></pre></td></tr></table></figure><p>arm-none-linux-gnueabi-gcc -v</p><p>tslib-1.4.tar.gz</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd tslib</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure CC&#x3D;arm-none-linux-gnueabi-gcc CXX&#x3D;arm-none-linux-gnueabi-g++ --host&#x3D;arm-none-linux-gnueabi</span><br><span class="line">--prefix&#x3D;&#x2F;opt&#x2F;tslib1.4 ac_cv_func_malloc_0_nonnull&#x3D;yes</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>vim /opt/tslib1.4/etc/ts.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="http://download.qt.io/archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz.mirrorlist" target="_blank">qt-everywhere-opensource-src-5.7.0</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cd qt-everywhere-opensource-src-5.7.0</span><br><span class="line">vi qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabi-g++&#x2F;qmake.conf</span><br><span class="line"></span><br><span class="line">## qmake configuration for building with arm-linux-gnueabi-g++</span><br><span class="line">#</span><br><span class="line">MAKEFILE_GENERATOR &#x3D; UNIX</span><br><span class="line">CONFIG +&#x3D; incremental</span><br><span class="line">QMAKE_INCREMENTAL_STYLE &#x3D; sublib</span><br><span class="line">QT_QPA_DEFAULT_PLATFORM &#x3D; linux #eglfs</span><br><span class="line">QMAKE_CFLAGS_RELEASE +&#x3D; -O2 -march&#x3D;armv7-a</span><br><span class="line">QMAKE_CXXFLAGS_RELEASE +&#x3D; -O2 -march&#x3D;armv7-a</span><br><span class="line">include(..&#x2F;common&#x2F;linux.conf)</span><br><span class="line">include(..&#x2F;common&#x2F;gcc-base-unix.conf)include(..&#x2F;common&#x2F;g++-unix.conf)</span><br><span class="line"># modifications to g++.conf</span><br><span class="line">QMAKE_CC &#x3D; arm-none-linux-gnueabi-gcc</span><br><span class="line">QMAKE_CXX &#x3D; arm-none-linux-gnueabi-g++</span><br><span class="line">QMAKE_LINK &#x3D; arm-none-linux-gnueabi-g++</span><br><span class="line">QMAKE_LINK_SHLIB &#x3D; arm-none-linux-gnueabi-g++</span><br><span class="line"># modifications to linux.conf</span><br><span class="line">QMAKE_AR &#x3D; arm-none-linux-gnueabi-ar cqs</span><br><span class="line">QMAKE_OBJCOPY &#x3D; arm-none-linux-gnueabi-objcopy</span><br><span class="line">QMAKE_NM &#x3D; arm-none-linux-gnueabi-nm -P</span><br><span class="line">QMAKE_STRIP &#x3D; arm-none-linux-gnueabi-strip</span><br><span class="line">load(qt_config)</span><br></pre></td></tr></table></figure><p>vi autoconfigure.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">.&#x2F;configure \ -v \</span><br><span class="line">-prefix &#x2F;opt&#x2F;qt5.7.0 \</span><br><span class="line">-release \</span><br><span class="line">-opensource \</span><br><span class="line">-make libs \</span><br><span class="line">-xplatform linux-arm-gnueabi-g++ \</span><br><span class="line">-optimized-qmake \</span><br><span class="line">-pch \</span><br><span class="line">-qt-sql-sqlite \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-no-opengl \</span><br><span class="line">-skip qt3d \</span><br><span class="line">-skip qtcanvas3d \</span><br><span class="line">-skip qtpurchasing \</span><br><span class="line">-no-sse2 \</span><br><span class="line">-no-openssl \</span><br><span class="line">-no-nis \</span><br><span class="line">-no-cups \</span><br><span class="line">-no-glib \</span><br><span class="line">-no-iconv \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake tools \</span><br><span class="line">-skip qtvirtualkeyboard \</span><br><span class="line">-I&#x2F;opt&#x2F;tslib1.4&#x2F;include \</span><br><span class="line">-L&#x2F;opt&#x2F;tslib1.4&#x2F;lib</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>autoconfigure.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 autoconfigure.sh</span><br><span class="line">./autoconfigure.sh</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">ls /opt/qt5.7.0</span><br></pre></td></tr></table></figure><p><a href="https://sourcery.mentor.com/public/gnu_toolchain/arm-none-linux-gnueabi/arm-2009q3-67-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2" target="_blank">arm-2009q3</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/wangliang0633/article/details/77217424&quot; target=&quot;_blank&quot;&gt;Qt5.7移植到ARM开发板&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一、需要下载的文件&lt;br&gt;下载qt5.7源码&lt;b
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[windows] 启用组策略gpedit.msc</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914091000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914091000.html/</id>
    <published>2020-01-13T11:14:51.000Z</published>
    <updated>2020-01-13T11:14:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>windows10启用组策略gpedit.msc</p><p>exec.cmd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">pushd &quot;%~dp0&quot;</span><br><span class="line">dir &#x2F;b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientExtensions-Package~3*.mum &gt;List.txt</span><br><span class="line">dir &#x2F;b C:\Windows\servicing\Packages\Microsoft-Windows-GroupPolicy-ClientTools-Package~3*.mum &gt;&gt;List.txt</span><br><span class="line">for &#x2F;f %%i in (&#39;findstr &#x2F;i . List.txt 2^&gt;nul&#39;) do dism &#x2F;online &#x2F;norestart &#x2F;add-package:&quot;C:\Windows\servicing\Packages\%%i&quot;</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;windows10启用组策略gpedit.msc&lt;/p&gt;
&lt;p&gt;exec.cmd&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa
      
    
    </summary>
    
    
    
      <category term="windows" scheme="http://brightereyer.xyz/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] keil乱码问题</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914090000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914090000.html/</id>
    <published>2020-01-13T11:14:50.000Z</published>
    <updated>2020-01-13T11:14:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qlexcel/article/details/54929072" target="_blank">keil中文乱码解决和个人习惯字体设置</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qlexcel/article/details/54929072&quot; target=&quot;_blank&quot;&gt;keil中文乱码解决和个人习惯字体设置&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 网络+串口字符串收发</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914089000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914089000.html/</id>
    <published>2020-01-13T11:14:49.000Z</published>
    <updated>2020-01-13T11:14:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/ce2a09d2dde9" target="_blank">stm32串口编程实例：实现数据的收发功能</a></p><details><summary>bsp_usart.h</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#ifndef __BSP_USART_H</span><br><span class="line">#define__BSP_USART_H</span><br><span class="line"></span><br><span class="line">#include &quot;stm32f4xx.h&quot;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;引脚定义</span><br><span class="line">&#x2F;*******************************************************&#x2F;</span><br><span class="line">#define DEBUG_USART                             USART1</span><br><span class="line">#define DEBUG_USART_CLK                         RCC_APB2Periph_USART1</span><br><span class="line"></span><br><span class="line">#define DEBUG_USART_RX_GPIO_PORT                GPIOA</span><br><span class="line">#define DEBUG_USART_RX_GPIO_CLK                 RCC_AHB1Periph_GPIOA</span><br><span class="line">#define DEBUG_USART_RX_PIN                      GPIO_Pin_10</span><br><span class="line">#define DEBUG_USART_RX_AF                       GPIO_AF_USART1</span><br><span class="line">#define DEBUG_USART_RX_SOURCE                   GPIO_PinSource10</span><br><span class="line"></span><br><span class="line">#define DEBUG_USART_TX_GPIO_PORT                GPIOA</span><br><span class="line">#define DEBUG_USART_TX_GPIO_CLK                 RCC_AHB1Periph_GPIOA</span><br><span class="line">#define DEBUG_USART_TX_PIN                      GPIO_Pin_9</span><br><span class="line">#define DEBUG_USART_TX_AF                       GPIO_AF_USART1</span><br><span class="line">#define DEBUG_USART_TX_SOURCE                   GPIO_PinSource9</span><br><span class="line">&#x2F;************************************************************&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;串口波特率</span><br><span class="line">#define DEBUG_USART_BAUDRATE                    115200</span><br><span class="line"></span><br><span class="line">void Debug_USART_Config(void);</span><br><span class="line">&#x2F;&#x2F;int fputc(int ch, FILE *f);</span><br><span class="line"></span><br><span class="line">void Usart_SendByte(USART_TypeDef *pUSARTx, uint8_t Data);</span><br><span class="line"></span><br><span class="line">void Usart_SendArray(USART_TypeDef *pUSARTx, uint8_t *data, uint8_t num);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;接收字符</span><br><span class="line">char usart1_getc(void);</span><br><span class="line">&#x2F;&#x2F;接收字符串</span><br><span class="line">int usart1_getstr(unsigned char* buff, int len);</span><br><span class="line"></span><br><span class="line">#endif &#x2F;* __USART1_H *&#x2F;</span><br></pre></td></tr></table></figure></details><details><summary>bsp_usart.c</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;.&#x2F;usart&#x2F;bsp_usart.h&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @brief  DEBUG_USART GPIO 配置，工作模式配置。115200 8-N-1</span><br><span class="line"> * @param  无</span><br><span class="line"> * @retval 无</span><br><span class="line"> *&#x2F;</span><br><span class="line">void Debug_USART_Config(void)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_AHB1PeriphClockCmd( DEBUG_USART_RX_GPIO_CLK | DEBUG_USART_TX_GPIO_CLK, ENABLE);</span><br><span class="line"></span><br><span class="line">&#x2F;* 使能 UART 时钟 *&#x2F;</span><br><span class="line">RCC_APB2PeriphClockCmd(DEBUG_USART_CLK, ENABLE);</span><br><span class="line"></span><br><span class="line">&#x2F;* 连接 PXx 到 USARTx_Tx*&#x2F;</span><br><span class="line">GPIO_PinAFConfig(DEBUG_USART_RX_GPIO_PORT, DEBUG_USART_RX_SOURCE, DEBUG_USART_RX_AF);</span><br><span class="line"></span><br><span class="line">&#x2F;*  连接 PXx 到 USARTx__Rx*&#x2F;</span><br><span class="line">GPIO_PinAFConfig(DEBUG_USART_TX_GPIO_PORT, DEBUG_USART_TX_SOURCE, DEBUG_USART_TX_AF);</span><br><span class="line"></span><br><span class="line">&#x2F;* 配置Tx引脚为复用功能  *&#x2F;</span><br><span class="line">GPIO_InitStructure.GPIO_OType &#x3D; GPIO_OType_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_PuPd &#x3D; GPIO_PuPd_UP;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; GPIO_Mode_AF;</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; DEBUG_USART_TX_PIN  ;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed &#x3D; GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(DEBUG_USART_TX_GPIO_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">&#x2F;* 配置Rx引脚为复用功能 *&#x2F;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode &#x3D; GPIO_Mode_AF;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin &#x3D; DEBUG_USART_RX_PIN;</span><br><span class="line">GPIO_Init(DEBUG_USART_RX_GPIO_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">&#x2F;* 配置串DEBUG_USART 模式 *&#x2F;</span><br><span class="line">USART_InitStructure.USART_BaudRate &#x3D; DEBUG_USART_BAUDRATE;</span><br><span class="line">USART_InitStructure.USART_WordLength &#x3D; USART_WordLength_8b;</span><br><span class="line">USART_InitStructure.USART_StopBits &#x3D; USART_StopBits_1;</span><br><span class="line">USART_InitStructure.USART_Parity &#x3D; USART_Parity_No ;</span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl &#x3D; USART_HardwareFlowControl_None;</span><br><span class="line">USART_InitStructure.USART_Mode &#x3D; USART_Mode_Rx | USART_Mode_Tx;</span><br><span class="line">USART_Init(DEBUG_USART, &amp;USART_InitStructure);</span><br><span class="line">USART_Cmd(DEBUG_USART, ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F;重定向c库函数printf到串口DEBUG_USART，重定向后可使用printf函数</span><br><span class="line">int fputc(int ch, FILE *f)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;* 发送一个字节数据到串口DEBUG_USART *&#x2F;</span><br><span class="line">USART_SendData(DEBUG_USART, (uint8_t) ch);</span><br><span class="line"></span><br><span class="line">&#x2F;* 等待发送完毕 *&#x2F;</span><br><span class="line">while (USART_GetFlagStatus(DEBUG_USART, USART_FLAG_TXE) &#x3D;&#x3D; RESET);</span><br><span class="line"></span><br><span class="line">return (ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F;重定向c库函数printf到串口DEBUG_USART，重定向后可使用scanf、getchar函数</span><br><span class="line">int fgetc(FILE *f)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;* 等待串口输入数据 *&#x2F;</span><br><span class="line">while (USART_GetFlagStatus(DEBUG_USART, USART_FLAG_RXNE) &#x3D;&#x3D; RESET);</span><br><span class="line"></span><br><span class="line">return (int)USART_ReceiveData(DEBUG_USART);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Usart_SendByte(USART_TypeDef *pUSARTx, uint8_t Data)</span><br><span class="line">&#123;</span><br><span class="line">USART_SendData(pUSARTx, Data);</span><br><span class="line">while (USART_GetFlagStatus(pUSARTx, USART_FLAG_TXE) &#x3D;&#x3D; RESET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Usart_SendArray(USART_TypeDef *pUSARTx, uint8_t *data, uint8_t num)</span><br><span class="line">&#123;</span><br><span class="line">uint8_t t;</span><br><span class="line">for (t &#x3D; 0; t &lt; num; t++) &#123;</span><br><span class="line">Usart_SendByte(pUSARTx, data[t]);</span><br><span class="line">&#125;</span><br><span class="line">while (USART_GetFlagStatus(pUSARTx, USART_FLAG_TC) &#x3D;&#x3D; RESET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;接收字符</span><br><span class="line">char usart1_getc(void) &#123;</span><br><span class="line">char temp &#x3D; 0;</span><br><span class="line">while (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) !&#x3D; SET);</span><br><span class="line">temp &#x3D; USART_ReceiveData(USART1);</span><br><span class="line">return temp;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;接收字符串</span><br><span class="line">int usart1_getstr(unsigned char* buff, int len) &#123;</span><br><span class="line">int i &#x3D; 0;</span><br><span class="line">for (i &#x3D; 0; i &lt; len; i++) &#123;</span><br><span class="line">buff[i] &#x3D; usart1_getc();</span><br><span class="line">&#125;</span><br><span class="line">return len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*********************************************END OF FILE**********************&#x2F;</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/ce2a09d2dde9&quot; target=&quot;_blank&quot;&gt;stm32串口编程实例：实现数据的收发功能&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;bsp_usart.h&lt;/summary&gt;


      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[ps] 表情包</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914088000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914088000.html/</id>
    <published>2020-01-13T11:14:48.000Z</published>
    <updated>2020-01-13T11:14:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ibaotu.com/sucai/19437774.html?kwd=%E8%A1%A8%E6%83%85%E5%8C%85" target="_blank">可爱老鼠表情包2-给您拜年动图GIF</a></p><p><a href="https://ibaotu.com/sucai/19437781.html?kwd=%E8%A1%A8%E6%83%85%E5%8C%85" target="_blank">可爱老鼠表情包9-赞动图GIF</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://ibaotu.com/sucai/19437774.html?kwd=%E8%A1%A8%E6%83%85%E5%8C%85&quot; target=&quot;_blank&quot;&gt;可爱老鼠表情包2-给您拜年动图GIF&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;h
      
    
    </summary>
    
    
    
      <category term="ps" scheme="http://brightereyer.xyz/tags/ps/"/>
    
  </entry>
  
  <entry>
    <title>[linux] MQTT服务之mosquitto配置</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914087000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914087000.html/</id>
    <published>2020-01-13T11:14:47.000Z</published>
    <updated>2020-01-13T11:14:47.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;mosquitto&#x2F;</span><br><span class="line">touch pwfile acl</span><br><span class="line"></span><br><span class="line">vim mosquitto.conf</span><br><span class="line"></span><br><span class="line">allow_anonymous false</span><br><span class="line">password_file &#x2F;etc&#x2F;mosquitto&#x2F;pwfile</span><br><span class="line">acl_file acl_file &#x2F;etc&#x2F;mosquitto&#x2F;acl</span><br></pre></td></tr></table></figure><p>添加用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 添加用户&#39;admin&#39;</span><br><span class="line">mosquitto_passwd -c &#x2F;etc&#x2F;mosquitto&#x2F;pwfile admin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim acl</span><br><span class="line"></span><br><span class="line">user admin</span><br><span class="line">topic write mtopic&#x2F;#</span><br><span class="line"></span><br><span class="line">user admin</span><br><span class="line">topic read mtopic&#x2F;#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep mosquitto</span><br><span class="line">kill -9 18248</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto -c &#x2F;etc&#x2F;mosquitto&#x2F;mosquitto.conf -d</span><br></pre></td></tr></table></figure><p>（订阅端）客户端启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_sub -h 127.0.0.1 -t mtopic -u admin -P hello</span><br></pre></td></tr></table></figure><p>（发布者）客户端启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mosquitto_pub -h 127.0.0.1 -t mtopic -u admin -P hello -m &quot;test&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] ESP8266透传</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914086000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914086000.html/</id>
    <published>2020-01-13T11:14:46.000Z</published>
    <updated>2020-01-13T11:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://cloud.tencent.com/developer/article/1457141" target="_blank">ESP8266透传：利用STM32f103zet6发送数据到HTTP服务器</a></p><p><a href="https://blog.csdn.net/qq_21842575/article/details/67632656" target="_blank">基于STM32封装的HTTP请求</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;PotoYang&#x2F;STM32_HTTP_DataTrans</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com/developer/article/1457141&quot; target=&quot;_blank&quot;&gt;ESP8266透传：利用STM32f103zet6发送数据到HTTP服务器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;h
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[虚拟机] 将VirtualBox和VMware虚拟机相互转换</title>
    <link href="http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914085000.html/"/>
    <id>http://brightereyer.xyz/2020/01/13/articles/2020/01/13/1578914085000.html/</id>
    <published>2020-01-13T11:14:45.000Z</published>
    <updated>2020-01-13T11:14:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_36242834/article/details/77801455" target="_blank">将VirtualBox和VMware虚拟机相互转换</a></p><p><a href="https://www.jb51.net/os/other/349015.html" target="_blank">将Vmware的镜像格式转换为Virtualbox的镜像格式的方法</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage.exe clonehd F:\centos-6.0-i386-minimal.vmdk F:\centos-6.0-i386-minimal.vdi</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_36242834/article/details/77801455&quot; target=&quot;_blank&quot;&gt;将VirtualBox和VMware虚拟机相互转换&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
    
    
      <category term="虚拟机" scheme="http://brightereyer.xyz/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>[ubuntu] 安装配置STM32开发环境</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670561000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670561000.html/</id>
    <published>2020-01-10T15:36:01.000Z</published>
    <updated>2020-01-10T15:36:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u013908686/article/details/79883904" target="_blank">windows+arm+gcc开发环境的搭建</a><br><a href="https://github.com/MagicPrince666/STM32_LCD.git" target="_blank">STM32_LCD</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u013908686/article/details/79883904&quot; target=&quot;_blank&quot;&gt;windows+arm+gcc开发环境的搭建&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 野火单片机cnblogs博客,含头文件和代码用例</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670560000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670560000.html/</id>
    <published>2020-01-10T15:36:00.000Z</published>
    <updated>2020-01-10T15:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/firege/" target="_blank">野火_firege</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/firege/&quot; target=&quot;_blank&quot;&gt;野火_firege&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 密码锁</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670559000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670559000.html/</id>
    <published>2020-01-10T15:35:59.000Z</published>
    <updated>2020-01-10T15:35:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/sinat_23225111/article/details/53523568" target="_blank">一段在STM32上实现密码设置功能的小程序</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/sinat_23225111/article/details/53523568&quot; target=&quot;_blank&quot;&gt;一段在STM32上实现密码设置功能的小程序&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] VM8978_MP3模块</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670558000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670558000.html/</id>
    <published>2020-01-10T15:35:58.000Z</published>
    <updated>2020-01-10T15:35:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/wangzibigan/article/details/88428910" target="_blank">STM32：I2S驱动WM8978</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/wangzibigan/article/details/88428910&quot; target=&quot;_blank&quot;&gt;STM32：I2S驱动WM8978&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] keil程序错误</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670557000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670557000.html/</id>
    <published>2020-01-10T15:35:57.000Z</published>
    <updated>2020-01-10T15:35:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="" target="_blank"></a></p><p><a href="https://blog.csdn.net/nightdrug/article/details/83279555" target="_blank">KEIL软件中出现”cannot open source input file”的问题解决方法</a></p><p><a href="https://www.cnblogs.com/ligangblog/archive/2018/11/15/9963786.html" target="_blank">keil编译运行错误，缺少error:#5：#include “core_cm3.h”</a></p><p><a href="https://blog.csdn.net/master_0_/article/details/95046305" target="_blank">Cannot access Memory (@ )</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">STM32F429用DAP下载器下载失败，</span><br><span class="line"></span><br><span class="line">显示错误信息Cannot access Memory (@ 0xe000efd0, Read, Acc Size:4 Byte)</span><br><span class="line"></span><br><span class="line">Error. Flash Download failed - Target DLL has been cancelled</span><br><span class="line"></span><br><span class="line">Error: FlashDownload failedTarget .DLL has beencancelled</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/chief_cf/article/details/78732505" target="_blank">keil中变量声明问题及error: #268: declaration may not appear after executable statement in block</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/nightdrug/article/details/83279555&quot; target=&quot;_blank&quot;&gt;KEIL软件中出现”canno
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] keil5添加HAL库</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670556000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670556000.html/</id>
    <published>2020-01-10T15:35:56.000Z</published>
    <updated>2020-01-10T15:35:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/lzh666/p/11279066.html" target="_blank">使用HAL库建立STM32工程</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">7.编译出错</span><br><span class="line">  我们提供的例程有可能编译出错，提示找不到tftpc.o文件，</span><br><span class="line"></span><br><span class="line">--原因如下：</span><br><span class="line">  程序发布时使用killkeil工具删除mdk生成的多余文件时，会把本目录下的tftpc.o文件也删除掉，导致编译出错，MDK编译错误提示如下：</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">..\..\..\..\Build\demo\MICO-Fire_F429\obj_RVMDK\mdk_demo.axf: error: L6002U: Could not open file ..\..\..\..\MICO\system\tftp_ota\tftpc.o: No such file or directory</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">--解决方法：</span><br><span class="line">  把“tftpc_o文件备份.zip”压缩包的“tftpc.o”备份文件复制到工程目录下的“\MICO\system\tftp_ota\tftp_ota”目录下，重新编译即可。</span><br></pre></td></tr></table></figure><p>问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cannot read jlink version number</span><br></pre></td></tr></table></figure><p>参考<br><a href="https://blog.csdn.net/dxxdxpdxy/article/details/85101210" target="_blank">任意版本JLink驱动官方下载指引</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/lzh666/p/11279066.html&quot; target=&quot;_blank&quot;&gt;使用HAL库建立STM32工程&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] keil5_ARM-MDK包</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670555000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670555000.html/</id>
    <published>2020-01-10T15:35:55.000Z</published>
    <updated>2020-01-10T15:35:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_42911200/article/details/81590158" target="_blank">Keil5的安装破解,包含MDK-ARM和C51</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">同时提供所需安装包</span><br><span class="line"></span><br><span class="line">链接：</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1Ycsv1v4d10mtvuaMjhYCGg</span><br><span class="line">密码：</span><br><span class="line">dggh</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_41639829/article/details/81813992" target="_blank">MDK5安装破解以及安装stm32与C51支持包(附安装包)</a><br>MD5.14安装包与破解工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">链接：</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;14I0zwdvKlbR5PbrsAlxMDQ</span><br><span class="line">密码：</span><br><span class="line">d1cs</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_42911200/article/details/81590158&quot; target=&quot;_blank&quot;&gt;Keil5的安装破解,包含MDK-ARM和C51&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] GPIO输入_按键检测</title>
    <link href="http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670554000.html/"/>
    <id>http://brightereyer.xyz/2020/01/10/articles/2020/01/10/1578670554000.html/</id>
    <published>2020-01-10T15:35:54.000Z</published>
    <updated>2020-01-10T15:35:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/firege/p/5748707.html" target="_blank">第12章 GPIO输入-按键检测—零死角玩转STM32-F429系列</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/firege/p/5748707.html&quot; target=&quot;_blank&quot;&gt;第12章 GPIO输入-按键检测—零死角玩转STM32-F429系列&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
</feed>
