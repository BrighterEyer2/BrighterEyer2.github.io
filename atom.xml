<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-02-21T11:54:26.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[ubuntu] eth0配置</title>
    <link href="http://brightereyer.xyz/2020/02/21/articles/2020/02/21/1582286066000.html/"/>
    <id>http://brightereyer.xyz/2020/02/21/articles/2020/02/21/1582286066000.html/</id>
    <published>2020-02-21T11:54:26.000Z</published>
    <updated>2020-02-21T11:54:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>配置网卡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 192.168.1.100 netmask 255.255.255.0</span><br><span class="line">route add default gw 192.168.1.1</span><br><span class="line">#ifconfig eth0 down</span><br><span class="line">ifconfig eth0 up</span><br><span class="line">route -n</span><br><span class="line">route add default gw 192.168.1.1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;network&#x2F;interfaces&lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address 192.168.1.100</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.1.1</span><br><span class="line">dns-nameserver 114.114.114.114</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &#x2F;etc&#x2F;network&#x2F;interfaces</span><br></pre></td></tr></table></figure><p>配置永久DNS(追加)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; &#x2F;etc&#x2F;resolvconf&#x2F;resolv.conf.d&#x2F;base &lt;&lt;EOF</span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">resolvconf -u</span><br><span class="line">cat &#x2F;etc&#x2F;resolv.conf</span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;networking restart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wpa_supplicant -B -iwlan0 -c &#x2F;etc&#x2F;wpa_supplicant.conf -Dwext dhcp 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">wpa_cli -a&#x2F;etc&#x2F;wpa_action.sh -B</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配置网卡&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 看云</title>
    <link href="http://brightereyer.xyz/2020/02/19/articles/2020/02/19/1582105141000.html/"/>
    <id>http://brightereyer.xyz/2020/02/19/articles/2020/02/19/1582105141000.html/</id>
    <published>2020-02-19T09:39:01.000Z</published>
    <updated>2020-02-19T09:39:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.kancloud.cn/lichee/lpi0/418897" target="_blank">移植tslib</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.kancloud.cn/lichee/lpi0/418897&quot; target=&quot;_blank&quot;&gt;移植tslib&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] ubuntu.img</title>
    <link href="http://brightereyer.xyz/2020/02/19/articles/2020/02/19/1582105140000.html/"/>
    <id>http://brightereyer.xyz/2020/02/19/articles/2020/02/19/1582105140000.html/</id>
    <published>2020-02-19T09:39:00.000Z</published>
    <updated>2020-02-19T09:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://cdimage.ubuntu.com/ubuntu-base/releases/" target="_blank">ubuntu core下载网址</a><br><a href="https://www.jianshu.com/p/7453d52f0324" target="_blank">移植ubuntu-base到ARM/AARCH64</a></p><p>1、下载、解压ubuntu core</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;root&#x2F;ubuntu;cd &#x2F;root&#x2F;ubuntu</span><br><span class="line">wget http:&#x2F;&#x2F;cdimage.ubuntu.com&#x2F;ubuntu-base&#x2F;releases&#x2F;16.04.1&#x2F;release&#x2F;ubuntu-base-16.04.2-base-arm64.tar.gz</span><br><span class="line">tar -xpf ubuntu-base-16.04.2-base-arm64.tar.gz;mv ubuntu-base-16.04.2-base-arm64 ubuntu-base-16;</span><br></pre></td></tr></table></figure><p>2、安装qemu模拟器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y qemu-user-static</span><br></pre></td></tr></table></figure><p>3、配置Ubuntu<br>1）拷贝qemu-arm-static 到ubuntu core的usr/bin/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;usr&#x2F;bin&#x2F;qemu-arm-static usr&#x2F;bin&#x2F;</span><br></pre></td></tr></table></figure><p>2）拷贝主机的resolv.conf 到ubuntu core的etc/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -b &#x2F;etc&#x2F;resolv.conf etc&#x2F;resolv.conf</span><br></pre></td></tr></table></figure><p>3）修改目标ubuntu的下载软件源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.list &lt;&lt;EOF</span><br><span class="line">deb http:&#x2F;&#x2F;ports.ubuntu.com&#x2F;ubuntu-ports&#x2F; xenial main universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;ports.ubuntu.com&#x2F;ubuntu-ports&#x2F; xenial main universe</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>4）配置串口调试服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp etc&#x2F;init&#x2F;tty1.conf etc&#x2F;init&#x2F;ttyS2.conf</span><br><span class="line">sudo vi etc&#x2F;init&#x2F;ttyS2.conf</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; etc&#x2F;rc.local&lt;&lt;EOF</span><br><span class="line">start ttyS2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>5）以太网配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; etc&#x2F;network&#x2F;interfaces&lt;&lt;EOF</span><br><span class="line">auto eth0  </span><br><span class="line">iface eth0 inet dhcp hwaddress ether 7e:8d:a5:3a:ce:9e</span><br></pre></td></tr></table></figure><p>6）修过主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi etc&#x2F;hostname</span><br></pre></td></tr></table></figure><p>4、启动模拟器，安装组件<br>（1）用附件中的ch-mount.sh脚本，拷贝到前面的创建ubuntu的上级目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ch-mount.sh</span><br><span class="line">.&#x2F;ch-mount.sh -m ubuntu&#x2F;</span><br></pre></td></tr></table></figure><p>-m 创建home目录 （不加这个要手动添加目录，不然开机时，会出现No directory,Logging in with HOME=/ ）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -s &#39;&#x2F;bin&#x2F;bash&#39; -m -G adm,sudo daluotuo</span><br></pre></td></tr></table></figure><p>（2）修过密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd daluotuo</span><br></pre></td></tr></table></figure><p>（3）安装常用工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y vim git openssh-server</span><br><span class="line">apt-get install -y sudo</span><br><span class="line">apt-get install -y net-tools</span><br><span class="line">apt-get install -y iputils-ping</span><br><span class="line">apt-get install -y wireless-tools</span><br><span class="line">apt-get install -y htop</span><br><span class="line">apt-get install -y rsyslog</span><br><span class="line">apt-get install -y network-manager</span><br><span class="line">apt-get install -y ifupdown</span><br><span class="line">apt-get install -y ethtool</span><br></pre></td></tr></table></figure><p>可以根据需要，安装各种组件。<br>（4）退出chroot<br>用exit 命令，退出chroot<br>（5）用脚本载缷载退出根文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;ch-mount.sh -u ubuntu&#x2F;</span><br></pre></td></tr></table></figure><p>4、制作镜像<br>1）用dd工具创建镜像文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;ubuntu.img  bs&#x3D;1M count&#x3D;1000</span><br></pre></td></tr></table></figure><p>2）格式化镜像文件，并加入linuxroot卷标：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs.ext4 -F -L linuxroot ubuntu.img</span><br></pre></td></tr></table></figure><p>3）拷贝文件系统到 镜像文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ubuntu-mount</span><br><span class="line">sudo mount  ubuntu.img ubuntu-mount</span><br><span class="line">sudo cp -rfp ubuntu&#x2F;* ubuntu-mount</span><br></pre></td></tr></table></figure><p>4）缷载镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount ubuntu-mount</span><br></pre></td></tr></table></figure><p>5）检查镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo e2fsck -p -f ubuntu.img</span><br></pre></td></tr></table></figure><p>6）减少镜像大小</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo resize2fs -M ubuntu.img</span><br><span class="line">du -sh ubuntu.img</span><br><span class="line">ubuntu, arm, rk3288</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://cdimage.ubuntu.com/ubuntu-base/releases/&quot; target=&quot;_blank&quot;&gt;ubuntu core下载网址&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/7453d
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] qemu+u-boot</title>
    <link href="http://brightereyer.xyz/2020/02/19/articles/2020/02/19/1582105139000.html/"/>
    <id>http://brightereyer.xyz/2020/02/19/articles/2020/02/19/1582105139000.html/</id>
    <published>2020-02-19T09:38:59.000Z</published>
    <updated>2020-02-19T09:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://ftp.denx.de/pub/u-boot/" target="_blank">u-boot</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;root</span><br><span class="line">wget https:&#x2F;&#x2F;ftp.denx.de&#x2F;pub&#x2F;u-boot&#x2F;u-boot-2015.10.tar.bz2;</span><br><span class="line">tar xvf u-boot-2015.10.tar.bz2;cd u-boot-2015.10;</span><br><span class="line">make ARCH&#x3D;arm CROSS_COMPILE&#x3D;arm-linux-gnueabi- vexpress_ca9x4_defconfig</span><br><span class="line">make ARCH&#x3D;arm CROSS_COMPILE&#x3D;arm-linux-gnueabi-</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M vexpress-a9 \</span><br><span class="line">     -kernel u-boot \</span><br><span class="line">     -nographic \</span><br><span class="line">     -m 512M</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://ftp.denx.de/pub/u-boot/&quot; target=&quot;_blank&quot;&gt;u-boot&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 编译ubuntu</title>
    <link href="http://brightereyer.xyz/2020/02/18/articles/2020/02/18/1582027314000.html/"/>
    <id>http://brightereyer.xyz/2020/02/18/articles/2020/02/18/1582027314000.html/</id>
    <published>2020-02-18T12:01:54.000Z</published>
    <updated>2020-02-18T12:01:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/" target="_blank">[docker] ubuntu+ssh</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade -y</span><br></pre></td></tr></table></figure><p>debootstrap最小化系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y debootstrap</span><br><span class="line">debootstrap --arch&#x3D;arm64 xenial &#x2F;media&#x2F;ubuntu&#x2F; http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports</span><br></pre></td></tr></table></figure><p>chroot进入ubuntu最小系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;dev</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;proc</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;sys</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;bin</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;lib</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;lib64</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;usr&#x2F;bin</span><br><span class="line">mkdir -p &#x2F;media&#x2F;ubuntu&#x2F;usr&#x2F;lib</span><br><span class="line"></span><br><span class="line">mount -o bind &#x2F;dev &#x2F;media&#x2F;ubuntu&#x2F;dev</span><br><span class="line">mount -o bind &#x2F;proc &#x2F;media&#x2F;ubuntu&#x2F;proc</span><br><span class="line">mount -o bind &#x2F;sys &#x2F;media&#x2F;ubuntu&#x2F;sys</span><br><span class="line">mount -o bind &#x2F;bin &#x2F;media&#x2F;ubuntu&#x2F;bin</span><br><span class="line">mount -o bind &#x2F;lib &#x2F;media&#x2F;ubuntu&#x2F;lib</span><br><span class="line">mount -o bind &#x2F;lib64 &#x2F;media&#x2F;ubuntu&#x2F;lib64</span><br><span class="line">mount -o bind &#x2F;usr&#x2F;bin &#x2F;media&#x2F;ubuntu&#x2F;usr&#x2F;bin</span><br><span class="line">mount -o bind &#x2F;usr&#x2F;lib &#x2F;media&#x2F;ubuntu&#x2F;usr&#x2F;lib</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">dpkg --add-architecture i386</span><br><span class="line">apt-update</span><br><span class="line">apt install -y bash:i386</span><br><span class="line"></span><br><span class="line">ldd &#x2F;bin&#x2F;bash</span><br><span class="line">        linux-vdso.so.1 (0x00007ffdd45e1000)</span><br><span class="line">        libtinfo.so.5 &#x3D;&gt; &#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libtinfo.so.5 (0x00007faacb58d000)</span><br><span class="line">        libdl.so.2 &#x3D;&gt; &#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libdl.so.2 (0x00007faacb389000)</span><br><span class="line">        libc.so.6 &#x3D;&gt; &#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6 (0x00007faacaf98000)</span><br><span class="line">        &#x2F;lib64&#x2F;ld-linux-x86-64.so.2 (0x00007faacbad1000)</span><br><span class="line"></span><br><span class="line">cp &#x2F;bin&#x2F;bash &#x2F;media&#x2F;ubuntu&#x2F;bin&#x2F;</span><br><span class="line">mkdir &#x2F;media&#x2F;ubuntu&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;</span><br><span class="line">mkdir &#x2F;media&#x2F;ubuntu&#x2F;lib64</span><br><span class="line">cp &#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;&#123;libtinfo.so.5,libdl.so.2,libc.so.6&#125; &#x2F;media&#x2F;ubuntu&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;</span><br><span class="line">cp &#x2F;lib64&#x2F;ld-linux-x86-64.so.2 &#x2F;media&#x2F;ubuntu&#x2F;lib64&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chroot &#x2F;media&#x2F;ubuntu &#x2F;bin&#x2F;bash -l</span><br></pre></td></tr></table></figure><p>注意这里chroot命令执行后，就进入ubuntu最小化系统环境了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y sudo</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><p>网络工具安装（包含ifconfig命令、dhcp服务）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y net-tools dhcpcd5</span><br></pre></td></tr></table></figure><p>locales配置（字符编码配置–可选）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y locales</span><br><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>退出chroot环境，直接输入 exit 命令即可，退出后解绑系统资源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line">umount &#x2F;media&#x2F;ubuntu&#x2F;dev</span><br><span class="line">umount &#x2F;media&#x2F;ubuntu&#x2F;proc</span><br><span class="line">umount &#x2F;media&#x2F;ubuntu&#x2F;sys</span><br></pre></td></tr></table></figure><p>/media/ubuntu/etc/fstab</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;dev&#x2F;sda1 &#x2F;boot         ext4  defaults          0 2</span><br><span class="line">&#x2F;dev&#x2F;sda2 &#x2F;             ext4  errors&#x3D;remount-ro 0 1</span><br><span class="line">&#x2F;dev&#x2F;sda3 none          swap  sw                0 0</span><br></pre></td></tr></table></figure><p>用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;uuu&#39; &gt; &#x2F;media&#x2F;ubuntu&#x2F;etc&#x2F;hostname</span><br><span class="line">echo &#39;127.0.1.1 uuu&#39; &gt;&gt; &#x2F;media&#x2F;ubuntu&#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p>/etc/resolv.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search domain</span><br><span class="line">nameserver 127.0.0.1</span><br><span class="line">nameserver 114.114.114.114</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">perl -e &#39;print crypt(&quot;123&quot;,q(zzz)),&quot;\n&quot;&#39;</span><br><span class="line">zzpru5Cch2iTk</span><br><span class="line">chroot &#x2F;media&#x2F;ubuntu&#x2F; &#x2F;bin&#x2F;bash -c &quot;useradd -m -d &#x2F;home&#x2F;zzz -s &#x2F;bin&#x2F;bash -p zzpru5Cch2iTk zzz&quot;</span><br><span class="line">chroot &#x2F;media&#x2F;ubuntu&#x2F; &#x2F;bin&#x2F;bash -c &quot;addgroup zzz adm&quot;</span><br><span class="line">chroot &#x2F;media&#x2F;ubuntu&#x2F; &#x2F;bin&#x2F;bash -c &quot;addgroup zzz sudo&quot;</span><br></pre></td></tr></table></figure><p>mkfs.ext4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 &#x2F;dev&#x2F;sdb1  #如果是fat分区: mkfs.vfat</span><br><span class="line">mount &#x2F;dev&#x2F;sdb1 &#x2F;mnt</span><br><span class="line">rsync -a &#x2F;boot&#x2F;* &#x2F;mnt</span><br><span class="line">umount &#x2F;mnt</span><br></pre></td></tr></table></figure><p>root分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 &#x2F;dev&#x2F;sdb2 </span><br><span class="line">mount &#x2F;dev&#x2F;sdb2 &#x2F;mnt</span><br><span class="line">rsync -a &#x2F;media&#x2F;ubuntu&#x2F;* &#x2F;mnt</span><br><span class="line">umount &#x2F;mnt</span><br></pre></td></tr></table></figure><p>完善系统 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade -y</span><br></pre></td></tr></table></figure><p>安装图形化界面（推荐用xfce4）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install xfce4</span><br><span class="line">apt-get -y install xfce4-goodies</span><br><span class="line">apt-get -y install ttf-wqy-zenhei  #中文字体</span><br><span class="line">apt-get -y install slim            #登录管理</span><br><span class="line">apt-get -y install xscreensaver    #屏保</span><br><span class="line">apt-get -y install firefox         #火狐浏览器</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/westlor/article/details/78982649" target="_blank">构建安装ARM Ubuntu系统</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/&quot; target=&quot;_blank&quot;&gt;[docker] ubuntu+ssh&lt;/a&gt;&lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 编译android</title>
    <link href="http://brightereyer.xyz/2020/02/18/articles/2020/02/18/1582024060000.html/"/>
    <id>http://brightereyer.xyz/2020/02/18/articles/2020/02/18/1582024060000.html/</id>
    <published>2020-02-18T11:07:40.000Z</published>
    <updated>2020-02-18T11:07:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/367f0886e62b" target="_blank">自己动手编译Android源码(超详细)</a><br><a href="https://www.cnblogs.com/pengdonglin137/p/10888727.html" target="_blank">将linux和uboot集成到Android编译框架中</a><br><a href="http://androidxref.com/" target="_blank">androidxref.com</a></p><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/aosp" target="_blank">AOSP(Android) 镜像</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged --name android -itd -p 5022:22 ubuntu</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt update;apt upgrade -y</span><br><span class="line">apt install -y curl python3 git vim</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;test@test.com&quot;</span><br><span class="line">git config --global user.name &quot;test&quot;</span><br></pre></td></tr></table></figure><p>repo工具下载及安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;bin</span><br><span class="line">PATH&#x3D;~&#x2F;bin:$PATH</span><br><span class="line">curl https:&#x2F;&#x2F;storage.googleapis.com&#x2F;git-repo-downloads&#x2F;repo &gt; ~&#x2F;bin&#x2F;repo</span><br><span class="line">chmod a+x ~&#x2F;bin&#x2F;repo</span><br><span class="line"></span><br><span class="line">curl https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;git-repo -o ~&#x2F;bin&#x2F;repo</span><br><span class="line">chmod +x ~&#x2F;bin&#x2F;repo</span><br><span class="line"></span><br><span class="line">vim ~&#x2F;.bashrc</span><br><span class="line">export REPO_URL&#x3D;&#39;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;git-repo&#39;</span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure><p>建立源码文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir source</span><br><span class="line">cd source</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y gnupg gnupg-agent rng-tools</span><br></pre></td></tr></table></figure><p>初始化仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https:&#x2F;&#x2F;aosp.tuna.tsinghua.edu.cn&#x2F;mirror&#x2F;manifest</span><br><span class="line">#或</span><br><span class="line">repo init -u git:&#x2F;&#x2F;aosp.tuna.tsinghua.edu.cn&#x2F;aosp&#x2F;platform&#x2F;manifest</span><br></pre></td></tr></table></figure><p>如果提示无法连接到 gerrit.googlesource.com，请参照<a href="https://mirrors.tuna.tsinghua.edu.cn/help/git-repo" target="_blank">git-repo</a>的帮助页面的更新一节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#如果提示无法连接到 gerrit.googlesource.com，那么需要编辑</span><br><span class="line">vim ~&#x2F;bin&#x2F;repo</span><br><span class="line">REPO_URL &#x3D; &#39;https:&#x2F;&#x2F;gerrit-google.tuna.tsinghua.edu.cn&#x2F;git-repo&#39;</span><br></pre></td></tr></table></figure><p>同步源码到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">repo sync</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;tmp</span><br><span class="line">mkdir -p &#x2F;usr&#x2F;tmp</span><br><span class="line">mkdir -p &#x2F;source</span><br><span class="line">mkdir -p &#x2F;var&#x2F;tmp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install software-properties-common</span><br><span class="line">add-apt-repository ppa:openjdk-r&#x2F;ppa</span><br><span class="line">apt-get update</span><br><span class="line">apt-get -y install openjdk-8-jdk</span><br></pre></td></tr></table></figure><p>jdk版本切换:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update-alternative --config java</span><br><span class="line">update-alternative --config javac</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib</span><br><span class="line">apt-get install -y git flex bison gperf build-essential libncurses5-dev:i386</span><br><span class="line">apt-get install -y tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386</span><br><span class="line">apt-get install -y dpkg-dev libsdl1.2-dev libesd0-dev</span><br><span class="line">apt-get install -y git-core gnupg flex bison gperf build-essential</span><br><span class="line">apt-get install -y zip curl zlib1g-dev gcc-multilib g++-multilib</span><br><span class="line">apt-get install -y libc6-dev-i386</span><br><span class="line">apt-get install -y lib32ncurses5-dev x11proto-core-dev libx11-dev</span><br><span class="line">apt-get install -y libgl1-mesa-dev libxml2-utils xsltproc unzip m4</span><br><span class="line">apt-get install -y lib32z-dev ccache</span><br></pre></td></tr></table></figure><p>初始化编译环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source build&#x2F;envsetup.sh</span><br></pre></td></tr></table></figure><p>选择编译目标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lunch aosp_arm64-eng</span><br></pre></td></tr></table></figure><p>开始编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/367f0886e62b&quot; target=&quot;_blank&quot;&gt;自己动手编译Android源码(超详细)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/pengdonglin
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] kail</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581947550000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581947550000.html/</id>
    <published>2020-02-17T13:52:30.000Z</published>
    <updated>2020-02-17T13:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/xiyuliuyang/article/details/91445855" target="_blank">docker安装kali linux</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#开始部署</span><br><span class="line">docker search kali</span><br><span class="line"></span><br><span class="line">docker pull kalilinux&#x2F;kali-linux-docker</span><br><span class="line">docker run --name kali -it -p 6022:22 kalilinux&#x2F;kali-linux-docker &#x2F;bin&#x2F;bash exit</span><br><span class="line">docker ps -a</span><br><span class="line">docker start kali</span><br><span class="line">docker attach kali</span><br><span class="line"></span><br><span class="line">#修改密码</span><br><span class="line">passwd root 123456</span><br></pre></td></tr></table></figure><p>sources.list软件源文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.bak</span><br><span class="line">vi &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali-security kali-current&#x2F;updates main contrib non-free</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali-security kali-current&#x2F;updates main contrib non-free</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y net-tools</span><br><span class="line">netstat -ant</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y openssh-server</span><br><span class="line">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">service ssh start</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装tree直接运行</span><br><span class="line">apt-get install -y sqlmap</span><br><span class="line"></span><br><span class="line">#安装kali所有的工具(10G左右)</span><br><span class="line">apt-get install -y kali-linux-all</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/xiyuliuyang/article/details/91445855&quot; target=&quot;_blank&quot;&gt;docker安装kali linux&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] gdb-multiarch调试arm程序</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581945980000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581945980000.html/</id>
    <published>2020-02-17T13:26:20.000Z</published>
    <updated>2020-02-17T13:26:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/" target="_blank">docker+ubuntu</a></p><p>交叉编译工具arm-linux-gnueabihf-gcc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf</span><br><span class="line">arm-linux-gnueabihf-gcc -v</span><br></pre></td></tr></table></figure><p>安装qemu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y qemu</span><br></pre></td></tr></table></figure><p>安装gdb-multiarch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gdb-multiarch</span><br></pre></td></tr></table></figure><p>安装arm文件所需要的动态库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gcc-multilib-arm-linux-gnueabi gcc-armhf-cross</span><br><span class="line"></span><br><span class="line">ln -s &#x2F;usr&#x2F;arm-linux-gnueabihf&#x2F;lib&#x2F;ld-linux-armhf.so.3 &#x2F;lib&#x2F;ld-linux-armhf.so.3</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;arm-linux-gnueabihf&#x2F;lib&#x2F;:$LD_LIBRARY_PATH</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>arm程序的编译运行</p><p>hello.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)&#123;</span><br><span class="line">printf(&quot;hello world&quot;);</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arm-linux-gnueabihf-gcc -o hello-arm hello.c</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-arm hello-arm</span><br></pre></td></tr></table></figure><p>在1234端口上开启调试模式，并运行arm程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-arm -g 1234 hello-arm</span><br></pre></td></tr></table></figure><p>用gdb打开待调试文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb-multiarch hello-arm</span><br></pre></td></tr></table></figure><p>在gdb中连接调试端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">target remote 1234</span><br></pre></td></tr></table></figure><p><a href="http://blog.binpang.me/2018/07/26/qemu-arm/" target="_blank">gdb-multiarch调试arm程序</a><br><a href="https://www.jianshu.com/p/dc8e263d6466" target="_blank">Linux下ARM程序的编译运行及调试</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/&quot; target=&quot;_blank&quot;&gt;docker+ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;交叉
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] buildroot+qemu+vexpress</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936999000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936999000.html/</id>
    <published>2020-02-17T10:56:39.000Z</published>
    <updated>2020-02-17T10:56:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/" target="_blank">docker+ubuntu</a></p><p>配置工作环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y gcc build-essential bison flex gettext tcl sharutils libncurses-dev zlib1g-dev exuberant-ctags g++ texinfo patch vim libtool bc git</span><br></pre></td></tr></table></figure><p>安装qemu工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y qemu-system-arm</span><br></pre></td></tr></table></figure><p>下载buildroot：<br><a href="https://buildroot.org/downloads/buildroot-2017.05.2.tar.gz" target="_blank">buildroot-2017.05.2.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;arnoldlu&#x2F;buildroot.git -b arnoldlu_2017_05_2;cd buildroot</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># lzo安装：</span><br><span class="line">wget http:&#x2F;&#x2F;www.oberhumer.com&#x2F;opensource&#x2F;lzo&#x2F;download&#x2F;lzo-2.06.tar.gz</span><br><span class="line">tar xzvf lzo-2.06.tar.gz;cd lzo-2.06</span><br><span class="line">.&#x2F;configure --enable-shared</span><br><span class="line">make;make install</span><br><span class="line"></span><br><span class="line"># lzop安装：</span><br><span class="line">wget &#39;http:&#x2F;&#x2F;www.lzop.org&#x2F;download&#x2F;lzop-1.03.tar.gz&#39;</span><br><span class="line">tar xzvf lzop-1.03.tar.gz;cd lzop-1.03</span><br><span class="line">.&#x2F;configure</span><br></pre></td></tr></table></figure><p>配置编译buildroot：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apt install -y cpio python unzip rsync lzop</span><br><span class="line">make qemu_arm_vexpress_defconfig</span><br><span class="line">make</span><br><span class="line">#编译zImage，module以及dtb</span><br><span class="line">ls output&#x2F;images</span><br><span class="line">#zImage vexpress-v2p-ca9.dtb rootfs.ext2</span><br><span class="line"></span><br><span class="line"># zImage：内核</span><br><span class="line"># vexpress-v2p-ca9.dtb：DeviceTree文件</span><br><span class="line"># rootfs.ext2：文件系统</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M vexpress-a9 -smp 4 -m 1024M -kernel output&#x2F;images&#x2F;zImage -append &quot;root&#x3D;&#x2F;dev&#x2F;mmcblk0 console&#x3D;ttyAMA0 loglevel&#x3D;8&quot; -dtb output&#x2F;images&#x2F;vexpress-v2p-ca9.dtb -sd output&#x2F;images&#x2F;rootfs.ext2 -nographic</span><br></pre></td></tr></table></figure><p>停止qemu：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall qemu-system-arm</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/arnoldlu/p/9689585.html" target="_blank">buildroot+qemu+vexpress</a><br><a href="https://www.cnblogs.com/microxiami/articles/9746979.html" target="_blank">Qemu搭建ARM vexpress开发环境(一)</a><br><a href="https://www.cnblogs.com/microxiami/p/11093241.html" target="_blank">Qemu搭建ARM vexpress开发环境(二)—-通过u-boot启动Linux内核</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://brightereyer2.github.io/2020/02/17//articles/2020/02/17/1581936650000.html/&quot; target=&quot;_blank&quot;&gt;docker+ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;配置
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植QtE4.8</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936652000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936652000.html/</id>
    <published>2020-02-17T10:50:52.000Z</published>
    <updated>2020-02-17T10:50:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.kancloud.cn/lichee/lpi0/428123" target="_blank">QtE4.8</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --name qte4 -itd -p 8022:22 ubuntu</span><br><span class="line">apt-get update;apt-get upgrade -y</span><br><span class="line">docker attach qte4</span><br></pre></td></tr></table></figure><p><a href="https://www.linuxidc.com/Linux/2013-07/87576.htm" target="_blank">Linux系统下Qt环境搭建</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y build-essential</span><br><span class="line">#openGL相关</span><br><span class="line">apt-get install -y libx11-dev libxau-dev libxaw7-dev libxcb1-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev</span><br><span class="line">apt-get install -y libxext-dev libxfixes-dev libxfont-dev libxft-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev</span><br><span class="line">apt-get install -y libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev</span><br><span class="line">apt-get install -y libglib2.0-dev</span><br><span class="line">apt-get install -y libssl-dev</span><br><span class="line">apt-get install -y libgtk2.0-dev</span><br><span class="line">apt-get install -y libcups2-dev</span><br><span class="line">apt-get install -y libgl1-mesa-dev libglu1-mesa-dev</span><br><span class="line">apt-get install -y libgstreamer0.10-dev</span><br><span class="line">apt-get install -y ia32-libs libc6-i386</span><br><span class="line">apt-get install -y libc6-i386</span><br><span class="line">apt-get install -y automake libtool</span><br><span class="line">apt-get install -y ia32-libs</span><br><span class="line">apt-get install -y lib32ncurses5 lib32bz2-1.0</span><br><span class="line">apt-get install -y vim</span><br><span class="line">apt-get install -y libc6-dev</span><br><span class="line">apt-get install -y build-essential </span><br><span class="line">apt-get install -y --reinstall binutils</span><br><span class="line">apt-get install -y lib32stdc++6</span><br><span class="line">apt-get install -y lib32z1 lib32ncurses5</span><br></pre></td></tr></table></figure><p>安装automake、libtool 和主机上的 Qt 工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y git vim wget unzip automake</span><br><span class="line"></span><br><span class="line">apt-get install -y automake autoconf libtool m4</span><br><span class="line">apt-get install -y libX11-dev libXext-dev libXtst-dev libXrender-dev </span><br><span class="line">apt-get install -y libqt4-core libqt4-dev libqt4-webkit qt4-demos</span><br><span class="line"></span><br><span class="line">apt-get install -y pkg-config</span><br><span class="line">apt-get install -y gcc</span><br><span class="line">apt-get install -y libc6-dev</span><br><span class="line">apt-get install -y linux-libc-dev</span><br><span class="line">apt-get install -y build-essential</span><br><span class="line">apt-get install -y libpcre3</span><br><span class="line">apt-get install -y libpcre3-dev</span><br><span class="line">apt-get install -y openssl</span><br><span class="line">apt-get install -y libssl-dev</span><br><span class="line">apt-get install -y lib32ncurses5</span><br><span class="line">apt-get install -y lib32z1</span><br><span class="line">apt-get install -y gcc-multilib</span><br><span class="line">apt-get install -y g++-multilib</span><br><span class="line">apt-get install -y gdb</span><br><span class="line"></span><br><span class="line">apt-get install -y libglib2.0-dev libxrender-dev libfontconfig1-dev libxext-dev</span><br></pre></td></tr></table></figure><p>安装arm-none-linux-gnueabi-gcc<br><a href="http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2" target="_blank">arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">wget http:&#x2F;&#x2F;www.codesourcery.com&#x2F;sgpp&#x2F;lite&#x2F;arm&#x2F;portal&#x2F;package4571&#x2F;public&#x2F;arm-none-linux-gnueabi&#x2F;arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</span><br><span class="line">tar xvf arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</span><br><span class="line">ls arm-2010q1;</span><br><span class="line"></span><br><span class="line"># PATH添加交叉编译器路径：</span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm-2010q1&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p><a href="https://www.kancloud.cn/lichee/lpi0/418897" target="_blank">移植tslib</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 建立工作目录</span><br><span class="line">cd ~</span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;tslib</span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">mkdir qt;cd qt</span><br><span class="line"></span><br><span class="line"># 下载与解压</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;libts&#x2F;tslib&#x2F;archive&#x2F;master.zip;</span><br><span class="line">unzip master.zip;cd tslib-master</span><br><span class="line"></span><br><span class="line">apt-get install -y libtool automake autogen autoconf libsysfs-dev pkg-config</span><br><span class="line">apt-get install -y lib32z1 lib32ncurses5 lib32stdc++6</span><br><span class="line"></span><br><span class="line"># 解决方法</span><br><span class="line">vi src&#x2F;tslib.h</span><br><span class="line">#加入下面这行定义</span><br><span class="line">#define EVIOCGPROP(len)          _IOC(_IOC_READ, &#39;E&#39;, 0x09, len)</span><br><span class="line"></span><br><span class="line">vim config.h.in</span><br><span class="line">&#x2F;&#x2F;#undef malloc</span><br><span class="line">&#x2F;&#x2F;#undef realloc</span><br><span class="line"></span><br><span class="line"># 编译</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure CC&#x3D;arm-none-linux-gnueabi-gcc CXX&#x3D;arm-none-linux-gnueabi-g++ --host&#x3D;arm-none-linux-gnueabi  --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;tslib ac_cv_func_malloc_0_nonnull&#x3D;yes --enable-static&#x3D;yes --with-gnu-ld</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">make -j32;make install</span><br><span class="line"></span><br><span class="line">ls &#x2F;usr&#x2F;local&#x2F;tslib</span><br><span class="line"></span><br><span class="line">vim &#x2F;usr&#x2F;local&#x2F;tslib&#x2F;etc&#x2F;ts.conf</span><br><span class="line">module_raw input</span><br></pre></td></tr></table></figure><p>4 编译安装qt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 解压</span><br><span class="line">mkdir ~&#x2F;qt-arm;cd ~&#x2F;qt-arm</span><br><span class="line">wget http:&#x2F;&#x2F;download.qt-project.org&#x2F;archive&#x2F;qt&#x2F;4.8&#x2F;4.8.5&#x2F;qt-everywhere-opensource-src-4.8.5.tar.gz</span><br><span class="line">tar xvf qt-everywhere-opensource-src-4.8.5.tar.gz;cd qt-everywhere-opensource-src-4.8.5</span><br><span class="line"></span><br><span class="line"># 指定交叉编译器</span><br><span class="line">sed -i &quot;s&#x2F;arm-linux-&#x2F;arm-none-linux-gnueabi-&#x2F;g&quot; mkspecs&#x2F;qws&#x2F;linux-arm-g++&#x2F;qmake.conf</span><br><span class="line"></span><br><span class="line">vim mkspecs&#x2F;qws&#x2F;linux-arm-g++&#x2F;qmake.conf</span><br><span class="line">#加上 -lts</span><br><span class="line"># modifications to g++.conf</span><br><span class="line">QMAKE_CC &#x3D; arm-none-linux-gnueabi-gcc -lts</span><br><span class="line">QMAKE_CXX &#x3D; arm-none-linux-gnueabi-g++ -lts</span><br><span class="line">QMAKE_LINK &#x3D; arm-none-linux-gnueabi-g++ -lts</span><br><span class="line">QMAKE_LINK_SHLIB &#x3D; arm-none-linux-gnueabi-g++ -lts</span><br><span class="line"># modifications to linux.conf</span><br><span class="line">QMAKE_AR &#x3D; arm-none-linux-gnueabi-ar cqs</span><br><span class="line">QMAKE_OBJCOPY &#x3D; arm-none-linux-gnueabi-objcopy</span><br><span class="line">QMAKE_STRIP &#x3D; arm-none-linux-gnueabi-strip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm;</span><br><span class="line"></span><br><span class="line"># 查看参数的详细说明</span><br><span class="line">#.&#x2F;configure --help</span><br></pre></td></tr></table></figure><details><summary>配置Qt</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure \</span><br><span class="line">--prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm \</span><br><span class="line">-opensource \</span><br><span class="line">-release \</span><br><span class="line">-shared \</span><br><span class="line">-Declarative \</span><br><span class="line">-importdir &#x2F;opt&#x2F;imports \</span><br><span class="line">-fast \</span><br><span class="line">-no-largefile \</span><br><span class="line">-qt-sql-sqlite \</span><br><span class="line">-qt3support \</span><br><span class="line">-exceptions \</span><br><span class="line">-xmlpatterns \</span><br><span class="line">-no-glib \</span><br><span class="line">-no-phonon \</span><br><span class="line">-no-mmx \</span><br><span class="line">-no-3dnow \</span><br><span class="line">-no-sse \</span><br><span class="line">-no-sse2 \</span><br><span class="line">-svg \</span><br><span class="line">-no-webkit \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-qt-libtiff \</span><br><span class="line">-qt-libpng \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-make libs \</span><br><span class="line">-make tools \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake docs \</span><br><span class="line">-nomake demo \</span><br><span class="line">-no-nis \</span><br><span class="line">-no-cups \</span><br><span class="line">-iconv \</span><br><span class="line">-no-dbus \</span><br><span class="line">-xplatform qws&#x2F;linux-arm-g++ \</span><br><span class="line">-embedded arm \</span><br><span class="line">-little-endian \</span><br><span class="line">-qt-freetype \</span><br><span class="line">-depths 16,24,32 \</span><br><span class="line">-qt-gfx-linuxfb \</span><br><span class="line">-qt-gfx-transformed \</span><br><span class="line">-qt-gfx-multiscreen \</span><br><span class="line">-no-gfx-vnc \</span><br><span class="line">-no-gfx-qvfb \</span><br><span class="line">-qt-kbd-linuxinput \</span><br><span class="line">-no-kbd-qvfb \</span><br><span class="line">-armfpa \</span><br><span class="line">-no-mouse-qvfb \</span><br><span class="line">-qt-mouse-linuxtp \</span><br><span class="line">-qt-mouse-tslib \</span><br><span class="line">-DQT_QLOCALE_USES_FCVT \</span><br><span class="line">-DQT_NO_QWS_CURSOR \</span><br><span class="line">-no-pch \</span><br><span class="line">-I&#x2F;usr&#x2F;local&#x2F;tslib&#x2F;include \</span><br><span class="line">-L&#x2F;usr&#x2F;local&#x2F;tslib&#x2F;lib \</span><br><span class="line">-confirm-license \</span><br><span class="line">-no-openssl</span><br></pre></td></tr></table></figure></details><p>编译安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j32;make install</span><br><span class="line">ls &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br></pre></td></tr></table></figure><p>5 配置主机Qt<br>（1）设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm&#x2F;bin</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm&#x2F;lib</span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>6 移植Qt到开发板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开发板上要使用的东西就2个，一个是编译后的tslib，一个是编译后qt目录下的lib目录</span><br></pre></td></tr></table></figure><p>（1）打包lib<br>我们Qt 安装完成之后，为解决符号链接的问题，可以利用先打包，然后直接解压到开发板的做法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm;tar -zcf lib.tar.gz lib;mv lib.tar.gz &#x2F;root&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local;tar -zcf tslib.tar.gz tslib;mv tslib.tar.gz &#x2F;root&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;root;</span><br><span class="line">ls lib.tar.gz tslib.tar.gz</span><br></pre></td></tr></table></figure><p>连接开发板，在终端助手上执行<br>（1）将打包好的压缩文件 lib.tar.gz 和 tslib.tar.gz 复制到开发板，然后解压：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">tar xzvf lib.tar.gz -C &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">tar xzvf tslib.tar.gz -C &#x2F;usr&#x2F;local</span><br></pre></td></tr></table></figure><p>（2）设置开发板上的环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vi setqtenv</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;lib:$LD_LIBRARY_PATH</span><br><span class="line">export QTDIR&#x3D;&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">export T_ROOT&#x3D;&#x2F;usr&#x2F;local&#x2F;tslib</span><br><span class="line">export PATH&#x3D;$T_ROOT&#x2F;bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$T_ROOT&#x2F;lib:$QTDIR&#x2F;lib:$LD_LIBRARY_PATH</span><br><span class="line">export TSLIB_CONSOLEDEVICE&#x3D;none</span><br><span class="line">export TSLIB_FBDEVICE&#x3D;&#x2F;dev&#x2F;fb0</span><br><span class="line">export TSLIB_TSDEVICE&#x3D;&#x2F;dev&#x2F;input&#x2F;event0</span><br><span class="line">export TSLIB_PLUGINDIR&#x3D;$T_ROOT&#x2F;lib&#x2F;ts</span><br><span class="line">export TSLIB_CONFFILE&#x3D;$T_ROOT&#x2F;etc&#x2F;ts.conf</span><br><span class="line">export TSLIB_CALIBFILE&#x3D;&#x2F;etc&#x2F;pointercal</span><br><span class="line">export QWS_KEYBOARD&#x3D;USB:&#x2F;dev&#x2F;input&#x2F;event1</span><br><span class="line">export QWS_MOUSE_PROTO&#x3D;Tslib:&#x2F;dev&#x2F; input&#x2F;event0</span><br><span class="line">export QT_QWS_FONTDIR&#x3D;$QTDIR&#x2F;lib&#x2F;fonts</span><br></pre></td></tr></table></figure><p>（3）执行以下命令设置好qt环境变量的设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source setqtenv</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.kancloud.cn/lichee/lpi0/428123&quot; target=&quot;_blank&quot;&gt;QtE4.8&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] 保存镜像、容器</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936651000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936651000.html/</id>
    <published>2020-02-17T10:50:51.000Z</published>
    <updated>2020-02-17T10:50:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>保存镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save ID &gt; xxx.tar</span><br><span class="line">docker load &lt; xxx.tar</span><br></pre></td></tr></table></figure><p>保存容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker export ID &gt;xxx.tar</span><br><span class="line">docker import xxx.tar containr:v1</span><br><span class="line"># 运行</span><br><span class="line">docker run -it containr:v1 bash</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;保存镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[docker] ubuntu+ssh</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936650000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936650000.html/</id>
    <published>2020-02-17T10:50:50.000Z</published>
    <updated>2020-02-17T10:50:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_43914736/article/details/90608587" target="_blank">Docker Ubuntu上安装ssh和连接ssh</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br><span class="line">docker run --privileged --name qemu -itd -p 8022:22 ubuntu</span><br><span class="line"></span><br><span class="line">docker attach qemu</span><br><span class="line">apt-get update;apt-get upgrade -y</span><br><span class="line">apt-get install -y vim openssh-server</span><br><span class="line"></span><br><span class="line">#设置一个root密码</span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line">#修改配置文件</span><br><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;ssh restart</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/gezhonglei2007/article/details/51627821" target="_blank">Docker network命令</a><br><a href="https://www.cnblogs.com/jimmyhe/p/11310861.html" target="_blank">虚拟网卡与docker</a><br><a href="https://www.cnblogs.com/gispathfinder/p/5871043.html" target="_blank">Docker的4种网络模式</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_43914736/article/details/90608587&quot; target=&quot;_blank&quot;&gt;Docker Ubuntu上安装ssh和连接ssh&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] buildroot+qemu+mini2440</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936649000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936649000.html/</id>
    <published>2020-02-17T10:50:49.000Z</published>
    <updated>2020-02-17T10:50:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>相关文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;BrighterEyer&#x2F;qemu-mini2440-files</span><br></pre></td></tr></table></figure><p>下载qemu for mini2440：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y git vim zlib1g-dev libsdl-dev</span><br><span class="line"></span><br><span class="line">#方式(1)</span><br><span class="line">cd &#x2F;root;wget http:&#x2F;&#x2F;repo.or.cz&#x2F;w&#x2F;qemu&#x2F;mini2440.git&#x2F;snapshot&#x2F;HEAD.tar.gz</span><br><span class="line">tar xvf HEAD.tar.gz;mv mini2440-HEAD* mini2440;cd mini2440</span><br><span class="line"></span><br><span class="line">#方式(2)</span><br><span class="line">#git clone git:&#x2F;&#x2F;repo.or.cz&#x2F;qemu&#x2F;mini2440.git mini2440;cd mini2440</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/pengdonglin137/p/5004784.html" target="_blank">configure打补丁</a><br>configure.patch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--- configure.orig 2013-06-13 10:56:41.516276000 +0100</span><br><span class="line">+++ configure 2013-06-13 11:20:26.010368566 +0100</span><br><span class="line">@@ -1362,7 +1362,7 @@</span><br><span class="line"> cat &gt; $TMPC &lt;&lt;EOF</span><br><span class="line"> #include</span><br><span class="line"> #include</span><br><span class="line">-int main(void) &#123; clockid_t id; return clock_gettime(id, NULL); &#125;</span><br><span class="line">+int main(void) &#123; struct itimerspec v; timer_t t; return timer_gettime (t, &amp;v); &#125;</span><br><span class="line"> EOF</span><br><span class="line"> </span><br><span class="line"> rt&#x3D;no</span><br></pre></td></tr></table></figure><p>执行(实测无用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch configure configure.patch</span><br></pre></td></tr></table></figure><p>或者修改Makefile.target(实测有用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; Makefile.target &lt;&lt;EOF</span><br><span class="line">LIBS+&#x3D;-lz -lrt -lm</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --target-list&#x3D;arm-softmmu --prefix&#x3D;$HOME&#x2F;work&#x2F;mini2440</span><br><span class="line">make -j4;make install</span><br><span class="line">ls $HOME&#x2F;work&#x2F;mini2440</span><br><span class="line"></span><br><span class="line">#git clone git:&#x2F;&#x2F;repo.or.cz&#x2F;u-boot-openmoko&#x2F;mini2440.git uboot</span><br></pre></td></tr></table></figure><p>安装完后，添加环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">export PATH&#x3D;$PATH:$HOME&#x2F;work&#x2F;mini2440&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">qemu-system-arm --version</span><br></pre></td></tr></table></figure><p>使用buildroot一键生成uboot和linux内核及根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;arnoldlu&#x2F;buildroot.git -b arnoldlu_2017_05_2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;buildroot.org&#x2F;downloads&#x2F;buildroot-2012.05.tar.gz</span><br><span class="line">tar xvf buildroot-2012.05.tar.gz;mv buildroot-2012.05 buildroot;cd buildroot</span><br><span class="line">sudo apt-get install -y libncurses5-dev g++ bison flex gettext patch git-core xz-utils automake</span><br><span class="line"></span><br><span class="line">#打补丁</span><br><span class="line">#wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;BrighterEyer&#x2F;qemu-mini2440-files&#x2F;master&#x2F;configure.patch</span><br><span class="line">#patch configure &lt; .&#x2F;configure.patch</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; Makefile.target &lt;&lt;EOF</span><br><span class="line">LIBS+&#x3D;-lz -lrt -lm</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#make mini2440_defconfig</span><br><span class="line">make defconfig</span><br><span class="line"></span><br><span class="line">#注意要最大化命令行窗口</span><br><span class="line">#make ARCH&#x3D;arm menuconfig</span><br><span class="line"></span><br><span class="line">apt-get install -y gcc-arm-linux-gnueabi</span><br><span class="line">arm-linux-gnueabi -v</span><br></pre></td></tr></table></figure><p>修改bug：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#注释掉：_GL_WARN_ON_USE (gets, &quot;gets is a security hole - use fgets instead&quot;）所在行</span><br><span class="line"></span><br><span class="line">#第165行</span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.in.h</span><br><span class="line"></span><br><span class="line">#第477行</span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.h</span><br></pre></td></tr></table></figure><p>menuconfig选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- Toolchain ：我选上了GDB和GDBServer方便调试。</span><br><span class="line">- Package Selection for the target ： Busybox已经包含在里面了，我们也可以选择更多的项目，比如 Qt， EFL， directfb之类的图形库。在 Graphic libraries and application子目录里选择。 </span><br><span class="line">- Filesystem images ：在 Flash Type这项，改为 NAND flash with 512B Page and 16 KB erasesize 。 </span><br><span class="line">- Kernel ：内核版本改选为 3.3.7版本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y cpio python unzip rsync</span><br><span class="line">make all</span><br><span class="line"></span><br><span class="line">ls output&#x2F;images&#x2F;</span><br><span class="line">#u-boot.bin uImage rootfs.jffs2 rootfs.tar</span><br></pre></td></tr></table></figure><p>安装texinfo 4.13：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;texinfo&#x2F;texinfo-4.13a.tar.gz</span><br><span class="line">tar -zxvf texinfo-4.13a.tar.gz;mv texinfo-4.13 texinfo;cd texinfo</span><br><span class="line">.&#x2F;configure;make;make install</span><br></pre></td></tr></table></figure><p>flashimg制作nand.bin并启动系统：<br><a href="https://gitorious.org/flashimg/flashimg.git" target="_blank">flashimg网址</a><br><a href="https://gitorious.org/flashimg/flashimg?p=flashimg:flashimg.git;a=snapshot;h=fb97139a0d50ad7f2cd2b2348f5b10312da3ed5b;sf=tgz" target="_blank">flashimgflashimg-fb97139.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#git clone https:&#x2F;&#x2F;github.com&#x2F;cailiwei&#x2F;flashimg;cd flashimg;</span><br><span class="line"></span><br><span class="line">wget -O flashimg.tar.gz --no-check-certificate &quot;https:&#x2F;&#x2F;gitorious.org&#x2F;flashimg&#x2F;flashimg?p&#x3D;flashimg:flashimg.git;a&#x3D;snapshot;h&#x3D;fb97139a0d50ad7f2cd2b2348f5b10312da3ed5b;sf&#x3D;tgz&quot;</span><br><span class="line">tar xvf flashimg.tar.gz;mv flashimgflashimg* flashimg;cd flashimg</span><br><span class="line"></span><br><span class="line">#如果没有sudo，注意从文件中去掉</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure;make;make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls ..&#x2F;buildroot&#x2F;out&#x2F;images</span><br><span class="line">#u-boot.bin uImage rootfs.jffs2 rootfs.tar</span><br><span class="line">cp ..&#x2F;buildroot&#x2F;out&#x2F;images&#x2F;* .&#x2F;</span><br><span class="line">.&#x2F;flashimg -s 64M -t nand -f nand.bin -p uboot.part -w boot,u-boot.bin -w kernel,uImage -w root,rootfs.jffs2 -z 512</span><br></pre></td></tr></table></figure><p>启动方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse</span><br></pre></td></tr></table></figure><p>加载内核和根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nboot kernel </span><br><span class="line">setenv bootargs root&#x3D;&#x2F;dev&#x2F;mtdblock3 rootfstype&#x3D;jffs2 console&#x3D;ttySAC0,115200</span><br><span class="line">saveenv</span><br><span class="line">bootm</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#输入默认密码root</span><br><span class="line"></span><br><span class="line">#查看是否有网络配置</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>NFS挂在根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#安装nfs服务</span><br><span class="line">sudo apt-get install -y nfs-kernel-server</span><br><span class="line"></span><br><span class="line">#然后配置nfsroot目录</span><br><span class="line">sudo vi &#x2F;etc&#x2F;exports</span><br><span class="line">~&#x2F;work&#x2F;nfsroot *(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line"></span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server restart</span><br><span class="line"></span><br><span class="line">#新建nfsroot目录</span><br><span class="line">mkdir ~&#x2F;work&#x2F;nfsroot;cd ~&#x2F;work&#x2F;nfsroot&#x2F;</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;BrighterEyer&#x2F;qemu-mini2440-files&#x2F;raw&#x2F;master&#x2F;rootfs_qtopia_qt4-20140103.tar.gz</span><br><span class="line">tar xvf rootfs_qtopia_qt4-20140103.tar.gz;ls rootfs_qtopia_qt4;</span><br><span class="line"></span><br><span class="line">#用nfs挂载之前需要把网卡的初始化过程取消</span><br><span class="line">rm &#x2F;etc&#x2F;init.d&#x2F;if-config</span><br><span class="line"></span><br><span class="line">sudo chmod -R 777 .&#x2F;</span><br><span class="line">cd rootfs_qtopia_qt4</span><br><span class="line">cd etc&#x2F;init.d&#x2F;</span><br><span class="line">rm ifconfig-eth0</span><br><span class="line"></span><br><span class="line">#创建虚拟网卡并配置ip</span><br><span class="line">sudo apt-get install -y uml-utilities #运行tunctl必须的工具</span><br><span class="line">sudo tunctl -u $USER -t tap0</span><br><span class="line">sudo ifconfig tap0 192.168.42.1</span><br><span class="line"></span><br><span class="line">#带网络方式启动qemu</span><br><span class="line">cd &#x2F;root&#x2F;flashimg</span><br><span class="line"></span><br><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse -kernel uImage -net nic,vlan&#x3D;0 -net tap,vlan&#x3D;0,ifname&#x3D;tap0,script&#x3D;no,downscript&#x3D;no</span><br><span class="line"></span><br><span class="line">#启动后进入uboot模式，此时的qemu还不能显示，输入下面指令加载内核和根文件系统</span><br><span class="line">set bootargs noinitrd root&#x3D;&#x2F;dev&#x2F;nfs rw nfsroot&#x3D;192.168.42.1:~&#x2F;work&#x2F;nfsroot&#x2F;rootfs_qtopia_qt4&#x2F;,proto&#x3D;tcp,nfsvers&#x3D;3,nolock ip&#x3D;192.168.42.2:192.168.42.1::255.255.255.0 console&#x3D;ttySAC0,115200</span><br><span class="line">bootm</span><br></pre></td></tr></table></figure><p>安装交叉编译工具链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#arm-linux-gcc-4.4.3.tar.gz</span><br><span class="line">apt-get install -y lib32stdc++6 lib32z1</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/maxwell_nc/article/details/44279553" target="_blank">嵌入式linux：通过qemu模拟mini2440开发环境</a><br><a href="https://blog.csdn.net/leon1741/category_9278077.html" target="_blank">玩转mini2440开发板</a><br><a href="https://github.com/kangear/MINI2440-NO_OS" target="_blank">MINI2440程序</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相关文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] nginx+vue+express</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936648000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936648000.html/</id>
    <published>2020-02-17T10:50:48.000Z</published>
    <updated>2020-02-17T10:50:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://dockone.io/article/8834" target="_blank">手把手教你使用 Docker 部署 Vue.js 项目</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue create vueclidemo</span><br><span class="line">yarn serve &#x2F; npm run serve</span><br></pre></td></tr></table></figure><p>访问<br><a href="http://localhost:8081" target="_blank">http://localhost:8081</a></p><p>修改vueclidemo/App.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#39;axios&#39;;</span><br><span class="line">&#x2F;&#x2F;……</span><br><span class="line">axios.get(&#39;&#x2F;api&#x2F;json&#39;, &#123;</span><br><span class="line">params: &#123;&#125;</span><br><span class="line">&#125;).then(</span><br><span class="line">res &#x3D;&gt; &#123;</span><br><span class="line">console.log(res);</span><br><span class="line">&#125;</span><br><span class="line">).catch(</span><br><span class="line">error &#x3D;&gt; &#123;</span><br><span class="line">console.log(error);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build &#x2F; npm run build</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><p>default.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen       80;</span><br><span class="line">server_name  localhost;</span><br><span class="line"></span><br><span class="line">#charset koi8-r;</span><br><span class="line">access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;</span><br><span class="line">error_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log  error;</span><br><span class="line"></span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">    root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#error_page  404              &#x2F;404.html;</span><br><span class="line"></span><br><span class="line"># redirect server error pages to the static page &#x2F;50x.html</span><br><span class="line">#</span><br><span class="line">error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">    root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line">COPY dist&#x2F; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;</span><br><span class="line">COPY nginx&#x2F;default.conf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t vuenginxcontainer .</span><br><span class="line">docker image ls | grep vuenginxcontainer</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 3000:80 \</span><br><span class="line">-d --name vueApp \</span><br><span class="line">vuenginxcontainer</span><br></pre></td></tr></table></figure><p>Server.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">const express &#x3D; require(&#39;express&#39;);</span><br><span class="line">const PORT &#x3D; 8080;</span><br><span class="line">const HOST &#x3D; &#39;0.0.0.0&#39;;</span><br><span class="line"></span><br><span class="line">const app &#x3D; express();</span><br><span class="line">app.get(&#39;&#x2F;&#39;, (req, res) &#x3D;&gt; &#123;</span><br><span class="line">res.send(&#39;Hello world\n&#39;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(&#39;&#x2F;json&#39;, (req, res) &#x3D;&gt; &#123;</span><br><span class="line">res.json(&#123;</span><br><span class="line">    code: 0,</span><br><span class="line">    data :&#39;This is message from node container&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(PORT, HOST);</span><br><span class="line">console.log(&#96;Running on http:&#x2F;&#x2F;$&#123;HOST&#125;:$&#123;PORT&#125;&#96;);</span><br></pre></td></tr></table></figure><p>获取 Node 镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull node</span><br></pre></td></tr></table></figure><p>Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM node</span><br><span class="line"></span><br><span class="line">WORKDIR &#x2F;usr&#x2F;src&#x2F;app</span><br><span class="line"></span><br><span class="line">COPY package*.json .&#x2F;</span><br><span class="line"></span><br><span class="line">RUN npm install</span><br><span class="line"></span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line">CMD [ &quot;npm&quot;, &quot;start&quot; ]</span><br></pre></td></tr></table></figure><p>.dockerignore</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">npm-debug.log</span><br></pre></td></tr></table></figure><p>构建 NodeWebServer 镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t nodewebserver .</span><br></pre></td></tr></table></figure><p>启动 NodeServer 容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 5000:8080 \</span><br><span class="line">-d --name nodeserver \</span><br><span class="line">nodewebserver</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:5000&#x2F;json</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://dockone.io/article/8834&quot; target=&quot;_blank&quot;&gt;手把手教你使用 Docker 部署 Vue.js 项目&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 交叉编译相关文件下载链接</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936647000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936647000.html/</id>
    <published>2020-02-17T10:50:47.000Z</published>
    <updated>2020-02-17T10:50:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.arm9.net/download.asp" target="_blank">Linux嵌入式交叉编译相关文件</a></p><p><a href="ftp://ftp.denx.de/pub/u-boot/" target="_blank">u-boot</a></p><p><a href="http://112.124.9.243/arm9net/mini2440/linux/arm-linux-gcc-4.4.3-20100728.tar.gz" target="_blank">arm-linux-gcc-4.4.3-20100728.tar.gz</a><br><a href="http://112.124.9.243/arm9net/mini2440/linux/arm-linux-gcc-4.3.2.tgz" target="_blank">arm-linux-gcc-4.3.2.tgz</a><br><a href="http://112.124.9.243/arm9net/linux/arm-qtopia-20100108.tar.gz" target="_blank">arm-qtopia-20100108.tar.gz</a><br>Qtopia-2.2.0和QtE-4.6.3双图形系统，可以自由切换运行<br><a href="http://112.124.9.243/arm9net/mini2440/linux/rootfs_qtopia_qt4-20100816.tar.gz" target="_blank">rootfs_qtopia_qt4-20100816.tar.gz</a></p><p>Linux应用编程示例代码，包含串口，PWM，I2C，LED, 线程，数学库等示例<br><a href="http://112.124.9.243/arm9net/linux/examples-20100108.tar.gz" target="_blank">examples-20100108.tar.gz</a></p><p><a href="ftp://ftp.arm.linux.org.uk/pub/linux/arm/toolchain/cross-2.95.3.tar.bz2" target="_blank">cross-2.95.3.tar.bz2</a></p><p><a href="ftp://ftp.qtopia.org.cn/mirror/ftp.trolltech.com/qtopia/source/qtopia-free-src-2.2.0.tar.gz" target="_blank">qtopia-free-src-2.2.0.tar.gz</a><br><a href="http://www.qtopia.org.cn/ftp/mirror/ftp.trolltech.com/qtopia/source/qtopia-free-src-2.2.0.tar.gz" target="_blank">qtopia-free-src-2.2.0.tar.gz</a><br><a href="ftp://ftp.trolltech.com/pub/qt/source/qtopia-free-src-2.2.0.tar.gz" target="_blank">qtopia-free-src-2.2.0.tar.gz</a></p><p><a href="http://nchc.dl.sourceforge.net/sourceforge/e2fsprogs/e2fsprogs-1.39.tar.gz" target="_blank">e2fsprogs-1.39.tar.gz</a><br><a href="http://superb-east.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.14.tar.bz2" target="_blank">jpegsrc.v6b.tar.gz</a><br><a href="http://superb-east.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.14.tar.bz2" target="_blank">libpng-1.2.14.tar.bz2</a><br><a href="http://mail.pdaxrom.org/download/1.1.0beta4/src/tslib-1.3.tar.bz2" target="_blank">tslib-1.3.tar.bz2</a>(触摸屏校正工具：也可以用QT自带的，这样就不必下载)<br><a href="http://www.zlib.net/zlib-1.2.3.tar.gz" target="_blank">zlib-1.2.3.tar.bz2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.arm9.net/download.asp&quot; target=&quot;_blank&quot;&gt;Linux嵌入式交叉编译相关文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ftp://ftp.denx.de/pub/u-boot/&quot; target=&quot;_b
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] OpenJTAG+openocd烧写环境</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936640000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936640000.html/</id>
    <published>2020-02-17T10:50:40.000Z</published>
    <updated>2020-02-17T10:50:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/techping/article/details/53159844" target="_blank">在Ubuntu下搭建ARM处理器 arm-linux-gcc 交叉编译环境以及OpenJTAG + openocd 烧写环境</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y gcc-arm-linux</span><br></pre></td></tr></table></figure><p>Makefile（点亮led的例子）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">led.bin:start.o</span><br><span class="line">        arm-linux-ld -Ttext 0 -o led.elf start.o</span><br><span class="line">        arm-linux-objcopy -O binary led.elf led.bin</span><br><span class="line">        arm-linux-objdump -D led.elf &gt; led.dis</span><br><span class="line">start.o:start.s</span><br><span class="line">        arm-linux-gcc -o start.o start.s -c</span><br></pre></td></tr></table></figure><p>生成文件 led.bin</p><p>OpenJTAG可以用在Windows、Linux、MAC下，而JLink只能用在Windows</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libusb-dev</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libconfuse-dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openocd是一个开源的JTAG上位机程序，目前支持很多种芯片了，并且支持的芯片还在不断增加中。</span><br><span class="line">当然，由于源代码都是公开的，并且可以自己编译，所以增加自定义的工具驱动程序也是相当容易的。</span><br></pre></td></tr></table></figure><p>安装openocd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y git</span><br><span class="line">git clone git:&#x2F;&#x2F;openocd.git.sourceforge.net&#x2F;gitroot&#x2F;openocd&#x2F;openocd</span><br><span class="line">cd openocd;</span><br><span class="line">sudo .&#x2F;bootstrap</span><br><span class="line">sudo .&#x2F;configure --enable-ftdi --enable-usb_blaster_libftdi --enable-openjtag_ftdi --enable-maintainer-mode --enable-legacy-ft2232_libftdi</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --help</span><br></pre></td></tr></table></figure><p>版本信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openocd -v</span><br></pre></td></tr></table></figure><p>配置 openocd.cfg (具体视硬件而定)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...</span><br></pre></td></tr></table></figure><p>将开发板连接的OpenJTAG的USB接口接入PC，启动openocd，在终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openocd -f openocd.cfg</span><br></pre></td></tr></table></figure><p>成功接入之后，打开另一个终端，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet localhost 4444</span><br></pre></td></tr></table></figure><p>进入操控指令方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost.</span><br><span class="line">Escape character is &#39;^]&#39;.</span><br><span class="line">Open On-Chip Debugger</span><br><span class="line">&gt; </span><br><span class="line"></span><br><span class="line"># 输入 poll ，显示开发板当前信息</span><br><span class="line"># 输入 halt ，暂停</span><br><span class="line"># 输入 resume ，恢复</span><br><span class="line"># 输入 reset ，复位</span><br></pre></td></tr></table></figure><p>以烧写以个点亮LED的程序为例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">halt   #先暂停当前程序的运行</span><br><span class="line"></span><br><span class="line">nand probe 0   #识别出Nand Flash</span><br><span class="line"></span><br><span class="line">nand erase 0 0 0x20000   #擦除0地址开始的128K内容</span><br><span class="line"></span><br><span class="line">nand write 0 led.bin 0   #写入LED.bin</span><br><span class="line"></span><br><span class="line">reset   #复位</span><br></pre></td></tr></table></figure><p>然后就可以看到LED亮了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/techping/article/details/53159844&quot; target=&quot;_blank&quot;&gt;在Ubuntu下搭建ARM处理器 arm-linux-gcc 交叉编译环境以及OpenJTAG + openo
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] mysql主从复制</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/</id>
    <published>2020-02-15T03:51:39.000Z</published>
    <updated>2020-02-15T03:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3339:3306 --name mysql-master -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3340:3306 --name mysql-slave -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql-master &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">apt-get update;apt-get -y install vim</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;mysql</span><br><span class="line"></span><br><span class="line">vi my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">## 同一局域网内注意要唯一</span><br><span class="line">server-id&#x3D;100  </span><br><span class="line">## 开启二进制日志功能，可以随便取（关键）</span><br><span class="line">log-bin&#x3D;mysql-bin</span><br><span class="line"></span><br><span class="line">service mysql restart</span><br><span class="line"></span><br><span class="line">docker start mysql-master;docker exec -it mysql-master &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">mysql -uroot -p123456</span><br><span class="line">CREATE USER &#39;slave&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;</span><br><span class="line">GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#39;slave&#39;@&#39;%&#39;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql-slave &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">apt-get update;apt-get -y install vim</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;mysql</span><br><span class="line"></span><br><span class="line">vi my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">## 设置server_id,注意要唯一</span><br><span class="line">server-id&#x3D;101</span><br><span class="line">## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用</span><br><span class="line">log-bin&#x3D;mysql-slave-bin</span><br><span class="line">## relay_log配置中继日志</span><br><span class="line">relay_log&#x3D;edu-mysql-relay-bin</span><br><span class="line"></span><br><span class="line">service mysql restart</span><br><span class="line"></span><br><span class="line">docker start mysql-slave;docker exec -it mysql-slave &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#为防止出现错误： Got fatal error 1236 from master when reading data from binary log</span><br><span class="line">#需记下 File, Position</span><br><span class="line">flush logs;</span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000002&#39;,MASTER_LOG_POS&#x3D;154;</span><br><span class="line">slave start;</span><br><span class="line">show slave status \G;</span><br></pre></td></tr></table></figure><p>查看master ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format&#x3D;&#39;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#39; mysql-master</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host&#x3D;&#39;172.17.0.3&#39;, master_user&#x3D;&#39;slave&#39;, master_password&#x3D;&#39;123456&#39;, master_port&#x3D;3306, master_log_file&#x3D;&#39;mysql-bin.000002&#39;, master_log_pos&#x3D;154, master_connect_retry&#x3D;30;</span><br></pre></td></tr></table></figure><p>命令说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">master_host ：Master的地址，指的是容器的独立ip,可以通过docker inspect --format&#x3D;&#39;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#39; 容器名称|容器id查询容器的ip</span><br><span class="line"></span><br><span class="line">master_port：Master的端口号，指的是容器的端口号</span><br><span class="line"></span><br><span class="line">master_user：用于数据同步的用户</span><br><span class="line"></span><br><span class="line">master_password：用于同步的用户的密码</span><br><span class="line"></span><br><span class="line">master_log_file：指定 Slave 从哪个日志文件开始复制数据，即上文中提到的 File 字段的值</span><br><span class="line"></span><br><span class="line">master_log_pos：从哪个 Position 开始读，即上文中提到的 Position 字段的值</span><br><span class="line"></span><br><span class="line">master_connect_retry：如果连接失败，重试的时间间隔，单位是秒，默认是60秒</span><br></pre></td></tr></table></figure><p>slave(从)，开启主从同步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#开启主从复制过程</span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line">show slave status \G</span><br><span class="line"></span><br><span class="line">#SlaveIORunning 和 SlaveSQLRunning 都是Yes，说明主从复制已经开启</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop slave;</span><br></pre></td></tr></table></figure><p>测试</p><p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database test;</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/songwenjie/p/9371422.html" target="_blank">基于Docker的Mysql主从复制搭建</a><br><a href="https://lanjingling.github.io/2015/10/26/mysql-replication-master-slave/" target="_blank">Mysql 主从复制</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;master(主)：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[docker-compose] 分布式websocket</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/</id>
    <published>2020-02-15T03:51:39.000Z</published>
    <updated>2020-02-15T03:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/holynyll/dockerWeb/blob/master/webapp/docker/docker-compose.yml" target="_blank">分布式websocket</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/holynyll/dockerWeb/blob/master/webapp/docker/docker-compose.yml&quot; target=&quot;_blank&quot;&gt;分布式websocket&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="docker-compose" scheme="http://brightereyer.xyz/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] 集成MQTT</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731864000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731864000.html/</id>
    <published>2020-02-15T01:57:44.000Z</published>
    <updated>2020-02-15T01:57:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000017811919" target="_blank">SpringBoot集成MQTT</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000017811919&quot; target=&quot;_blank&quot;&gt;SpringBoot集成MQTT&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[arm] QEMU模拟mini2440开发环境</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731060000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731060000.html/</id>
    <published>2020-02-15T01:44:20.000Z</published>
    <updated>2020-02-15T01:44:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/zwxwill/p/9431774.html" target="_blank">嵌入式linux：通过qemu模拟mini2440开发环境</a></p><p>编译安装QEMU</p><p>首先下载qemu for mini2440</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;repo.or.cz&#x2F;w&#x2F;qemu&#x2F;mini2440.git&#x2F;snapshot&#x2F;HEAD.tar.gz</span><br><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line">sudo apt-get install libsdl-dev</span><br><span class="line">.&#x2F;configure --target-list&#x3D;arm-softmmu --prefix&#x3D;$HOME&#x2F;work&#x2F;mini2440</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完后，添加环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">export PATH&#x3D;$PATH:$HOME&#x2F;work&#x2F;mini2440&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;bash.bashrc</span><br></pre></td></tr></table></figure><p>测试是否正常:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm --version</span><br></pre></td></tr></table></figure><p>使用buildroot一键生成uboot和linux内核及根文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;buildroot.org&#x2F;downloads&#x2F;buildroot-2012.05.tar.gz</span><br><span class="line">tar xvf buildroot-2012.05.tar.gz;mv buildroot-2012.05 buildroot;cd buildroot;</span><br><span class="line">sudo apt-get install -y libncurses5-dev</span><br><span class="line">patch configure &lt;..&#x2F;configure.patch    &#x2F;* 需要修改源码 打补丁 *&#x2F;</span><br><span class="line">make mini2440_defconfig</span><br><span class="line">make menuconfig</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y g++ bison flex gettext patch git-core xz-utils automake</span><br><span class="line">tar -zxvf texinfo-4.13a.tar.gz</span><br><span class="line">cd texinfo-4.13</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改bug（注释下面文件中：_GL_WARN_ON_USE (gets,.......  这行代码）:</span><br><span class="line"></span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.in.h</span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.h</span><br></pre></td></tr></table></figure><p>在安装 时间比较长（可以先用我提供的安装文件放到buildroot-2012.05/dl目录下，这样省去下载时间）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">链接：</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1PUxi_DejVo-bgChQH5bzmA</span><br><span class="line">密码：</span><br><span class="line">2dkz</span><br></pre></td></tr></table></figure><p>Flashimg制作nand.bin并启动系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 下载flashimg源码 </span><br><span class="line">git clone http:&#x2F;&#x2F;gitorious.org&#x2F;flashimg&#x2F;flashimg.git</span><br><span class="line">cd flashimg;</span><br><span class="line">.&#x2F;autogen.sh  #（要求autoconf版本大于2.67）</span><br><span class="line">.&#x2F;configure </span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>然后把我们生成的三个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u-boot.bin</span><br><span class="line">uImage</span><br><span class="line">rootfs.jffs2</span><br><span class="line">flashimg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;flashimg -s 64M -t nand -f nand.bin -p uboot.part -w boot,u-boot.bin -w kernel,uImage -w root,rootfs.jffs2 -z 512 </span><br><span class="line">即可生成nand.bin</span><br></pre></td></tr></table></figure><p>启动方法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse</span><br></pre></td></tr></table></figure><p>（若出现错误：浮点数例外启动不了qemu，请全屏最大化终端，再次执行，这是由于分辨率问题造成）</p><p>输入下面指令加载内核和根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nboot kernel </span><br><span class="line">setenv bootargs root&#x3D;&#x2F;dev&#x2F;mtdblock3 rootfstype&#x3D;jffs2 console&#x3D;ttySAC0,115200 </span><br><span class="line">saveenv </span><br><span class="line">bootm</span><br></pre></td></tr></table></figure><p>启动后，输入默认密码root，即可成功登录，此时还没有配置网络。ifconfig发现没有网卡。<br>4 NFS挂在根文件系统<br>首先安装nfs服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nfs-kernel-server </span><br><span class="line"># 新建nfsroot文件夹</span><br><span class="line">mkdir ~work&#x2F;nfsroot </span><br><span class="line"># 然后配置nfs目录 </span><br><span class="line">sudo vi &#x2F;etc&#x2F;exports </span><br><span class="line"># 添加一行</span><br><span class="line">&#x2F;home&#x2F;zwx&#x2F;work&#x2F;nfsroot *(rw,sync,no_root_squash,no_subtree_check</span><br><span class="line"># 然后执行：</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server restart</span><br><span class="line"># 进入NFS共享目录：</span><br><span class="line">cd &#x2F;home&#x2F;zwx&#x2F;work&#x2F;nfsroot&#x2F; </span><br><span class="line"># 修改权限</span><br><span class="line">sudo chmod -R 777 .&#x2F; </span><br><span class="line"># 解压根文件系统</span><br><span class="line">tar xvzf rootfs_qtopia_qt4-20140103.tar.gz</span><br><span class="line">注意：友善之臂提供的qtopia文件系统在挂载时会初始化网卡，但我们是由nfs挂载的文件系统，这会导致nfs连接中断，挂载失败，所以用nfs挂载之前需要把网卡的初始化过程取消，对应的文件是&#x2F;etc&#x2F;init.d&#x2F;if-config，只需把该文件内容删除即可（删除文件也可以）。</span><br><span class="line"></span><br><span class="line">sudo chmod -R 777 .&#x2F; </span><br><span class="line">cd rootfs_qtopia_qt4</span><br><span class="line">cd etc&#x2F;init.d&#x2F;</span><br><span class="line">rm ifconfig-eth0</span><br><span class="line">创建虚拟网卡并配置ip</span><br><span class="line"></span><br><span class="line">sudo apt-get install uml-utilities &#x2F;&#x2F;运行tunctl必须的工具</span><br><span class="line">sudo tunctl -u $USER -t tap0</span><br><span class="line">sudo ifconfig tap0 192.168.42.1</span><br><span class="line">带网络方式启动qemu</span><br><span class="line"></span><br><span class="line">cd &#x2F;home&#x2F;zwx&#x2F;work&#x2F;qemu&#x2F;flashimgflashimg-fb97139</span><br><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse -kernel uImage -net nic,vlan&#x3D;0 -net tap,vlan&#x3D;0,ifname&#x3D;tap0,script&#x3D;no,downscript&#x3D;no</span><br><span class="line">启动后进入uboot模式，此时的qemu还不能显示，输入下面指令加载内核和根文件系统。</span><br><span class="line"></span><br><span class="line">set bootargs noinitrd root&#x3D;&#x2F;dev&#x2F;nfs rw nfsroot&#x3D;192.168.42.1:&#x2F;home&#x2F;zwx&#x2F;work&#x2F;nfsroot&#x2F;rootfs_qtopia_qt4&#x2F;,proto&#x3D;tcp,nfsvers&#x3D;3,nolock  ip&#x3D;192.168.42.2:192.168.42.1::255.255.255.0 console&#x3D;ttySAC0,115200</span><br><span class="line">bootm</span><br><span class="line">然后就可以启动了</span><br><span class="line"></span><br><span class="line"> 5 安装交叉编译工具链：</span><br><span class="line"></span><br><span class="line">arm-linux-gcc-4.4.3.tar.gz </span><br><span class="line">安装库：</span><br></pre></td></tr></table></figure><p>sudo apt-get install lib32stdc++6<br>sudo apt-get install lib32z1</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/zwxwill/p/9431774.html&quot; target=&quot;_blank&quot;&gt;嵌入式linux：通过qemu模拟mini2440开发环境&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译安装QEMU&lt;/p&gt;
&lt;p&gt;首先下载qem
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
</feed>
