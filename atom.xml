<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-03-26T13:57:39.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[ubuntu] 安装opencv</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231059000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231059000.html/</id>
    <published>2020-03-26T13:57:39.000Z</published>
    <updated>2020-03-26T13:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/ksws0292756/article/details/79511170" target="_blank">Ubuntu 16.04 安装opencv的各种方法（含opencv contrib扩展包安装方法）</a></p><p>选用3.4.1版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv&#x2F;releases</span><br><span class="line"></span><br><span class="line">下载opencv源码包</span><br><span class="line">https:&#x2F;&#x2F;opencv.org&#x2F;releases.html</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 安装cmake</span><br><span class="line">sudo apt-get install -y cmake</span><br><span class="line"></span><br><span class="line"># 安装关联库</span><br><span class="line">sudo apt-get install -y python-dev python-opencv python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</span><br></pre></td></tr></table></figure><p>生成make文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv&#x2F;archive&#x2F;3.4.1.zip</span><br><span class="line">unzip 3.4.1.zip;</span><br><span class="line"></span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv&#x2F;archive&#x2F;3.4.1.tar.gz</span><br><span class="line">tar xvf 3.4.1.tar.gz;</span><br><span class="line"></span><br><span class="line"># 进入opencv文件夹</span><br><span class="line">cd opencv-3.4.3</span><br><span class="line"># 创建build文件夹</span><br><span class="line">mkdir build</span><br><span class="line"># 进入build文件夹</span><br><span class="line">cd build</span><br><span class="line"></span><br><span class="line">#cmake指令，如果没有特殊要求建议就选择默认的就可以</span><br><span class="line">#注意，后面的两个点千万不能省，代表了上级目录</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE&#x3D;Release -D CMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local ..</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br><span class="line">sudo mak install</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;ld.so.conf.d&#x2F;opencv.conf</span><br><span class="line">#追加</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;lib</span><br></pre></td></tr></table></figure><p>接着执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;bash.bashrc  </span><br><span class="line">#在最末尾添加</span><br><span class="line">PKG_CONFIG_PATH&#x3D;$PKG_CONFIG_PATH:&#x2F;usr&#x2F;local&#x2F;lib&#x2F;pkgconfig  </span><br><span class="line">export PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure><p>保存，执行如下命令使得配置生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;bash.bashrc</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">进入源码目录-&gt;进入sample目录-&gt;进入cpp目录</span><br><span class="line">在这个目录会看到很多cpp文件，每一个文件都是一个demo，我们把其中一个文件通过g++编译出来，就可以直接运行来看结果了。</span><br><span class="line">例如，编译image.cpp文件，生成image目标文件</span><br><span class="line"></span><br><span class="line">g++ &#96;pkg-config --cflags opencv&#96; -o image image.cpp &#96;pkg-config --libs opencv&#96;</span><br><span class="line"></span><br><span class="line">.&#x2F;image</span><br><span class="line"></span><br><span class="line">g++ &#96;pkg-config opencv --cflags --libs opencv&#96; -o test  test.cpp -I &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv -L &#x2F;usr&#x2F;local&#x2F;lib -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_objdetect -lopencv_imgcodecs</span><br></pre></td></tr></table></figure><p>在QtCreator IDE下使用OpenCV<br>1、新建一个Qt控制台工程</p><p>2、在新建的工程中打开.pro文件，添加上以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INCLUDEPATH +&#x3D; &#x2F;usr&#x2F;local&#x2F;include \</span><br><span class="line">               &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv \</span><br><span class="line">               &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv2</span><br><span class="line"></span><br><span class="line">LIBS +&#x3D; &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libopencv*</span><br></pre></td></tr></table></figure><p>3、在main.cpp中添加上一下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;QCoreApplication&gt;</span><br><span class="line">#include &lt;opencv2&#x2F;core&#x2F;core.hpp&gt;</span><br><span class="line">#include &lt;opencv2&#x2F;highgui&#x2F;highgui.hpp&gt;</span><br><span class="line">#include &lt;opencv2&#x2F;imgproc&#x2F;imgproc.hpp&gt;</span><br><span class="line">using namespace cv;</span><br><span class="line">int main(int argc, char *argv[])</span><br><span class="line">&#123;</span><br><span class="line">    namedWindow( &quot;src&quot;, WINDOW_AUTOSIZE );</span><br><span class="line">    Mat src1 &#x3D; imread(&quot;&#x2F;home&#x2F;machine&#x2F;work&#x2F;test.jpg&quot; );</span><br><span class="line">    while(1)</span><br><span class="line">    &#123;</span><br><span class="line">        imshow( &quot;src&quot;, src1 );</span><br><span class="line">        char c &#x3D;  waitKey(30);</span><br><span class="line">        if( 27&#x3D;&#x3D;c )</span><br><span class="line">            return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ksws0292756/article/details/79511170&quot; target=&quot;_blank&quot;&gt;Ubuntu 16.04 安装opencv的各种方法（含opencv contrib扩展包安装方法）&lt;/
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] jpa封装返回layui数据表</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231058000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231058000.html/</id>
    <published>2020-03-26T13:57:38.000Z</published>
    <updated>2020-03-26T13:57:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>controller</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@ResponseBody</span><br><span class="line">@PostMapping(value &#x3D; &quot;&#x2F;findAll&quot;)</span><br><span class="line">public Object findAll(@RequestParam Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">    int page &#x3D; Integer.parseInt(params.get(&quot;page&quot;).toString());</span><br><span class="line">    int limit &#x3D; Integer.parseInt(params.get(&quot;limit&quot;).toString());</span><br><span class="line">    Pageable pageable &#x3D; new PageRequest(page, limit);</span><br><span class="line"></span><br><span class="line">    return service.findAll(pageable);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public Map&lt;String,Object&gt; findAll(Pageable pageable) &#123;</span><br><span class="line">    Page&lt;MainControl&gt; all &#x3D; dao.findAll(pageable);</span><br><span class="line"></span><br><span class="line">    Map&lt;String,Object&gt; result &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">    result.put(&quot;totalElements&quot;, all.getTotalElements());</span><br><span class="line">    result.put(&quot;content&quot;, all.getTotalPages());</span><br><span class="line"></span><br><span class="line">    Map&lt;String,Object&gt; resultMap &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">    resultMap.put(&quot;code&quot;, true);</span><br><span class="line">    resultMap.put(&quot;data&quot;, result);</span><br><span class="line">    return resultMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">table.render(&#123;</span><br><span class="line">    elem: &#39;#dataTable&#39;,</span><br><span class="line">    url: &#39;&#x2F;mainControl&#x2F;findAll&#x2F;&#39;,</span><br><span class="line">    toolbar: &#39;#toolbar&#39;,</span><br><span class="line">    method: &#39;post&#39;,</span><br><span class="line">    limit: 10,&#x2F;&#x2F;注意：请务必确保 limit 参数（默认：10）是与你服务端限定的数据条数一致</span><br><span class="line">    page: true,</span><br><span class="line">    request: &#123;</span><br><span class="line">        pageName: &#39;page&#39;,&#x2F;&#x2F;页码的参数名称，默认：page</span><br><span class="line">        limitName: &#39;limit&#39; &#x2F;&#x2F;每页数据量的参数名，默认：limit</span><br><span class="line">    &#125;,</span><br><span class="line">    response: &#123;</span><br><span class="line">        statusName: &#39;code&#39;,&#x2F;&#x2F;规定数据状态的字段名称，默认：code</span><br><span class="line">        statusCode: true &#x2F;&#x2F;规定成功的状态码，默认：0</span><br><span class="line">    &#125;,</span><br><span class="line">    parseData: function (res) &#123; &#x2F;&#x2F;res 即为原始返回的数据</span><br><span class="line">        return &#123;</span><br><span class="line">            code: res.code,</span><br><span class="line">            data: res.data.content, &#x2F;&#x2F;解析数据列表</span><br><span class="line">            count: res.data.totalElements</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;controller&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[linux] 模拟can</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230861000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230861000.html/</id>
    <published>2020-03-26T13:54:21.000Z</published>
    <updated>2020-03-26T13:54:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/spoorer/p/6649303.html" target="_blank">CAN总线要点</a></p><p><a href="https://blog.csdn.net/KingOfMyHeart/article/details/97241402" target="_blank">在机器上ubuntu 16.04装了一个虚拟的can,名字为vcan</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link add dev vcan0 type vcan</span><br><span class="line">sudo ip link set dev vcan0 down</span><br><span class="line">sudo ip link set vcan0 mtu 72 </span><br><span class="line">sudo ip link set dev vcan0 up</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>send.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;发送数据</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;net&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int s, nbytes;</span><br><span class="line">struct sockaddr_can addr;</span><br><span class="line">struct ifreq ifr;</span><br><span class="line">struct can_frame frame[2] &#x3D; &#123;&#123;0&#125;&#125;;</span><br><span class="line">s &#x3D; socket(PF_CAN, SOCK_RAW, CAN_RAW);&#x2F;&#x2F;创建套接字</span><br><span class="line">strcpy(ifr.ifr_name, &quot;vcan0&quot; );</span><br><span class="line">ioctl(s, SIOCGIFINDEX, &amp;ifr); &#x2F;&#x2F;指定 can0 设备</span><br><span class="line">addr.can_family &#x3D; AF_CAN;</span><br><span class="line">addr.can_ifindex &#x3D; ifr.ifr_ifindex;</span><br><span class="line">bind(s, (struct sockaddr *)&amp;addr, sizeof(addr));&#x2F;&#x2F;将套接字与 can0 绑定</span><br><span class="line">&#x2F;&#x2F;禁用过滤规则,本进程不接收报文,只负责发送</span><br><span class="line">setsockopt(s, SOL_CAN_RAW, CAN_RAW_FILTER, NULL, 0);</span><br><span class="line">&#x2F;&#x2F;生成两个报文</span><br><span class="line">frame[0].can_id &#x3D; 0x11;</span><br><span class="line">frame[0]. can_dlc &#x3D; 1;</span><br><span class="line">frame[0].data[0] &#x3D; &#39;Y&#39;;</span><br><span class="line">frame[0].can_id &#x3D; 0x22;</span><br><span class="line">frame[0]. can_dlc &#x3D; 1;</span><br><span class="line">frame[0].data[0] &#x3D; &#39;N&#39;;&#x2F;&#x2F;循环发送两个报文</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">nbytes &#x3D; write(s, &amp;frame[0], sizeof(frame[0]));</span><br><span class="line">&#x2F;&#x2F;发送 frame[0]</span><br><span class="line">if(nbytes !&#x3D; sizeof(frame[0]))</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Send Error frame[0]\n!&quot;);</span><br><span class="line">break; &#x2F;&#x2F;发送错误,退出</span><br><span class="line">&#125;</span><br><span class="line">sleep(1);</span><br><span class="line">nbytes &#x3D; write(s, &amp;frame[1], sizeof(frame[1]));</span><br><span class="line">if(nbytes !&#x3D; sizeof(frame[0]))</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Send Error frame[1]\n!&quot;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">sleep(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(s);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>receive.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;接收数据</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;net&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int s, nbytes;</span><br><span class="line">struct sockaddr_can addr;</span><br><span class="line">struct ifreq ifr;</span><br><span class="line">struct can_frame frame;</span><br><span class="line">struct can_filter rfilter[1];</span><br><span class="line">s &#x3D; socket(PF_CAN, SOCK_RAW, CAN_RAW); &#x2F;&#x2F;创建套接字</span><br><span class="line">strcpy(ifr.ifr_name, &quot;vcan0&quot; );</span><br><span class="line">ioctl(s, SIOCGIFINDEX, &amp;ifr); &#x2F;&#x2F;指定 can0 设备</span><br><span class="line">addr.can_family &#x3D; AF_CAN;</span><br><span class="line">addr.can_ifindex &#x3D; ifr.ifr_ifindex;</span><br><span class="line">bind(s, (struct sockaddr *)&amp;addr, sizeof(addr)); &#x2F;&#x2F;将套接字与 can0 绑定</span><br><span class="line">&#x2F;&#x2F;定义接收规则,只接收表示符等于 0x11 的报文</span><br><span class="line">rfilter[0].can_id&#x3D; 0x11;</span><br><span class="line">rfilter[0].can_mask &#x3D; CAN_SFF_MASK;</span><br><span class="line">&#x2F;&#x2F;设置过滤规则</span><br><span class="line">setsockopt(s,SOL_CAN_RAW,CAN_RAW_FILTER,&amp;rfilter,sizeof(rfilter));</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">nbytes &#x3D; read(s,&amp;frame,sizeof(frame));</span><br><span class="line">&#x2F;&#x2F;接收报文&#x2F;&#x2F;显示报文</span><br><span class="line">if(nbytes &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;ID&#x3D;0x%x DLC&#x3D;%d data[0]&#x3D;0x%x\n&quot;,frame.can_id,frame.can_dlc,frame.data[0]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(s);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://velep.com/wp-content/uploads/cantool.zip" target="_blank">cantool.zip</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;velep.com&#x2F;wp-content&#x2F;uploads&#x2F;cantool.zip;</span><br><span class="line">unzip cantool.zip;</span><br><span class="line">.&#x2F;cantool -p 2 -t 10 -g</span><br></pre></td></tr></table></figure><p>cantool.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;net&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">S_CanFrame sendframe, recvframe;</span><br><span class="line">byte *psendframe &#x3D; (byte *)&amp;sendframe;</span><br><span class="line">byte *precvframe &#x3D; (byte *)&amp;recvframe;</span><br><span class="line">u_canframe_data_t *psend_data &#x3D; (u_canframe_data_t *)sendframe.data;</span><br><span class="line">const int can_frame_len &#x3D; sizeof(S_CanFrame);</span><br><span class="line"></span><br><span class="line">pid_t pid &#x3D; -1;</span><br><span class="line"></span><br><span class="line">int   status;</span><br><span class="line"></span><br><span class="line">int  ret &#x3D; 0;</span><br><span class="line"></span><br><span class="line">char buf[128] &#x3D; &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">bool carry_bit &#x3D; false;&#x2F;&#x2F; 进位标志</span><br><span class="line"></span><br><span class="line">int segment_id;&#x2F;&#x2F;id for shared memo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (parse_options(argc, argv)) &#123;</span><br><span class="line">usage();</span><br><span class="line">return  0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (!find_can(port))</span><br><span class="line">&#123;</span><br><span class="line">sprintf(buf, &quot;\n\t错误：CAN%d设备不存在\n\n&quot;, port + 1);</span><br><span class="line">panic(buf);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close_can(port);&#x2F;&#x2F; 必须先关闭CAN，才能成功设置CAN波特率</span><br><span class="line">set_bitrate(port, bitrate);&#x2F;&#x2F; 操作CAN之前，先要设置波特率</span><br><span class="line">open_can(port, bitrate);</span><br><span class="line"></span><br><span class="line">send_socket_fd &#x3D; socket_connect(port);</span><br><span class="line">recv_socket_fd &#x3D; socket_connect(port);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;printf(&quot;send_socket_fd &#x3D; %d, recv_socket_fd &#x3D; %d\n&quot;, send_socket_fd, recv_socket_fd);</span><br><span class="line">if (send_socket_fd &lt; 0 || send_socket_fd &lt; 0)</span><br><span class="line">&#123;</span><br><span class="line">disconnect(&amp;send_socket_fd);</span><br><span class="line">disconnect(&amp;recv_socket_fd);</span><br><span class="line">panic(&quot;\n\t打开socket can错误\n\n&quot;);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_can_filter();</span><br><span class="line">set_can_loopback(send_socket_fd, lp);</span><br><span class="line">printf_head();</span><br><span class="line">memset(&amp;sendframe, 0x00, sizeof(sendframe));</span><br><span class="line">memset(&amp;recvframe, 0x00, sizeof(recvframe));</span><br><span class="line"></span><br><span class="line">if (extended_frame) &#x2F;&#x2F; 指定发送帧类型：扩展帧或标准帧</span><br><span class="line">&#123;</span><br><span class="line">sendframe.can_id &#x3D; (send_frame_id &amp; CAN_EFF_MASK) | CAN_EFF_FLAG;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else &#123;</span><br><span class="line">sendframe.can_id &#x3D; (send_frame_id &amp; CAN_SFF_MASK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sendframe.can_dlc &#x3D; dlc;</span><br><span class="line">memcpy(sendframe.data, send_frame_data, dlc);</span><br><span class="line"></span><br><span class="line">segment_id &#x3D; shmget(IPC_PRIVATE, sizeof(int), S_IRUSR | S_IWUSR);&#x2F;&#x2F; allocate memo</span><br><span class="line">pframeno &#x3D; (int *)shmat(segment_id, NULL, 0);&#x2F;&#x2F; attach the memo</span><br><span class="line"></span><br><span class="line">if (pframeno &#x3D;&#x3D; NULL) &#123;</span><br><span class="line">panic(&quot;\n\t创建共享内存失败\n\n&quot;);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*pframeno &#x3D; 1;</span><br><span class="line"></span><br><span class="line">run &#x3D; true;</span><br><span class="line"></span><br><span class="line">pid &#x3D; fork();</span><br><span class="line"></span><br><span class="line">if (pid &#x3D;&#x3D; -1) &#123;</span><br><span class="line">panic(&quot;\n\t创建进程失败\n\n&quot;);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 子进程，用于发送CAN帧</span><br><span class="line">else if (pid &#x3D;&#x3D; 0) &#123;</span><br><span class="line">while (run &amp;&amp; (send_frame_times &gt; 0))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">ret &#x3D; send_frame(send_socket_fd, (char *)&amp;sendframe, sizeof(sendframe));</span><br><span class="line"></span><br><span class="line">printf_frame(</span><br><span class="line">    sendframe.can_id &amp; CAN_EFF_MASK,</span><br><span class="line">    sendframe.data,</span><br><span class="line">    sendframe.can_dlc,</span><br><span class="line">    ((sendframe.can_id &amp; CAN_EFF_FLAG) ? true : false),</span><br><span class="line">    ret &gt; 0 ? true : false,</span><br><span class="line">    true);</span><br><span class="line"></span><br><span class="line">delay_ms(send_frame_freq_ms);</span><br><span class="line"></span><br><span class="line">if (send_frame_id_inc_en) &#123;</span><br><span class="line">sendframe.can_id++;</span><br><span class="line">if (extended_frame) &#123;</span><br><span class="line">sendframe.can_id &#x3D; (sendframe.can_id &amp; CAN_EFF_MASK) | CAN_EFF_FLAG;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">sendframe.can_id &#x3D; (sendframe.can_id &amp; CAN_SFF_MASK);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (send_frame_data_inc_en &amp;&amp; dlc &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">if (dlc &gt; 4 &amp;&amp; psend_data-&gt;s.dl &#x3D;&#x3D; ((__u32)0xFFFFFFFF))</span><br><span class="line">&#123;</span><br><span class="line">carry_bit &#x3D; true;&#x2F;&#x2F; 发生进位</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">psend_data-&gt;s.dl++;</span><br><span class="line"></span><br><span class="line">if (dlc &lt;&#x3D; 4)</span><br><span class="line">&#123;</span><br><span class="line">if (psend_data-&gt;s.dl &gt;&#x3D; (1 &lt;&lt; (dlc * 8)))</span><br><span class="line">&#123;</span><br><span class="line">psend_data-&gt;s.dl &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if (dlc &lt;&#x3D; 8)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if (carry_bit)</span><br><span class="line">&#123;</span><br><span class="line">psend_data-&gt;s.dh++;</span><br><span class="line">if (psend_data-&gt;s.dh &gt;&#x3D; (1 &lt;&lt; ((dlc - 4) * 8)))</span><br><span class="line">&#123;</span><br><span class="line">psend_data-&gt;s.dh &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">carry_bit &#x3D; false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">send_frame_times--;</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 父进程，接收CAN帧</span><br><span class="line">else &#123;</span><br><span class="line"></span><br><span class="line">install_sig();</span><br><span class="line"></span><br><span class="line">while (run) &#123;</span><br><span class="line"></span><br><span class="line">memset(precvframe, 0x00, can_frame_len);</span><br><span class="line"></span><br><span class="line">ret &#x3D; recv_frame(recv_socket_fd, precvframe, can_frame_len, 5 * 1000);</span><br><span class="line"></span><br><span class="line">if (ret &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">printf_frame(</span><br><span class="line">    recvframe.can_id &amp; CAN_EFF_MASK,</span><br><span class="line">    recvframe.data,</span><br><span class="line">    recvframe.can_dlc,</span><br><span class="line">    ((recvframe.can_id &amp; CAN_EFF_FLAG) ? true : false),</span><br><span class="line">    true,</span><br><span class="line">    false);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while (((pid &#x3D; wait(&amp;status)) &#x3D;&#x3D; -1) &amp;&amp; (errno &#x3D;&#x3D; EINTR)) &#123;</span><br><span class="line">delay_ms(10);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">disconnect(&amp;send_socket_fd);</span><br><span class="line">disconnect(&amp;recv_socket_fd);</span><br><span class="line">shmdt(pframeno);&#x2F;&#x2F; detach memo</span><br><span class="line">shmctl(segment_id, IPC_RMID, NULL);&#x2F;&#x2F; remove</span><br><span class="line">return  0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用C++实现一个SocketCan的通信：<br>socketcan.h</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#pragma once</span><br><span class="line">#include &quot;data_adapter.h&quot;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;ney&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &quot;toml_parser.h&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">typedef can_frame SockCanFrame;&#x2F;&#x2F;message</span><br><span class="line">typedef can_filter CanFilter;&#x2F;&#x2F;filt</span><br><span class="line"></span><br><span class="line">class SocketCan : public DataAdapter &#123;</span><br><span class="line">public:</span><br><span class="line">  SocketCan(TomlParser *conf, std::shared_ptr&lt;cpptoml::table&gt; table);</span><br><span class="line">  ~SocketCan();</span><br><span class="line">  bool Read(pb::can_msgs::CanMessageStamped &amp;msg);</span><br><span class="line">  bool Write(const pb::can_msgs::CanMessageStamped &amp;msg);</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">  int sockfd_;</span><br><span class="line">  std::string can_name_; &#x2F;&#x2F;can口</span><br><span class="line">  bool ready_;</span><br><span class="line">  </span><br><span class="line">private:</span><br><span class="line">  int Connect();</span><br><span class="line">  void Disconnect()</span><br><span class="line">  &#123;</span><br><span class="line">    ready_ &#x3D; false;</span><br><span class="line">    if (sockfd_ &gt; 0) &#123;</span><br><span class="line">      close(sockfd_);</span><br><span class="line">      sockfd_ &#x3D; -1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>socketcan.cpp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;socketcan.h&quot;</span><br><span class="line">static const uint64_t KNanosecondPerSecond &#x3D; 1000000000UL;</span><br><span class="line">static const uint16_t KNanosecondPerMicroSecond &#x3D; 1000;</span><br><span class="line"></span><br><span class="line">const unsigned int kMaxRetryTimes &#x3D; 5;</span><br><span class="line">const unsigned int kBindRetryInterval &#x3D; 1;</span><br><span class="line">SocketCan::SocketCan(TomlParser *conf, std::shared_ptr&lt;cpptoml::table&gt; table):sockfd_(-1),ready_(false) &#123;</span><br><span class="line">  assert(conf !&#x3D; nullptr);</span><br><span class="line">  assert(table !&#x3D; nullptr);</span><br><span class="line">  can_name_ &#x3D;</span><br><span class="line">      conf-&gt;ParseStringsByTable(table, &quot;param&quot;, &quot;device&#x3D;can1&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;create sockfd and  bind </span><br><span class="line">int SocketCan::Connect()&#123;</span><br><span class="line"></span><br><span class="line">  sockfd_ &#x3D; socket(PF_CAN, SOCK_RAW, CAN_RAW);</span><br><span class="line">  if (sockfd_ &lt; 0) &#123;</span><br><span class="line">    return sockfd_;</span><br><span class="line">  &#125;</span><br><span class="line">  struct ifreq ifr;</span><br><span class="line">  strncpy(ifr.ifr_name, can_name_.c_str(), can_name_.length() + 1);</span><br><span class="line">  ioctl(sockfd_, SIOCGIFINDEX, &amp;ifr);</span><br><span class="line"></span><br><span class="line">  struct sockaddr_can addr;</span><br><span class="line">  addr.can_family &#x3D; AF_CAN;</span><br><span class="line">  addr.can_ifindex &#x3D; ifr.ifr_ifindex;</span><br><span class="line"></span><br><span class="line">  int res &#x3D; -1;</span><br><span class="line">  uint8_t count &#x3D; 0;</span><br><span class="line">  while (count &lt; kMaxRetryTimes) &#123;</span><br><span class="line">    ++count;</span><br><span class="line">    res &#x3D; bind(sockfd_, (struct sockaddr *)&amp;addr, sizeof(addr));</span><br><span class="line">    if (-1 &#x3D;&#x3D; res) &#123;</span><br><span class="line">      sleep(kBindRetryInterval);</span><br><span class="line">      continue;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">    if (-1 &#x3D;&#x3D; res) &#123;</span><br><span class="line">    close(sockfd_);</span><br><span class="line">    sockfd_ &#x3D; -1;</span><br><span class="line">    return sockfd_;</span><br><span class="line">    &#125;</span><br><span class="line">   ready_ &#x3D; true;</span><br><span class="line">   return sockfd_;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SocketCan::~SocketCan() &#123;</span><br><span class="line">  Disconnect();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool SocketCan::Read(pb::can_msgs::CanMessageStamped &amp;msg) &#123;</span><br><span class="line">    if (Connect()&lt;0)&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">    SockCanFrame fram;</span><br><span class="line">    int nbytes &#x3D; read(sockfd_,&amp;fram,sizeof(fram));</span><br><span class="line">    if( nbytes &lt; 0)&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">    msg.mutable_msg()-&gt;set_id(fram.can_id);</span><br><span class="line">    msg.mutable_msg()-&gt;set_dlc(fram.can_dlc);</span><br><span class="line">    msg.mutable_msg()-&gt;set_extended(false);</span><br><span class="line">    msg.mutable_msg()-&gt;set_data(fram.data, sizeof(fram.data));</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool SocketCan::Write(const pb::can_msgs::CanMessageStamped &amp;msg) &#123;</span><br><span class="line">  if (Connect()&lt;0)&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SockCanFrame fram;</span><br><span class="line">    fram.can_id &#x3D; msg.msg().id;</span><br><span class="line">    fram.can_dlc &#x3D; msg.msg().dlc;</span><br><span class="line">    fram.data &#x3D; msg.msg().data;</span><br><span class="line"></span><br><span class="line">    int nbytes &#x3D; write(sockfd_,&amp;fram,sizeof(fram));</span><br><span class="line">    if(nbytes !&#x3D; sizeof(fram))&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/spoorer/p/6649303.html&quot; target=&quot;_blank&quot;&gt;CAN总线要点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/KingOfMyHeart/
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[linux] jdk8</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230860000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230860000.html/</id>
    <published>2020-03-26T13:54:20.000Z</published>
    <updated>2020-03-26T13:54:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1GZnUwB3nraObgperKlmBCg" target="_blank">jdk-8u221-linux-x64.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">17xx</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/12ST8ti0zJ5spIGah8fbdpg" target="_blank">jdk-8u141-linux-x64.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码:</span><br><span class="line">hrjd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1GZnUwB3nraObgperKlmBCg&quot; target=&quot;_blank&quot;&gt;jdk-8u221-linux-x64.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[arm] qt5.7配置arm开发环境</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230859000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230859000.html/</id>
    <published>2020-03-26T13:54:19.000Z</published>
    <updated>2020-03-26T13:54:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/windfall/p/5405185.html" target="_blank">交叉编译安装ARM平台上的Qt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libx11-dev libxext-dev libxtst-dev</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/singleroot/article/details/54378078" target="_blank">QT5.7.0 arm开发环境搭建</a></p><p>Qt Versions</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Qt5.7.0(qt5.7.0) &#x2F;opt&#x2F;qt5.7.0&#x2F;bin&#x2F;qmake</span><br></pre></td></tr></table></figure><p>编译器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">名称：GCC(arm)</span><br><span class="line">编译器路径：&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-g++</span><br></pre></td></tr></table></figure><p>Debuggers</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name：arm(gdb)</span><br><span class="line">Path：&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gdb</span><br></pre></td></tr></table></figure><p>构建套件（kit）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">名称：arm</span><br><span class="line">设备类型：桌面</span><br><span class="line">设备：Local PC（桌面 类型的默认设备）</span><br><span class="line">SysRoot：&#x2F;opt&#x2F;qt5.7.0&#x2F;bin</span><br><span class="line">编译器：GCC(arm)</span><br><span class="line">Qt版本： Qt5.7.0(qt5.7.0)</span><br><span class="line">Qt mkspec：</span><br><span class="line">Cmake Tool：System CMake at &#x2F;usr&#x2F;bin&#x2F;cmake</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/windfall/p/5405185.html&quot; target=&quot;_blank&quot;&gt;交叉编译安装ARM平台上的Qt&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[ubuntu] ubuntu16安装openjdk7</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808281000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808281000.html/</id>
    <published>2020-03-21T16:31:21.000Z</published>
    <updated>2020-03-21T16:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/bluestorm/p/5677625.html" target="_blank">Ubuntu16.04 安装openjdk-7-jdk</a></p><p>oracle openjdk ppa source</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r&#x2F;ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openjdk-7-jdk</span><br><span class="line">sudo apt-get install openjdk-7-jre</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/bluestorm/p/5677625.html&quot; target=&quot;_blank&quot;&gt;Ubuntu16.04 安装openjdk-7-jdk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;oracle openjdk ppa sour
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] jpa建表指定charset</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808279000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808279000.html/</id>
    <published>2020-03-21T16:31:19.000Z</published>
    <updated>2020-03-21T16:31:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u011930705/article/details/89155489" target="_blank">1.关于jpa自动建表 DEFAULT CHARSET=latin1 的简单解决方法</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">@SuppressWarnings(&quot;deprecation&quot;)</span><br><span class="line">public class MysqlConfig extends MySQL5InnoDBDialect &#123;</span><br><span class="line">@Override</span><br><span class="line">public String getTableTypeString() &#123;</span><br><span class="line">return &quot;ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.把application.properties文件中的下面第一句注释替换为上面新建类就可以了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#spring.jpa.properties.hibernate.dialect&#x3D;org.hibernate.dialect.MySQL5InnoDBDialect</span><br><span class="line">spring.jpa.properties.hibernate.dialect&#x3D;com.neo.util.MysqlConfig</span><br></pre></td></tr></table></figure><p>3.然后去mysql看看show create table 表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT CHARSET&#x3D;utf8</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u011930705/article/details/89155489&quot; target=&quot;_blank&quot;&gt;1.关于jpa自动建表 DEFAULT CHARSET=latin1 的简单解决方法&lt;/a&gt;&lt;/p&gt;
&lt;f
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] docker+fastdfs</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808278000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808278000.html/</id>
    <published>2020-03-21T16:31:18.000Z</published>
    <updated>2020-03-21T16:31:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>拉取镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull morunchang&#x2F;fastdfs</span><br></pre></td></tr></table></figure><p>运行tracker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name tracker -p 22122:22122 --restart&#x3D;always --privileged&#x3D;true --net&#x3D;host --network&#x3D;bridge morunchang&#x2F;fastdfs sh tracker.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it tracker &#x2F;bin&#x2F;bash</span><br><span class="line">ps -ef|grep fdfs</span><br><span class="line">&#x2F;data&#x2F;fastdfs&#x2F;tracker&#x2F;fdfs_trackerd &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf | grep -v &quot;#&quot; | grep -v &quot;^$&quot;</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;mod_fastdfs.conf | grep -v &quot;#&quot; | grep -v &quot;^$&quot;</span><br></pre></td></tr></table></figure><p>用于查看tracker ip，方便storage指定tracker地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f&#x3D;&#39;&#123;&#123;.Name&#125;&#125; &#123;&#123;.NetworkSettings.IPAddress&#125;&#125; &#123;&#123;.HostConfig.PortBindings&#125;&#125;&#39; $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>运行storage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name storage -p 18080:8080 --restart&#x3D;always --privileged&#x3D;true --net&#x3D;host -e TRACKER_IP&#x3D;&lt;your tracker server address&gt;:22122 -e GROUP_NAME&#x3D;&lt;group name&gt; morunchang&#x2F;fastdfs sh storage.sh</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;your tracker server address&gt; is the tracker server&#39;s host</span><br><span class="line">&lt;group name&gt; is the storage server&#39;s group name</span><br></pre></td></tr></table></figure><p>执行示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name storage -p 18080:8080 --restart&#x3D;always --privileged&#x3D;true --net&#x3D;host --network&#x3D;bridge -e TRACKER_IP&#x3D;172.17.0.2:22122 -e GROUP_NAME&#x3D;group1 morunchang&#x2F;fastdfs sh storage.sh</span><br><span class="line"></span><br><span class="line">docker exec -it storage &#x2F;bin&#x2F;bash</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;storage.conf | grep -v &quot;^#&quot; | grep -v &quot;^$&quot;</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;client.conf | grep -v &quot;^#&quot; | grep -v &quot;^$&quot;</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;http.conf | grep -v &quot;^#&quot; | grep -v &quot;^$&quot;</span><br><span class="line"></span><br><span class="line">ps -ef|grep -v grep|grep nginx</span><br><span class="line"></span><br><span class="line">netstat -anp|grep -v grep|grep nginx</span><br><span class="line">netstat -anp|grep -v grep|grep 22122</span><br><span class="line">netstat -anp|grep -v grep|grep 23000</span><br></pre></td></tr></table></figure><p><a href="https://www.funtl.com/zh/apache-dubbo-codeing/FastDFS-%E5%AE%89%E8%A3%85.html#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87" target="_blank">基于 Docker 安装 FastDFS</a><br><a href="https://blog.csdn.net/W_Meng_H/article/details/85402879" target="_blank">fastDFS+SpringBoot实现文件上传和下载(防盗链)</a></p><p><a href="https://www.jianshu.com/p/1038b4d95912" target="_blank">基于 Docker 安装 FastDFS</a><br><a href="http://www.ityouknow.com/springboot/2018/01/16/spring-boot-fastdfs.html" target="_blank">使用 Spring Boot 集成 FastDFS</a><br><a href="https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-fastDFS" target="_blank">spring-boot-fastDFS</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;拉取镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[mysql] 永久设置编码utf8</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808277000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808277000.html/</id>
    <published>2020-03-21T16:31:17.000Z</published>
    <updated>2020-03-21T16:31:17.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server&#x3D;utf8  </span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8&#39;  </span><br><span class="line"></span><br><span class="line">service mysqld restart</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line">show variables like &#39;%char%&#39;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="mysql" scheme="http://brightereyer.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>[mysql] 修改数据库表格式</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808276000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808276000.html/</id>
    <published>2020-03-21T16:31:16.000Z</published>
    <updated>2020-03-21T16:31:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/hai_chao/article/details/79209408" target="_blank">修改数据库表编码格式</a></p><p>============== 查看表</p><p>查看数据库编码格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;character_set_database&#39;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;char%&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SET character_set_server&#x3D;&#39;utf8&#39;;</span><br><span class="line">SET character_set_database&#x3D;&#39;utf8&#39;;</span><br><span class="line"></span><br><span class="line">SET character_set_client&#x3D;&#39;utf8&#39;;</span><br><span class="line">SET character_set_connection&#x3D;&#39;utf8&#39;;</span><br><span class="line">SET character_set_database&#x3D;&#39;utf8&#39;;</span><br><span class="line"></span><br><span class="line">SET character_set_results&#x3D;&#39;utf8&#39;;</span><br><span class="line">SET character_set_server&#x3D;&#39;utf8&#39;;</span><br><span class="line">SET character_set_system&#x3D;&#39;utf8&#39;;</span><br></pre></td></tr></table></figure><p>查看数据表的编码格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table &lt;表名&gt;;</span><br></pre></td></tr></table></figure><p>============== 数据库</p><p>创建数据库时指定数据库的字符集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database &lt;数据库名&gt; character set utf8;</span><br></pre></td></tr></table></figure><p>修改数据库的编码格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter database &lt;数据库名&gt; character set utf8;</span><br></pre></td></tr></table></figure><p>查看数据库编码格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database &lt;数据库名&gt;</span><br></pre></td></tr></table></figure><p>============== 变更表</p><p>创建数据表时指定数据表的编码格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table tb_books (</span><br><span class="line">    name varchar(45) not null,</span><br><span class="line">    price double,</span><br><span class="line">    bookCount int,</span><br><span class="line">    author varchar(45)</span><br><span class="line">) default charset &#x3D; utf8;</span><br></pre></td></tr></table></figure><p>将具体表的编码格式转换为utf8：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &lt;表名&gt; CONVERT TO CHARACTER SET utf8;</span><br></pre></td></tr></table></figure><p>============== 字段</p><p>修改字段编码格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table &lt;表名&gt; change &lt;字段名&gt; &lt;字段名&gt; &lt;类型&gt; character set utf8;</span><br><span class="line">alter table user change username username varchar(20) character set utf8 not null;</span><br></pre></td></tr></table></figure><p>在JDBC链接数据库时转换编码格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;db_test?useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/hai_chao/article/details/79209408&quot; target=&quot;_blank&quot;&gt;修改数据库表编码格式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;============== 查看表&lt;/p&gt;
&lt;p&gt;查看数据库编码
      
    
    </summary>
    
    
    
      <category term="mysql" scheme="http://brightereyer.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>[docker] 单机配置fastdfs</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808275000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808275000.html/</id>
    <published>2020-03-21T16:31:15.000Z</published>
    <updated>2020-03-21T16:31:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.huaweicloud.com/kunpeng/software/fastdfs.html" target="_blank">鲲鹏社区 FastDFS</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name test-fastdfs -p 10080:80 -p 22122:22122 --restart&#x3D;always --privileged&#x3D;true -d -i -t centos &#x2F;bin&#x2F;bash</span><br><span class="line">docker attach test-fastdfs</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/wswind/p/11751829.html" target="_blank">CentOS 8 换源，设置dnf / yum镜像</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#aliyun更新了centos8的说明</span><br><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-8.repo</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;yum.repos.d</span><br><span class="line">#备份</span><br><span class="line">cp CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class="line">cp CentOS-AppStream.repo CentOS-AppStream.repo.bak</span><br><span class="line">cp CentOS-Extras.repo CentOS-Extras.repo.bak</span><br><span class="line"></span><br><span class="line">sed -i &#39;s&#x2F;mirrorlist&#x3D;&#x2F;#mirrorlist&#x3D;&#x2F;g&#39; CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line">sed -i &#39;s&#x2F;#baseurl&#x3D;&#x2F;baseurl&#x3D;&#x2F;g&#39; CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line">sed -i &#39;s&#x2F;http:\&#x2F;\&#x2F;mirror.centos.org&#x2F;https:\&#x2F;\&#x2F;mirrors.aliyun.com&#x2F;g&#39; CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line"></span><br><span class="line">yum update -y</span><br></pre></td></tr></table></figure><p>2.配置编译环境<br>1)安装FastDFS依赖环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel openssl openssl-devel perl-devel net-tools wget make vim</span><br></pre></td></tr></table></figure><p>2)安装FastDFS依赖包libfastcommon</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;happyfish100&#x2F;libfastcommon&#x2F;archive&#x2F;V1.0.38.tar.gz</span><br><span class="line">tar -zxvf V1.0.38.tar.gz</span><br><span class="line">cd libfastcommon-1.0.38&#x2F;</span><br><span class="line">.&#x2F;make.sh</span><br><span class="line">.&#x2F;make.sh install</span><br></pre></td></tr></table></figure><p>3)安装FastDFS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;happyfish100&#x2F;fastdfs&#x2F;archive&#x2F;V5.11.tar.gz</span><br><span class="line">tar -zxvf V5.11.tar.gz</span><br><span class="line">cd fastdfs-5.11&#x2F;</span><br><span class="line">.&#x2F;make.sh</span><br><span class="line">.&#x2F;make.sh install</span><br></pre></td></tr></table></figure><p>4)将配置文件复制到系统为fdfs预设的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;fastdfs-5.11&#x2F;conf</span><br><span class="line">cp mime.types http.conf &#x2F;etc&#x2F;fdfs&#x2F;</span><br></pre></td></tr></table></figure><p>5)查看安装FastDFS过程中产生的可执行文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la &#x2F;usr&#x2F;bin&#x2F;fdfs*</span><br></pre></td></tr></table></figure><p>6)配置FastDFS<br>分别对tracker，storage，client进行配置</p><p>a.创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;fastdfs&#x2F;tracker -p</span><br><span class="line">mkdir &#x2F;home&#x2F;fastdfs&#x2F;storage -p</span><br></pre></td></tr></table></figure><p>b.配置tracker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc&#x2F;fdfs&#x2F;</span><br><span class="line">cp tracker.conf.sample tracker.conf</span><br><span class="line"></span><br><span class="line">vim tracker.conf</span><br><span class="line">port&#x3D;22122</span><br><span class="line">base_path&#x3D;&#x2F;home&#x2F;fastdfs&#x2F;tracker</span><br><span class="line">thread_stack_size &#x3D; 128KB</span><br></pre></td></tr></table></figure><p>c.启动tracker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_trackerd &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf start</span><br></pre></td></tr></table></figure><p>d.配置storage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">cd &#x2F;etc&#x2F;fdfs&#x2F;</span><br><span class="line">cp storage.conf.sample storage.conf</span><br><span class="line"></span><br><span class="line">vim storage.conf</span><br><span class="line">base_path&#x3D;&#x2F;home&#x2F;fastdfs&#x2F;storage</span><br><span class="line">store_path0&#x3D;&#x2F;home&#x2F;fastdfs&#x2F;storage</span><br><span class="line">tracker_server&#x3D;XX.XX.XX.XX:22122</span><br></pre></td></tr></table></figure><p>e.启动storage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_storaged &#x2F;etc&#x2F;fdfs&#x2F;storage.conf start</span><br></pre></td></tr></table></figure><p>f.查看storage启动日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f &#x2F;home&#x2F;fastdfs&#x2F;storage&#x2F;logs&#x2F;storaged.log</span><br></pre></td></tr></table></figure><p>g.配置client</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">cd &#x2F;etc&#x2F;fdfs&#x2F;</span><br><span class="line">cp client.conf.sample client.conf</span><br><span class="line"></span><br><span class="line">vim client.conf</span><br><span class="line">base_path&#x3D;&#x2F;home&#x2F;fastdfs&#x2F;tracker</span><br><span class="line">tracker_server&#x3D;XX.XX.XX.XX:22122</span><br></pre></td></tr></table></figure><p>7)安装和配置fastdfs-nginx-module<br>a.安装fastdfs-nginx-module</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;happyfish100&#x2F;fastdfs-nginx-module&#x2F;archive&#x2F;V1.20.tar.gz</span><br><span class="line">tar -zxvf V1.20.tar.gz</span><br></pre></td></tr></table></figure><p>b.配置fastdfs-nginx-module的“config”文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;fastdfs-nginx-module-1.20&#x2F;src&#x2F;</span><br><span class="line"></span><br><span class="line">vim config</span><br><span class="line">    ...</span><br><span class="line">    ngx_module_incs&#x3D;&quot;&#x2F;usr&#x2F;include&#x2F;fastdfs &#x2F;usr&#x2F;include&#x2F;fastcommon&#x2F;&quot;</span><br><span class="line">    ...</span><br><span class="line">    CORE_INCS&#x3D;&quot;$CORE_INCS &#x2F;usr&#x2F;include&#x2F;fastdfs &#x2F;usr&#x2F;include&#x2F;fastcommon&#x2F;&quot;</span><br></pre></td></tr></table></figure><p>c.配置fastdfs-nginx-module的“mod_fastdfs.conf”文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;fastdfs-nginx-module-1.20&#x2F;src&#x2F;mod_fastdfs.conf &#x2F;etc&#x2F;fdfs&#x2F;</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;fdfs&#x2F;mod_fastdfs.conf</span><br><span class="line">base_path&#x3D;&#x2F;home&#x2F;fastdfs</span><br><span class="line">tracker_server&#x3D;XX.XX.XX.XX:22122</span><br><span class="line">url_have_group_name &#x3D; true</span><br><span class="line">store_path0&#x3D;&#x2F;home&#x2F;fastdfs&#x2F;storage</span><br></pre></td></tr></table></figure><p>8)安装和配置Nginx<br>a.安装Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;</span><br><span class="line">wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.15.2.tar.gz</span><br><span class="line">tar -zxvf nginx-1.15.2.tar.gz;cd nginx-1.15.2</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx --add-module&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;fastdfs-nginx-module-1.20&#x2F;src&#x2F;</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>b.配置Nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;</span><br><span class="line"></span><br><span class="line">grep -v &quot;#&quot; nginx.conf | grep -v &quot;^$&quot;</span><br><span class="line"></span><br><span class="line">vim nginx.conf</span><br><span class="line"></span><br><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location &#x2F; &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~&#x2F;M00 &#123;</span><br><span class="line">            root   &#x2F;home&#x2F;fastdfs&#x2F;storage&#x2F;data;</span><br><span class="line">            ngx_fastdfs_module;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">        location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.测试已完成编译的软件<br>1)启动nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;</span><br><span class="line">.&#x2F;nginx</span><br></pre></td></tr></table></figure><p>2)测试<br>a.生成测试文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">echo &quot;kungpeng test fastdfs ok!&quot; &gt; a.txt</span><br></pre></td></tr></table></figure><p>b.生成文件链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_upload_file &#x2F;etc&#x2F;fdfs&#x2F;client.conf a.txt</span><br><span class="line"></span><br><span class="line">fdfs_test &#x2F;etc&#x2F;fdfs&#x2F;client.conf upload a.txt</span><br><span class="line"></span><br><span class="line">curl http:&#x2F;&#x2F;127.0.0.1:80&#x2F;group1&#x2F;M00&#x2F;00&#x2F;00&#x2F;rBEAAl50zWSAQw3dAAAAGmbRVtQ766.txt</span><br></pre></td></tr></table></figure><p>c.在浏览器中输入以下网址，查看返回的“a.txt”相关信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#nginx地址</span><br><span class="line">http:&#x2F;&#x2F;192.168.99.103:10080&#x2F;</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;192.168.99.103:10080&#x2F;group1&#x2F;M00&#x2F;00&#x2F;00&#x2F;rBEAAl50zWSAQw3dAAAAGmbRVtQ766.txt</span><br></pre></td></tr></table></figure><p>查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_monitor &#x2F;etc&#x2F;fdfs&#x2F;storage.conf</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;fdfs&#x2F;tracker.conf</span><br><span class="line">&#x2F;etc&#x2F;fdfs&#x2F;storage.conf</span><br><span class="line">&#x2F;etc&#x2F;fdfs&#x2F;client.conf</span><br><span class="line">&#x2F;etc&#x2F;fdfs&#x2F;mod_fastdfs.conf</span><br><span class="line">#防盗链</span><br><span class="line">&#x2F;etc&#x2F;fdfs&#x2F;http.conf</span><br></pre></td></tr></table></figure><p>log文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail -f &#x2F;home&#x2F;fastdfs&#x2F;tracker&#x2F;logs&#x2F;trackerd.log</span><br><span class="line">tail -f &#x2F;home&#x2F;fastdfs&#x2F;storage&#x2F;logs&#x2F;storaged.log</span><br><span class="line">tail -f &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;logs&#x2F;error.log</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#重新启动 tracker</span><br><span class="line">ps -ef | grep fdfs_ | grep -v grep |awk &#39;&#123;print $2&#125;&#39;|xargs kill -9</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_trackerd &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf start</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;fdfs_storaged &#x2F;etc&#x2F;fdfs&#x2F;storage.conf start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#重新启动nginx</span><br><span class="line">ps -ef | grep nginx | grep -v grep |awk &#39;&#123;print $2&#125;&#39;|xargs kill -9</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/xiaolinstudy/p/9341779.html" target="_blank">防盗链配置</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;home&#x2F;fastdfs&#x2F;fastdfs&#x2F;conf&#x2F;</span><br><span class="line">wget https:&#x2F;&#x2F;img.zcool.cn&#x2F;community&#x2F;016d2355e50e606ac7251df85a9695.jpg@2o.jpg</span><br><span class="line">mv *.jpg anti-steal.jpg</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;fdfs&#x2F;</span><br><span class="line">grep -v &quot;#&quot; http.conf | grep -v &quot;^$&quot;</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;fdfs&#x2F;http.conf</span><br><span class="line">http.default_content_type &#x3D; application&#x2F;octet-stream</span><br><span class="line">http.mime_types_filename&#x3D;mime.types</span><br><span class="line">http.anti_steal.check_token&#x3D;false</span><br><span class="line">http.anti_steal.token_ttl&#x3D;900</span><br><span class="line">http.anti_steal.secret_key&#x3D;FastDFS1234567890</span><br><span class="line">http.anti_steal.token_check_fail&#x3D;&#x2F;home&#x2F;fastdfs&#x2F;fastdfs&#x2F;conf&#x2F;anti-steal.jpg</span><br><span class="line">http.multi_range.enabed &#x3D; true</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx -s reload</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.huaweicloud.com/kunpeng/software/fastdfs.html&quot; target=&quot;_blank&quot;&gt;鲲鹏社区 FastDFS&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[docker] windows下docker追加端口映射</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808274000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808274000.html/</id>
    <published>2020-03-21T16:31:14.000Z</published>
    <updated>2020-03-21T16:31:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/richerdyoung/p/10154753.html" target="_blank">追加docker容器端口映射的方法</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker commit test-fastdfs test-fastdfs:v1</span><br><span class="line">docker rm test-fastdfs</span><br><span class="line">docker run -d --name&#x3D;test-fastdfs -p 10080:80 test-fastdfs:v1</span><br><span class="line">docker exec -it test-fastdfs &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/richerdyoung/p/10154753.html&quot; target=&quot;_blank&quot;&gt;追加docker容器端口映射的方法&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818+QtE5.7移植</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808273000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808273000.html/</id>
    <published>2020-03-21T16:31:13.000Z</published>
    <updated>2020-03-21T16:31:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/BrighterEyer/itop6818-QtE5.7-files" target="_blank">itop6818-QtE5.7-files</a></p><details><summary>安装编译器</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lib32z1 lib32ncurses5</span><br><span class="line"></span><br><span class="line">wget -c http:&#x2F;&#x2F;www.codesourcery.com&#x2F;sgpp&#x2F;lite&#x2F;arm&#x2F;portal&#x2F;package4571&#x2F;public&#x2F;arm-none-linux-gnueabi&#x2F;arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;arm</span><br><span class="line">tar jxvf arm-2014.05-29-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 -C &#x2F;usr&#x2F;local&#x2F;arm&#x2F;</span><br><span class="line"></span><br><span class="line">#编辑.bashrc</span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin</span><br><span class="line">export CROSS_COMPILE&#x3D;arm-none-linux-gnueabi-</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">#检验版本</span><br><span class="line">arm-none-linux-gnueabi-gcc -v</span><br></pre></td></tr></table></figure></details><details><summary>itop6818-QtE5.7-files中的qt5.7+tslib1.4</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">tar xvf itop6818-QtE5.7-files&#x2F;qt5.7+tslib1.4&#x2F;qt5.7.tar.gz</span><br><span class="line">rm -rf &#x2F;opt&#x2F;qt5.7.0</span><br><span class="line">mv qt-5.7.0 &#x2F;opt&#x2F;qt5.7.0</span><br><span class="line"></span><br><span class="line">tar xvf itop6818-QtE5.7-files&#x2F;qt5.7+tslib1.4&#x2F;tslib1.4.tar.gz</span><br><span class="line">rm -rf &#x2F;opt&#x2F;tslib1.4</span><br><span class="line">mv tslib1.4 &#x2F;opt&#x2F;tslib1.4</span><br><span class="line"></span><br><span class="line">unzip itop6818-QtE5.7-files&#x2F;fonts.zip</span><br><span class="line">mv fonts &#x2F;opt&#x2F;qt5.7.0&#x2F;lib&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;arm-none-linux-gnueabi&#x2F;libc&#x2F;usr&#x2F;lib&#x2F;</span><br><span class="line"></span><br><span class="line">cp libstdc++.a &#x2F;opt&#x2F;qt5.7.0&#x2F;lib&#x2F;</span><br><span class="line">cp libstdc++.so &#x2F;opt&#x2F;qt5.7.0&#x2F;lib&#x2F;</span><br><span class="line">cp libstdc++.so.6.0.19 &#x2F;opt&#x2F;qt5.7.0&#x2F;lib&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;opt&#x2F;qt5.7.0&#x2F;lib&#x2F;</span><br><span class="line">ln -s libstdc++.so.6.0.19 libstdc++.so.6</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y lib32c-dev lib32stdc++6</span><br></pre></td></tr></table></figure></details><details><summary>解压源码 tslib-1.4.tar.gz</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y autoconf automake libtool</span><br><span class="line"></span><br><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;BrighterEyer&#x2F;itop6818-QtE5.7-files;cd itop6818-QtE5.7-files</span><br><span class="line">tar xvf tslib-1.4.tar.gz;cd tslib</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure CC&#x3D;arm-none-linux-gnueabi-gcc CXX&#x3D;arm-none-linux-gnueabi-g++ --host&#x3D;arm-none-linux-gnueabi --prefix&#x3D;&#x2F;opt&#x2F;tslib1.4 ac_cv_func_malloc_0_nonnull&#x3D;yes</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line">sudo vim &#x2F;opt&#x2F;tslib1.4&#x2F;etc&#x2F;ts.conf</span><br><span class="line">#第一行</span><br><span class="line">module_raw input</span><br><span class="line"></span><br><span class="line">#追加宏：</span><br><span class="line">vim &#x2F;opt&#x2F;tslib1.4&#x2F;include&#x2F;tslib.h</span><br><span class="line">#define SYN_MT_REPORT           2</span><br><span class="line">#define ABS_MT_SLOT             0x2f    &#x2F;* MT slot being modified *&#x2F;</span><br><span class="line">#define ABS_MT_TOUCH_MAJOR      0x30    &#x2F;* Major axis of touching ellipse *&#x2F;</span><br><span class="line">#define ABS_MT_TOUCH_MINOR      0x31    &#x2F;* Minor axis (omit if circular) *&#x2F;</span><br><span class="line">#define ABS_MT_WIDTH_MAJOR      0x32    &#x2F;* Major axis of approaching ellipse *&#x2F;</span><br><span class="line">#define ABS_MT_WIDTH_MINOR      0x33    &#x2F;* Minor axis (omit if circular) *&#x2F;</span><br><span class="line">#define ABS_MT_ORIENTATION      0x34    &#x2F;* Ellipse orientation *&#x2F;</span><br><span class="line">#define ABS_MT_POSITION_X       0x35    &#x2F;* Center X touch position *&#x2F;</span><br><span class="line">#define ABS_MT_POSITION_Y       0x36    &#x2F;* Center Y touch position *&#x2F;</span><br><span class="line">#define ABS_MT_TOOL_TYPE        0x37    &#x2F;* Type of touching device *&#x2F;</span><br><span class="line">#define ABS_MT_BLOB_ID          0x38    &#x2F;* Group a set of packets as a blob *&#x2F;</span><br><span class="line">#define ABS_MT_TRACKING_ID      0x39    &#x2F;* Unique ID of initiated contact *&#x2F;</span><br><span class="line">#define ABS_MT_PRESSURE         0x3a    &#x2F;* Pressure on contact area *&#x2F;</span><br><span class="line">#define ABS_MT_DISTANCE         0x3b    &#x2F;* Contact hover distance *&#x2F;</span><br><span class="line">#define ABS_MT_TOOL_X           0x3c    &#x2F;* Center X tool position *&#x2F;</span><br><span class="line">#define ABS_MT_TOOL_Y           0x3d    &#x2F;* Center Y tool position *&#x2F;</span><br></pre></td></tr></table></figure></details><details><summary>安装gcc指定版本</summary><p><a href="https://blog.csdn.net/ZHUQIUSHI123/article/details/90670126" target="_blank">安装gcc指定版本</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看ubuntu系统上g++的版本：</span><br><span class="line">ls &#x2F;usr&#x2F;bin&#x2F;g++*</span><br><span class="line"></span><br><span class="line"># 安装新版gcc和g++</span><br><span class="line">sudo apt-get install gcc-4.8 g++-4.8</span><br><span class="line"></span><br><span class="line"># 切换不同版本</span><br><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;gcc gcc &#x2F;usr&#x2F;bin&#x2F;gcc-4.8 20</span><br><span class="line"></span><br><span class="line"># 同理修改g++的方式类似：</span><br><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;g++ g++ &#x2F;usr&#x2F;bin&#x2F;g++-4.8 20</span><br></pre></td></tr></table></figure></details><details><summary>qmake.conf</summary><p>qt-everywhere-opensource-src-5.7.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;</span><br><span class="line">wget http:&#x2F;&#x2F;download.qt.io&#x2F;new_archive&#x2F;qt&#x2F;5.7&#x2F;5.7.0&#x2F;single&#x2F;qt-everywhere-opensource-src-5.7.0.tar.gz</span><br><span class="line">tar xvf qt-everywhere-opensource-src-5.7.0.tar.gz;cd qt-everywhere-opensource-src-5.7.0</span><br><span class="line"></span><br><span class="line">vim qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabi-g++&#x2F;qmake.conf</span><br></pre></td></tr></table></figure><p>qtbase/mkspecs/linux-arm-gnueabi-g++/qmake.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">## qmake configuration for building with arm-linux-gnueabi-g++</span><br><span class="line">#</span><br><span class="line">MAKEFILE_GENERATOR &#x3D; UNIX</span><br><span class="line">CONFIG +&#x3D; incremental</span><br><span class="line">QMAKE_INCREMENTAL_STYLE &#x3D; sublib</span><br><span class="line">QT_QPA_DEFAULT_PLATFORM &#x3D; linux #eglfs</span><br><span class="line">QMAKE_CFLAGS_RELEASE +&#x3D; -O2 -march&#x3D;armv7-a</span><br><span class="line">QMAKE_CXXFLAGS_RELEASE +&#x3D; -O2 -march&#x3D;armv7-a</span><br><span class="line">include(..&#x2F;common&#x2F;linux.conf)</span><br><span class="line">include(..&#x2F;common&#x2F;gcc-base-unix.conf)include(..&#x2F;common&#x2F;g++-unix.conf)</span><br><span class="line"># modifications to g++.conf</span><br><span class="line">QMAKE_CC &#x3D; arm-none-linux-gnueabi-gcc</span><br><span class="line">QMAKE_CXX &#x3D; arm-none-linux-gnueabi-g++</span><br><span class="line">QMAKE_LINK &#x3D; arm-none-linux-gnueabi-g++</span><br><span class="line">QMAKE_LINK_SHLIB &#x3D; arm-none-linux-gnueabi-g++</span><br><span class="line"># modifications to linux.conf</span><br><span class="line">QMAKE_AR &#x3D; arm-none-linux-gnueabi-ar cqs</span><br><span class="line">QMAKE_OBJCOPY &#x3D; arm-none-linux-gnueabi-objcopy</span><br><span class="line">QMAKE_NM &#x3D; arm-none-linux-gnueabi-nm -P</span><br><span class="line">QMAKE_STRIP &#x3D; arm-none-linux-gnueabi-strip</span><br><span class="line">load(qt_config)</span><br></pre></td></tr></table></figure></details><details><summary>编译 QtE5.7 源码 之 autoconfigure.sh</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;\r$&#x2F;&#x2F;&#39; configure</span><br></pre></td></tr></table></figure><p>qt-everywhere-opensource-src-5.7.0/autoconfigure.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">-v \</span><br><span class="line">-prefix &#x2F;opt&#x2F;qt5.7.0 \</span><br><span class="line">-release \</span><br><span class="line">-opensource \</span><br><span class="line">-make libs \</span><br><span class="line">-xplatform linux-arm-gnueabi-g++ \</span><br><span class="line">-optimized-qmake \</span><br><span class="line">-pch \</span><br><span class="line">-qt-sql-sqlite \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-no-opengl \</span><br><span class="line">-skip qt3d \</span><br><span class="line">-skip qtcanvas3d \</span><br><span class="line">-skip qtpurchasing \</span><br><span class="line">-no-sse2 \</span><br><span class="line">-no-openssl \</span><br><span class="line">-no-nis \</span><br><span class="line">-no-cups \</span><br><span class="line">-no-glib \</span><br><span class="line">-no-iconv \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake tools \</span><br><span class="line">-skip qtvirtualkeyboard \</span><br><span class="line">-I&#x2F;opt&#x2F;tslib1.4&#x2F;include \</span><br><span class="line">-L&#x2F;opt&#x2F;tslib1.4&#x2F;lib</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y python</span><br><span class="line">chmod 777 autoconfigure.sh</span><br><span class="line">./autoconfigure.sh</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">ls /opt/qt5.7.0</span><br></pre></td></tr></table></figure></details><p>开发工具<a href="http://download.qt.io/new_archive/qt/5.7/5.7.0/qt-opensource-linux-x64-5.7.0.run" target="_blank">qt-opensource-linux-x64-5.7.0.run</a></p><p><a href="https://blog.csdn.net/u012902367/article/details/87876079" target="_blank">Linux下的Qt环境搭建(arm交叉编译）</a><br><a href="https://www.cnblogs.com/emouse/archive/2013/01/29/2881721.html" target="_blank">qtcreator配置arm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/BrighterEyer/itop6818-QtE5.7-files&quot; target=&quot;_blank&quot;&gt;itop6818-QtE5.7-files&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;安装编译器&lt;/su
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[AndroidStudio] 问题INSTALL_FAILED_NO_MATCHING_ABIS</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808272000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808272000.html/</id>
    <published>2020-03-21T16:31:12.000Z</published>
    <updated>2020-03-21T16:31:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>AndroidStudio 解决Installation failed with message INSTALL_FAILED_NO_MATCHING_ABIS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ndk &#123;</span><br><span class="line">            &#x2F;&#x2F;设置支持的SO库架构</span><br><span class="line">            abiFilters &#39;armeabi&#39;, &#39;x86&#39;, &#39;armeabi-v7a&#39;, &#39;x86_64&#39;, &#39;arm64-v8a&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    splits &#123;</span><br><span class="line">        abi &#123;</span><br><span class="line">            enable true</span><br><span class="line">            reset()</span><br><span class="line">            include &#39;armeabi&#39;, &#39;x86&#39;, &#39;armeabi-v7a&#39;, &#39;x86_64&#39;, &#39;arm64-v8a&#39;</span><br><span class="line">            universalApk true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/heijinbaitu/article/details/80504019" target="_blank">Error:In declare-styleable FontFamilyFont, unable to find attribute android:font</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gradle :app:dependencies --configuration compile</span><br><span class="line">gradlew build --debug</span><br><span class="line"></span><br><span class="line">compile &#39;com.android.support:design:26.0.0-alpha1&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;AndroidStudio 解决Installation failed with message INSTALL_FAILED_NO_MATCHING_ABIS&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
    
      <category term="AndroidStudio" scheme="http://brightereyer.xyz/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>[android] 实现拍照上传</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808271000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808271000.html/</id>
    <published>2020-03-21T16:31:11.000Z</published>
    <updated>2020-03-21T16:31:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_37564086/article/details/80662101" target="_blank">Android实现拍照相册图片上传功能</a></p><p><a href="https://www.cnblogs.com/andzhang/p/6075814.html" target="_blank">文件上传</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_37564086/article/details/80662101&quot; target=&quot;_blank&quot;&gt;Android实现拍照相册图片上传功能&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] logging配置</title>
    <link href="http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355559000.html/"/>
    <id>http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355559000.html/</id>
    <published>2020-03-16T10:45:59.000Z</published>
    <updated>2020-03-16T10:45:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/1fa12b92d5c4" target="_blank">Spring Boot Logging 配置</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logging.level.root&#x3D; WARN</span><br><span class="line">logging.level.org.springframework.security&#x3D; DEBUG</span><br><span class="line">logging.level.org.springframework.web&#x3D; ERROR</span><br><span class="line">logging.level.org.hibernate&#x3D; DEBUG</span><br><span class="line">logging.level.org.apache.commons.dbcp2&#x3D; DEBUG</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">logging:</span><br><span class="line">  level:</span><br><span class="line">    root: WARN  </span><br><span class="line">    org:</span><br><span class="line">      springframework:</span><br><span class="line">        security: DEBUG</span><br><span class="line">        web: ERROR  </span><br><span class="line">      hibernate: DEBUG</span><br><span class="line">      apache:</span><br><span class="line">        commons:</span><br><span class="line">          dbcp2: DEBUG</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/1fa12b92d5c4&quot; target=&quot;_blank&quot;&gt;Spring Boot Logging 配置&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[java] 封装返回结果集</title>
    <link href="http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355558000.html/"/>
    <id>http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355558000.html/</id>
    <published>2020-03-16T10:45:58.000Z</published>
    <updated>2020-03-16T10:45:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_34233856/article/details/85989773" target="_blank">java返回结果集封装</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">import com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line"></span><br><span class="line">public class Result&lt;T&gt; implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 版本</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private static final long serialVersionUID &#x3D; 1L;</span><br><span class="line"></span><br><span class="line">    private final static ObjectMapper objectMapper &#x3D; new ObjectMapper();</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 返回状态码</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private int code;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 返回信息</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private String msg;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 返回数据</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private T data;</span><br><span class="line"></span><br><span class="line">    public Result() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;构造方法</span><br><span class="line">    public Result(int code, String msg, T data) &#123;</span><br><span class="line">        this.code &#x3D; code;</span><br><span class="line">        this.msg &#x3D; msg;</span><br><span class="line">        this.data &#x3D; data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;如果返回数据直接成功</span><br><span class="line">    public Result(T data) &#123;</span><br><span class="line">        this.code &#x3D; 200;</span><br><span class="line">        this.data &#x3D; data;</span><br><span class="line">        this.msg &#x3D; &quot;OK&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;失败调用</span><br><span class="line">    public Result(int code, String msg) &#123;</span><br><span class="line">        this.code &#x3D; code;</span><br><span class="line">        this.msg &#x3D; msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;成功直接返回数据和状态</span><br><span class="line">    public static &lt;T&gt; Result&lt;T&gt; ok(T data) &#123;</span><br><span class="line">        return new Result&lt;T&gt;(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;失败的时候调用</span><br><span class="line">    public static &lt;T&gt; Result&lt;T&gt; error(int code, String msg) &#123;</span><br><span class="line">        return new Result&lt;T&gt;(code, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;转为JSON</span><br><span class="line">    public static &lt;T&gt; String toJSON(Result&lt;T&gt; result) &#123;</span><br><span class="line">        String jsonStr &#x3D; null;</span><br><span class="line">        try &#123;</span><br><span class="line">            jsonStr &#x3D; objectMapper.writeValueAsString(result);</span><br><span class="line">        &#125; catch (JsonProcessingException e) &#123;</span><br><span class="line">            &#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return jsonStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getCode() &#123;</span><br><span class="line">        return code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCode(Integer code) &#123;</span><br><span class="line">        this.code &#x3D; code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getMsg() &#123;</span><br><span class="line">        return msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMsg(String msg) &#123;</span><br><span class="line">        this.msg &#x3D; msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public T getData() &#123;</span><br><span class="line">        return data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setData(T data) &#123;</span><br><span class="line">        this.data &#x3D; data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_34233856/article/details/85989773&quot; target=&quot;_blank&quot;&gt;java返回结果集封装&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="java" scheme="http://brightereyer.xyz/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>[极光推送] springboot+react-native+android</title>
    <link href="http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355562000.html/"/>
    <id>http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355562000.html/</id>
    <published>2020-03-16T10:45:02.000Z</published>
    <updated>2020-03-16T10:45:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/x541211190/article/details/81123829" target="_blank">【使用】极光推送Springboot微服务搭建教程</a><br><a href="https://github.com/yindz/jpush-spring-boot-starter" target="_blank">jpush-spring-boot-starter</a><br>引入依赖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.apifan.framework&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jpush-spring-boot-starter&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.0-SNAPSHOT&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jpush:</span><br><span class="line">  app-key: 123456789</span><br><span class="line">  master-secret: 123456789</span><br></pre></td></tr></table></figure><p>使用范例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">private JPushHelper jPushHelper;</span><br><span class="line"></span><br><span class="line">public void push()&#123;</span><br><span class="line">    &#x2F;&#x2F;消息内容    </span><br><span class="line">    String content &#x3D; &quot;这是一条测试消息！&quot;;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;附加业务参数</span><br><span class="line">    Map&lt;String, String&gt; extras &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">    extras.put(&quot;bizCode&quot;, &quot;123&quot;);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;根据设备ID推送</span><br><span class="line">    List&lt;String&gt; deviceIdList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">    deviceIdList.add(&quot;asdfghjkl&quot;);</span><br><span class="line">    jPushHelper.pushToDevices(deviceIdList, content, extras);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;根据别名推送</span><br><span class="line">    List&lt;String&gt; aliasList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">    aliasList.add(&quot;poiuytreqw&quot;);</span><br><span class="line">    jPushHelper.pushToAliases(aliasList, content, extras);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;根据标签推送</span><br><span class="line">    List&lt;String&gt; tagsList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">    tagsList.add(&quot;test-tag1&quot;);</span><br><span class="line">    jPushHelper.pushToTags(tagsList, content, extras);</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;推送给全部客户端</span><br><span class="line">    jPushHelper.pushToAll(content, extras);    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_41888813/article/details/101534866" target="_blank">基于SpringBoot搭建极光推送 Android 和 IOS 消息的简单Demo</a></p><p><a href="https://www.jianshu.com/p/ba2c56727c0e" target="_blank">Android集成JPush极光推送</a><br><a href="https://github.com/duoheshui/JpushAndroid" target="_blank">github eclipse JpushAndroid</a></p><p><a href="https://www.jianshu.com/p/a71512a8f921" target="_blank">React Native 集成极光推送 jpush-react-native</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/x541211190/article/details/81123829&quot; target=&quot;_blank&quot;&gt;【使用】极光推送Springboot微服务搭建教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://git
      
    
    </summary>
    
    
    
      <category term="极光推送" scheme="http://brightereyer.xyz/tags/%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] 验证码</title>
    <link href="http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355561000.html/"/>
    <id>http://brightereyer.xyz/2020/03/16/articles/2020/03/16/1584355561000.html/</id>
    <published>2020-03-16T10:45:01.000Z</published>
    <updated>2020-03-16T10:45:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000018742857" target="_blank">springboot登陆页面图片验证码简单的web项目</a><br><a href="https://github.com/charmsongo/pictureverifycode" target="_blank">pictureverifycode</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000018742857&quot; target=&quot;_blank&quot;&gt;springboot登陆页面图片验证码简单的web项目&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/char
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] freemarker</title>
    <link href="http://brightereyer.xyz/2020/03/12/articles/2020/03/12/1584008546000.html/"/>
    <id>http://brightereyer.xyz/2020/03/12/articles/2020/03/12/1584008546000.html/</id>
    <published>2020-03-12T10:22:26.000Z</published>
    <updated>2020-03-12T10:22:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u011197448/article/details/83901306" target="_blank">springboot整合Freemark模板(详尽版)</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u011197448/article/details/83901306&quot; target=&quot;_blank&quot;&gt;springboot整合Freemark模板(详尽版)&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
</feed>
