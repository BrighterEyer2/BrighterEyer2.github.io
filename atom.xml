<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-04-19T01:00:28.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[qt] QT编译configure参数的解释</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258028000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258028000.html/</id>
    <published>2020-04-19T01:00:28.000Z</published>
    <updated>2020-04-19T01:00:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_31877249/article/details/80576524" target="_blank">QT 编译 ./configure参数的解释</a></p><p><a href="https://blog.csdn.net/guo_lei_lamant/article/details/79892129" target="_blank">QT pro文件CONFIG 参数</a></p><details><summary>CONFIG 变量</summary><p>CONFIG 变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置变量指定了编译器所要使用的选项和所需要被连接的库。配置变量中可以添加任何东西，但只有下面这些选项可以被qmake识别</span><br></pre></td></tr></table></figure><p>编译器类型： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">release : 应用程序将以release模式连编。如果“debug”被指定，它将被忽略 </span><br><span class="line">debug: 应用程序将以debug模式连编。 </span><br><span class="line">warn_on: 编译器尽可能多得输出警告信息，如果“warn_off”被指定，它将被忽略 </span><br><span class="line">warn_off:编译器尽可能少得输出警告信息，</span><br></pre></td></tr></table></figure><p>应用程序类型： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">qt : 应用程序是qt程序，连接QT库 </span><br><span class="line">thread : 应用程序是多线程应用程序 </span><br><span class="line">x11: 应用程序是x11应用程序 </span><br><span class="line">windows:只用于app模板 应用程序是一个windows的窗口应用程序 </span><br><span class="line">console:只用于app模板 应用程序是一个windows的控制台应用程序 </span><br><span class="line">dll:只用于“lib”模板，库是一个共享库（dll） </span><br><span class="line">staticlib:只用于“lib”模板，库一个静态库 </span><br><span class="line">plugin : 只用于“lib”模板，库是一个插件，这会使dll选项生效</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONFIG +&#x3D; qt thread debug 注意：这里要用+&#x3D;不要用&#x3D;，否则就不能使用编译的Qt库的类型了。</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_31877249/article/details/80576524&quot; target=&quot;_blank&quot;&gt;QT 编译 ./configure参数的解释&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://b
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[linux] 搜索头文件路径</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258027000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258027000.html/</id>
    <published>2020-04-19T01:00:27.000Z</published>
    <updated>2020-04-19T01:00:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看交叉编译器的搜索头文件的路径和 COMPILER_PATH、LIBRARY_PATH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;main()&#123;&#125;&#39;|arm-linux-gnueabihf-gcc -E -v -</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;查看交叉编译器的搜索头文件的路径和 COMPILER_PATH、LIBRARY_PATH&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[linux] 使用sed替换成空格</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258026000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258026000.html/</id>
    <published>2020-04-19T01:00:26.000Z</published>
    <updated>2020-04-19T01:00:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_41282397/article/details/81456349" target="_blank">sed 批量替换 tab替换为空格</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s&#x2F;\t&#x2F; &#x2F;g&quot; filename</span><br></pre></td></tr></table></figure><p>实现将换行替换成空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i -e &#39;:x;N;s&#x2F;n&#x2F; &#x2F;;b x&#39; user_uniq.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_41282397/article/details/81456349&quot; target=&quot;_blank&quot;&gt;sed 批量替换 tab替换为空格&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlig
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[linux] sshd_config配置文件</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258025000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258025000.html/</id>
    <published>2020-04-19T01:00:25.000Z</published>
    <updated>2020-04-19T01:00:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Hai__Yun/article/details/77964064" target="_blank">sshd_config配置文件</a></p><details><summary>sshd_config</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">Port 22                 # ssh默认监听端口为22，建议修改为非标准端口</span><br><span class="line"></span><br><span class="line">AddressFamily any       # 指定sshd应当使用哪种地址族。取值范围是：&quot;any&quot;(默认)、&quot;inet&quot;(仅IPv4)、&quot;inet6&quot;(仅IPv6)。 </span><br><span class="line"></span><br><span class="line">ListenAddress 0.0.0.0   # 监听本地的哪个Ip地址，默认为0.0.0.0代表监听本地所有IP地址。假设本地有两个IP地址，分别为:192.168.1.12和192.168.23.12，假如只对192.168.1.12这个IP开放的话，那么就写为ListenAddress 192.168.1.12 就OK了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Protocol 2  #选择SSH支持的协议版本，默认为2。也可以改为1和2都支持，需要用,作为分隔符。写为1,2。不建议支持SSH1版本，SSH1存在漏洞与缺陷。</span><br><span class="line"></span><br><span class="line"># HostKey for protocol version 1</span><br><span class="line">HostKey &#x2F;etc&#x2F;ssh&#x2F;ssh_host_key       #设置SSH version 1私钥的路径</span><br><span class="line"></span><br><span class="line"># HostKeys for protocol version 2</span><br><span class="line">HostKey &#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key   #设置SSH version 2 RSA私钥的路径</span><br><span class="line">HostKey &#x2F;etc&#x2F;ssh&#x2F;ssh_host_dsa_key   #设置SSH version 2 DSA私钥的路径</span><br><span class="line"></span><br><span class="line">LoginGraceTime 2m       # 限制用户必须在指定的时限内认证成功，0 表示无限制。默认值是2分钟  </span><br><span class="line">PermitRootLogin yes     #是否允许root用户登陆，默认为yes</span><br><span class="line">StrictModes yes         #指定是否要求SSH在接受连接请求前对用户主目录和相关的配置文件进行宿主和权限检查。强烈建议使用默认值&quot;yes&quot;来预防可能出现的低级错误。  </span><br><span class="line">MaxAuthTries 6          #指定每个连接最大允许的认证次数。默认值是 6。如果失败认证的次数超过这个数值的一半，连接将被强制断开，且会生成额外的失败日志消息。</span><br><span class="line">MaxSessions 10          #指定同一个连接的最大会话次数</span><br><span class="line"></span><br><span class="line">RSAAuthentication yes                    #是否允许使用纯 RSA 公钥认证。仅用于SSH-1。默认值是&quot;yes&quot;。 </span><br><span class="line">PubkeyAuthentication yes                 #是否允许公钥认证。仅可以用于SSH-2。默认值为&quot;yes&quot;。  </span><br><span class="line">AuthorizedKeysFile .ssh&#x2F;authorized_keys  #存放该用户可以用来登录的 RSA&#x2F;DSA 公钥。  </span><br><span class="line">                                         #该指令中可以使用下列根据连接时的实际情况进行展开的符号：  </span><br><span class="line">                                         #%% 表示&#39;%&#39;、%h 表示用户的主目录、%u 表示该用户的用户名。  </span><br><span class="line">                                         #经过扩展之后的值必须要么是绝对路径，要么是相对于用户主目录的相对路径。  </span><br><span class="line">                                         #默认值是&quot;.ssh&#x2F;authorized_keys&quot;。  </span><br><span class="line"></span><br><span class="line">PasswordAuthentication yes  #是否允许使用基于密码的认证。默认为&quot;yes&quot;。 </span><br><span class="line">PermitEmptyPasswords  no    #是否允许密码为空的用户远程登录。默认为&quot;no&quot;。 </span><br><span class="line"></span><br><span class="line">GatewayPorts no     #是否允许远程主机连接本地的转发端口。默认值是&quot;no&quot;。  </span><br><span class="line">                    # sshd默认将远程端口转发绑定到loopback地址。这样将阻止其它远程主机连接到转发端口。  </span><br><span class="line">                    # GatewayPorts 指令可以让 sshd 将远程端口转发绑定到非loopback地址，这样就可以允许远程主机连接了。  </span><br><span class="line">                    # &quot;no&quot;表示仅允许本地连接，&quot;yes&quot;表示强制将远程端口转发绑定到统配地址(wildcard address)，  </span><br><span class="line">                    # &quot;clientspecified&quot;表示允许客户端选择将远程端口转发绑定到哪个地址。  </span><br><span class="line"></span><br><span class="line">ClientAliveInterval 0       # 设置一个以秒记的时长，如果超过这么长时间没有收到客户端的任何数据，</span><br><span class="line">                            # sshd将通过安全通道向客户端发送一个&quot;alive&quot;消息，并等候应答。  </span><br><span class="line">                            # 默认值 0 表示不发送&quot;alive&quot;消息。这个选项仅对SSH-2有效。  </span><br><span class="line">ClientAliveCountMax 3       # sshd在未收到任何客户端回应前最多允许发送多少个&quot;alive&quot;消息。默认值是 3 。  </span><br><span class="line">                            # 到达这个上限后，sshd将强制断开连接、关闭会话。  </span><br><span class="line">                            # 需要注意的是，&quot;alive&quot;消息与 TCPKeepAlive 有很大差异。  </span><br><span class="line">                            # &quot;alive&quot;消息是通过加密连接发送的，因此不会被欺骗；而 TCPKeepAlive 却是可以被欺骗的。</span><br><span class="line">                            # 如果 ClientAliveInterval 被设为 15 并且将 ClientAliveCountMax 保持为默认值，  </span><br><span class="line">                            # 那么无应答的客户端大约会在45秒后被强制断开。这个指令仅可以用于SSH-2协议。</span><br><span class="line"></span><br><span class="line">UseDNS yes                  # 指定 sshd是否应该对远程主机名进行反向解析，以检查此主机名是否与其IP地址真实对应。默认值为&quot;yes&quot;。  </span><br><span class="line">PidFile &#x2F;var&#x2F;run&#x2F;sshd.pid   # 指定在哪个文件中存放SSH守护进程的进程号，默认为 &#x2F;var&#x2F;run&#x2F;sshd.pid 文件。  </span><br><span class="line">MaxStartups 10:30:100       # 最大允许保持多少个未认证的连接。默认值是 10 。  </span><br><span class="line">                            # 到达限制后，将不再接受新连接，除非先前的连接认证成功或超出 LoginGraceTime 的限制。</span><br><span class="line"></span><br><span class="line">SSAPIAuthentication no              # 是否允许使用基于 GSSAPI 的用户认证。默认值为&quot;no&quot;。仅用于SSH-2。</span><br><span class="line">GSSAPICleanupCredentials yes        # 是否在用户退出登录后自动销毁用户凭证缓存。默认值是&quot;yes&quot;。仅用于SSH-2。  </span><br><span class="line"></span><br><span class="line">Banner none     # 将这个指令指定的文件中的内容在用户进行认证前显示给远程用户。  </span><br><span class="line">                # 这个特性仅能用于SSH-2，默认什么内容也不显示。&quot;none&quot;表示禁用这个特性。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Compression  no # 是否对通信数据进行加密，还是延迟到认证成功之后再对通信数据加密。可用值：&quot;yes&quot;, &quot;delayed&quot;(默认),&quot;no&quot;。</span><br><span class="line"></span><br><span class="line">AllowUsers  </span><br><span class="line">             # 这个指令后面跟着一串用空格分隔的用户名列表(其中可以使用&quot;*&quot;和&quot;?&quot;通配符)。默认允许所有用户登录。  </span><br><span class="line">             # 如果使用了这个指令，那么将仅允许这些用户登录，而拒绝其它所有用户。  </span><br><span class="line">             # 如果指定了 USER@HOST 模式的用户，那么 USER 和 HOST 将同时被检查。  </span><br><span class="line">             # 这里只允许使用用户的名字而不允许使用UID。相关的 allow&#x2F;deny 指令按照下列顺序处理：  </span><br><span class="line">             # DenyUsers, AllowUsers, DenyGroups, AllowGroups  </span><br><span class="line"></span><br><span class="line">DenyUsers  </span><br><span class="line">             # 这个指令后面跟着一串用空格分隔的用户名列表(其中可以使用&quot;*&quot;和&quot;?&quot;通配符)。默认允许所有用户登录。  </span><br><span class="line">             # 如果使用了这个指令，那么这些用户将被拒绝登录。  </span><br><span class="line">             # 如果指定了 USER@HOST 模式的用户，那么 USER 和 HOST 将同时被检查。  </span><br><span class="line">             # 这里只允许使用用户的名字而不允许使用UID。相关的 allow&#x2F;deny 指令按照下列顺序处理：  </span><br><span class="line">             # DenyUsers, AllowUsers, DenyGroups, AllowGroups  </span><br><span class="line"></span><br><span class="line">AllowGroups  </span><br><span class="line">             # 这个指令后面跟着一串用空格分隔的组名列表(其中可以使用&quot;*&quot;和&quot;?&quot;通配符)。默认允许所有组登录。  </span><br><span class="line">             # 如果使用了这个指令，那么将仅允许这些组中的成员登录，而拒绝其它所有组。  </span><br><span class="line">             # 这里的&quot;组&quot;是指&quot;主组&quot;(primary group)，也就是&#x2F;etc&#x2F;passwd文件中指定的组。  </span><br><span class="line">             # 这里只允许使用组的名字而不允许使用GID。相关的 allow&#x2F;deny 指令按照下列顺序处理：  </span><br><span class="line">             # DenyUsers, AllowUsers, DenyGroups, AllowGroups  </span><br><span class="line"></span><br><span class="line">DenyGroups  </span><br><span class="line">             # 这个指令后面跟着一串用空格分隔的组名列表(其中可以使用&quot;*&quot;和&quot;?&quot;通配符)。默认允许所有组登录。  </span><br><span class="line">             # 如果使用了这个指令，那么这些组中的成员将被拒绝登录。  </span><br><span class="line">             # 这里的&quot;组&quot;是指&quot;主组&quot;(primary group)，也就是&#x2F;etc&#x2F;passwd文件中指定的组。  </span><br><span class="line">             # 这里只允许使用组的名字而不允许使用GID。相关的 allow&#x2F;deny 指令按照下列顺序处理：  </span><br><span class="line">             # DenyUsers, AllowUsers, DenyGroups, AllowGroups</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Hai__Yun/article/details/77964064&quot; target=&quot;_blank&quot;&gt;sshd_config配置文件&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;sshd_config&lt;
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[linux] iptables</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258024000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258024000.html/</id>
    <published>2020-04-19T01:00:24.000Z</published>
    <updated>2020-04-19T01:00:24.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward</span><br><span class="line"></span><br><span class="line"># 查看 sshd 使用端口</span><br><span class="line">netstat -antup|grep sshd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;services</span><br><span class="line"></span><br><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line"></span><br><span class="line">iptables -A OUTPUT -m state --state established,related -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -t nat -P PREROUTING ACCEPT</span><br><span class="line">iptables -t nat -P POSTROUTING ACCEPT</span><br><span class="line">iptables -t nat -P OUTPUT ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -nvL</span><br><span class="line"></span><br><span class="line">192.168.1.102</span><br></pre></td></tr></table></figure><p>打开 30001 到 31000 这些端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 30001:31000 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 30001:31000 -j ACCEPT</span><br></pre></td></tr></table></figure><p>1.内网两台服务器，希望将A机器的80端口映射到B机器的8013端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A 172.16.119.128</span><br><span class="line">B 172.16.119.129</span><br></pre></td></tr></table></figure><p>2.配置文件修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">net.ipv4.ip_forward &#x3D; 1</span><br></pre></td></tr></table></figure><p>3.设置端口映射：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 172.16.119.128 -p tcp --dport 80 -j DNAT --to-destination 172.16.119.129:8013</span><br><span class="line">iptables -t nat -A POSTROUTING -d 172.16.119.129 -p tcp --dport 8013 -j SNAT --to 172.16.119.128</span><br><span class="line"></span><br><span class="line">iptables -A FORWARD -o eth0 -d 172.16.119.129 -p tcp --dport 8013 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -i eth0 -s 172.16.119.129 -p tcp --sport 8013 -j ACCEPT</span><br></pre></td></tr></table></figure><p>4.验证端口映射：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">此时，访问http:&#x2F;&#x2F;172.16.119.128&#x2F;abc.htm，应该能访问到对应129服务器上端口为8013网站的abc.htm页面</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[docker] maven+nexus+svn打包</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258023000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258023000.html/</id>
    <published>2020-04-19T01:00:23.000Z</published>
    <updated>2020-04-19T01:00:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/xiao987334176/p/12108560.html" target="_blank">Docker 搭建nexus私服</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nexus -p 8081:8081 sonatype&#x2F;nexus3</span><br></pre></td></tr></table></figure><p>访问nexus</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开浏览器，访问</span><br><span class="line">http:&#x2F;&#x2F;192.168.99.100:8081&#x2F;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f nexus</span><br></pre></td></tr></table></figure><p>查看管理员admin密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it nexus cat &#x2F;data&#x2F;nexus&#x2F;data&#x2F;admin.password</span><br></pre></td></tr></table></figure><p>添加阿里云maven代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">点击settings-&gt;Repository-&gt;Repositories</span><br><span class="line"></span><br><span class="line">点击Create repositoty按钮</span><br><span class="line"></span><br><span class="line">阿里云url为：</span><br><span class="line">http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;</span><br><span class="line"></span><br><span class="line">滚动到页面最下方，点击“Create repositoty”按钮。</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/wotoufahaiduo/p/11223834.html" target="_blank">Docker 环境下搭建nexus私服</a></p><p>jar包安装到nexus私服</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 有时项目开发时，一些maven依赖下载不下来，一直报错。这时，可以手动下载jar包，将其安装到nexus私服，再从nexus解决依赖问题。</span><br><span class="line"># 下面以安装kaptcha为例：</span><br><span class="line"></span><br><span class="line">mvn deploy:deploy-file -DgroupId&#x3D;com.google.code.kaptcha -DartifactId&#x3D;kaptcha -Dversion&#x3D;2.3 -Dpackaging&#x3D;jar -Dfile&#x3D;D:\kaptcha-2.3.2.jar -Durl&#x3D;http:&#x2F;&#x2F;192.168.99.100:8081&#x2F;repository&#x2F;third&#x2F; -DrepositoryId&#x3D;third</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/xiao987334176/p/12108560.html&quot; target=&quot;_blank&quot;&gt;Docker 搭建nexus私服&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 使用buildroot移植ARM文件系统</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258022000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258022000.html/</id>
    <published>2020-04-19T01:00:22.000Z</published>
    <updated>2020-04-19T01:00:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u014671962/article/details/79558473" target="_blank">[Linux] ARM文件系统移植记录</a></p><details><summary>buildroot-2017.02.3.tar.bz2</summary><p>安装软件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># make menuconfig需要的包</span><br><span class="line">sudo apt-get install -y libncurses5-dev</span><br><span class="line"># makeinfo需要的包</span><br><span class="line">sudo apt-get install -y texinfo</span><br><span class="line">sudo apt-get install -y g++</span><br></pre></td></tr></table></figure><p>进入buildroot-2017.02.3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;work;cd ~&#x2F;work;</span><br><span class="line">wget -c http:&#x2F;&#x2F;buildroot.org&#x2F;downloads&#x2F;buildroot-2017.02.3.tar.bz2;</span><br><span class="line">tar xvf buildroot-2017.02.3.tar.bz2;cd buildroot-2017.02.3</span><br></pre></td></tr></table></figure></details><details><summary>buildroot-2017.02.3配置</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Target options</span><br><span class="line">Target Architecture (ARM (little endian)) </span><br><span class="line">Target Architecture Variant (cortex-A9)</span><br><span class="line">Target ABI (EABI)</span><br><span class="line">ARM instruction set (ARM)</span><br><span class="line">退回上一界面</span><br><span class="line"></span><br><span class="line">Toolchain</span><br><span class="line">Toolchain type (External toolchain)</span><br><span class="line">Toolchain (Sourcery CodeBench ARM 2014.05) #选择交叉编译工具的版本</span><br><span class="line">Toolchain origin (Toolchain to be downloaded and installed) </span><br><span class="line">[*] Enable MMUsupport</span><br><span class="line">退回上一界面</span><br><span class="line"></span><br><span class="line">System configuration  ---&gt;</span><br><span class="line">(itop6818) System hostname #输入开发板的名称</span><br><span class="line">Init system (BusyBox)  ---&gt; </span><br><span class="line">&#x2F;dev management (Dynamic using devtmpfs + mdev) #选择Dynamic using mdev</span><br><span class="line">(system&#x2F;device_table_dev.txt) Path to the permission tables #在dev目录下生成各种设备节点</span><br><span class="line">(123) Root password #linux控制台终端后的密码，为空则登录时不需要密码，默认登录用户名为root。</span><br><span class="line">[*] Run a getty (login prompt) after boot</span><br><span class="line">(ttySAC2) TTY port</span><br><span class="line">Baudrate (115200)  ---&gt;</span><br><span class="line"></span><br><span class="line">(board&#x2F;metalboard&#x2F;exynos4412&#x2F;rootfs-overlay) Root filesystem overlay directories # 配置这一步的同时，我们一并将开发板光盘中的相关文件拷贝到buildroot对应的board目录。</span><br><span class="line"></span><br><span class="line">Filesystem images  ---&gt;</span><br><span class="line">[*] ext2&#x2F;3&#x2F;4 root filesystem</span><br><span class="line">ext2&#x2F;3&#x2F;4 variant (ext4)  ---&gt;</span><br><span class="line">[*] tar the root filesystem</span><br><span class="line">返回上一界面</span><br><span class="line"></span><br><span class="line">3：编译buildroot</span><br><span class="line">开始编译的时候，buildroot会自动下载所需要的相关源码包，自动编译安装。可能会弹出一些错误，这基本上是没有安装一些第三方工具造成的。按照提示安装即可，有问题问度娘。</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">3.1：下载的源码包在buildroot根目录的dl目录下</span><br><span class="line">ls dl</span><br><span class="line"></span><br><span class="line">3.2：编译出来的各种文件会放在buildroot目录下面的output目录</span><br><span class="line">ls out&#x2F;</span><br><span class="line"></span><br><span class="line">3.2.1: 需要烧写的最终的映像文件在output&#x2F;images目录下</span><br><span class="line">ls output&#x2F;images</span><br><span class="line"></span><br><span class="line">3.2.2: output&#x2F;target目录下为对应未打包的文件系统，在调试时可借助于该目录下的文件分析原因</span><br><span class="line">ls output&#x2F;target</span><br><span class="line"></span><br><span class="line">fastboot  flash  system  rootfs.ext4</span><br></pre></td></tr></table></figure></details><details><summary>qt</summary><p>菜单编辑</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br><span class="line"></span><br><span class="line"># 音频需要安装alsa库，环境变量添加：</span><br><span class="line">export ALSA_CONFIG_PATH&#x3D;&#x2F;usr&#x2F;share&#x2F;alsa&#x2F;alsa.conf</span><br><span class="line"></span><br><span class="line"># 可以用buildroot安装tslib，环境变量如下（配置按实际情况修改）：</span><br><span class="line"></span><br><span class="line">export TSLIB_TSDEVICE&#x3D;&#x2F;dev&#x2F;input&#x2F;event0</span><br><span class="line">export TSLIB_TSEVENTTYPE&#x3D;input</span><br><span class="line">export TSLIB_CONFFILE&#x3D;&#x2F;etc&#x2F;ts.conf</span><br><span class="line">export TSLIB_PLUGINDIR&#x3D;&#x2F;usr&#x2F;lib&#x2F;ts</span><br><span class="line">export TSLIB_CALIBFILE&#x3D;&#x2F;etc&#x2F;pointercal</span><br><span class="line">export TSLIB_CONSOLEDEVICE&#x3D;none</span><br><span class="line">export TSLIB_FBDEVICE&#x3D;&#x2F;dev&#x2F;fb0</span><br><span class="line"></span><br><span class="line"># 其他按实际需要选择安装</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"># buildroot的输出目录在buildroot-2017.02.3&#x2F;output中，文件系统打包在image目录下</span><br></pre></td></tr></table></figure><p>编译Qt5.7.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">解压Qt源码修改</span><br><span class="line">qt-everywhere-opensource-src-5.7.0\qtbase\mkspecs\linux-arm-gnueabi-g++\qmake.conf</span><br><span class="line"></span><br><span class="line">使用buildroot的交叉编译链</span><br><span class="line">&#x2F;home&#x2F;machine&#x2F;work&#x2F;buildroot-2017.02.3&#x2F;output&#x2F;host&#x2F;usr&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc</span><br></pre></td></tr></table></figure><p><a href="http://download.qt.io/new_archive/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz" target="_blank">编译Qt5.7.0</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -c http:&#x2F;&#x2F;download.qt.io&#x2F;new_archive&#x2F;qt&#x2F;5.7&#x2F;5.7.0&#x2F;single&#x2F;qt-everywhere-opensource-src-5.7.0.tar.gz</span><br><span class="line">tar xvf qt-everywhere-opensource-src-5.7.0.tar.gz;</span><br><span class="line">cd qt-everywhere-opensource-src-5.7.0</span><br></pre></td></tr></table></figure><p>source1.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">BUILDROOT_OUTPUT_HOST=/home/machine/work/buildroot-2017.02.3/output/host</span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/bin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/sbin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/bin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/sbin:/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/<span class="built_in">local</span>/games:/snap/bin</span><br><span class="line"></span><br><span class="line">PKG_CONFIG=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/bin/pkg-config</span><br><span class="line"></span><br><span class="line">PKG_CONFIG_LIBDIR=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/pkgconfig</span><br><span class="line"></span><br><span class="line">PKG_CONFIG_SYSROOT_DIR=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/arm-buildroot-linux-gnueabi/sysroot</span><br><span class="line"></span><br><span class="line">MAKEFLAGS=<span class="string">" --no-print-directory -rR -j5"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH PKG_CONFIG PKG_CONFIG_LIBDIR PKG_CONFIG_SYSROOT_DIR MAKEFLAGS</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">source source1.sh</span><br><span class="line"></span><br><span class="line">.&#x2F;configure \</span><br><span class="line">-nomake tests \</span><br><span class="line">-confirm-license \</span><br><span class="line">-release \</span><br><span class="line">-opensource \</span><br><span class="line">-xplatform linux-arm-gnueabi-g++ \</span><br><span class="line">-prefix &#x2F;opt&#x2F;qt5.7.0 \</span><br><span class="line">-qt-sql-sqlite \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-qt-libpng \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-nomake tests \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake tools \</span><br><span class="line">-no-opengl \</span><br><span class="line">-alsa \</span><br><span class="line">-glib \</span><br><span class="line">-pulseaudio</span><br></pre></td></tr></table></figure><p>source2.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BUILDROOT_OUTPUT_HOST=/home/machine/work/buildroot-2017.02.3/output/host</span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/bin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/sbin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/bin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/sbin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/bin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/sbin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usrbin:<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/sbin:/home/cat/bin:/home/cat/.<span class="built_in">local</span>/bin:/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin</span><br><span class="line"></span><br><span class="line">PKG_CONFIG=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/bin/pkg-config</span><br><span class="line"></span><br><span class="line">PKG_CONFIG_LIBDIR=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/arm-buildroot-linux-gnueabi/sysroot/usr/lib/pkgconfig</span><br><span class="line"></span><br><span class="line">PKG_CONFIG_SYSROOT_DIR=<span class="variable">$&#123;BUILDROOT_OUTPUT_HOST&#125;</span>/usr/arm-buildroot-linux-gnueabi/sysroot</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH PKG_CONFIG PKG_CONFIG_LIBDIR PKG_CONFIG_SYSROOT_DIR</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">source source2.sh</span><br><span class="line"></span><br><span class="line">.&#x2F;configure \</span><br><span class="line">-nomake tests \</span><br><span class="line">-confirm-license \</span><br><span class="line">-release \</span><br><span class="line">-opensource \</span><br><span class="line">-xplatform linux-arm-gnueabi-g++ \</span><br><span class="line">-prefix &#x2F;opt&#x2F;qt5.7.0 \</span><br><span class="line">-qt-sqlite \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-qt-libpng \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-nomake tests \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake tools \</span><br><span class="line">-no-opengl \</span><br><span class="line">-alsa \</span><br><span class="line">-glib \</span><br><span class="line">-pulseaudio \</span><br><span class="line">-skip serialbus</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>将编译好的Qt库（lib文件夹）和插件（plugins文件夹）复制到文件系统中。</p><p>编译好的Qt的bin目录下需要新增一个qt.conf文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Paths]</span><br><span class="line">Prefix&#x3D;..</span><br></pre></td></tr></table></figure><p>添加Qt环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export QT_QPA_FB_TSLIB&#x3D;1</span><br><span class="line">export QT_QPA_GENERIC_PLUGINS&#x3D;tslib</span><br><span class="line">export QT_QPA_PLATFORM&#x3D;LinuxFb:fb&#x3D;$TSLIB_FBDEVICE</span><br><span class="line">export QT_QPA_PLATFORM_PLUGIN_PATH&#x3D;&#x2F;usr&#x2F;plugins</span><br><span class="line">export QT_QPA_FONTDIR&#x3D;&#x2F;usr&#x2F;lib&#x2F;fonts</span><br><span class="line">export QML_IMPORT_PATH&#x3D;&#x2F;usr&#x2F;qml</span><br><span class="line">export QML2_IMPORT_PATH&#x3D;&#x2F;usr&#x2F;qml</span><br></pre></td></tr></table></figure></details><p><a href="http://www.linuxdiyf.com/linux/22191.html" target="_blank">使用buildroot搭建linux文件系统</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u014671962/article/details/79558473&quot; target=&quot;_blank&quot;&gt;[Linux] ARM文件系统移植记录&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;buildr
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 嵌入式程序仿真调试(GDB)</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258021000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258021000.html/</id>
    <published>2020-04-19T01:00:21.000Z</published>
    <updated>2020-04-19T01:00:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/simonforfuture/article/details/79268419" target="_blank">Linux下嵌入式程序仿真调试(GDB)</a></p><p>gdb的编译过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 创建gdb放置的目录</span><br><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-gdb</span><br><span class="line">wget -c http:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;gdb&#x2F;gdb-8.1.tar.gz</span><br><span class="line"># 解压</span><br><span class="line">tar -xvf gdb-8.1.tar.gz</span><br><span class="line"># 配置</span><br><span class="line">.&#x2F;configure --target&#x3D;arm-linux-gnueabihf --host&#x3D;arm-linux-gnueabihf --program-prefix&#x3D;arm-linux-gnueabihf- --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-gdb CC&#x3D;arm-linux-gnueabihf-gcc</span><br><span class="line"># 编译、安装</span><br><span class="line">make -j 4;make install</span><br></pre></td></tr></table></figure><p>gdbserver编译过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd $(pwd)&#x2F;gdb-8.1&#x2F;gdb&#x2F;gdbserver</span><br><span class="line"></span><br><span class="line"># 配置</span><br><span class="line">.&#x2F;configure --target&#x3D;arm-linux-gnueabihf --host&#x3D;arm-linux-gnueabihf  CC&#x3D;arm-linux-gnueabihf-gcc</span><br><span class="line"></span><br><span class="line"># 编译</span><br><span class="line">make </span><br><span class="line"># 注意：不需要make install</span><br><span class="line"># 去除符号信息</span><br><span class="line">arm-linux-gnueabihf-strip gdbserver -o gdbserver</span><br></pre></td></tr></table></figure><p>要直接这样使用arm-linux-gnueabihf-gdb，需要设置环境变量，示例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-gdb&#x2F;bin</span><br></pre></td></tr></table></figure><p>gdb-multiarch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y gdb-multiarch</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/simonforfuture/article/details/79268419&quot; target=&quot;_blank&quot;&gt;Linux下嵌入式程序仿真调试(GDB)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gdb的编译过程&lt;/p&gt;
&lt;fig
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] sh不能访问; 进程control关闭</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258020000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258020000.html/</id>
    <published>2020-04-19T01:00:20.000Z</published>
    <updated>2020-04-19T01:00:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>busybox “sh: can’t access tty; job control turned off” 问题的解决</p><p>查看设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;devices</span><br></pre></td></tr></table></figure><p>创建设备文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mknod -m 666 &#x2F;dev&#x2F;ttySAC0 c 204 64</span><br></pre></td></tr></table></figure><p>su - root 问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;dev&#x2F;tty1</span><br><span class="line"></span><br><span class="line"># 删除原有&#x2F;dev&#x2F;console这个设备节点</span><br><span class="line">rm &#x2F;dev&#x2F;console</span><br><span class="line"></span><br><span class="line"># 用tty1代替</span><br><span class="line">mknod -m 600 tty1 c 4 1</span><br><span class="line">ln -s &#x2F;dev&#x2F;tty1 &#x2F;dev&#x2F;console</span><br></pre></td></tr></table></figure><p>/bin/sh: can’t access tty; job control turned off</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;inittab</span><br><span class="line">console::askfirst:-&#x2F;bin&#x2F;sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;busybox “sh: can’t access tty; job control turned off” 问题的解决&lt;/p&gt;
&lt;p&gt;查看设备&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818+ubuntu系统移植</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258019000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587258019000.html/</id>
    <published>2020-04-19T01:00:19.000Z</published>
    <updated>2020-04-19T01:00:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/Hpkdm8yiDj3fB3QT3zu8lQ" target="_blank">I.MX6ULL终结者开发板移植ubuntu</a></p><details><summary>ubuntu-base + 替换镜像源</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;ubuntu-base;</span><br><span class="line">wget -c http:&#x2F;&#x2F;cdimage.ubuntu.com&#x2F;ubuntu-base&#x2F;releases&#x2F;16.04.5&#x2F;release&#x2F;ubuntu-base-16.04.5-base-armhf.tar.gz</span><br><span class="line">tar xvf ubuntu-base-16.04.5-base-armhf.tar.gz -C ~&#x2F;ubuntu-base&#x2F;</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y qemu-user-static</span><br><span class="line">cp &#x2F;usr&#x2F;bin&#x2F;qemu-arm-static ~&#x2F;ubuntu-base&#x2F;usr&#x2F;bin&#x2F;</span><br><span class="line">cp &#x2F;etc&#x2F;resolv.conf ~&#x2F;ubuntu-base&#x2F;etc&#x2F;resolv.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; ~&#x2F;ubuntu-base&#x2F;etc&#x2F;apt&#x2F;sources.list &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial main multiverse restricted universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-backports main multiverse restricted universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-proposed main multiverse restricted universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-security main multiverse restricted universe</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-updates main multiverse restricted universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial main multiverse restricted universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-backports main multiverse restricted universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-proposed main multiverse restricted universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-security main multiverse restricted universe</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu-ports&#x2F; xenial-updates main multiverse restricted universe</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></details><details><summary>在ubuntu-base中安装基本命令、配置串口终端</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 挂载proc, sys, dev, dev&#x2F;pts等文件系统</span><br><span class="line">cd ~&#x2F;</span><br></pre></td></tr></table></figure><p>挂载脚本：<br>mount.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; mount.sh &lt;&lt;EOF</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;MOUNTING&quot;</span><br><span class="line">mount -t proc &#x2F;proc $(pwd)&#x2F;ubuntu-base&#x2F;proc</span><br><span class="line">mount -t sysfs &#x2F;sys $(pwd)&#x2F;ubuntu-base&#x2F;sys</span><br><span class="line">mount -o bind &#x2F;dev $(pwd)&#x2F;ubuntu-base&#x2F;dev</span><br><span class="line">mount -o bind &#x2F;dev&#x2F;pts $(pwd)&#x2F;ubuntu-base&#x2F;dev&#x2F;pts</span><br><span class="line">chroot $(pwd)&#x2F;ubuntu-base&#x2F;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>卸载脚本：<br>umount.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; umount.sh &lt;&lt;EOF</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;UNMOUNTING&quot;</span><br><span class="line">sudo umount $(pwd)&#x2F;ubuntu-base&#x2F;proc</span><br><span class="line">sudo umount $(pwd)&#x2F;ubuntu-base&#x2F;sys</span><br><span class="line">sudo umount $(pwd)&#x2F;ubuntu-base&#x2F;dev&#x2F;pts</span><br><span class="line">sudo umount $(pwd)&#x2F;ubuntu-base&#x2F;dev</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>运行挂载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 mount.sh umount.sh</span><br><span class="line">sudo sh mount.sh</span><br></pre></td></tr></table></figure><p>挂载根文件系统并chroot</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">rm -vf &#x2F;var&#x2F;lib&#x2F;apt&#x2F;lists&#x2F;*</span><br><span class="line">chmod 777 &#x2F;tmp</span><br><span class="line">apt-get update --allow-unauthenticated</span><br><span class="line">apt install -y sudo</span><br><span class="line">apt install -y language-pack-en-base</span><br><span class="line">apt install -y ssh</span><br><span class="line">apt install -y net-tools</span><br><span class="line">apt install -y ethtool</span><br><span class="line">apt install -y ifupdown</span><br><span class="line">apt install -y iputils-ping</span><br><span class="line">apt install -y rsyslog</span><br><span class="line">apt install -y htop</span><br><span class="line">apt install -y vim</span><br><span class="line"></span><br><span class="line"># 设置root用户密码</span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line"># 接下来使用如下命令设置主机名称和本机IP：</span><br><span class="line">echo &quot;itop6818&quot; &gt; &#x2F;etc&#x2F;hostname</span><br><span class="line">echo &quot;127.0.0.1 localhost&quot; &gt;&gt; &#x2F;etc&#x2F;hosts</span><br><span class="line">echo &quot;127.0.0.1 itop6818&quot; &gt;&gt; &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p>配置串口终端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#由于我用的是i.mx6u的平台，需要添加一个名为getty@ttymxc0.service的链接，连接到getty@.service服务。i.mx的平台是ttymxc0。</span><br><span class="line"></span><br><span class="line">ln -s &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;getty@.service &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;getty.target.wants&#x2F;getty@ttymxc0.service</span><br></pre></td></tr></table></figure><p>接下来配置DHCP，也可以等下载到开发板之后在配置，但启动时会很慢。使用如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;</span><br><span class="line">echo auto eth0 &gt; &#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;eth0</span><br><span class="line">echo iface eth0 inet dhcp &gt;&gt; &#x2F;etc&#x2F;network&#x2F;interfaces.d&#x2F;eth0</span><br></pre></td></tr></table></figure><p>退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br><span class="line"></span><br><span class="line">sudo sh umount.sh</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Hpkdm8yiDj3fB3QT3zu8lQ&quot; target=&quot;_blank&quot;&gt;I.MX6ULL终结者开发板移植ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;ubuntu-base
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[hexo] 内存溢出问题</title>
    <link href="http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587237032000.html/"/>
    <id>http://brightereyer.xyz/2020/04/19/articles/2020/04/19/1587237032000.html/</id>
    <published>2020-04-18T19:10:32.000Z</published>
    <updated>2020-04-18T19:10:32.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node_modules&#x2F;hexo&#x2F;bin&#x2F;hexo</span><br><span class="line"></span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env node --max_old_space_size&#x3D;8192</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://brightereyer.xyz/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 交叉编译</title>
    <link href="http://brightereyer.xyz/2020/04/17/articles/2020/04/17/1587122927000.html/"/>
    <id>http://brightereyer.xyz/2020/04/17/articles/2020/04/17/1587122927000.html/</id>
    <published>2020-04-17T11:28:47.000Z</published>
    <updated>2020-04-17T11:28:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/cnsword/article/details/9959515" target="_blank">交叉编译git</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf</span><br></pre></td></tr></table></figure><details><summary>git依赖openssl、zlib、curl、expat</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir git;cd git</span><br><span class="line">mkdir openssl.install</span><br><span class="line">mkdir zlib.install</span><br><span class="line">mkdir curl.install</span><br><span class="line">mkdir expat.install</span><br><span class="line">mkdir build</span><br><span class="line"></span><br><span class="line">wget -c http:&#x2F;&#x2F;www.openssl.org&#x2F;source&#x2F;openssl-1.0.1h.tar.gz</span><br><span class="line">wget -c https:&#x2F;&#x2F;jaist.dl.sourceforge.net&#x2F;project&#x2F;libpng&#x2F;zlib&#x2F;1.2.8&#x2F;zlib-1.2.8.tar.gz</span><br><span class="line">wget -c https:&#x2F;&#x2F;curl.haxx.se&#x2F;download&#x2F;curl-7.55.1.tar.gz</span><br><span class="line">wget -c http:&#x2F;&#x2F;downloads.sourceforge.net&#x2F;expat&#x2F;expat-2.0.1.tar.gz</span><br><span class="line">wget -c https:&#x2F;&#x2F;www.kernel.org&#x2F;pub&#x2F;software&#x2F;scm&#x2F;git&#x2F;git-2.11.1.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf openssl-1.0.1h.tar.gz</span><br><span class="line">tar zxvf zlib-1.2.8.tar.gz</span><br><span class="line">tar xvf curl-7.55.1.tar.bz2</span><br><span class="line">tar xvf expat-2.0.1.tar.gz</span><br><span class="line">tar xvf git-2.11.1.tar.gz</span><br></pre></td></tr></table></figure></details><details><summary>编译openssl(ok)</summary><p><a href="https://blog.csdn.net/weixin_42432281/article/details/87189341" target="_blank">编译openssl(ok)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cd openssl-1.0.1h</span><br><span class="line">cat Makefile</span><br><span class="line"># 修改Makefile，CC、RANLIB、MAKEDEPPROG为对应的交叉编译器</span><br><span class="line">cat Makefile|grep CC</span><br><span class="line">cat Makefile|grep RANLIB</span><br><span class="line">cat Makefile|grep MAKEDEPPROG</span><br><span class="line"></span><br><span class="line">export CROSS_COMPILE&#x3D;</span><br><span class="line"></span><br><span class="line">CC&#x3D;arm-linux-gnueabihf-gcc</span><br><span class="line">.&#x2F;config -fPIC no-shared no-asm -static --prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;</span><br><span class="line"></span><br><span class="line">cat Makefile | grep &quot;\-m64&quot;</span><br><span class="line">sed -i &quot;s&#x2F;\-m64&#x2F; &#x2F;g&quot; Makefile</span><br><span class="line">#sed -i &quot;s&#x2F;\-m64&#x2F;\-fPIC&#x2F;g&quot; Makefile</span><br><span class="line"></span><br><span class="line">.&#x2F;Configure \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install \</span><br><span class="line">os&#x2F;compiler:&#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-gcc</span><br><span class="line"></span><br><span class="line">make -j 8;make install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#拷贝libssl.so和libcrypto.so到相应目录</span><br><span class="line">#拷贝include文件到对应目录</span><br></pre></td></tr></table></figure></details><details><summary>编译zlib(ok)</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd ..&#x2F;zlib-1.2.8</span><br><span class="line"></span><br><span class="line">.&#x2F;configure \</span><br><span class="line">CC&#x3D;&#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-gcc \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;zlib.install</span><br><span class="line"></span><br><span class="line">make -j 8;make install</span><br><span class="line"></span><br><span class="line">#拷贝libzlib.so到相应目录，拷贝zlib.h、zconf.h到include目录</span><br></pre></td></tr></table></figure></details><details><summary>编译curl(ok)</summary><p><a href="https://curl.haxx.se/docs/install.html" target="_blank">编译curl(ok)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">cd ..&#x2F;curl-7.55.1</span><br><span class="line"></span><br><span class="line">.&#x2F;buildconf</span><br><span class="line"></span><br><span class="line">env PKG_CONFIG_PATH&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;lib&#x2F;pkgconfig \</span><br><span class="line">CPPFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include&quot; \</span><br><span class="line">LDFLAGS&#x3D;&quot;-L&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;lib&quot; \</span><br><span class="line">LIBS&#x3D;&quot;-ldl&quot; \</span><br><span class="line">CC&#x3D;arm-linux-gnueabihf-gcc \</span><br><span class="line">CXX&#x3D;arm-linux-gnueabihf-g++ \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-linux-gnueabihf \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install \</span><br><span class="line">--with-ssl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install \</span><br><span class="line">--with-zlib&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;zlib.install \</span><br><span class="line">--enable-shared \</span><br><span class="line">--enable-static \</span><br><span class="line">--disable-dict \</span><br><span class="line">--disable-ftp \</span><br><span class="line">--disable-imap \</span><br><span class="line">--disable-ldap \</span><br><span class="line">--disable-ldaps \</span><br><span class="line">--disable-pop3 \</span><br><span class="line">--disable-proxy \</span><br><span class="line">--disable-rtsp \</span><br><span class="line">--disable-smtp \</span><br><span class="line">--disable-telnet \</span><br><span class="line">--disable-tftp \</span><br><span class="line">--disable-zlib \</span><br><span class="line">--without-ca-bundle \</span><br><span class="line">--without-gnutls \</span><br><span class="line">--without-libidn \</span><br><span class="line">--without-librtmp \</span><br><span class="line">--without-libssh2 \</span><br><span class="line">--without-nss</span><br><span class="line"></span><br><span class="line">make -j 8;make install</span><br><span class="line"></span><br><span class="line">#拷贝libcurl.so到相应的目录</span><br></pre></td></tr></table></figure></details><details><summary>检查有没有curl</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;include&#x2F;</span><br><span class="line"></span><br><span class="line">#没有的话，需要把解压出的include文件夹下的文件复制过去</span><br><span class="line">cp -r &#x2F;home&#x2F;machine&#x2F;git&#x2F;curl-7.55.1&#x2F;include&#x2F;curl&#x2F; &#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;include&#x2F;</span><br><span class="line"></span><br><span class="line"># 检查库和头文件</span><br><span class="line">curl-config --cflags -I&#x2F;usr&#x2F;local&#x2F;include</span><br><span class="line">curl-config --libs -L&#x2F;usr&#x2F;local&#x2F;lib -lcurl</span><br><span class="line"></span><br><span class="line">以后使用gcc编译使用libcurl的c代码，都需加上-lcurl</span><br></pre></td></tr></table></figure></details><details><summary>编译expat(ok)</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd ..&#x2F;expat-2.0.1</span><br><span class="line"></span><br><span class="line">CC&#x3D;&#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-gcc \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-linux-gnueabihf \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install</span><br><span class="line"></span><br><span class="line">make -j 8;make install;</span><br></pre></td></tr></table></figure></details><details><summary>编译git(fail)</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cd ..&#x2F;git-2.11.1</span><br><span class="line"></span><br><span class="line">env PKG_CONFIG_PATH&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;lib&#x2F;pkgconfig \</span><br><span class="line">CFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F; -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;include&quot; \</span><br><span class="line">CPPFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F; -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;include&quot; \</span><br><span class="line">LDFLAGS&#x3D;&quot;-L&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;lib&quot; \</span><br><span class="line">LIBS&#x3D;&quot;-lcurl&quot; \</span><br><span class="line">CC&#x3D;arm-linux-gnueabihf-gcc \</span><br><span class="line">CXX&#x3D;arm-linux-gnueabihf-g++ \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-linux-gnueabihf \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;build \</span><br><span class="line">--with-ssl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install \</span><br><span class="line">--with-curl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install \</span><br><span class="line">--with-expat&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install</span><br><span class="line"></span><br><span class="line">make NO_EXPAT&#x3D;1 -j 8</span><br><span class="line">#或</span><br><span class="line">make config</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/cnsword/article/details/9959515&quot; target=&quot;_blank&quot;&gt;交叉编译git&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[linux] 批量依赖库拷贝(ldd)</title>
    <link href="http://brightereyer.xyz/2020/04/17/articles/2020/04/17/1587072558000.html/"/>
    <id>http://brightereyer.xyz/2020/04/17/articles/2020/04/17/1587072558000.html/</id>
    <published>2020-04-16T21:29:18.000Z</published>
    <updated>2020-04-16T21:29:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、通过LDD查看依赖的动态库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldd &#x2F;opt&#x2F;qt5.7.0&#x2F;bin&#x2F;qmake</span><br></pre></td></tr></table></figure><p>2、写一个SHELL脚本，自动拷贝依赖的动态库<br>vi outlib.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deplist&#x3D;$( ldd $1 | awk &#39;&#123;if (match($3,&quot;&#x2F;&quot;))&#123; print $3&#125;&#125;&#39; )</span><br><span class="line">cp -L -n $deplist $2</span><br><span class="line"></span><br><span class="line">#-L 表示拷贝文件（如果是软链，会拷贝到最终的文件）</span><br><span class="line">#-n 表示不覆盖已有文件</span><br></pre></td></tr></table></figure><p>3、创建目标目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;tmp&#x2F;lib</span><br></pre></td></tr></table></figure><p>4、将qmake依赖的动态库拷贝到目标目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x outlib.sh</span><br><span class="line">.&#x2F;outlib.sh &#x2F;opt&#x2F;qt5.7.0&#x2F;bin&#x2F;qmake &#x2F;tmp&#x2F;lib&#x2F;</span><br><span class="line">ll &#x2F;tmp&#x2F;lib</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、通过LDD查看依赖的动态库&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td clas
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植openssh</title>
    <link href="http://brightereyer.xyz/2020/04/15/articles/2020/04/15/1586950113000.html/"/>
    <id>http://brightereyer.xyz/2020/04/15/articles/2020/04/15/1586950113000.html/</id>
    <published>2020-04-15T11:28:33.000Z</published>
    <updated>2020-04-15T11:28:33.000Z</updated>
    
    <content type="html"><![CDATA[<details><summary>OpenSSH移植到ARM Linux教程</summary><p><a href="https://www.veryarm.com/892.html" target="_blank">奇手 OpenSSH移植到ARM Linux教程</a></p><p>1 移植openssh需要三个包：openssh、openssl( OpenSSL &gt;= 1.0.1 &lt; 1.1.0) 和 zlib，地址如下：<br><a href="http://www.zlib.net/" target="_blank">zlib</a><br><a href="http://www.openssl.org/source" target="_blank">openssl</a><br><a href="http://www.openssh.com/portable.html" target="_blank">openssh</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">因为它们之间没有版本所谓的版本冲突，所以都下载最新板的即可。</span><br><span class="line">本文以zlib-1.2.8.tar.gz、openssl-1.0.1h.tar.gz、openssh-6.6p1.tar.gz这三个版本为例，其他版本过程一样</span><br></pre></td></tr></table></figure><p>2 部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 因为移植过程涉及到三个包，所以先部署好工作目录，有利于移植过程的顺利进行</span><br><span class="line"></span><br><span class="line">cd                                                 # 切换到用户目录</span><br><span class="line">mkdir ssh                                          # 新建 ssh 工作目录</span><br><span class="line">cd ssh                                             # 进入 ssh 目录  </span><br><span class="line">mkdir zlib.install                                 # 新建 zlib 安装目录，移植过程 zlib 镜像会安装到该目录</span><br><span class="line">mkdir openssl.install                              # 新建 openssl 安装目录，移植过程 openssl 镜像会安装到该目录</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;  # 配置交叉编译器路径到 PATH 环境变量</span><br></pre></td></tr></table></figure><p>3 复制解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 将 zlib-1.2.8.tar.gz、openssl-1.0.1h.tar.gz、openssh-6.6p1.tar.gz 三个源码包复制到ssh目录下，并解压：</span><br><span class="line"></span><br><span class="line">wget -c https:&#x2F;&#x2F;jaist.dl.sourceforge.net&#x2F;project&#x2F;libpng&#x2F;zlib&#x2F;1.2.8&#x2F;zlib-1.2.8.tar.gz</span><br><span class="line">wget -c http:&#x2F;&#x2F;www.openssl.org&#x2F;source&#x2F;openssl-1.0.1h.tar.gz</span><br><span class="line">wget -c http:&#x2F;&#x2F;distfiles.macports.org&#x2F;openssh&#x2F;openssh-6.6p1.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf zlib-1.2.8.tar.gz</span><br><span class="line">tar zxvf openssl-1.0.1h.tar.gz</span><br><span class="line">tar zxvf openssh-6.6p1.tar.gz</span><br></pre></td></tr></table></figure><p>4 交叉编译 zlib</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 首先编译zlib成镜像，供最后编译 openssh 用</span><br><span class="line"></span><br><span class="line">cd zlib-1.2.8</span><br><span class="line">prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;ssh&#x2F;zlib.install CC&#x3D;arm-none-linux-gnueabi-gcc .&#x2F;configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"># 这里第二部配置的时候，prefix前面没有“--”，CC后面是交叉编译器，“.&#x2F;configure”要放在最后。</span><br><span class="line"># 完成后，会在指定目录“&#x2F;home&#x2F;machine&#x2F;ssh&#x2F;zlib.install”下生成镜像文件。</span><br></pre></td></tr></table></figure><p>5 交叉编译openssl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 编译 openssl 成镜像，也是供最后编译 openssh 用</span><br><span class="line"></span><br><span class="line">cd ..&#x2F;openssl-1.0.1h</span><br><span class="line"></span><br><span class="line"># 若&#x2F;etc&#x2F;profile，指定了：</span><br><span class="line">export CROSS_COMPILE&#x3D;arm-none-linux-gnueabi-</span><br><span class="line"># 则临时执行</span><br><span class="line">export CROSS_COMPILE&#x3D;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.&#x2F;Configure \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;ssh&#x2F;openssl.install \</span><br><span class="line">os&#x2F;compiler:arm-none-linux-gnueabi-gcc</span><br><span class="line">make -j 8</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">#其中.&#x2F;Configure第一个字母是大写的，交叉编译使用os&#x2F;compiler来指定</span><br></pre></td></tr></table></figure><p>6 交叉编译openssh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 编译openssh会引用上面编译的zlib和openssl的安装目录，如下</span><br><span class="line">cd ..&#x2F;openssh-6.6p1</span><br><span class="line"></span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi \</span><br><span class="line">--with-libs \</span><br><span class="line">--with-zlib&#x3D;&#x2F;home&#x2F;machine&#x2F;ssh&#x2F;zlib.install \</span><br><span class="line">--with-ssl-dir&#x3D;&#x2F;home&#x2F;machine&#x2F;ssh&#x2F;openssl.install \</span><br><span class="line">--disable-etc-default-login \</span><br><span class="line">CC&#x3D;arm-none-linux-gnueabi-gcc \</span><br><span class="line">AR&#x3D;arm-none-linux-gnueabi-ar</span><br><span class="line"></span><br><span class="line">make -j 8</span><br><span class="line">#注意：openssh不需要 make install</span><br></pre></td></tr></table></figure><p>7 目标板准备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 确保目标板上有以下目录，若没有，则新建：</span><br><span class="line"></span><br><span class="line">mkdir -p \</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin \</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;etc \</span><br><span class="line">&#x2F;usr&#x2F;libexec \</span><br><span class="line">&#x2F;var&#x2F;run \</span><br><span class="line">&#x2F;var&#x2F;empty</span><br><span class="line"></span><br><span class="line"># 将PC机 &#x2F;home&#x2F;machine&#x2F;ssh&#x2F;openssh-6.6p1&#x2F; 目录下文件拷贝到目标板系统中，具体为：</span><br><span class="line">scp、sftp、ssh sshd、ssh-add、ssh-agent、ssh-keygen、ssh-keyscan 共8个文件拷贝到目标板 &#x2F;usr&#x2F;local&#x2F;bin</span><br><span class="line">moduli、ssh_config、sshd_config 共3个文件拷贝到目标板 &#x2F;usr&#x2F;local&#x2F;etc</span><br><span class="line">sftp-server、ssh-keysign 共2个文件拷贝到目标板 &#x2F;usr&#x2F;libexec&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;BrighterEyer&#x2F;itop6818-transplant-openssh;</span><br><span class="line">cd itop6818-transplant-openssh&#x2F;</span><br><span class="line">mkdir -p \</span><br><span class="line">usr&#x2F;local&#x2F;bin \</span><br><span class="line">usr&#x2F;local&#x2F;etc \</span><br><span class="line">usr&#x2F;libexec \</span><br><span class="line">var&#x2F;run \</span><br><span class="line">var&#x2F;empty</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cp scp itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp sftp itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp ssh itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp sshd itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp ssh-add itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp ssh-agent itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp ssh-keygen itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line">cp ssh-keyscan itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;bin&#x2F;;</span><br><span class="line"></span><br><span class="line">cp moduli itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;etc&#x2F;;</span><br><span class="line">cp ssh_config itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;etc&#x2F;;</span><br><span class="line">cp sshd_config itop6818-transplant-openssh&#x2F;usr&#x2F;local&#x2F;etc&#x2F;;</span><br><span class="line"></span><br><span class="line">cp sftp-server itop6818-transplant-openssh&#x2F;usr&#x2F;libexec&#x2F;;</span><br><span class="line">cp ssh-keysign itop6818-transplant-openssh&#x2F;usr&#x2F;libexec&#x2F;;</span><br><span class="line"></span><br><span class="line">cd itop6818-transplant-openssh;</span><br><span class="line">git add *</span><br><span class="line">git commit -m &quot;tansplant openssh&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>8 生成Key文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p \</span><br><span class="line">&#x2F;var&#x2F;run \</span><br><span class="line">&#x2F;var&#x2F;empty</span><br><span class="line"></span><br><span class="line"># 在开发板 &#x2F;usr&#x2F;local&#x2F;etc&#x2F; 目录下生成key文件：</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;etc&#x2F;</span><br><span class="line">ssh-keygen -t rsa -f ssh_host_rsa_key -N &quot;&quot;</span><br><span class="line">ssh-keygen -t dsa -f ssh_host_dsa_key -N &quot;&quot;</span><br><span class="line">ssh-keygen -t ecdsa -f ssh_host_ecdsa_key -N &quot;&quot;</span><br><span class="line">ssh-keygen -t dsa -f ssh_host_ed25519_key -N &quot;&quot;</span><br><span class="line"></span><br><span class="line"># 修改 ssh_host_ed25519_key 权限为 600：</span><br><span class="line">chmod 600 ssh_host_ed25519_key</span><br><span class="line"></span><br><span class="line">chmod 700 &#x2F;usr&#x2F;local&#x2F;etc&#x2F;ssh_host_*</span><br><span class="line"></span><br><span class="line"># 其中 ssh_host_ed25519_key 是SSH第二版协议用到的key，需要修改权限，否则会提示以下错误：</span><br><span class="line"></span><br><span class="line">Permissions 0644 for &#39;&#x2F;usr&#x2F;local&#x2F;etc&#x2F;ssh_host_ed25519_key&#39; are too open.</span><br><span class="line">It is required that your private key files are NOT accessible by others.</span><br><span class="line">This private key will be ignored.</span><br><span class="line">bad permissions: ignore key: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;ssh_host_ed25519_key</span><br><span class="line">Could not load host key: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;ssh_host_ed25519_key</span><br></pre></td></tr></table></figure><p>9 开发板用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 打开 &#x2F;etc&#x2F;passwd 文件，在最后添加下面这一行：</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:&#x2F;var&#x2F;empty&#x2F;sshd:&#x2F;sbin&#x2F;nologin</span><br><span class="line"></span><br><span class="line"># 如果开发板的 root 用户还没有密码，键入以下命令然输入两次密码来修改，否其他设备无法连：</span><br><span class="line">passwd root</span><br></pre></td></tr></table></figure><p>10 测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 在开发板上运行：</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;sshd</span><br><span class="line"></span><br><span class="line"># 可以用 ps 命令查看sshd是否在工作:</span><br><span class="line">ps -ef|grep sshd</span><br><span class="line"></span><br><span class="line"># 如果运行的过程中有提示缺少动态连接库，可以在主机上搜索相应文件，拷贝到目标板&#x2F;lib&#x2F;目录下面，注意创建软连接！OK！不出意外的话可以成功</span><br></pre></td></tr></table></figure><p>主机上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@192.168.1.250（开发板的ip）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R 192.168.1.102</span><br><span class="line">cat &#x2F;usr&#x2F;local&#x2F;etc&#x2F;sshd_config</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;details&gt;
&lt;summary&gt;OpenSSH移植到ARM Linux教程&lt;/summary&gt;

&lt;p&gt;&lt;a href=&quot;https://www.veryarm.com/892.html&quot; target=&quot;_blank&quot;&gt;奇手 OpenSSH移植到ARM Linux教程&lt;/
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植iptables</title>
    <link href="http://brightereyer.xyz/2020/04/15/articles/2020/04/15/1586950112000.html/"/>
    <id>http://brightereyer.xyz/2020/04/15/articles/2020/04/15/1586950112000.html/</id>
    <published>2020-04-15T11:28:32.000Z</published>
    <updated>2020-04-15T11:28:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/BrighterEyer/itop6818-mt6620-4g-files/blob/master/mt6620/AP" target="_blank">gitee 交叉编译完成的iptables路径</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 文件清单</span><br><span class="line">lib_iptables.tar.gz</span><br><span class="line">xtables-multi</span><br><span class="line"></span><br><span class="line"># 在开发板上解压和放置</span><br><span class="line">tar xvf lib_iptables.tar.gz -C &#x2F;bin&#x2F;</span><br><span class="line"></span><br><span class="line"># 在开发板上修改权限、放置与重命名</span><br><span class="line">chmod 777 xtables-multi;</span><br><span class="line">mv xtables-multi &#x2F;bin&#x2F;iptables</span><br></pre></td></tr></table></figure><details><summary>移植iptables</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;BrighterEyer&#x2F;itop6818-mt6620-4g-files</span><br><span class="line">cd itop6818-mt6620-4g-files&#x2F;mt6620&#x2F;AP;</span><br></pre></td></tr></table></figure><p>ubuntu虚拟机上交叉编译环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin</span><br><span class="line">export CROSS_COMPILE&#x3D;arm-none-linux-gnueabi-</span><br></pre></td></tr></table></figure><p>ubuntu虚拟机上交叉编译iptables</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -vxf iptables-1.4.19.tar.bz2 -C &#x2F;usr&#x2F;local;cd &#x2F;usr&#x2F;local&#x2F;iptables-1.4.19;</span><br><span class="line">mkdir install;</span><br><span class="line">.&#x2F;configure --enable-static --disable-shared --host&#x3D;arm-none-linux-gnueabi --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;iptables-1.4.19&#x2F;install&#x2F;</span><br><span class="line">make;make install;</span><br><span class="line">cd install&#x2F;lib;tar zcvf lib_iptables.tar.gz *</span><br></pre></td></tr></table></figure><p>需要拷贝到开发板的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;iptables-1.4.19&#x2F;install&#x2F;lib&#x2F;ib_iptables.tar.gz</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;iptables-1.4.19&#x2F;install&#x2F;sbin&#x2F;xtables-multi</span><br><span class="line"></span><br><span class="line">lib_iptables.tar.gz 拷贝到开发板 bin 目录下并解压</span><br><span class="line">xtables-multi 拷贝到开发板的 bin 目录，chmod 777 xtables-multi;mv xtables-multi iptables</span><br></pre></td></tr></table></figure><p>开发板上执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 23 -j ACCEPT</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/BrighterEyer/itop6818-mt6620-4g-files/blob/master/mt6620/AP&quot; target=&quot;_blank&quot;&gt;gitee 交叉编译完成的iptables路径&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818移植ubuntu12+arm-linux-gnueabihf编译QtE5.7到arm</title>
    <link href="http://brightereyer.xyz/2020/04/12/articles/2020/04/12/1586621900000.html/"/>
    <id>http://brightereyer.xyz/2020/04/12/articles/2020/04/12/1586621900000.html/</id>
    <published>2020-04-11T16:18:20.000Z</published>
    <updated>2020-04-11T16:18:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/Hpkdm8yiDj3fB3QT3zu8lQ" target="_blank">I.MX6ULL终结者开发板移植ubuntu</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#支持32位</span><br><span class="line">sudo apt-get install -y lib32ncurses5 lib32z1 lib32stdc++6</span><br><span class="line">cd ~&#x2F;work&#x2F;</span><br></pre></td></tr></table></figure><details><summary>安装gcc指定版本</summary><p><a href="https://blog.csdn.net/xiangxianghehe/article/details/79675468" target="_blank">ubuntu安装GCC5/GCC7/GCC9</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:ubuntu-toolchain-r&#x2F;test</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y gcc-5 g++-5</span><br><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;gcc gcc &#x2F;usr&#x2F;bin&#x2F;gcc-5 60</span><br><span class="line">sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;g++ g++ &#x2F;usr&#x2F;bin&#x2F;g++-5 60</span><br></pre></td></tr></table></figure></details><details><summary>arm-linux-gnueabihf</summary><p>命令安装方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#会依照目前gcc版本下载</span><br><span class="line">sudo apt install -y gcc-arm-linux-gnueabihf</span><br><span class="line">sudo apt install -y g++-arm-linux-gnueabihf</span><br></pre></td></tr></table></figure><p>源码安装方式+环境变量设置<br><a href="http://releases.linaro.org/archive/14.09/components/toolchain/binaries/gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux.tar.bz2" target="_blank">gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux.tar.xz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -c http:&#x2F;&#x2F;releases.linaro.org&#x2F;archive&#x2F;14.09&#x2F;components&#x2F;toolchain&#x2F;binaries&#x2F;gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux.tar.bz2</span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;arm&#x2F;</span><br><span class="line">tar -xvf gcc-linaro-arm-linux-gnueabihf-4.9-2014.09_linux.tar.xz -C &#x2F;usr&#x2F;local&#x2F;arm&#x2F;</span><br><span class="line">mv &#x2F;usr&#x2F;local&#x2F;arm&#x2F;gcc-linaro* &#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-linux-gnueabihf-4.9&#x2F;</span><br></pre></td></tr></table></figure><p>环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-linux-gnueabihf-4.9&#x2F;bin</span><br><span class="line">export CROSS_COMPILE&#x3D;arm-linux-gnueabihf-</span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure></details><details><summary>解压源码 tslib-1.4.tar.gz</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y autoconf automake libtool</span><br><span class="line">cd ~&#x2F;work&#x2F;</span><br><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;BrighterEyer&#x2F;itop6818-QtE5.7-files;cd itop6818-QtE5.7-files</span><br><span class="line">tar xvf tslib-1.4.tar.gz;cd tslib</span><br><span class="line"></span><br><span class="line">sudo vim ~&#x2F;work&#x2F;itop6818-QtE5.7-files&#x2F;tslib&#x2F;tests&#x2F;ts_calibrate.c</span><br><span class="line">#第226行 到 第230行</span><br><span class="line">                if ((calfile &#x3D; getenv(&quot;TSLIB_CALIBFILE&quot;)) !&#x3D; NULL) &#123;</span><br><span class="line">                        cal_fd &#x3D; open (calfile, O_CREAT | O_RDWR,0777);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                        cal_fd &#x3D; open (&quot;&#x2F;etc&#x2F;pointercal&quot;, O_CREAT | O_RDWR,0777);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">export ARCH&#x3D;arm</span><br><span class="line"></span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure CC&#x3D;arm-linux-gnueabihf-gcc CXX&#x3D;arm-linux-gnueabihf-g++ --host&#x3D;arm-linux-gnueabihf --prefix&#x3D;&#x2F;opt&#x2F;tslib1.4 ac_cv_func_malloc_0_nonnull&#x3D;yes</span><br><span class="line">make -j 8</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line">sudo vim &#x2F;opt&#x2F;tslib1.4&#x2F;etc&#x2F;ts.conf</span><br><span class="line">#第一行</span><br><span class="line">module_raw input</span><br><span class="line"></span><br><span class="line">#追加宏：</span><br><span class="line">sudo vim &#x2F;opt&#x2F;tslib1.4&#x2F;include&#x2F;tslib.h</span><br><span class="line">#define SYN_MT_REPORT           2</span><br><span class="line">#define ABS_MT_SLOT             0x2f    &#x2F;* MT slot being modified *&#x2F;</span><br><span class="line">#define ABS_MT_TOUCH_MAJOR      0x30    &#x2F;* Major axis of touching ellipse *&#x2F;</span><br><span class="line">#define ABS_MT_TOUCH_MINOR      0x31    &#x2F;* Minor axis (omit if circular) *&#x2F;</span><br><span class="line">#define ABS_MT_WIDTH_MAJOR      0x32    &#x2F;* Major axis of approaching ellipse *&#x2F;</span><br><span class="line">#define ABS_MT_WIDTH_MINOR      0x33    &#x2F;* Minor axis (omit if circular) *&#x2F;</span><br><span class="line">#define ABS_MT_ORIENTATION      0x34    &#x2F;* Ellipse orientation *&#x2F;</span><br><span class="line">#define ABS_MT_POSITION_X       0x35    &#x2F;* Center X touch position *&#x2F;</span><br><span class="line">#define ABS_MT_POSITION_Y       0x36    &#x2F;* Center Y touch position *&#x2F;</span><br><span class="line">#define ABS_MT_TOOL_TYPE        0x37    &#x2F;* Type of touching device *&#x2F;</span><br><span class="line">#define ABS_MT_BLOB_ID          0x38    &#x2F;* Group a set of packets as a blob *&#x2F;</span><br><span class="line">#define ABS_MT_TRACKING_ID      0x39    &#x2F;* Unique ID of initiated contact *&#x2F;</span><br><span class="line">#define ABS_MT_PRESSURE         0x3a    &#x2F;* Pressure on contact area *&#x2F;</span><br><span class="line">#define ABS_MT_DISTANCE         0x3b    &#x2F;* Contact hover distance *&#x2F;</span><br><span class="line">#define ABS_MT_TOOL_X           0x3c    &#x2F;* Center X tool position *&#x2F;</span><br><span class="line">#define ABS_MT_TOOL_Y           0x3d    &#x2F;* Center Y tool position *&#x2F;</span><br></pre></td></tr></table></figure></details><details><summary>qmake.conf</summary><p>qt-everywhere-opensource-src-5.7.0文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;work&#x2F;</span><br><span class="line">wget -c http:&#x2F;&#x2F;download.qt.io&#x2F;new_archive&#x2F;qt&#x2F;5.7&#x2F;5.7.0&#x2F;single&#x2F;qt-everywhere-opensource-src-5.7.0.tar.gz</span><br><span class="line">tar xvf qt-everywhere-opensource-src-5.7.0.tar.gz;cd qt-everywhere-opensource-src-5.7.0</span><br></pre></td></tr></table></figure><p>sed替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s&#x2F;arm-linux-gnueabi&#x2F;arm-linux-gnueabihf&#x2F;g&quot; qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabi-g++&#x2F;qmake.conf</span><br><span class="line">cat qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabi-g++&#x2F;qmake.conf</span><br></pre></td></tr></table></figure><p>qtbase/mkspecs/linux-arm-gnueabi-g++/qmake.conf<br>注意：经实测，arm-linux-gnueabihf工具要制定绝对路径，才能编译通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">vim qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabi-g++&#x2F;qmake.conf</span><br><span class="line"></span><br><span class="line">## qmake configuration for building with arm-linux-gnueabi-g++</span><br><span class="line">#</span><br><span class="line">MAKEFILE_GENERATOR &#x3D; UNIX</span><br><span class="line">CONFIG +&#x3D; incremental</span><br><span class="line">QMAKE_INCREMENTAL_STYLE &#x3D; sublib</span><br><span class="line"></span><br><span class="line">#QT_QPA_DEFAULT_PLATFORM &#x3D; linux #eglfs</span><br><span class="line">#QT_QPA_DEFAULT_PLATFORM &#x3D; linux #linux</span><br><span class="line"></span><br><span class="line"># 支持OPENGL设备的,选择eglfs</span><br><span class="line"># 无硬件加速设备的,选择linuxfb</span><br><span class="line"></span><br><span class="line">QT_QPA_DEFAULT_PLATFORM &#x3D; linuxfb</span><br><span class="line"></span><br><span class="line">QMAKE_CFLAGS_RELEASE +&#x3D; -O2 -march&#x3D;armv7-a</span><br><span class="line">QMAKE_CXXFLAGS_RELEASE +&#x3D; -O2 -march&#x3D;armv7-a</span><br><span class="line"></span><br><span class="line">include(..&#x2F;common&#x2F;linux.conf)</span><br><span class="line">include(..&#x2F;common&#x2F;gcc-base-unix.conf)</span><br><span class="line">include(..&#x2F;common&#x2F;g++-unix.conf)</span><br><span class="line"></span><br><span class="line">QMAKE_INCDIR +&#x3D; &#x2F;opt&#x2F;tslib1.4&#x2F;include</span><br><span class="line">QMAKE_LIBDIR +&#x3D; &#x2F;opt&#x2F;tslib1.4&#x2F;lib</span><br><span class="line"></span><br><span class="line"># modifications to g++.conf</span><br><span class="line"># QMAKE_CC &#x3D; arm-linux-gnueabihf-gcc -lts</span><br><span class="line"># QMAKE_CXX &#x3D; arm-linux-gnueabihf-g++ -lts</span><br><span class="line"># QMAKE_LINK &#x3D; arm-linux-gnueabihf-g++ -lts</span><br><span class="line"># QMAKE_LINK_SHLIB &#x3D; arm-linux-gnueabihf-g++ -lts</span><br><span class="line"></span><br><span class="line"># 不使用-lts，ts代表tslib，从而使编译通过</span><br><span class="line">modifications to g++.conf</span><br><span class="line">QMAKE_CC &#x3D; arm-linux-gnueabihf-gcc</span><br><span class="line">QMAKE_CXX &#x3D; arm-linux-gnueabihf-g++</span><br><span class="line">QMAKE_LINK &#x3D; arm-linux-gnueabihf-g++</span><br><span class="line">QMAKE_LINK_SHLIB &#x3D; arm-linux-gnueabihf-g++</span><br><span class="line"></span><br><span class="line"># modifications to linux.conf</span><br><span class="line">QMAKE_AR &#x3D; arm-linux-gnueabihf-ar cqs</span><br><span class="line">QMAKE_OBJCOPY &#x3D; arm-linux-gnueabihf-objcopy</span><br><span class="line">QMAKE_NM &#x3D; arm-linux-gnueabihf-nm -P</span><br><span class="line">QMAKE_STRIP &#x3D; arm-linux-gnueabihf-strip</span><br><span class="line">load(qt_config)</span><br></pre></td></tr></table></figure></details><details><summary>ts.sh(etc/profile)</summary><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># qt configure</span></span><br><span class="line"><span class="built_in">export</span> QT_DIR=/opt/qt5.7.0</span><br><span class="line"><span class="built_in">export</span> TSLIB_DIR=/opt/tslib1.4</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PKG_CONFIG_PATH=/opt/tslib1.4/lib/pkgconfig:<span class="variable">$PKG_CONFIG_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> TSLIB_CONSOLEDEVICE=none</span><br><span class="line"><span class="built_in">export</span> TSLIB_FBDEVICE=/dev/fb0</span><br><span class="line"><span class="built_in">export</span> TSLIB_TSDEVICE=/dev/input/event0</span><br><span class="line"><span class="built_in">export</span> TSLIB_CONFFILE=<span class="variable">$TSLIB_DIR</span>/etc/ts.conf</span><br><span class="line"><span class="built_in">export</span> TSLIB_PLUGINDIR=<span class="variable">$TSLIB_DIR</span>/lib/ts</span><br><span class="line"><span class="built_in">export</span> TSLIB_CALIBFILE=/etc/pointercal</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:/lib:/usr/lib:/opt/tslib1.4/lib:/opt/qt5.7.0/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/bin:/opt/tslib1.4/bin:/usr/sbin:/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#链接动态库</span></span><br><span class="line"><span class="built_in">export</span> LD_PRELOAD=<span class="variable">$TSLIB_DIR</span>/lib/libts.so</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> QT_QPA_PLATFORM_PLUGIN_PATH=<span class="variable">$QT_DIR</span>/plugins</span><br><span class="line"><span class="built_in">export</span> QT_QPA_PLATFORM=linuxfb:tty=/dev/fb0</span><br><span class="line"><span class="comment">#指定中文字库目录</span></span><br><span class="line"><span class="built_in">export</span> QT_QPA_FONTDIR=<span class="variable">$QT_DIR</span>/lib/fonts</span><br><span class="line"><span class="built_in">export</span> QT_QPA_GENERIC_PLUGINS=tslib:<span class="variable">$TSLIB_TSDEVICE</span></span><br><span class="line"><span class="built_in">export</span> QT_DEBUG_PLUGINS=1</span><br></pre></td></tr></table></figure></details><details><summary>编译 QtE5.7 源码 之 autoconfigure.sh</summary><p>qt-everywhere-opensource-src-5.7.0/autoconfigure.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">-v \</span><br><span class="line">-confirm-license \</span><br><span class="line">-prefix &#x2F;opt&#x2F;qt5.7.0 \</span><br><span class="line">-release \</span><br><span class="line">-opensource \</span><br><span class="line">-make libs \</span><br><span class="line">-xplatform linux-arm-gnueabi-g++ \</span><br><span class="line">-optimized-qmake \</span><br><span class="line">-pch \</span><br><span class="line">-qt-sql-sqlite \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-no-opengl \</span><br><span class="line">-skip qt3d \</span><br><span class="line">-skip qtcanvas3d \</span><br><span class="line">-skip qtpurchasing \</span><br><span class="line">-no-sse2 \</span><br><span class="line">-no-openssl \</span><br><span class="line">-no-nis \</span><br><span class="line">-no-cups \</span><br><span class="line">-no-glib \</span><br><span class="line">-no-iconv \</span><br><span class="line">-c++std c++11 \</span><br><span class="line">-no-opengl \</span><br><span class="line">-no-dbus \</span><br><span class="line">-skip qtdeclarative \</span><br><span class="line">-skip qtpurchasing \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake tools \</span><br><span class="line">-skip qtvirtualkeyboard \</span><br><span class="line">-I&#x2F;opt&#x2F;tslib1.4&#x2F;include \</span><br><span class="line">-L&#x2F;opt&#x2F;tslib1.4&#x2F;lib</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>staticconfigure.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">-v \</span><br><span class="line">-static \</span><br><span class="line">-force-pkg-config \</span><br><span class="line">-prefix &#x2F;opt&#x2F;qt5.7.0_static \</span><br><span class="line">-confirm-license \</span><br><span class="line">-release \</span><br><span class="line">-opensource \</span><br><span class="line">-make libs \</span><br><span class="line">-xplatform linux-arm-gnueabi-g++ \</span><br><span class="line">-optimized-qmake \</span><br><span class="line">-pch \</span><br><span class="line">-linuxfb \</span><br><span class="line">-qt-sql-sqlite \</span><br><span class="line">-qt-libjpeg \</span><br><span class="line">-qt-zlib \</span><br><span class="line">-skip qt3d \</span><br><span class="line">-skip qtcanvas3d \</span><br><span class="line">-skip qtpurchasing \</span><br><span class="line">-no-pkg-config \</span><br><span class="line">-no-opengl \</span><br><span class="line">-no-sse2 \</span><br><span class="line">-no-openssl \</span><br><span class="line">-no-nis \</span><br><span class="line">-no-cups \</span><br><span class="line">-no-glib \</span><br><span class="line">-no-iconv \</span><br><span class="line">-nomake examples \</span><br><span class="line">-nomake tools \</span><br><span class="line">-nomake tests \</span><br><span class="line">-c++std c++11 \</span><br><span class="line">-skip qtvirtualkeyboard \</span><br><span class="line">-tslib \</span><br><span class="line">-I&#x2F;opt&#x2F;tslib1.4&#x2F;include \</span><br><span class="line">-L&#x2F;opt&#x2F;tslib1.4&#x2F;lib</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>安装qt5.7.0</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y python</span><br><span class="line">chmod 777 autoconfigure.sh</span><br><span class="line"><span class="built_in">export</span> ARCH=arm</span><br><span class="line"><span class="built_in">export</span> CFG_HOST_ARCH=arm</span><br><span class="line">sudo sh autoconfigure.sh</span><br><span class="line">make -j16</span><br><span class="line">sudo make install</span><br><span class="line">ls /opt/qt5.7.0</span><br></pre></td></tr></table></figure></details><details><summary>linux 静态编译qt程序</summary><p><a href="https://www.jianshu.com/p/63bf259f1aa1" target="_blank">静态编译qt程序</a><br>/etc/profile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">QTDIR&#x3D;&#x2F;opt&#x2F;qt5.7.0_static&#x2F;</span><br><span class="line">PATH&#x3D;$QTDIR&#x2F;bin:$PATH</span><br><span class="line">MANPATH&#x3D;$QTDIR&#x2F;doc&#x2F;man:$MANPATH</span><br><span class="line">LD_LIBRARY_PATH&#x3D;$QTDIR&#x2F;lib:$LD_LIBRARY_PATH</span><br><span class="line">export QTDIR PATH MANPATH LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><p>1.比如现在有一个test.cpp文件</p><p>2.生成.pro文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake -project</span><br></pre></td></tr></table></figure><p>3.修改.pro文件，在里面加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONFIG+&#x3D;static</span><br></pre></td></tr></table></figure><p>4.生成Makefile文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qmake</span><br></pre></td></tr></table></figure><p>5.修改Makefile文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在CXXflags选项后面加上 -static</span><br></pre></td></tr></table></figure><p>6.生成可执行二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></details><details><summary>解压qt镜像，移植其中的qt5.7.0</summary><p>解压提供的ubuntu12源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~&#x2F;work&#x2F;linux-rootfs;cd ~&#x2F;work&#x2F;</span><br><span class="line">tar xvf iTOP_6818_ubuntu_20180320.tgz -C ~&#x2F;work&#x2F;linux-rootfs&#x2F;</span><br></pre></td></tr></table></figure><p>system.img文件解包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y android-tools-fsutils</span><br><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;BrighterEyer&#x2F;itop6818-fastboot-QtE5.7;cd itop6818-fastboot-QtE5.7</span><br><span class="line">unzip system.zip</span><br><span class="line"></span><br><span class="line"># 解包：</span><br><span class="line">simg2img system.img system.img.ext4</span><br><span class="line">mkdir mnt&#x2F;</span><br><span class="line">sudo mount -t ext4 -o loop system.img.ext4 mnt&#x2F;</span><br><span class="line"></span><br><span class="line">cp -r mnt&#x2F;opt&#x2F;qt-5.7.0 ~&#x2F;work&#x2F;linux-rootfs&#x2F;opt&#x2F;</span><br><span class="line">cat mnt&#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line">ldd mnt&#x2F;opt&#x2F;qt-5.7.0&#x2F;bin&#x2F;qmake</span><br><span class="line"></span><br><span class="line">cp mnt&#x2F;lib&#x2F;libstdc++.so.6 ~&#x2F;work&#x2F;linux-rootfs&#x2F;lib&#x2F;libstdc++.so.6</span><br><span class="line">cp mnt&#x2F;lib&#x2F;libm.so.6 ~&#x2F;work&#x2F;linux-rootfs&#x2F;lib&#x2F;libm.so.6</span><br><span class="line">cp mnt&#x2F;lib&#x2F;libgcc_s.so.1 ~&#x2F;work&#x2F;linux-rootfs&#x2F;lib&#x2F;libgcc_s.so.1</span><br><span class="line">cp mnt&#x2F;lib&#x2F;libc.so.6 ~&#x2F;work&#x2F;linux-rootfs&#x2F;lib&#x2F;libc.so.6</span><br><span class="line"></span><br><span class="line">sudo cp ~&#x2F;work&#x2F;itop6818-fastboot-QtE5.7&#x2F;mnt&#x2F;lib&#x2F;libstdc++.so.6 lib&#x2F;libstdc++.so.6</span><br><span class="line">sudo cp ~&#x2F;work&#x2F;itop6818-fastboot-QtE5.7&#x2F;mnt&#x2F;lib&#x2F;libm.so.6 lib&#x2F;libm.so.6</span><br><span class="line">sudo cp ~&#x2F;work&#x2F;itop6818-fastboot-QtE5.7&#x2F;mnt&#x2F;lib&#x2F;libgcc_s.so.1 lib&#x2F;libgcc_s.so.1</span><br><span class="line">sudo cp ~&#x2F;work&#x2F;itop6818-fastboot-QtE5.7&#x2F;mnt&#x2F;lib&#x2F;libc.so.6 lib&#x2F;libc.so.6</span><br><span class="line"></span><br><span class="line"># 卸载：</span><br><span class="line">sudo umount -l mnt&#x2F;</span><br></pre></td></tr></table></figure><p>安装qemu-user-static</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y qemu-user-static</span><br><span class="line">sudo cp &#x2F;usr&#x2F;bin&#x2F;qemu-arm-static linux-rootfs&#x2F;usr&#x2F;bin&#x2F;</span><br><span class="line">sudo cp -b &#x2F;etc&#x2F;resolv.conf linux-rootfs&#x2F;etc&#x2F;resolv.conf</span><br><span class="line">sudo vim linux-rootfs&#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><p>模拟挂载的脚本<br>ch-mount.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">mnt</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"MOUNTING"</span></span><br><span class="line">    sudo mount -t proc /proc <span class="variable">$&#123;2&#125;</span>/proc</span><br><span class="line">    sudo mount -t sysfs /sys <span class="variable">$&#123;2&#125;</span>/sys</span><br><span class="line">    sudo mount -o <span class="built_in">bind</span> /dev <span class="variable">$&#123;2&#125;</span>/dev</span><br><span class="line"> </span><br><span class="line">    sudo chroot <span class="variable">$&#123;2&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">umnt</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"UNMOUNTING"</span></span><br><span class="line">    sudo umount <span class="variable">$&#123;2&#125;</span>/proc</span><br><span class="line">    sudo umount <span class="variable">$&#123;2&#125;</span>/sys</span><br><span class="line">    sudo umount <span class="variable">$&#123;2&#125;</span>/dev</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"-m"</span> ] &amp;&amp; [ -n <span class="string">"<span class="variable">$2</span>"</span> ] ;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    mnt <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"-u"</span> ] &amp;&amp; [ -n <span class="string">"<span class="variable">$2</span>"</span> ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    umnt <span class="variable">$1</span> <span class="variable">$2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Either 1'st, 2'nd or both parameters were missing"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1'st parameter can be one of these: -m(mount) OR -u(umount)"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2'nd parameter is the full path of rootfs directory(with trailing '/')"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"For example: ch-mount -m /media/sdcard/"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">    <span class="built_in">echo</span> 1st parameter : <span class="variable">$&#123;1&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> 2nd parameter : <span class="variable">$&#123;2&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>ch-mount.sh脚本的挂载、卸载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 挂载</span><br><span class="line">.&#x2F;ch-mount.sh -m linux-rootfs</span><br><span class="line"></span><br><span class="line"># 卸载</span><br><span class="line">.&#x2F;ch-mount.sh -u linux-rootfs</span><br></pre></td></tr></table></figure></details><details><summary>其它</summary><p><a href="https://blog.csdn.net/wangliang0633/article/details/77217424" target="_blank">Qt5.7 移植到 ARM 开发板</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开发板目前搭载的系统是来自讯为的最小Linux系统</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/liujianhua1989/article/details/78712592" target="_blank">arm交叉编译</a><br><a href="https://www.veryarm.com/arm-none-linux-gnueabi-gcc" target="_blank">奇手arm-none-linux-gnueabi-gcc</a><br><a href="https://www.cnblogs.com/lialong1st/p/11351095.html" target="_blank">移植Ubuntu16.04根文件系统到嵌入式平台</a></p><p><a href="https://brightereyer2.github.io/2020/03/22//articles/2020/03/22/1584808273000.html/" target="_blank">[arm] itop6818+QtE5.7移植</a><br><a href="https://www.cnblogs.com/lialong1st/p/11351095.html" target="_blank">[Ubuntu] 移植Ubuntu16.04根文件系统到嵌入式平台</a></p><p><a href="https://www.veryarm.com/113748.html" target="_blank">ubuntu16.04编译Qt5.8(x86&amp;arm)</a><br><a href="http://blog.csdn.net/u010875635/article/details/71055353" target="_blank">Qt5.8.0 x64、x86、armhf三个版本的编译安装</a></p></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Hpkdm8yiDj3fB3QT3zu8lQ&quot; target=&quot;_blank&quot;&gt;I.MX6ULL终结者开发板移植ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 查看系统位数</title>
    <link href="http://brightereyer.xyz/2020/04/09/articles/2020/04/09/1586432571000.html/"/>
    <id>http://brightereyer.xyz/2020/04/09/articles/2020/04/09/1586432571000.html/</id>
    <published>2020-04-09T11:42:51.000Z</published>
    <updated>2020-04-09T11:42:51.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getconf LONG_BIT</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[mysql] 误删文件快速恢复</title>
    <link href="http://brightereyer.xyz/2020/04/09/articles/2020/04/09/1586432570000.html/"/>
    <id>http://brightereyer.xyz/2020/04/09/articles/2020/04/09/1586432570000.html/</id>
    <published>2020-04-09T11:42:50.000Z</published>
    <updated>2020-04-09T11:42:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/-mrl/p/9959365.html" target="_blank">mysql误删数据快速恢复</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看binklog是否开启</span><br><span class="line">show variables like &#39;%log_bin%&#39;;</span><br><span class="line"></span><br><span class="line"># 查看binlog存放日志文件目录：</span><br><span class="line">show variables like &#39;%datadir%&#39;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/-mrl/p/9959365.html&quot; target=&quot;_blank&quot;&gt;mysql误删数据快速恢复&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="mysql" scheme="http://brightereyer.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>[linux] img文件解压</title>
    <link href="http://brightereyer.xyz/2020/04/09/articles/2020/04/09/1586432440000.html/"/>
    <id>http://brightereyer.xyz/2020/04/09/articles/2020/04/09/1586432440000.html/</id>
    <published>2020-04-09T11:40:40.000Z</published>
    <updated>2020-04-09T11:40:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u010285974/article/details/105268744" target="_blank">安装simg2img</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装官方源中的make_ext4fs,mkuserimg.sh,simg2img</span><br><span class="line">apt-get install android-tools-fsutils</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 解包：</span><br><span class="line">simg2img system.img system.img.ext4</span><br><span class="line"></span><br><span class="line">mkdir mnt&#x2F;</span><br><span class="line"></span><br><span class="line"># 挂载</span><br><span class="line">sudo mount -t ext4 -o loop system.img.ext4 mnt&#x2F;</span><br><span class="line"></span><br><span class="line"># 卸载</span><br><span class="line">sudo umount -l mnt&#x2F;</span><br><span class="line"></span><br><span class="line"># 打包：</span><br><span class="line">sudo make_ext4fs -s -l 512M -a system system_new.img mnt&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u010285974/article/details/105268744&quot; target=&quot;_blank&quot;&gt;安装simg2img&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[shell] jar启动日志文件</title>
    <link href="http://brightereyer.xyz/2020/04/08/articles/2020/04/08/1586341339000.html/"/>
    <id>http://brightereyer.xyz/2020/04/08/articles/2020/04/08/1586341339000.html/</id>
    <published>2020-04-08T10:22:19.000Z</published>
    <updated>2020-04-08T10:22:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar xxx&#x2F;xxx&#x2F;xx.jar |tee -a xxx&#x2F;xxx&#x2F;Tem&#x2F;xxxApp.log</span><br></pre></td></tr></table></figure><p>输出到标准输出的同时，保存到文件file中。如果文件不存在，则创建；如果已经存在，则覆盖之</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tee file</span><br></pre></td></tr></table></figure><p>追加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tee -a file</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pr
      
    
    </summary>
    
    
    
      <category term="shell" scheme="http://brightereyer.xyz/tags/shell/"/>
    
  </entry>
  
</feed>
