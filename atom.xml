<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-04-27T11:02:22.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[stm32] 模拟器</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985342000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985342000.html/</id>
    <published>2020-04-27T11:02:22.000Z</published>
    <updated>2020-04-27T11:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/songdawww/article/details/46509957" target="_blank">1、Stm32+STemWin+LCD</a><br><a href="https://blog.csdn.net/tichimi3375/article/details/80721709" target="_blank">2、STemWin学习笔记——在PC上仿真STemWin</a><br><a href="https://blog.csdn.net/xingkonghxiaoyi/article/details/53979695" target="_blank">3、uC/GUI 和 STemWin的区别</a><br><a href="https://blog.csdn.net/so_cracy/article/details/80228595" target="_blank">4、STemwin 系列（一）STM32 HAL库 裸机移植STemwin</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/songdawww/article/details/46509957&quot; target=&quot;_blank&quot;&gt;1、Stm32+STemWin+LCD&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植nodejs</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985341000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985341000.html/</id>
    <published>2020-04-27T11:02:21.000Z</published>
    <updated>2020-04-27T11:02:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/yyz_1987/article/details/83147338" target="_blank">移植nodejs到嵌入式linux,让终端支持可使用js做些功能</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/yyz_1987/article/details/83147338&quot; target=&quot;_blank&quot;&gt;移植nodejs到嵌入式linux,让终端支持可使用js做些功能&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[android] 微信授权登录</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985340000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985340000.html/</id>
    <published>2020-04-27T11:02:20.000Z</published>
    <updated>2020-04-27T11:02:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/3d19b6622ff2" target="_blank">Android微信授权登录分享—封装类</a><br><a href="https://github.com/flora-gjf/WeChatHelper" target="_blank">微信授权分享工具类 WeChatHelper</a><br><a href="https://blog.csdn.net/qq_34190023/article/details/82017427" target="_blank">微信开放平台开发第三方授权登陆（三）：Android客户端</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/3d19b6622ff2&quot; target=&quot;_blank&quot;&gt;Android微信授权登录分享—封装类&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/flora-gjf/WeChatH
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[android] 日志</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985339000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985339000.html/</id>
    <published>2020-04-27T11:02:19.000Z</published>
    <updated>2020-04-27T11:02:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/salary/article/details/82686550" target="_blank">Android Studio中的日志输出</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -v time&gt; D:\1111.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/salary/article/details/82686550&quot; target=&quot;_blank&quot;&gt;Android Studio中的日志输出&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 野火F429V1版</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906619000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906619000.html/</id>
    <published>2020-04-26T13:10:19.000Z</published>
    <updated>2020-04-26T13:10:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1x7VkGEJIp8RQ3kshzD-smw" target="_blank">资料盘</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">bjd8</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/1MgjvUyFR1e9UPbRlw9coLw" target="_blank">视频盘</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">e2cp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1x7VkGEJIp8RQ3kshzD-smw&quot; target=&quot;_blank&quot;&gt;资料盘&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[硬件] PCB硬件制作</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906618000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906618000.html/</id>
    <published>2020-04-26T13:10:18.000Z</published>
    <updated>2020-04-26T13:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/little_young5280/opencode" target="_blank">PCB硬件制作</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/little_young5280/opencode&quot; target=&quot;_blank&quot;&gt;PCB硬件制作&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="硬件" scheme="http://brightereyer.xyz/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>[shell] 在指定行的前后插入指定内容</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906617000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906617000.html/</id>
    <published>2020-04-26T13:10:17.000Z</published>
    <updated>2020-04-26T13:10:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>在指定行的前/后插入指定内容</p><p>准备文件a.txt、b.txt：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a.txt</span></span><br><span class="line">cat &gt; a.txt &lt;&lt;EOF</span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># b.txt</span></span><br><span class="line">cat &gt; b.txt &lt;&lt;EOF</span><br><span class="line">AAA</span><br><span class="line">BBB</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>如果知道行号可以用下面的方法：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'2 r b.txt'</span> a.txt    <span class="comment">#在a.txt的第2行插入文件b.txt</span></span><br><span class="line">awk <span class="string">'1;NR==2&#123;system("cat b.txt")&#125;'</span> a.txt &gt; c.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意，如果写成以下，则a.txt文件为空</span></span><br><span class="line"><span class="comment">#awk '1;NR==2&#123;system("cat b.txt")&#125;' a.txt &gt; a.txt</span></span><br></pre></td></tr></table></figure><p>如果不知道行号，可以用正則匹配：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/regex/ r b.txt'</span> a.txt <span class="comment"># regex是正则表达式</span></span><br><span class="line">awk <span class="string">'/target/&#123;system("cat b.txt")&#125;'</span> a.txt &gt; c.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#sed的話如果不改变源文件，可以去掉-i开关，修改会输出到STDOUT：</span><br></pre></td></tr></table></figure><p>原文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat -n a.txt </span><br><span class="line">1  aaaa</span><br><span class="line">2  bbbb</span><br><span class="line">3  cccc</span><br><span class="line">4  dddd</span><br></pre></td></tr></table></figure><p>现在要在第二行即“bbbb”行的下面添加一行，内容为“xiaowu”：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/bbbb/a\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>如果要加两行“xiaowu”可以用一下语句，注意用“\n”换行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/bbbb/a\xiaowu\nxiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">xiaowu</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>如果要在第二行即“bbbb”行的上添加一行，内容为“xiaowu”，可以把参数“a”换成“i”：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/b/i\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">xiaowu</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>以上文件中只有一行匹配，如果文件中有两行或者多行匹配，结果有是如何呢？</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat -n a.txt </span><br><span class="line">1  aaaa</span><br><span class="line">2  bbbb</span><br><span class="line">3  cccc</span><br><span class="line">4  bbbb</span><br><span class="line">5  dddd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个匹配行的下一行添加“xiaowu”</span></span><br><span class="line">sed <span class="string">'/bbbb/a\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">cccc</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>那么如果指向在第二个“bbbb”的下一行添加内容“xiaowu”，该如何操作呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以考虑先获取第二个“bbbb”行的行号，然后根据行号在此行的下一行添加“xiaowu”</span><br></pre></td></tr></table></figure><p>获取第二个“bbbb”行的行号的方法：<br>方法一：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat -n a.txt |grep bbbb |awk <span class="string">'&#123;print $1&#125;'</span>|sed -n <span class="string">"2"</span>p</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/bbbb/='</span> a.txt |sed -n <span class="string">"2"</span>p</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>由结果可知第二个“bbbb”行的行号为4，然后再在第四行的前或后添加相应的内容:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sed -e <span class="string">'4a\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">dddd</span><br><span class="line"></span><br><span class="line">sed -e <span class="string">'4a\xiaowu\nxiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">xiaowu</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>向指定行的末尾添加指定内容，比如在“ccccc”行的行尾介绍“ eeeee”</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt</span><br><span class="line">aaaaa</span><br><span class="line">bbbbb</span><br><span class="line">ccccc</span><br><span class="line">ddddd</span><br><span class="line"></span><br><span class="line">sed <span class="string">'s/cc.*/&amp; eeeee/g'</span> a.txt</span><br><span class="line">aaaaa</span><br><span class="line">bbbbb</span><br><span class="line">ccccc eeeee</span><br><span class="line">ddddd</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weiyuefei/article/details/68943857" target="_blank">SHELL 在指定行的前/后插入指定内容</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在指定行的前/后插入指定内容&lt;/p&gt;
&lt;p&gt;准备文件a.txt、b.txt：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
    
      <category term="shell" scheme="http://brightereyer.xyz/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>[qt] 控制台下的tcp</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906616000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906616000.html/</id>
    <published>2020-04-26T13:10:16.000Z</published>
    <updated>2020-04-26T13:10:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u013232740/article/details/74999884" target="_blank">QT在控制台下实现TCP网口通信</a></p><p>服务端server：</p><p>main.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpserver.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">//从class的类构造函数调用套接字</span></span><br><span class="line">    TcpServer server;</span><br><span class="line">    <span class="comment">//显示状态</span></span><br><span class="line">    server.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tcpserver.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpserver.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QHostAddress&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">TcpServer::TcpServer(QObject* parent): QObject(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//将newConnection()与acceptConnection()连结</span></span><br><span class="line">    <span class="built_in">connect</span>(&amp;server, SIGNAL(newConnection()),<span class="keyword">this</span>,SLOT(acceptConnection()));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"listening..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//bool QTcpServer::listen ( const QHostAddress &amp; address = QHostAddress::Any, quint16 port = 0 )</span></span><br><span class="line">    <span class="comment">//Tells the server to listen for incoming connections on address address and port port.</span></span><br><span class="line">    <span class="comment">//If port is 0, a port is chosen automatically.</span></span><br><span class="line">    <span class="comment">//If address is QHostAddress::Any, the server will listen on all network interfaces.</span></span><br><span class="line">    <span class="comment">//在任意网络接口监听</span></span><br><span class="line">    <span class="comment">//server.listen(QHostAddress::Any,8888);</span></span><br><span class="line">    <span class="comment">//在服务端IP地址172.18.218.2的端口8888监听</span></span><br><span class="line">    <span class="function">QHostAddress <span class="title">addr</span><span class="params">(<span class="string">"172.18.218.2"</span>)</span></span>;</span><br><span class="line">    server.<span class="built_in">listen</span>(addr, <span class="number">8888</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"listen..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TcpServer::~TcpServer()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"closing..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//关闭服务器</span></span><br><span class="line">    server.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpServer::acceptConnection()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//返回等待的连接</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"connecting..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    client = server.nextPendingConnection();</span><br><span class="line">    <span class="comment">//将readyRead()与startRead()连结</span></span><br><span class="line">    <span class="built_in">connect</span>(client, SIGNAL(readyRead()),<span class="keyword">this</span>, SLOT(startRead()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpServer::startRead()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">buffer</span>[<span class="number">1024</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//读入数据</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"reading..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    client-&gt;<span class="built_in">read</span>(<span class="built_in">buffer</span>, client-&gt;bytesAvailable());</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"outputing..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//显示数据</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">buffer</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//关闭客户端</span></span><br><span class="line">    client-&gt;<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpServer::<span class="built_in">begin</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//显示状态</span></span><br><span class="line">     <span class="built_in">cout</span>&lt;&lt;<span class="string">"try to connect..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tcpserver.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TCPSERVER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCPSERVER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtNetwork&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QObject&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTcpServer&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTcpSocket&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TcpServer</span>:</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    TcpServer(QObject * parent = <span class="number">0</span>);</span><br><span class="line">    ~TcpServer();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">begin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">acceptConnection</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">startRead</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QTcpServer server;</span><br><span class="line">    QTcpSocket* client;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// TCPSERVER_H</span></span></span><br></pre></td></tr></table></figure><p>客户端client：<br>main.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpclient.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    TcpClient client;</span><br><span class="line">    <span class="comment">//开始建立TCP连接，发送数据</span></span><br><span class="line">    <span class="comment">//本机环回通信</span></span><br><span class="line">    <span class="comment">//client.start("127.0.0.1", 8888);</span></span><br><span class="line">    <span class="comment">//服务端/客户端通信，填入服务端IP地址与端口号</span></span><br><span class="line">    client.start(<span class="string">"172.18.216.230"</span>, <span class="number">8888</span>);</span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tcpclient.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpclient.h"</span></span></span><br><span class="line"></span><br><span class="line">TcpClient::TcpClient(QObject* parent): QObject(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//建立connected()函数与startTransfer()函数的连结</span></span><br><span class="line">    <span class="built_in">connect</span>(&amp;client, SIGNAL(<span class="built_in">connected</span>()),<span class="keyword">this</span>, SLOT(startTransfer()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TcpClient::~TcpClient()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//关闭客户端</span></span><br><span class="line">    client.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpClient::start(QString address, quint16 port)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//显示状态</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"client begins to connect..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//The QHostAddress class provides an IP address.</span></span><br><span class="line">    <span class="comment">//This class holds an IPv4 or IPv6 address in a platform- and protocol-independent manner.</span></span><br><span class="line">    <span class="comment">//创建QHostAddress类的对象</span></span><br><span class="line">    <span class="function">QHostAddress <span class="title">addr</span><span class="params">(address)</span></span>;</span><br><span class="line">    <span class="comment">//跟服务端连接</span></span><br><span class="line">    <span class="comment">//Attempts to make a connection to hostName on the given port.</span></span><br><span class="line">    client.connectToHost(addr, port);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpClient::startTransfer()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//qint64 QIODevice::write ( const char * data, qint64 maxSize )</span></span><br><span class="line">    <span class="comment">//Writes at most maxSize bytes of data from data to the device.</span></span><br><span class="line">    <span class="comment">//Returns the number of bytes that were actually written, or -1 if an error occurred.</span></span><br><span class="line">    <span class="comment">//写入数据到设备</span></span><br><span class="line">    client.<span class="built_in">write</span>(<span class="string">"hello qt!"</span>, <span class="number">9</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tcpclient.h</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#ifndef TCPCLIENT_H</span><br><span class="line">#define TCPCLIENT_H</span><br><span class="line"></span><br><span class="line">#include &lt;QtNetwork&gt;</span><br><span class="line">#include &lt;QObject&gt;</span><br><span class="line">#include &lt;QString&gt;</span><br><span class="line">#include &lt;QTcpSocket&gt;</span><br><span class="line">#include &lt;QHostAddress&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class TcpClient: public QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line">public:</span><br><span class="line">    TcpClient(QObject* parent &#x3D; 0);</span><br><span class="line">    ~TcpClient();</span><br><span class="line">    void start(QString address, quint16 port);</span><br><span class="line"></span><br><span class="line">public slots:</span><br><span class="line">    void startTransfer();</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    QTcpSocket client;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">#endif &#x2F;&#x2F; TCPCLIENT_H</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u013232740/article/details/74999884&quot; target=&quot;_blank&quot;&gt;QT在控制台下实现TCP网口通信&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;服务端server：&lt;/p&gt;
&lt;p&gt;main.cp
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[qt] 定时器</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906615000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906615000.html/</id>
    <published>2020-04-26T13:10:15.000Z</published>
    <updated>2020-04-26T13:10:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/andy_93/article/details/52776283" target="_blank">Qt中定时器使用的两种方法</a><br>mytimer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MY_TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MY_TIMER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QObject&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTimer&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTimer</span> :</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Q_OBJECT</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">MyTimer(QObject* parent = <span class="literal">NULL</span>);</span><br><span class="line">~MyTimer();</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleTimeout</span><span class="params">()</span></span>;  <span class="comment">//超时处理函数</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">QTimer *m_pTimer;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//MY_TIMER_H</span></span></span><br></pre></td></tr></table></figure><p>mytimer.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mytimer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TIMER_TIMEOUT(5*1000)</span></span><br><span class="line"> </span><br><span class="line">MyTimer::MyTimer(QObject *parent)</span><br><span class="line">:QObject(parent)</span><br><span class="line">&#123;</span><br><span class="line">m_pTimer = <span class="keyword">new</span> QTimer(<span class="keyword">this</span>);</span><br><span class="line"><span class="built_in">connect</span>(m_pTimer, SIGNAL(timeout()), <span class="keyword">this</span>, SLOT(handleTimeout()));</span><br><span class="line">m_pTimer-&gt;start(TIMER_TIMEOUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyTimer::~MyTimer()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> MyTimer::handleTimeout()</span><br><span class="line">&#123;</span><br><span class="line">qDebug()&lt;&lt;<span class="string">"Enter timeout processing function\n"</span>;</span><br><span class="line"><span class="keyword">if</span>(m_pTimer-&gt;isActive())&#123;</span><br><span class="line">m_pTimer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/andy_93/article/details/52776283&quot; target=&quot;_blank&quot;&gt;Qt中定时器使用的两种方法&lt;/a&gt;&lt;br&gt;mytimer.h&lt;/p&gt;
&lt;figure class=&quot;highli
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[qt] char[]与QString相互转换支持中文</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906614000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906614000.html/</id>
    <published>2020-04-26T13:10:14.000Z</published>
    <updated>2020-04-26T13:10:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/zhangxuechao_/article/details/81700266" target="_blank">Qt 字符串截取 获取指定字符位置</a></p><p><a href="https://blog.csdn.net/sinat_37269729/article/details/98201051" target="_blank">char[]与QString相互转换支持中文</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> path[<span class="number">50</span>];</span><br><span class="line">    QString str = <span class="string">"D:\\搜狗高速下载\\weka-3-8-3jre-x64.exe"</span>;</span><br><span class="line">    QByteArray ba = str.toLocal8Bit();</span><br><span class="line">    <span class="built_in">memcpy</span>(path,ba.data(),ba.<span class="built_in">size</span>()+<span class="number">1</span>);<span class="comment">//加1是为了最后的终结符，否则转换回来的时候不知道什么时候截止</span></span><br><span class="line"></span><br><span class="line">    QString str2;</span><br><span class="line">    str2 = QString::fromLocal8Bit(path);</span><br><span class="line">    qDebug()&lt;&lt;str2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>QString转化成为char数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QString str=<span class="string">"12fff"</span>;</span><br><span class="line">QByteArray ba=str.toLatin1();</span><br><span class="line"><span class="keyword">char</span> *c=ba.data();</span><br></pre></td></tr></table></figure><p>char数组转化成为QString</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c[]=<span class="string">"12ff"</span>;</span><br><span class="line">QString str=QString(QLatin1String(c));</span><br></pre></td></tr></table></figure><p>这里再对这俩中类型的输出总结一下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">qDebug()&lt;&lt;<span class="string">"print"</span>;</span><br><span class="line">qDebug()&lt;&lt;tr(<span class="string">"print"</span>);</span><br><span class="line">qDebug()&lt;&lt;ch;(ch为<span class="keyword">char</span>类型)</span><br><span class="line">qDebug()&lt;&lt;tr(ch);</span><br><span class="line">qDebug()&lt;&lt;byteArray;(byteArray是QByteArray类型)</span><br><span class="line">qDebug()&lt;&lt;tr(byteArray);</span><br><span class="line">qDebug()&lt;&lt;str;(str为Qstring类型)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 但是qDebug()&lt;&lt;tr(str);是不可以的，要想用tr()函数输出QString类型的字符则要如下：</span></span><br><span class="line">qDebug()&lt;&lt;tr(str.toLatin1);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/zhangxuechao_/article/details/81700266&quot; target=&quot;_blank&quot;&gt;Qt 字符串截取 获取指定字符位置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[c++] try-catch命令</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906613000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906613000.html/</id>
    <published>2020-04-26T13:10:13.000Z</published>
    <updated>2020-04-26T13:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/xiamentingtao/article/details/45222827" target="_blank">c++中try catch的用法</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;exception&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span>* myarray= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100000</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (exception&amp; e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Standard exception: "</span> &lt;&lt; e.what() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/xiamentingtao/article/details/45222827&quot; target=&quot;_blank&quot;&gt;c++中try catch的用法&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="c++" scheme="http://brightereyer.xyz/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>[c++] cat命令</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906612000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906612000.html/</id>
    <published>2020-04-26T13:10:12.000Z</published>
    <updated>2020-04-26T13:10:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/BrighterEyer/itop6818-linux-programs/blob/master/cpu-readuid/iTOP-4418%E5%92%8C6818-Linuxc-readuid/readuuid.c" target="_blank">readuuid.c</a></p><p><a href="https://www.cnblogs.com/aaronLinux/p/6944966.html" target="_blank">[system]c/c++调用cat命令</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[] )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  FILE *fp;</span><br><span class="line">  <span class="keyword">char</span> path[<span class="number">1035</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Open the command for reading. */</span></span><br><span class="line">  fp = popen(<span class="string">"/bin/ls /etc/"</span>, <span class="string">"r"</span>);</span><br><span class="line">  <span class="keyword">if</span> (fp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Failed to run command\n"</span> );</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Read the output a line at a time - output it. */</span></span><br><span class="line">  <span class="keyword">while</span> (fgets(path, <span class="keyword">sizeof</span>(path)<span class="number">-1</span>, fp) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, path);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* close */</span></span><br><span class="line">  pclose(fp);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/BrighterEyer/itop6818-linux-programs/blob/master/cpu-readuid/iTOP-4418%E5%92%8C6818-Linuxc-readuid/readuuid.c&quot;
      
    
    </summary>
    
    
    
      <category term="c++" scheme="http://brightereyer.xyz/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>[arm] python</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906611000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906611000.html/</id>
    <published>2020-04-26T13:10:11.000Z</published>
    <updated>2020-04-26T13:10:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Colin_xuan/article/details/81109328" target="_blank">Python3版本移植到ARM的通用方法（一键移植）</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.4.5&#x2F;Python-3.4.5.tgz</span><br><span class="line">tar xvf Python-3.4.5.tgz;cd Python-3.4.5</span><br></pre></td></tr></table></figure><p>cross_compile_python.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#prepare</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"prepare stage"</span></span><br><span class="line">arm_install=/tmp/arm_python</span><br><span class="line">arm_build=`<span class="built_in">pwd</span>`/arm_build</span><br><span class="line">mkdir <span class="variable">$arm_build</span></span><br><span class="line">mkdir <span class="variable">$arm_install</span></span><br><span class="line"><span class="built_in">cd</span> `<span class="built_in">pwd</span>`</span><br><span class="line"><span class="comment">#arm comfigure</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"arm confiure stage"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$arm_build</span></span><br><span class="line"><span class="built_in">echo</span> ac_cv_file__dev_ptmx=yes &gt; config.site</span><br><span class="line"><span class="built_in">echo</span> ac_cv_file__dev_ptc=yes &gt;&gt; config.site</span><br><span class="line"><span class="built_in">export</span> CONFIG_SITE=config.site</span><br><span class="line">../configure --host=arm-none-linux-gnueabi --build=i686-linux-gnu --target=arm-none-linux-gnueabi --<span class="built_in">disable</span>-ipv6 --prefix=<span class="variable">$arm_install</span> --<span class="built_in">enable</span>-shared --silent</span><br><span class="line"> </span><br><span class="line"><span class="comment">#pc pgen</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"pc pgen stage"</span></span><br><span class="line"><span class="built_in">cd</span> - </span><br><span class="line">./configure --silent</span><br><span class="line"><span class="keyword">for</span> args <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$args</span> = <span class="string">"all"</span> ];<span class="keyword">then</span></span><br><span class="line">make --silent &amp;&amp; make install --silent</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">make Parser/pgen --silent</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line">cp ../Parser/pgen Parser</span><br><span class="line"><span class="comment">#change the pgen time,</span></span><br><span class="line"><span class="comment"># or else the cross compile will replace this pc version pgen. important!!</span></span><br><span class="line">touch -t 12312359 Parser/pgen</span><br><span class="line"> </span><br><span class="line"><span class="comment">#make</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"make stage"</span></span><br><span class="line">make python --silent &amp;&amp; make -i install</span><br><span class="line"> </span><br><span class="line"><span class="comment">#make it smaller</span></span><br><span class="line"><span class="comment">#arm-none-linux-gnueabi-strip -s $arm_install/bin/python3.3</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x cross_compile_python.sh</span><br><span class="line">sh cross_compile_python.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Colin_xuan/article/details/81109328&quot; target=&quot;_blank&quot;&gt;Python3版本移植到ARM的通用方法（一键移植）&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植java</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906610000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906610000.html/</id>
    <published>2020-04-26T13:10:10.000Z</published>
    <updated>2020-04-26T13:10:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.oracle.com/java/technologies/javaseembedded8u211-downloads.html#license-lightbox" target="_blank">javaseembedded8u211</a><br><a href="https://blog.csdn.net/qihsming/article/details/85008371" target="_blank">JRE移植到嵌入式ARM平台</a><br><a href="https://pan.baidu.com/s/1Faoi5uVvWVPRKwRutIGk4g" target="_blank">ejdk-8u191-linux-arm-sflt.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码:</span><br><span class="line">m35v</span><br></pre></td></tr></table></figure><p>从tar包中提取软件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr</span><br><span class="line">gunzip *.gz</span><br><span class="line">tar -xvf *.tar</span><br></pre></td></tr></table></figure><p>设置环境变量，在/etc/profile的末尾添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EJDK_HOME=/usr/ejdk1.8.0_191</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$EJDK_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>验证安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$EJDK_HOME</span></span><br><span class="line">bin/jrecreate.sh --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>使用jrecreate来创建JRE</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/ejdk1.8.0_151/bin/jrecreate.sh \</span><br><span class="line">--profile compact1 \</span><br><span class="line">--dest /tmp/defaultJRE/</span><br></pre></td></tr></table></figure><p>移植至嵌入式设备<br>1.复制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将虚拟机中生成的整个defaultJRE目录复制至嵌入式设备中的&#x2F;usr&#x2F;jvm目录下</span><br></pre></td></tr></table></figure><p>2.添加环境变量<br>在/etc/profile的末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;jvm&#x2F;defJRE&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>3.验证安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>cross_compile_python.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#prepare</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"prepare stage"</span></span><br><span class="line">arm_install=/tmp/arm_python</span><br><span class="line">arm_build=`<span class="built_in">pwd</span>`/arm_build</span><br><span class="line">mkdir <span class="variable">$arm_build</span></span><br><span class="line">mkdir <span class="variable">$arm_install</span></span><br><span class="line"><span class="built_in">cd</span> `<span class="built_in">pwd</span>`</span><br><span class="line"><span class="comment">#arm comfigure</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"arm confiure stage"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$arm_build</span></span><br><span class="line"><span class="built_in">echo</span> ac_cv_file__dev_ptmx=yes &gt; config.site</span><br><span class="line"><span class="built_in">echo</span> ac_cv_file__dev_ptc=yes &gt;&gt; config.site</span><br><span class="line"><span class="built_in">export</span> CONFIG_SITE=config.site</span><br><span class="line">../configure --host=arm-none-linux-gnueabi --build=i686-linux-gnu --target=arm-none-linux-gnueabi --<span class="built_in">disable</span>-ipv6 --prefix=<span class="variable">$arm_install</span> --<span class="built_in">enable</span>-shared --silent</span><br><span class="line"> </span><br><span class="line"><span class="comment">#pc pgen</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"pc pgen stage"</span></span><br><span class="line"><span class="built_in">cd</span> - </span><br><span class="line">./configure --silent</span><br><span class="line"><span class="keyword">for</span> args <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$args</span> = <span class="string">"all"</span> ];<span class="keyword">then</span></span><br><span class="line">make --silent &amp;&amp; make install --silent</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">make Parser/pgen --silent</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line">cp ../Parser/pgen Parser</span><br><span class="line"><span class="comment">#change the pgen time,</span></span><br><span class="line"><span class="comment"># or else the cross compile will replace this pc version pgen. important!!</span></span><br><span class="line">touch -t 12312359 Parser/pgen</span><br><span class="line"> </span><br><span class="line"><span class="comment">#make</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"make stage"</span></span><br><span class="line">make python --silent &amp;&amp; make -i install</span><br><span class="line"> </span><br><span class="line"><span class="comment">#make it smaller</span></span><br><span class="line"><span class="comment">#arm-none-linux-gnueabi-strip -s $arm_install/bin/python3.3</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x cross_compile_python.sh</span><br><span class="line">sh cross_compile_python.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.oracle.com/java/technologies/javaseembedded8u211-downloads.html#license-lightbox&quot; target=&quot;_blank&quot;&gt;javaseembedded8u21
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 蓝牙</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906609000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906609000.html/</id>
    <published>2020-04-26T13:10:09.000Z</published>
    <updated>2020-04-26T13:10:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/gatieme/article/details/48751743" target="_blank">ARM平台上蓝牙协议栈Bluez的移植使用和配置</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/gatieme/article/details/48751743&quot; target=&quot;_blank&quot;&gt;ARM平台上蓝牙协议栈Bluez的移植使用和配置&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] vue-login-java</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906608000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906608000.html/</id>
    <published>2020-04-26T13:10:08.000Z</published>
    <updated>2020-04-26T13:10:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000014211773" target="_blank">vue端</a></p><p><a href="https://blog.csdn.net/xiaojinlai123/article/details/90694372" target="_blank">Springboot Vue Login(从零开始实现Springboot+Vue登录)</a><br><a href="https://github.com/xiaojinlai/vue-spring-login-summed" target="_blank">Java端</a><br><a href="https://github.com/xiaojinlai/vue-login-java" target="_blank">vue-login-java</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000014211773&quot; target=&quot;_blank&quot;&gt;vue端&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/xiaojinlai123/articl
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[android] 地址选择器</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906608000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906608000.html/</id>
    <published>2020-04-26T13:10:08.000Z</published>
    <updated>2020-04-26T13:10:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1Y7XB77elDtzXVMd8dYxrtg" target="_blank">地址选择器</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">htp9</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1Y7XB77elDtzXVMd8dYxrtg&quot; target=&quot;_blank&quot;&gt;地址选择器&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[android] okhttp的使用</title>
    <link href="http://brightereyer.xyz/2020/04/21/articles/2020/04/21/1587470895000.html/"/>
    <id>http://brightereyer.xyz/2020/04/21/articles/2020/04/21/1587470895000.html/</id>
    <published>2020-04-21T12:08:15.000Z</published>
    <updated>2020-04-21T12:08:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/da4a806e599b" target="_blank">Okhttp3基本使用</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#39;com.squareup.okhttp3:okhttp:3.10.0&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/da4a806e599b&quot; target=&quot;_blank&quot;&gt;Okhttp3基本使用&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818-qt环境移植git</title>
    <link href="http://brightereyer.xyz/2020/04/21/articles/2020/04/21/1587470894000.html/"/>
    <id>http://brightereyer.xyz/2020/04/21/articles/2020/04/21/1587470894000.html/</id>
    <published>2020-04-21T12:08:14.000Z</published>
    <updated>2020-04-21T12:08:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/cnsword/article/details/9959515" target="_blank">交叉编译git</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 安装32位库、用于支持32位程序、这里用于支持arm-none-linux-gnueabi-*</span><br><span class="line">sudo apt-get install -y lib32ncurses5 lib32z1 gcc-multilib</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;profile &lt;&lt;EOF</span><br><span class="line">export PATH&#x3D;\$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin</span><br><span class="line"></span><br><span class="line">#注意不需要申明CROSS_COMPILE</span><br><span class="line">#export CROSS_COMPILE&#x3D;arm-none-linux-gnueabi-</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>用于编译、安装curl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y autoconf libtool</span><br></pre></td></tr></table></figure><p>用于编译、安装zlib</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -y install flex bison</span><br></pre></td></tr></table></figure><details><summary>git依赖openssl、zlib、curl、expat</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir git;cd git</span><br><span class="line">mkdir openssl.install</span><br><span class="line">mkdir zlib.install</span><br><span class="line">mkdir curl.install</span><br><span class="line">mkdir expat.install</span><br><span class="line">mkdir build</span><br><span class="line"></span><br><span class="line">wget -c http:&#x2F;&#x2F;www.openssl.org&#x2F;source&#x2F;openssl-1.0.1h.tar.gz</span><br><span class="line">wget -c http:&#x2F;&#x2F;www.zlib.net&#x2F;fossils&#x2F;zlib-1.2.3.tar.gz</span><br><span class="line">wget -c https:&#x2F;&#x2F;curl.haxx.se&#x2F;download&#x2F;curl-7.55.1.tar.gz</span><br><span class="line">wget -c http:&#x2F;&#x2F;downloads.sourceforge.net&#x2F;expat&#x2F;expat-2.0.1.tar.gz</span><br><span class="line">wget -c https:&#x2F;&#x2F;www.kernel.org&#x2F;pub&#x2F;software&#x2F;scm&#x2F;git&#x2F;git-2.11.1.tar.gz</span><br><span class="line"></span><br><span class="line">tar zxvf openssl-1.0.1h.tar.gz</span><br><span class="line">tar zxvf zlib-1.2.3.tar.gz</span><br><span class="line">tar xvf curl-7.55.1.tar.gz</span><br><span class="line">tar xvf expat-2.0.1.tar.gz</span><br><span class="line">tar xvf git-2.11.1.tar.gz</span><br></pre></td></tr></table></figure></details><details><summary>交叉编译zlib(ok)</summary><p>查看选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;git&#x2F;zlib-1.2.3</span><br><span class="line">.&#x2F;configure --help</span><br><span class="line">usage:</span><br><span class="line">  configure [--shared] [--prefix&#x3D;PREFIX]  [--exec_prefix&#x3D;EXPREFIX]</span><br><span class="line">     [--libdir&#x3D;LIBDIR] [--includedir&#x3D;INCLUDEDIR]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;zlib.install</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sed -i &quot;s&#x2F;CC&#x3D;gcc&#x2F;CC&#x3D;arm-none-linux-gnueabi-gcc&#x2F;g&quot; Makefile</span><br><span class="line">sed -i &quot;s&#x2F;LDSHARED&#x3D;gcc&#x2F;LDSHARED&#x3D;arm-none-linux-gnueabi-gcc&#x2F;g&quot; Makefile</span><br><span class="line">sed -i &quot;s&#x2F;CPP&#x3D;gcc -E&#x2F;LDSHARED&#x3D;arm-none-linux-gnueabi-gcc&#x2F;g&quot; Makefile</span><br><span class="line">sed -i &quot;s&#x2F;AR&#x3D;ar rc&#x2F;AR&#x3D;arm-none-linux-gnueabi-ar rc&#x2F;g&quot; Makefile</span><br><span class="line"></span><br><span class="line">make -j 8;make install</span><br><span class="line"></span><br><span class="line">#拷贝libzlib.so到相应目录，拷贝zlib.h、zconf.h到include目录</span><br></pre></td></tr></table></figure></details><details><summary>交叉编译openssl(ok)</summary><p><a href="https://blog.csdn.net/weixin_42432281/article/details/87189341" target="_blank">编译openssl(ok)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;git&#x2F;openssl-1.0.1h</span><br><span class="line">cat Makefile</span><br><span class="line"># 修改Makefile，CC、RANLIB、MAKEDEPPROG为对应的交叉编译器</span><br><span class="line">cat Makefile|grep CC</span><br><span class="line">cat Makefile|grep RANLIB</span><br><span class="line">cat Makefile|grep MAKEDEPPROG</span><br></pre></td></tr></table></figure><p>查看选项、2种查询结果一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;config --help</span><br><span class="line">#或</span><br><span class="line">.&#x2F;Configure --help</span><br></pre></td></tr></table></figure><p>方法（1）编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ARCH&#x3D;arm \</span><br><span class="line">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">AR&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ar \</span><br><span class="line">RANLIB&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ranlib \</span><br><span class="line">MAKEDEPPROG&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">.&#x2F;config -fPIC \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F; \</span><br><span class="line">-static \</span><br><span class="line">no-shared \</span><br><span class="line">no-zlib \</span><br><span class="line">no-asm \</span><br><span class="line">no-sse2no-compno-dso \</span><br><span class="line">-DOPENSSL_THREADS \</span><br><span class="line">-pthread \</span><br><span class="line">-D_REENTRANT \</span><br><span class="line">-D_THREAD_SAFE \</span><br><span class="line">-D_THREADSAFE</span><br></pre></td></tr></table></figure><p>方法（2）编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;Configure --prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install os&#x2F;compiler:arm-none-linux-gnueabi-gcc</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat Makefile | grep &quot;\-m64&quot;</span><br><span class="line">sed -i &quot;s&#x2F;\-m64&#x2F; &#x2F;g&quot; Makefile</span><br><span class="line">#sed -i &quot;s&#x2F;\-m64&#x2F;\-fPIC&#x2F;g&quot; Makefile</span><br><span class="line"></span><br><span class="line">make -j 8;make install</span><br><span class="line"></span><br><span class="line">#拷贝libssl.so和libcrypto.so到相应目录</span><br><span class="line">#拷贝include文件到对应目录</span><br></pre></td></tr></table></figure></details><details><summary>依赖openssl、交叉编译curl(ok)</summary><p><a href="https://blog.csdn.net/andylauren/article/details/78821916" target="_blank">curl编译以及arm交叉编译</a><br>引用了openssl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;git&#x2F;curl-7.55.1</span><br><span class="line"></span><br><span class="line">.&#x2F;buildconf</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --help</span><br></pre></td></tr></table></figure><p>只编译静态库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">RANLIB&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ranlib \</span><br><span class="line">AR&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ar \</span><br><span class="line">CFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include&quot; \</span><br><span class="line">CPPFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include&quot; \</span><br><span class="line">LDFLAGS&#x3D;&quot;-L&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;lib&quot; \</span><br><span class="line">LIBS&#x3D;&quot;-ldl -lssl&quot; \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install \</span><br><span class="line">--with-ssl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install \</span><br><span class="line">--enable-static \</span><br><span class="line">--disable-shared \</span><br><span class="line">--disable-dict \</span><br><span class="line">--disable-ftp \</span><br><span class="line">--disable-imap \</span><br><span class="line">--disable-ldap \</span><br><span class="line">--disable-ldaps \</span><br><span class="line">--disable-pop3 \</span><br><span class="line">--disable-proxy \</span><br><span class="line">--disable-rtsp \</span><br><span class="line">--disable-smtp \</span><br><span class="line">--disable-telnet \</span><br><span class="line">--disable-tftp \</span><br><span class="line">--disable-zlib \</span><br><span class="line">--without-ca-bundle \</span><br><span class="line">--without-gnutls \</span><br><span class="line">--without-libidn \</span><br><span class="line">--without-librtmp \</span><br><span class="line">--without-libssh2 \</span><br><span class="line">--without-nss \</span><br><span class="line">--without-zlib</span><br><span class="line"></span><br><span class="line">make curl_LDFLAGS&#x3D;-all-static -j 8</span><br><span class="line">sudo make install curl_LDFLAGS&#x3D;-all-static</span><br></pre></td></tr></table></figure><p>arm的交叉编译，静态库和动态库都编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">RANLIB&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ranlib \</span><br><span class="line">AR&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ar \</span><br><span class="line">CFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include&quot; \</span><br><span class="line">CPPFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include&quot; \</span><br><span class="line">LDFLAGS&#x3D;&quot;-L&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;lib&quot; \</span><br><span class="line">LIBS&#x3D;&quot;-ldl -lssl&quot; \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install \</span><br><span class="line">--with-ssl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install \</span><br><span class="line">--enable-shared \</span><br><span class="line">--enable-static \</span><br><span class="line">--disable-dict \</span><br><span class="line">--disable-ftp \</span><br><span class="line">--disable-imap \</span><br><span class="line">--disable-ldap \</span><br><span class="line">--disable-ldaps \</span><br><span class="line">--disable-pop3 \</span><br><span class="line">--disable-proxy \</span><br><span class="line">--disable-rtsp \</span><br><span class="line">--disable-smtp \</span><br><span class="line">--disable-telnet \</span><br><span class="line">--disable-tftp \</span><br><span class="line">--disable-zlib \</span><br><span class="line">--without-ca-bundle \</span><br><span class="line">--without-gnutls \</span><br><span class="line">--without-libidn \</span><br><span class="line">--without-librtmp \</span><br><span class="line">--without-libssh2 \</span><br><span class="line">--without-nss \</span><br><span class="line">--without-zlib</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j 8;sudo make install</span><br></pre></td></tr></table></figure></details><details><summary>交叉编译expat(ok)</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;git&#x2F;expat-2.0.1</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --help</span><br><span class="line"></span><br><span class="line">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install</span><br><span class="line"></span><br><span class="line">make -j 8;make install;</span><br></pre></td></tr></table></figure></details><details><summary>交叉编译git(fail)</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;git&#x2F;git-2.11.1</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --help</span><br><span class="line"></span><br><span class="line">#查看CC是否被固定声明</span><br><span class="line">cat Makefile | grep CC</span><br><span class="line">#cc替换为arm-none-linux-gnueabi-gcc</span><br><span class="line">sed -i &quot;s&#x2F;CC &#x3D; cc&#x2F;CC &#x3D; arm-none-linux-gnueabi-gcc&#x2F;g&quot; Makefile</span><br><span class="line"></span><br><span class="line">CC&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc \</span><br><span class="line">RANLIB&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ranlib \</span><br><span class="line">AR&#x3D;&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-ar \</span><br><span class="line">CFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;include -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install&#x2F;include&quot; \</span><br><span class="line">CPPFLAGS&#x3D;&quot;-I&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;include -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;include -I&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install&#x2F;include&quot; \</span><br><span class="line">LDFLAGS&#x3D;&quot;-L&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;lib -L&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;lib -L&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install&#x2F;lib&quot; \</span><br><span class="line">LIBS&#x3D;&quot;-lcrypto -lssl -lcurl -lexpat&quot; \</span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--host&#x3D;arm-none-linux-gnueabi \</span><br><span class="line">--prefix&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;build \</span><br><span class="line">--with-lib&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install&#x2F;lib:&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install&#x2F;lib:&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install&#x2F;lib \</span><br><span class="line">--with-openssl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;openssl.install \</span><br><span class="line">--with-curl&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;curl.install \</span><br><span class="line">--with-expat&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;expat.install \</span><br><span class="line">--with-zlib&#x3D;&#x2F;home&#x2F;machine&#x2F;git&#x2F;zlib.install</span><br><span class="line"></span><br><span class="line">make NO_EXPAT&#x3D;1 -j 8</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/cnsword/article/details/9959515&quot; target=&quot;_blank&quot;&gt;交叉编译git&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 开机启动脚本</title>
    <link href="http://brightereyer.xyz/2020/04/21/articles/2020/04/21/1587470893000.html/"/>
    <id>http://brightereyer.xyz/2020/04/21/articles/2020/04/21/1587470893000.html/</id>
    <published>2020-04-21T12:08:13.000Z</published>
    <updated>2020-04-21T12:08:13.000Z</updated>
    
    <content type="html"><![CDATA[<details><summary>/etc/init.d/rcS</summary><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/<span class="built_in">local</span>/bin:/topeet/bin:</span><br><span class="line">runlevel=S</span><br><span class="line">prevlevel=N</span><br><span class="line"><span class="built_in">umask</span> 022</span><br><span class="line"><span class="built_in">export</span> PATH runlevel prevlevel</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#       Trap CTRL-C &amp;c only in this shell so we can interrupt subprocesses.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">":"</span> INT QUIT TSTP</span><br><span class="line">/bin/hostname iTOP-6818</span><br><span class="line"></span><br><span class="line"><span class="comment">#/bin/mount -n -t proc none /proc</span></span><br><span class="line"><span class="comment">#/bin/mount -n -t sysfs none /sys</span></span><br><span class="line"><span class="comment">#/bin/mount -n -t usbfs none /proc/bus/usb</span></span><br><span class="line"><span class="comment">#/bin/mount -t ramfs none /dev</span></span><br><span class="line">[ -e /proc/1 ]    || /bin/mount -n -t proc  none /proc</span><br><span class="line">[ -e /sys/class ] || /bin/mount -n -t sysfs none /sys</span><br><span class="line">[ -e /dev/tty ]   || /bin/mount    -t ramfs none /dev</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> /sbin/mdev &gt; /proc/sys/kernel/hotplug</span><br><span class="line">/sbin/mdev -s</span><br><span class="line">/bin/hotplug</span><br><span class="line"><span class="comment"># mounting file system specified in /etc/fstab</span></span><br><span class="line">mkdir -p /dev/pts</span><br><span class="line">mkdir -p /dev/shm</span><br><span class="line">/bin/mount -n -t devpts none /dev/pts -o mode=0622</span><br><span class="line">/bin/mount -n -t tmpfs tmpfs /dev/shm</span><br><span class="line">/bin/mount -n -t ramfs none /tmp</span><br><span class="line">/bin/mount -n -t ramfs none /var</span><br><span class="line">mkdir -p /var/empty</span><br><span class="line">mkdir -p /var/<span class="built_in">log</span></span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/boa</span><br><span class="line">mkdir -p /var/lock</span><br><span class="line">mkdir -p /var/run</span><br><span class="line">mkdir -p /var/tmp</span><br><span class="line"></span><br><span class="line">ln -sf /dev/ttyS2 /dev/tty0</span><br><span class="line">ln -sf /dev/ttyS2 /dev/tty2</span><br><span class="line">ln -sf /dev/ttyS2 /dev/tty3</span><br><span class="line">ln -sf /dev/ttyS2 /dev/tty4</span><br><span class="line"></span><br><span class="line"><span class="comment">#amixer cset numid=5 127</span></span><br><span class="line"><span class="comment">#amixer cset numid=6 1</span></span><br><span class="line"><span class="comment">#amixer cset numid=30 8,0</span></span><br><span class="line"><span class="comment">#amixer cset numid=40 1</span></span><br><span class="line"><span class="comment">#amixer cset numid=43 1</span></span><br><span class="line"><span class="comment">#amixer cset numid=47 1</span></span><br><span class="line"></span><br><span class="line">/sbin/hwclock -s -f /dev/rtc</span><br><span class="line"></span><br><span class="line">syslogd</span><br><span class="line">/etc/rc.d/init.d/netd start</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"                        "</span> &gt; /dev/ttySAC2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Starting networking..."</span> &gt; /dev/ttySAC2</span><br><span class="line"><span class="comment">#sleep 1</span></span><br><span class="line"><span class="comment">#/etc/rc.d/init.d/httpd start</span></span><br><span class="line"><span class="comment">#echo "                        " &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="comment">#echo "Starting web server..." &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="comment">#sleep 1</span></span><br><span class="line"><span class="comment">#/etc/rc.d/init.d/leds start</span></span><br><span class="line"><span class="comment">#echo "                        " &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="comment">#echo "Starting leds service..." &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="comment">#echo "                        "</span></span><br><span class="line"><span class="comment">#sleep 1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"*************************************"</span> &gt; /dev/ttySAC2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"     http://www.topeetboard.com      "</span> &gt; /dev/ttySAC2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"*************************************"</span> &gt; /dev/ttySAC2</span><br><span class="line"></span><br><span class="line">sleep 2</span><br><span class="line"></span><br><span class="line">/etc/firmware/load_firmware</span><br><span class="line"></span><br><span class="line"><span class="comment">#mkdir /mnt/disk</span></span><br><span class="line"><span class="comment">#mount -t yaffs2 /dev/mtdblock3 /mnt/disk</span></span><br><span class="line"></span><br><span class="line">/sbin/ifconfig lo 127.0.0.1</span><br><span class="line"></span><br><span class="line">/etc/init.d/ifconfig-eth0</span><br><span class="line"></span><br><span class="line"><span class="comment">####### #wifi setting #######</span></span><br><span class="line"><span class="comment">#/etc/init.d/ath6kl</span></span><br><span class="line">/etc/init.d/mt6620 &amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/kernel/hung_task_timeout_secs</span><br><span class="line"></span><br><span class="line"><span class="comment">#echo "                                  " &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="comment">#echo "Starting Qtopia, please waiting..." &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="comment">#echo "                                  " &gt; /dev/ttySAC2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Starting Qt5, please waiting..."</span>    &gt; /dev/ttySAC2</span><br><span class="line"></span><br><span class="line"><span class="comment">#/bin/qtopia &amp;</span></span><br><span class="line">/bin/qt5.7 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#must run this shell</span></span><br><span class="line">/bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#由于上电执行程序会使终端进程无法关闭，请谨慎操作</span></span><br><span class="line"><span class="comment">#/work/command -qws &amp;</span></span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;details&gt;
&lt;summary&gt;/etc/init.d/rcS&lt;/summary&gt;

&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
</feed>
