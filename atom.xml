<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-05-03T09:58:33.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[工具] tcp+udp+socket</title>
    <link href="http://brightereyer.xyz/2020/05/03/articles/2020/05/03/1588499913000.html/"/>
    <id>http://brightereyer.xyz/2020/05/03/articles/2020/05/03/1588499913000.html/</id>
    <published>2020-05-03T09:58:33.000Z</published>
    <updated>2020-05-03T09:58:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_42248496/article/details/87866459" target="_blank">TCP/UDP调试工具</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">百度云盘链接:</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1009jBids3vnt0-DtJDP-hQ</span><br><span class="line">提取码:</span><br><span class="line">yj74</span><br></pre></td></tr></table></figure><p>Socket调试工具推荐</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;3e16e5dab8a6</span><br><span class="line">https:&#x2F;&#x2F;sokit.soft32.com&#x2F;free-download&#x2F;?nc&amp;dm&#x3D;3</span><br><span class="line">http:&#x2F;&#x2F;sokit.googlecode.com&#x2F;files&#x2F;sokit-1.3-win32-enu.zip</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1tw5QURvH36GHX0NGyVncmQ</span><br><span class="line">提取密码:</span><br><span class="line">c9e4</span><br></pre></td></tr></table></figure><p><a href="http://www.greenxf.com/soft/182615.html" target="_blank">socket调试助手</a></p><p><a href="http://mydown.yesky.com/pcsoft/413547443.html" target="_blank">SocketTool(tcpudp调试工具) 4.0</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_42248496/article/details/87866459&quot; target=&quot;_blank&quot;&gt;TCP/UDP调试工具&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="工具" scheme="http://brightereyer.xyz/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>[全栈] android+springboot</title>
    <link href="http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588429604000.html/"/>
    <id>http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588429604000.html/</id>
    <published>2020-05-02T14:26:44.000Z</published>
    <updated>2020-05-02T14:26:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/Wangxy9527/Android-springboot-mysql" target="_blank">解忧社区—Android客户端+springboot接口+mysql数据库</a></p><p><a href="https://github.com/HeyJC/QRCodeLogin" target="_blank">二维码扫码登录；服务器端、网页前端、移动端源码</a></p><p><a href="https://github.com/yetel/EasyChatAndroidClient" target="_blank">EasyChatAndroidClient</a><br><a href="https://github.com/yetel/EasyChatServer" target="_blank">EasyChatServer</a></p><p><a href="https://github.com/qiushi123/androidApp" target="_blank">androidApp</a><br><a href="https://github.com/qiushi123/wuyehoutai2" target="_blank">wuyehoutai2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/Wangxy9527/Android-springboot-mysql&quot; target=&quot;_blank&quot;&gt;解忧社区—Android客户端+springboot接口+mysql数据库&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href
      
    
    </summary>
    
    
    
      <category term="全栈" scheme="http://brightereyer.xyz/tags/%E5%85%A8%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>[docker] ftp服务器</title>
    <link href="http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588428869000.html/"/>
    <id>http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588428869000.html/</id>
    <published>2020-05-02T14:14:29.000Z</published>
    <updated>2020-05-02T14:14:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.hangge.com/blog/cache/detail_2449.html" target="_blank">Docker - 在容器中搭建运行FTP服务器（vsftpd）</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull fauria&#x2F;vsftpd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f vsftpd</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">-p 20:20 -p 21:21 -p 21100-21110:21100-21110 \</span><br><span class="line">-e FTP_USER&#x3D;test -e FTP_PASS&#x3D;test \</span><br><span class="line">-e PASV_ADDRESS&#x3D;192.168.99.100 \</span><br><span class="line">-e PASV_MIN_PORT&#x3D;21100 -e PASV_MAX_PORT&#x3D;21110 \</span><br><span class="line">--name vsftpd --restart&#x3D;always fauria&#x2F;vsftpd</span><br></pre></td></tr></table></figure><p>新建用户文件夹<br>（1）首先执行如下命令进入到容器里面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -i -t vsftpd bash</span><br></pre></td></tr></table></figure><p>（2）由于前面我们启动的时候设置用户名为 test，已经自动创建对应的用户文件夹（所以下面这个文件夹无需我们再次手动创建）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;home&#x2F;vsftpd&#x2F;test</span><br></pre></td></tr></table></figure><p>（3）为方便演示，在 test 用户文件夹下新建一个 1.txt 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch &#x2F;home&#x2F;vsftpd&#x2F;test&#x2F;1.txt</span><br></pre></td></tr></table></figure><p>浏览器访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp:&#x2F;&#x2F;test:test@192.168.99.100:21</span><br></pre></td></tr></table></figure><p>新增一个账号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用户</span><br><span class="line">hangge</span><br><span class="line">密码</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker exec -i -t vsftpd bash</span><br><span class="line">mkdir &#x2F;home&#x2F;vsftpd&#x2F;hangge</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;vsftpd&#x2F;virtual_users.txt &lt;&lt;EOF</span><br><span class="line">hangge</span><br><span class="line">123456</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 把登录的验证信息写入数据库</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;db_load -T -t hash -f &#x2F;etc&#x2F;vsftpd&#x2F;virtual_users.txt &#x2F;etc&#x2F;vsftpd&#x2F;virtual_users.db</span><br><span class="line"></span><br><span class="line">docker restart vsftpd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.hangge.com/blog/cache/detail_2449.html&quot; target=&quot;_blank&quot;&gt;Docker - 在容器中搭建运行FTP服务器（vsftpd）&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highl
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[docker] cgroup问题</title>
    <link href="http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588428868000.html/"/>
    <id>http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588428868000.html/</id>
    <published>2020-05-02T14:14:28.000Z</published>
    <updated>2020-05-02T14:14:28.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker-machine ssh default</span><br><span class="line">sudo mkdir &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;systemd</span><br><span class="line">sudo mount -t cgroup -o none,name&#x3D;systemd cgroup &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;systemd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[centos] ftp服务器</title>
    <link href="http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588428867000.html/"/>
    <id>http://brightereyer.xyz/2020/05/02/articles/2020/05/02/1588428867000.html/</id>
    <published>2020-05-02T14:14:27.000Z</published>
    <updated>2020-05-02T14:14:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/haiyabtx/p/10762745.html" target="_blank">CentOS7 FTP安装与配置</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f ftp</span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">--name ftp \</span><br><span class="line">-p 21:21 \</span><br><span class="line">-p 21100-21110:21100-21110 \</span><br><span class="line">--restart&#x3D;always \</span><br><span class="line">--privileged \</span><br><span class="line">--restart&#x3D;always \</span><br><span class="line">-i -t centos &#x2F;usr&#x2F;sbin&#x2F;init</span><br><span class="line"></span><br><span class="line">docker exec -it ftp &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker-machine ssh default</span><br><span class="line">sudo mkdir &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;systemd</span><br><span class="line">sudo mount -t cgroup -o none,name&#x3D;systemd cgroup &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;systemd</span><br></pre></td></tr></table></figure><p><a href="https://developer.aliyun.com/mirror/centos" target="_blank">aliyun更新了centos8的说明：</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-8.repo</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;yum.repos.d</span><br><span class="line">#备份</span><br><span class="line">cp CentOS-Base.repo CentOS-Base.repo.bak</span><br><span class="line">cp CentOS-AppStream.repo CentOS-AppStream.repo.bak</span><br><span class="line">cp CentOS-Extras.repo CentOS-Extras.repo.bak</span><br><span class="line"></span><br><span class="line">sed -i &#39;s|mirrorlist&#x3D;|#mirrorlist&#x3D;|g&#39; CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line">sed -i &#39;s|#baseurl&#x3D;|baseurl&#x3D;|g&#39; CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line">sed -i &#39;s|http:&#x2F;&#x2F;mirror.centos.org|https:&#x2F;&#x2F;mirrors.aliyun.com|g&#39; CentOS-Base.repo CentOS-AppStream.repo CentOS-Extras.repo</span><br><span class="line"></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>安装基本命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd vim net-tools</span><br><span class="line">yum list | grep initscripts</span><br><span class="line">yum install -y initscripts</span><br></pre></td></tr></table></figure><details><summary>修改配置文件/etc/vsftpd/vsftpd.conf</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#修改配置 12 行</span><br><span class="line">#anonymous_enable&#x3D;NO</span><br><span class="line">sed -i &quot;s&#x2F;#anonymous_enable&#x2F;anonymous_enable&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置 33 行</span><br><span class="line">#anon_mkdir_write_enable&#x3D;YES</span><br><span class="line">sed -i &quot;s&#x2F;#anon_mkdir_write_enable&#x2F;anon_mkdir_write_enable&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置48行</span><br><span class="line">#chown_uploads&#x3D;YES</span><br><span class="line">sed -i &quot;s&#x2F;#chown_uploads&#x2F;chown_uploads&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置72行</span><br><span class="line">#async_abor_enable&#x3D;YES</span><br><span class="line">sed -i &quot;s&#x2F;#async_abor_enable&#x2F;async_abor_enable&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置82行</span><br><span class="line">#ascii_upload_enable&#x3D;YES</span><br><span class="line">sed -i &quot;s&#x2F;#ascii_upload_enable&#x2F;ascii_upload_enable&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置83行</span><br><span class="line">#ascii_download_enable&#x3D;YES</span><br><span class="line">sed -i &quot;s&#x2F;#ascii_download_enable&#x2F;ascii_download_enable&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置86行</span><br><span class="line">#ftpd_banner&#x3D;Welcome to blah FTP service.</span><br><span class="line">sed -i &quot;s&#x2F;#ftpd_banner&#x2F;ftpd_banner&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line"></span><br><span class="line">#修改配置100行</span><br><span class="line">#chroot_local_user&#x3D;YES</span><br><span class="line">sed -i &quot;s&#x2F;#chroot_local_user&#x2F;chroot_local_user&#x2F;g&quot; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br></pre></td></tr></table></figure></details><details><summary>添加下列内容到/etc/vsftpd/vsftpd.conf末尾</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">use_localtime&#x3D;YES</span><br><span class="line">listen_port&#x3D;21</span><br><span class="line">idle_session_timeout&#x3D;300</span><br><span class="line">guest_enable&#x3D;YES</span><br><span class="line">guest_username&#x3D;vsftpd</span><br><span class="line">user_config_dir&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vconf</span><br><span class="line">data_connection_timeout&#x3D;1</span><br><span class="line">virtual_use_local_privs&#x3D;YES</span><br><span class="line">pasv_min_port&#x3D;40000</span><br><span class="line">pasv_max_port&#x3D;40010</span><br><span class="line">accept_timeout&#x3D;5</span><br><span class="line">connect_timeout&#x3D;1</span><br><span class="line">allow_writeable_chroot&#x3D;YES</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></details><details><summary>创建编辑用户文件</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;vsftpd&#x2F;virtusers &lt;&lt;EOF</span><br><span class="line">leo</span><br><span class="line">test</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></details><details><summary>生成用户数据文件</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t hash -f &#x2F;etc&#x2F;vsftpd&#x2F;virtusers &#x2F;etc&#x2F;vsftpd&#x2F;virtusers.db</span><br><span class="line"></span><br><span class="line"># 设定PAM验证文件，并指定对虚拟用户数据库文件进行读取</span><br><span class="line">chmod 600 &#x2F;etc&#x2F;vsftpd&#x2F;virtusers.db</span><br></pre></td></tr></table></figure></details><details><summary>修改 /etc/pam.d/vsftpd 文件</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;pam.d&#x2F;vsftpd &#x2F;etc&#x2F;pam.d&#x2F;vsftpd.bak</span><br><span class="line"></span><br><span class="line">sed -i &quot;s&#x2F;auth&#x2F;#auth&#x2F;g&quot; &#x2F;etc&#x2F;pam.d&#x2F;vsftpd</span><br><span class="line">sed -i &quot;s&#x2F;account&#x2F;#account&#x2F;g&quot; &#x2F;etc&#x2F;pam.d&#x2F;vsftpd</span><br><span class="line">sed -i &quot;s&#x2F;session&#x2F;#session&#x2F;g&quot; &#x2F;etc&#x2F;pam.d&#x2F;vsftpd</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;pam.d&#x2F;vsftpd &lt;&lt;EOF</span><br><span class="line">auth sufficient &#x2F;lib64&#x2F;security&#x2F;pam_userdb.so db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;virtusers</span><br><span class="line">account sufficient &#x2F;lib64&#x2F;security&#x2F;pam_userdb.so db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;virtusers</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></details><details><summary>新建系统用户vsftpd，用户目录为/home/vsftpd</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd vsftpd -d &#x2F;home&#x2F;vsftpd -s &#x2F;bin&#x2F;false</span><br><span class="line">chown -R vsftpd:vsftpd &#x2F;home&#x2F;vsftpd</span><br></pre></td></tr></table></figure></details><details><summary>建立虚拟用户个人配置文件</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;vsftpd&#x2F;vconf</span><br><span class="line">cd &#x2F;etc&#x2F;vsftpd&#x2F;vconf</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; leo &lt;&lt;EOF</span><br><span class="line"></span><br><span class="line">local_root&#x3D;&#x2F;home&#x2F;vsftpd&#x2F;leo&#x2F;</span><br><span class="line"></span><br><span class="line">write_enable&#x3D;YES</span><br><span class="line">anon_world_readable_only&#x3D;NO</span><br><span class="line">anon_upload_enable&#x3D;YES</span><br><span class="line">anon_mkdir_write_enable&#x3D;YES</span><br><span class="line">anon_other_write_enable&#x3D;YES</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">#建立leo用户根目录</span><br><span class="line">mkdir -p &#x2F;home&#x2F;vsftpd&#x2F;leo&#x2F;</span><br></pre></td></tr></table></figure></details><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd restart</span><br><span class="line">service vsftpd status</span><br><span class="line"></span><br><span class="line">netstat -anp | grep vsftpd</span><br><span class="line">yum install -y iptables</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it ftp &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ftp:&#x2F;&#x2F;192.168.99.100&#x2F;</span><br><span class="line"></span><br><span class="line">用户名：</span><br><span class="line">leo</span><br><span class="line">密码：</span><br><span class="line">test</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/haiyabtx/p/10762745.html&quot; target=&quot;_blank&quot;&gt;CentOS7 FTP安装与配置&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
    
      <category term="centos" scheme="http://brightereyer.xyz/tags/centos/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 模拟器</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985342000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985342000.html/</id>
    <published>2020-04-27T11:02:22.000Z</published>
    <updated>2020-04-27T11:02:22.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/songdawww/article/details/46509957" target="_blank">1、Stm32+STemWin+LCD</a><br><a href="https://blog.csdn.net/tichimi3375/article/details/80721709" target="_blank">2、STemWin学习笔记——在PC上仿真STemWin</a><br><a href="https://blog.csdn.net/xingkonghxiaoyi/article/details/53979695" target="_blank">3、uC/GUI 和 STemWin的区别</a><br><a href="https://blog.csdn.net/so_cracy/article/details/80228595" target="_blank">4、STemwin 系列（一）STM32 HAL库 裸机移植STemwin</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/songdawww/article/details/46509957&quot; target=&quot;_blank&quot;&gt;1、Stm32+STemWin+LCD&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植nodejs</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985341000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985341000.html/</id>
    <published>2020-04-27T11:02:21.000Z</published>
    <updated>2020-04-27T11:02:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.veryarm.com/115715.html" target="_blank">将node.js移植到arm开发板</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name arm-nodejs -i -t ubuntu &#x2F;bin&#x2F;bash</span><br><span class="line">docker attach arm-nodejs</span><br><span class="line"></span><br><span class="line">sed -i &quot;s&#x2F;archive.ubuntu.com&#x2F;mirrors.ustc.edu.cn&#x2F;g&quot; &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line">sed -i &quot;s&#x2F;cn.archive.ubuntu.com&#x2F;mirrors.ustc.edu.cn&#x2F;g&quot; &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line">sed -i &quot;s&#x2F;security.ubuntu.com&#x2F;mirrors.ustc.edu.cn&#x2F;g&quot; &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure><details><summary>安装arm-linux-gnueabihf</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y lib32z1 lib32ncurses5apt</span><br><span class="line">apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf</span><br></pre></td></tr></table></figure><p>或源码安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y wget tar xz-utils bzip2</span><br><span class="line"></span><br><span class="line">wget -c https:&#x2F;&#x2F;releases.linaro.org&#x2F;components&#x2F;toolchain&#x2F;binaries&#x2F;latest-7&#x2F;arm-linux-gnueabihf&#x2F;gcc-linaro-7.5.0-2019.12-i686_arm-linux-gnueabihf.tar.xz</span><br><span class="line"></span><br><span class="line">tar -xvf gcc-linaro-7.5.0-2019.12-i686_arm-linux-gnueabihf.tar.xz -C &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;profile &lt;&lt;EOF</span><br><span class="line">export PATH&#x3D;\$PATH:&#x2F;usr&#x2F;local&#x2F;gcc-linaro-7.5.0-2019.12-i686_arm-linux-gnueabihf&#x2F;bin</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></details><details><summary>apt命令:</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"># 搜索包</span><br><span class="line">apt-cache search package</span><br><span class="line"></span><br><span class="line"># 获取包的相关信息，如说明、大小、版本等</span><br><span class="line">apt-cache show package</span><br><span class="line"></span><br><span class="line"># 安装包</span><br><span class="line">sudo apt-get install package</span><br><span class="line"></span><br><span class="line"># 重新安装包</span><br><span class="line">sudo apt-get install package - - reinstall</span><br><span class="line"></span><br><span class="line"># 强制安装</span><br><span class="line">sudo apt-get -f install</span><br><span class="line"></span><br><span class="line"># 删除包</span><br><span class="line">sudo apt-get remove package</span><br><span class="line"></span><br><span class="line"># 删除包，包括删除配置文件等</span><br><span class="line">sudo apt-get remove package - - purge</span><br><span class="line"></span><br><span class="line"># 自动删除不需要的包</span><br><span class="line">sudo apt-get autoremove</span><br><span class="line"></span><br><span class="line"># 更新源</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"># 更新已安装的包</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line"></span><br><span class="line"># 升级系统</span><br><span class="line">sudo apt-get dist-upgrade</span><br><span class="line"></span><br><span class="line"># 使用 dselect 升级</span><br><span class="line">sudo apt-get dselect-upgrade</span><br><span class="line"></span><br><span class="line"># 了解使用依赖</span><br><span class="line">apt-cache depends package</span><br><span class="line"></span><br><span class="line"># 了解某个具体的依赖</span><br><span class="line">apt-cache rdepends package</span><br><span class="line"></span><br><span class="line"># 安装相关的编译环境</span><br><span class="line">sudo apt-get build-dep package</span><br><span class="line"></span><br><span class="line"># 下载该包的源代码</span><br><span class="line">apt-get source package</span><br><span class="line"></span><br><span class="line"># 清理下载文件的存档</span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean</span><br><span class="line"></span><br><span class="line"># 检查是否有损坏的依赖</span><br><span class="line">sudo apt-get check</span><br></pre></td></tr></table></figure></details><details><summary>先配置交叉工具链：</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search update-alternatives</span><br><span class="line">apt-get remove -y python</span><br><span class="line">apt-get install -y python3 make libtool lzop vim locate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y update-alternatives</span><br><span class="line">update-alternatives --list python</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.16.3&#x2F;node-v12.16.3.tar.gz</span><br><span class="line">tar xvf node-v12.16.3.tar.gz;cd node-v12.16.3</span><br><span class="line"></span><br><span class="line">.&#x2F;configure --help</span><br><span class="line"></span><br><span class="line">export CC&#x3D;arm-linux-gnueabihf-gcc</span><br><span class="line">export CXX&#x3D;arm-linux-gnueabihf-g++</span><br><span class="line">export LD&#x3D;arm-linux-gnueabihf-ld</span><br><span class="line">export RANLIB&#x3D;arm-linux-gnueabihf-ranlib</span><br><span class="line">export AR&#x3D;arm-linux-gnueabihf-ar</span><br><span class="line">export CFLAGS&#x3D;-static</span><br><span class="line">export CXXFLAGS&#x3D;-static</span><br><span class="line">export LDFLAGS&#x3D;-static</span><br><span class="line"></span><br><span class="line">.&#x2F;configure \</span><br><span class="line">--prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nodejs \</span><br><span class="line">--dest-cpu&#x3D;arm --dest-os&#x3D;linux \</span><br><span class="line">--cross-compiling \</span><br><span class="line">--fully-static \</span><br><span class="line">--with-arm-float-abi&#x3D;hard \</span><br><span class="line">--without-snapshot</span><br></pre></td></tr></table></figure></details><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">updatedb</span><br><span class="line">locate deps&#x2F;v8&#x2F;tools&#x2F;run.py</span><br><span class="line"></span><br><span class="line">vim deps&#x2F;v8&#x2F;tools&#x2F;run.py</span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br></pre></td></tr></table></figure><p>配置安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j 8;make install</span><br></pre></td></tr></table></figure><details><summary>test.js</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是需要提交的数据</span></span><br><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    a: <span class="number">123</span>,</span><br><span class="line">    time: <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> content = querystring.stringify(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">    hostname: <span class="string">'192.168.51.28'</span>,</span><br><span class="line">    port: <span class="number">3000</span>,  </span><br><span class="line">    path: <span class="string">'/pay/pay_callback?'</span> + content,</span><br><span class="line">    method: <span class="string">'GET'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> req = http.request(options, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'STATUS: '</span> + res.statusCode);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'HEADERS: '</span> + <span class="built_in">JSON</span>.stringify(res.headers));</span><br><span class="line">    res.setEncoding(<span class="string">'utf8'</span>);</span><br><span class="line">    res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'BODY: '</span> + chunk);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">req.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'problem with request: '</span> + e.message);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">req.end();</span><br></pre></td></tr></table></figure></details><p>放到开发板上试下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">node test.js</span><br><span class="line"></span><br><span class="line">node</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.veryarm.com/115715.html&quot; target=&quot;_blank&quot;&gt;将node.js移植到arm开发板&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[android] 微信授权登录</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985340000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985340000.html/</id>
    <published>2020-04-27T11:02:20.000Z</published>
    <updated>2020-04-27T11:02:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/3d19b6622ff2" target="_blank">Android微信授权登录分享—封装类</a><br><a href="https://github.com/flora-gjf/WeChatHelper" target="_blank">微信授权分享工具类 WeChatHelper</a><br><a href="https://blog.csdn.net/qq_34190023/article/details/82017427" target="_blank">微信开放平台开发第三方授权登陆（三）：Android客户端</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/3d19b6622ff2&quot; target=&quot;_blank&quot;&gt;Android微信授权登录分享—封装类&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/flora-gjf/WeChatH
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[android] 日志</title>
    <link href="http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985339000.html/"/>
    <id>http://brightereyer.xyz/2020/04/27/articles/2020/04/27/1587985339000.html/</id>
    <published>2020-04-27T11:02:19.000Z</published>
    <updated>2020-04-27T11:02:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/salary/article/details/82686550" target="_blank">Android Studio中的日志输出</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -v time&gt; D:\1111.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/salary/article/details/82686550&quot; target=&quot;_blank&quot;&gt;Android Studio中的日志输出&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[stm32] 野火F429V1版</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906619000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906619000.html/</id>
    <published>2020-04-26T13:10:19.000Z</published>
    <updated>2020-04-26T13:10:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1x7VkGEJIp8RQ3kshzD-smw" target="_blank">资料盘</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">bjd8</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/1MgjvUyFR1e9UPbRlw9coLw" target="_blank">视频盘</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">e2cp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1x7VkGEJIp8RQ3kshzD-smw&quot; target=&quot;_blank&quot;&gt;资料盘&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
    
      <category term="stm32" scheme="http://brightereyer.xyz/tags/stm32/"/>
    
  </entry>
  
  <entry>
    <title>[硬件] PCB硬件制作</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906618000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906618000.html/</id>
    <published>2020-04-26T13:10:18.000Z</published>
    <updated>2020-04-26T13:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/little_young5280/opencode" target="_blank">PCB硬件制作</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/little_young5280/opencode&quot; target=&quot;_blank&quot;&gt;PCB硬件制作&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="硬件" scheme="http://brightereyer.xyz/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>[shell] 在指定行的前后插入指定内容</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906617000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906617000.html/</id>
    <published>2020-04-26T13:10:17.000Z</published>
    <updated>2020-04-26T13:10:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>在指定行的前/后插入指定内容</p><p>准备文件a.txt、b.txt：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a.txt</span></span><br><span class="line">cat &gt; a.txt &lt;&lt;EOF</span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># b.txt</span></span><br><span class="line">cat &gt; b.txt &lt;&lt;EOF</span><br><span class="line">AAA</span><br><span class="line">BBB</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>如果知道行号可以用下面的方法：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'2 r b.txt'</span> a.txt    <span class="comment">#在a.txt的第2行插入文件b.txt</span></span><br><span class="line">awk <span class="string">'1;NR==2&#123;system("cat b.txt")&#125;'</span> a.txt &gt; c.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意，如果写成以下，则a.txt文件为空</span></span><br><span class="line"><span class="comment">#awk '1;NR==2&#123;system("cat b.txt")&#125;' a.txt &gt; a.txt</span></span><br></pre></td></tr></table></figure><p>如果不知道行号，可以用正則匹配：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/regex/ r b.txt'</span> a.txt <span class="comment"># regex是正则表达式</span></span><br><span class="line">awk <span class="string">'/target/&#123;system("cat b.txt")&#125;'</span> a.txt &gt; c.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#sed的話如果不改变源文件，可以去掉-i开关，修改会输出到STDOUT：</span><br></pre></td></tr></table></figure><p>原文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat -n a.txt </span><br><span class="line">1  aaaa</span><br><span class="line">2  bbbb</span><br><span class="line">3  cccc</span><br><span class="line">4  dddd</span><br></pre></td></tr></table></figure><p>现在要在第二行即“bbbb”行的下面添加一行，内容为“xiaowu”：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/bbbb/a\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>如果要加两行“xiaowu”可以用一下语句，注意用“\n”换行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/bbbb/a\xiaowu\nxiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">xiaowu</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>如果要在第二行即“bbbb”行的上添加一行，内容为“xiaowu”，可以把参数“a”换成“i”：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/b/i\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">xiaowu</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>以上文件中只有一行匹配，如果文件中有两行或者多行匹配，结果有是如何呢？</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat -n a.txt </span><br><span class="line">1  aaaa</span><br><span class="line">2  bbbb</span><br><span class="line">3  cccc</span><br><span class="line">4  bbbb</span><br><span class="line">5  dddd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个匹配行的下一行添加“xiaowu”</span></span><br><span class="line">sed <span class="string">'/bbbb/a\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">cccc</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>那么如果指向在第二个“bbbb”的下一行添加内容“xiaowu”，该如何操作呢？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以考虑先获取第二个“bbbb”行的行号，然后根据行号在此行的下一行添加“xiaowu”</span><br></pre></td></tr></table></figure><p>获取第二个“bbbb”行的行号的方法：<br>方法一：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat -n a.txt |grep bbbb |awk <span class="string">'&#123;print $1&#125;'</span>|sed -n <span class="string">"2"</span>p</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/bbbb/='</span> a.txt |sed -n <span class="string">"2"</span>p</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>由结果可知第二个“bbbb”行的行号为4，然后再在第四行的前或后添加相应的内容:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sed -e <span class="string">'4a\xiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">dddd</span><br><span class="line"></span><br><span class="line">sed -e <span class="string">'4a\xiaowu\nxiaowu'</span> a.txt </span><br><span class="line">aaaa</span><br><span class="line">bbbb</span><br><span class="line">cccc</span><br><span class="line">bbbb</span><br><span class="line">xiaowu</span><br><span class="line">xiaowu</span><br><span class="line">dddd</span><br></pre></td></tr></table></figure><p>向指定行的末尾添加指定内容，比如在“ccccc”行的行尾介绍“ eeeee”</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat a.txt</span><br><span class="line">aaaaa</span><br><span class="line">bbbbb</span><br><span class="line">ccccc</span><br><span class="line">ddddd</span><br><span class="line"></span><br><span class="line">sed <span class="string">'s/cc.*/&amp; eeeee/g'</span> a.txt</span><br><span class="line">aaaaa</span><br><span class="line">bbbbb</span><br><span class="line">ccccc eeeee</span><br><span class="line">ddddd</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weiyuefei/article/details/68943857" target="_blank">SHELL 在指定行的前/后插入指定内容</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在指定行的前/后插入指定内容&lt;/p&gt;
&lt;p&gt;准备文件a.txt、b.txt：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
    
      <category term="shell" scheme="http://brightereyer.xyz/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>[qt] 控制台下的tcp</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906616000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906616000.html/</id>
    <published>2020-04-26T13:10:16.000Z</published>
    <updated>2020-04-26T13:10:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u013232740/article/details/74999884" target="_blank">QT在控制台下实现TCP网口通信</a></p><p>服务端server：</p><details><summary>main.cpp</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpserver.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">//从class的类构造函数调用套接字</span></span><br><span class="line">    TcpServer server;</span><br><span class="line">    <span class="comment">//显示状态</span></span><br><span class="line">    server.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><details><summary>tcpserver.cpp</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpserver.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QHostAddress&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">TcpServer::TcpServer(QObject* parent): QObject(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//将newConnection()与acceptConnection()连结</span></span><br><span class="line">    <span class="built_in">connect</span>(&amp;server, SIGNAL(newConnection()),<span class="keyword">this</span>,SLOT(acceptConnection()));</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"listening..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//bool QTcpServer::listen ( const QHostAddress &amp; address = QHostAddress::Any, quint16 port = 0 )</span></span><br><span class="line">    <span class="comment">//Tells the server to listen for incoming connections on address address and port port.</span></span><br><span class="line">    <span class="comment">//If port is 0, a port is chosen automatically.</span></span><br><span class="line">    <span class="comment">//If address is QHostAddress::Any, the server will listen on all network interfaces.</span></span><br><span class="line">    <span class="comment">//在任意网络接口监听</span></span><br><span class="line">    <span class="comment">//server.listen(QHostAddress::Any,8888);</span></span><br><span class="line">    <span class="comment">//在服务端IP地址172.18.218.2的端口8888监听</span></span><br><span class="line">    <span class="function">QHostAddress <span class="title">addr</span><span class="params">(<span class="string">"172.18.218.2"</span>)</span></span>;</span><br><span class="line">    server.<span class="built_in">listen</span>(addr, <span class="number">8888</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"listen..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TcpServer::~TcpServer()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"closing..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//关闭服务器</span></span><br><span class="line">    server.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpServer::acceptConnection()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//返回等待的连接</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"connecting..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    client = server.nextPendingConnection();</span><br><span class="line">    <span class="comment">//将readyRead()与startRead()连结</span></span><br><span class="line">    <span class="built_in">connect</span>(client, SIGNAL(readyRead()),<span class="keyword">this</span>, SLOT(startRead()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpServer::startRead()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">buffer</span>[<span class="number">1024</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//读入数据</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"reading..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    client-&gt;<span class="built_in">read</span>(<span class="built_in">buffer</span>, client-&gt;bytesAvailable());</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"outputing..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//显示数据</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">buffer</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//关闭客户端</span></span><br><span class="line">    client-&gt;<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpServer::<span class="built_in">begin</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//显示状态</span></span><br><span class="line">     <span class="built_in">cout</span>&lt;&lt;<span class="string">"try to connect..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><details><summary>tcpserver.h</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TCPSERVER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCPSERVER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtNetwork&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QObject&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTcpServer&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTcpSocket&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TcpServer</span>:</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line">Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    TcpServer(QObject * parent = <span class="number">0</span>);</span><br><span class="line">    ~TcpServer();</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">begin</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">acceptConnection</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">startRead</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QTcpServer server;</span><br><span class="line">    QTcpSocket* client;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// TCPSERVER_H</span></span></span><br></pre></td></tr></table></figure></details><p>客户端client：</p><details><summary>main.cpp</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtCore/QCoreApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpclient.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QCoreApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    TcpClient client;</span><br><span class="line">    <span class="comment">//开始建立TCP连接，发送数据</span></span><br><span class="line">    <span class="comment">//本机环回通信</span></span><br><span class="line">    <span class="comment">//client.start("127.0.0.1", 8888);</span></span><br><span class="line">    <span class="comment">//服务端/客户端通信，填入服务端IP地址与端口号</span></span><br><span class="line">    client.start(<span class="string">"172.18.216.230"</span>, <span class="number">8888</span>);</span><br><span class="line">    <span class="keyword">return</span> a.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><details><summary>tcpclient.cpp</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"tcpclient.h"</span></span></span><br><span class="line"></span><br><span class="line">TcpClient::TcpClient(QObject* parent): QObject(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//建立connected()函数与startTransfer()函数的连结</span></span><br><span class="line">    <span class="built_in">connect</span>(&amp;client, SIGNAL(<span class="built_in">connected</span>()),<span class="keyword">this</span>, SLOT(startTransfer()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TcpClient::~TcpClient()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//关闭客户端</span></span><br><span class="line">    client.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpClient::start(QString address, quint16 port)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//显示状态</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"client begins to connect..."</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="comment">//The QHostAddress class provides an IP address.</span></span><br><span class="line">    <span class="comment">//This class holds an IPv4 or IPv6 address in a platform- and protocol-independent manner.</span></span><br><span class="line">    <span class="comment">//创建QHostAddress类的对象</span></span><br><span class="line">    <span class="function">QHostAddress <span class="title">addr</span><span class="params">(address)</span></span>;</span><br><span class="line">    <span class="comment">//跟服务端连接</span></span><br><span class="line">    <span class="comment">//Attempts to make a connection to hostName on the given port.</span></span><br><span class="line">    client.connectToHost(addr, port);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> TcpClient::startTransfer()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//qint64 QIODevice::write ( const char * data, qint64 maxSize )</span></span><br><span class="line">    <span class="comment">//Writes at most maxSize bytes of data from data to the device.</span></span><br><span class="line">    <span class="comment">//Returns the number of bytes that were actually written, or -1 if an error occurred.</span></span><br><span class="line">    <span class="comment">//写入数据到设备</span></span><br><span class="line">    client.<span class="built_in">write</span>(<span class="string">"hello qt!"</span>, <span class="number">9</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><details><summary>tcpclient.h</summary><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#ifndef TCPCLIENT_H</span><br><span class="line">#define TCPCLIENT_H</span><br><span class="line"></span><br><span class="line">#include &lt;QtNetwork&gt;</span><br><span class="line">#include &lt;QObject&gt;</span><br><span class="line">#include &lt;QString&gt;</span><br><span class="line">#include &lt;QTcpSocket&gt;</span><br><span class="line">#include &lt;QHostAddress&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">class TcpClient: public QObject</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line">public:</span><br><span class="line">    TcpClient(QObject* parent &#x3D; 0);</span><br><span class="line">    ~TcpClient();</span><br><span class="line">    void start(QString address, quint16 port);</span><br><span class="line"></span><br><span class="line">public slots:</span><br><span class="line">    void startTransfer();</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">    QTcpSocket client;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">#endif &#x2F;&#x2F; TCPCLIENT_H</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u013232740/article/details/74999884&quot; target=&quot;_blank&quot;&gt;QT在控制台下实现TCP网口通信&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;服务端server：&lt;/p&gt;
&lt;details&gt;

      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[qt] 定时器</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906615000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906615000.html/</id>
    <published>2020-04-26T13:10:15.000Z</published>
    <updated>2020-04-26T13:10:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/andy_93/article/details/52776283" target="_blank">Qt中定时器使用的两种方法</a><br>mytimer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MY_TIMER_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MY_TIMER_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QObject&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QTimer&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTimer</span> :</span> <span class="keyword">public</span> QObject</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Q_OBJECT</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">MyTimer(QObject* parent = <span class="literal">NULL</span>);</span><br><span class="line">~MyTimer();</span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleTimeout</span><span class="params">()</span></span>;  <span class="comment">//超时处理函数</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">QTimer *m_pTimer;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//MY_TIMER_H</span></span></span><br></pre></td></tr></table></figure><p>mytimer.cpp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"mytimer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TIMER_TIMEOUT(5*1000)</span></span><br><span class="line"> </span><br><span class="line">MyTimer::MyTimer(QObject *parent)</span><br><span class="line">:QObject(parent)</span><br><span class="line">&#123;</span><br><span class="line">m_pTimer = <span class="keyword">new</span> QTimer(<span class="keyword">this</span>);</span><br><span class="line"><span class="built_in">connect</span>(m_pTimer, SIGNAL(timeout()), <span class="keyword">this</span>, SLOT(handleTimeout()));</span><br><span class="line">m_pTimer-&gt;start(TIMER_TIMEOUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyTimer::~MyTimer()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> MyTimer::handleTimeout()</span><br><span class="line">&#123;</span><br><span class="line">qDebug()&lt;&lt;<span class="string">"Enter timeout processing function\n"</span>;</span><br><span class="line"><span class="keyword">if</span>(m_pTimer-&gt;isActive())&#123;</span><br><span class="line">m_pTimer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/andy_93/article/details/52776283&quot; target=&quot;_blank&quot;&gt;Qt中定时器使用的两种方法&lt;/a&gt;&lt;br&gt;mytimer.h&lt;/p&gt;
&lt;figure class=&quot;highli
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[qt] char[]与QString相互转换支持中文</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906614000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906614000.html/</id>
    <published>2020-04-26T13:10:14.000Z</published>
    <updated>2020-04-26T13:10:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/zhangxuechao_/article/details/81700266" target="_blank">Qt 字符串截取 获取指定字符位置</a></p><p><a href="https://blog.csdn.net/sinat_37269729/article/details/98201051" target="_blank">char[]与QString相互转换支持中文</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> path[<span class="number">50</span>];</span><br><span class="line">    QString str = <span class="string">"D:\\搜狗高速下载\\weka-3-8-3jre-x64.exe"</span>;</span><br><span class="line">    QByteArray ba = str.toLocal8Bit();</span><br><span class="line">    <span class="built_in">memcpy</span>(path,ba.data(),ba.<span class="built_in">size</span>()+<span class="number">1</span>);<span class="comment">//加1是为了最后的终结符，否则转换回来的时候不知道什么时候截止</span></span><br><span class="line"></span><br><span class="line">    QString str2;</span><br><span class="line">    str2 = QString::fromLocal8Bit(path);</span><br><span class="line">    qDebug()&lt;&lt;str2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>QString转化成为char数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QString str=<span class="string">"12fff"</span>;</span><br><span class="line">QByteArray ba=str.toLatin1();</span><br><span class="line"><span class="keyword">char</span> *c=ba.data();</span><br></pre></td></tr></table></figure><p>char数组转化成为QString</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c[]=<span class="string">"12ff"</span>;</span><br><span class="line">QString str=QString(QLatin1String(c));</span><br></pre></td></tr></table></figure><p>这里再对这俩中类型的输出总结一下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">qDebug()&lt;&lt;<span class="string">"print"</span>;</span><br><span class="line">qDebug()&lt;&lt;tr(<span class="string">"print"</span>);</span><br><span class="line">qDebug()&lt;&lt;ch;(ch为<span class="keyword">char</span>类型)</span><br><span class="line">qDebug()&lt;&lt;tr(ch);</span><br><span class="line">qDebug()&lt;&lt;byteArray;(byteArray是QByteArray类型)</span><br><span class="line">qDebug()&lt;&lt;tr(byteArray);</span><br><span class="line">qDebug()&lt;&lt;str;(str为Qstring类型)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 但是qDebug()&lt;&lt;tr(str);是不可以的，要想用tr()函数输出QString类型的字符则要如下：</span></span><br><span class="line">qDebug()&lt;&lt;tr(str.toLatin1);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/zhangxuechao_/article/details/81700266&quot; target=&quot;_blank&quot;&gt;Qt 字符串截取 获取指定字符位置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[c++] try-catch命令</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906613000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906613000.html/</id>
    <published>2020-04-26T13:10:13.000Z</published>
    <updated>2020-04-26T13:10:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/xiamentingtao/article/details/45222827" target="_blank">c++中try catch的用法</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;exception&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span>* myarray= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100000</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (exception&amp; e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Standard exception: "</span> &lt;&lt; e.what() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/xiamentingtao/article/details/45222827&quot; target=&quot;_blank&quot;&gt;c++中try catch的用法&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="c++" scheme="http://brightereyer.xyz/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>[c++] cat命令</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906612000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906612000.html/</id>
    <published>2020-04-26T13:10:12.000Z</published>
    <updated>2020-04-26T13:10:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/BrighterEyer/itop6818-linux-programs/blob/master/cpu-readuid/iTOP-4418%E5%92%8C6818-Linuxc-readuid/readuuid.c" target="_blank">readuuid.c</a></p><p><a href="https://www.cnblogs.com/aaronLinux/p/6944966.html" target="_blank">[system]c/c++调用cat命令</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[] )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">  FILE *fp;</span><br><span class="line">  <span class="keyword">char</span> path[<span class="number">1035</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Open the command for reading. */</span></span><br><span class="line">  fp = popen(<span class="string">"/bin/ls /etc/"</span>, <span class="string">"r"</span>);</span><br><span class="line">  <span class="keyword">if</span> (fp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Failed to run command\n"</span> );</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Read the output a line at a time - output it. */</span></span><br><span class="line">  <span class="keyword">while</span> (fgets(path, <span class="keyword">sizeof</span>(path)<span class="number">-1</span>, fp) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, path);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* close */</span></span><br><span class="line">  pclose(fp);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/BrighterEyer/itop6818-linux-programs/blob/master/cpu-readuid/iTOP-4418%E5%92%8C6818-Linuxc-readuid/readuuid.c&quot;
      
    
    </summary>
    
    
    
      <category term="c++" scheme="http://brightereyer.xyz/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>[arm] python</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906611000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906611000.html/</id>
    <published>2020-04-26T13:10:11.000Z</published>
    <updated>2020-04-26T13:10:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Colin_xuan/article/details/81109328" target="_blank">Python3版本移植到ARM的通用方法（一键移植）</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.4.5&#x2F;Python-3.4.5.tgz</span><br><span class="line">tar xvf Python-3.4.5.tgz;cd Python-3.4.5</span><br></pre></td></tr></table></figure><p>cross_compile_python.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#prepare</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"prepare stage"</span></span><br><span class="line">arm_install=/tmp/arm_python</span><br><span class="line">arm_build=`<span class="built_in">pwd</span>`/arm_build</span><br><span class="line">mkdir <span class="variable">$arm_build</span></span><br><span class="line">mkdir <span class="variable">$arm_install</span></span><br><span class="line"><span class="built_in">cd</span> `<span class="built_in">pwd</span>`</span><br><span class="line"><span class="comment">#arm comfigure</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"arm confiure stage"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$arm_build</span></span><br><span class="line"><span class="built_in">echo</span> ac_cv_file__dev_ptmx=yes &gt; config.site</span><br><span class="line"><span class="built_in">echo</span> ac_cv_file__dev_ptc=yes &gt;&gt; config.site</span><br><span class="line"><span class="built_in">export</span> CONFIG_SITE=config.site</span><br><span class="line">../configure --host=arm-none-linux-gnueabi --build=i686-linux-gnu --target=arm-none-linux-gnueabi --<span class="built_in">disable</span>-ipv6 --prefix=<span class="variable">$arm_install</span> --<span class="built_in">enable</span>-shared --silent</span><br><span class="line"> </span><br><span class="line"><span class="comment">#pc pgen</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"pc pgen stage"</span></span><br><span class="line"><span class="built_in">cd</span> - </span><br><span class="line">./configure --silent</span><br><span class="line"><span class="keyword">for</span> args <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$args</span> = <span class="string">"all"</span> ];<span class="keyword">then</span></span><br><span class="line">make --silent &amp;&amp; make install --silent</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">make Parser/pgen --silent</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line">cp ../Parser/pgen Parser</span><br><span class="line"><span class="comment">#change the pgen time,</span></span><br><span class="line"><span class="comment"># or else the cross compile will replace this pc version pgen. important!!</span></span><br><span class="line">touch -t 12312359 Parser/pgen</span><br><span class="line"> </span><br><span class="line"><span class="comment">#make</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"make stage"</span></span><br><span class="line">make python --silent &amp;&amp; make -i install</span><br><span class="line"> </span><br><span class="line"><span class="comment">#make it smaller</span></span><br><span class="line"><span class="comment">#arm-none-linux-gnueabi-strip -s $arm_install/bin/python3.3</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>执行脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x cross_compile_python.sh</span><br><span class="line">sh cross_compile_python.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Colin_xuan/article/details/81109328&quot; target=&quot;_blank&quot;&gt;Python3版本移植到ARM的通用方法（一键移植）&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植java</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906610000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906610000.html/</id>
    <published>2020-04-26T13:10:10.000Z</published>
    <updated>2020-04-26T13:10:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.oracle.com/java/technologies/javaseembedded8u211-downloads.html#license-lightbox" target="_blank">javaseembedded8u211</a><br><a href="https://blog.csdn.net/qihsming/article/details/85008371" target="_blank">JRE移植到嵌入式ARM平台</a><br><a href="https://pan.baidu.com/s/1Faoi5uVvWVPRKwRutIGk4g" target="_blank">ejdk-8u191-linux-arm-sflt.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码:</span><br><span class="line">m35v</span><br></pre></td></tr></table></figure><p>从tar包中提取软件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr</span><br><span class="line">gunzip *.gz</span><br><span class="line">tar -xvf *.tar</span><br></pre></td></tr></table></figure><p>设置环境变量，在/etc/profile的末尾添加</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EJDK_HOME=/usr/ejdk1.8.0_191</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$EJDK_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>验证安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$EJDK_HOME</span></span><br><span class="line">bin/jrecreate.sh --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>使用jrecreate来创建JRE</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/ejdk1.8.0_151/bin/jrecreate.sh \</span><br><span class="line">--profile compact1 \</span><br><span class="line">--dest /tmp/defaultJRE/</span><br></pre></td></tr></table></figure><p>移植至嵌入式设备<br>1.复制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将虚拟机中生成的整个defaultJRE目录复制至嵌入式设备中的&#x2F;usr&#x2F;jvm目录下</span><br></pre></td></tr></table></figure><p>2.添加环境变量<br>在/etc/profile的末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;jvm&#x2F;defJRE&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>3.验证安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.oracle.com/java/technologies/javaseembedded8u211-downloads.html#license-lightbox&quot; target=&quot;_blank&quot;&gt;javaseembedded8u21
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 蓝牙</title>
    <link href="http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906609000.html/"/>
    <id>http://brightereyer.xyz/2020/04/26/articles/2020/04/26/1587906609000.html/</id>
    <published>2020-04-26T13:10:09.000Z</published>
    <updated>2020-04-26T13:10:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/gatieme/article/details/48751743" target="_blank">ARM平台上蓝牙协议栈Bluez的移植使用和配置</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/gatieme/article/details/48751743&quot; target=&quot;_blank&quot;&gt;ARM平台上蓝牙协议栈Bluez的移植使用和配置&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
</feed>
