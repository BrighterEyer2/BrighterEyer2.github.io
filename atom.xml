<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-03-27T10:13:35.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[android] 图片拍照上传</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304015000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304015000.html/</id>
    <published>2020-03-27T10:13:35.000Z</published>
    <updated>2020-03-27T10:13:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/26d29e187f89" target="_blank">Android拍照或从本地选择图片上传</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/26d29e187f89&quot; target=&quot;_blank&quot;&gt;Android拍照或从本地选择图片上传&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[android] gradle配置</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304014000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304014000.html/</id>
    <published>2020-03-27T10:13:34.000Z</published>
    <updated>2020-03-27T10:13:34.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">distributionUrl&#x3D;https\:&#x2F;&#x2F;services.gradle.org&#x2F;distributions&#x2F;gradle-4.6-all.zip</span><br></pre></td></tr></table></figure><p>{project}/gradle.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemProp.https.proxyHost&#x3D;mirrors.neusoft.edu.cn</span><br><span class="line">systemProp.http.proxyPort&#x3D;80</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven&#123; url &#39;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&#39;&#125;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        mavenCentral()</span><br><span class="line">        maven &#123; url &quot;https:&#x2F;&#x2F;jitpack.io&quot; &#125;</span><br><span class="line">        maven&#123; url &#39;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&#39;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 交叉编译opencv</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304013000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304013000.html/</id>
    <published>2020-03-27T10:13:33.000Z</published>
    <updated>2020-03-27T10:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_30155503/article/details/79983630" target="_blank">Ubuntu上交叉编译opencv及opencv_contrib并移植到ARM板之一</a></p><p>安装cmake及cmake-gui编译工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y cmake cmake-qt-gui</span><br></pre></td></tr></table></figure><p>其他依赖库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libswscale-dev libjasper-dev</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y libtiff4-dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cmake-gui</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">where is the source code：</span><br><span class="line">&#x2F;home&#x2F;machine&#x2F;work&#x2F;opencv&#x2F;opencv-3.4.3</span><br><span class="line"></span><br><span class="line">where is to build the binaries：</span><br><span class="line">&#x2F;home&#x2F;machine&#x2F;work&#x2F;opencv&#x2F;opencv-3.4.3&#x2F;build-arm</span><br></pre></td></tr></table></figure><p>配置编译器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">点击Configure弹出CMakeSetup框</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Operating System 输入：</span><br><span class="line">Linux</span><br><span class="line"></span><br><span class="line">Processor 输入：</span><br><span class="line">arm</span><br><span class="line"></span><br><span class="line">C 输入arm-none-linux-gnueabi-gcc路径：</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gcc</span><br><span class="line"></span><br><span class="line">C++路径：</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-g++</span><br><span class="line"></span><br><span class="line">Target Root输入：</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin</span><br><span class="line">#&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;lib</span><br></pre></td></tr></table></figure><p>勾上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BUILD_JPEG</span><br><span class="line">BUILD_PNG</span><br><span class="line"></span><br><span class="line">BUILD_ZLIB</span><br></pre></td></tr></table></figure><p>配置安装目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CMAKE_INSTALL_PREFIX</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;arm&#x2F;opencv-arm</span><br></pre></td></tr></table></figure><p>执行配置，生成Makefile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置完成，再次点击 Configure，点 Generate</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;home&#x2F;machine&#x2F;work&#x2F;opencv&#x2F;opencv-3.4.3&#x2F;build-arm&#x2F;</span><br><span class="line">sudo make -j16</span><br></pre></td></tr></table></figure><p>修改编译目录下的 CMakeCache.txt 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#第291行</span><br><span class="line">CMAKE_EXE_LINKER_FLAGS:STRING&#x3D; -pthread -lrt -ldl</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y build-essential checkinstall cmake pkg-config yasm gfortran git</span><br><span class="line">sudo apt-get install -y libjpeg8-dev libjasper-dev libpng12-dev</span><br><span class="line">sudo apt-get install -y libtiff5-dev</span><br><span class="line">sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev</span><br><span class="line">sudo apt-get install -y libxine2-dev libv4l-dev</span><br><span class="line">sudo apt-get install -y libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev</span><br><span class="line">sudo apt-get install -y libqt4-dev libgtk2.0-dev libtbb-dev</span><br><span class="line">sudo apt-get install -y libatlas-base-dev</span><br><span class="line">sudo apt-get install -y libfaac-dev libmp3lame-dev libtheora-dev</span><br><span class="line">sudo apt-get install -y libvorbis-dev libxvidcore-dev</span><br><span class="line">sudo apt-get install -y libopencore-amrnb-dev libopencore-amrwb-dev</span><br><span class="line">sudo apt-get install -y x264 v4l-utils</span><br><span class="line">sudo apt-get install -y libprotobuf-dev protobuf-compiler</span><br><span class="line">sudo apt-get install -y libgoogle-glog-dev libgflags-dev</span><br><span class="line">sudo apt-get install -y libgphoto2-dev libeigen3-dev libhdf5-dev doxygen</span><br></pre></td></tr></table></figure><p><a href="https://github.com/opencv/opencv_contrib/releases/tag/3.4.3" target="_blank">安装opencv_contrib扩展库</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv_contrib&#x2F;archive&#x2F;3.4.3.tar.gz</span><br><span class="line">tar xvf 3.4.3.tar.gz;mv opencv_contrib-3.4.3 &#x2F;home&#x2F;machine&#x2F;work&#x2F;opencv&#x2F;</span><br></pre></td></tr></table></figure><p>cmake-gui配置opencv_contrib位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OPENCV_EXTRA_MODULES_PATH</span><br><span class="line"></span><br><span class="line">&#x2F;home&#x2F;machine&#x2F;work&#x2F;opencv&#x2F;opencv_contrib-3.4.3&#x2F;modules</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>人脸数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;betars&#x2F;Face-Resources</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;usr&#x2F;local&#x2F;arm&#x2F;opencv-arm&#x2F;lib</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_30155503/article/details/79983630&quot; target=&quot;_blank&quot;&gt;Ubuntu上交叉编译opencv及opencv_contrib并移植到ARM板之一&lt;/a&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[vbox] 无法安装增强功能</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304012000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304012000.html/</id>
    <published>2020-03-27T10:13:32.000Z</published>
    <updated>2020-03-27T10:13:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>实测用：<br>ubuntu设置屏幕分辨率</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrandr --output Virtual1 --mode 1440x900</span><br></pre></td></tr></table></figure><p>以下无用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not mount the media&#x2F;drive &#39;VBoxGuestAdditions.iso&#39; (VERR_PDM_MEDIA_LOCKED).</span><br></pre></td></tr></table></figure><p>使用手工安装VBoxGuestAdditions.iso</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir --p &#x2F;media&#x2F;cdrom</span><br><span class="line">sudo mount -t auto &#x2F;dev&#x2F;cdrom &#x2F;media&#x2F;cdrom&#x2F;</span><br><span class="line">cd &#x2F;media&#x2F;cdrom&#x2F;</span><br><span class="line">sudo sh VBoxLinuxAdditions.run</span><br></pre></td></tr></table></figure><p>运行VBoxLinuxAdditions.run，手动安装增强功能。安装成功后。可以建立共享目录了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我的做法简单，与网络上大家方法差不多。</span><br><span class="line">1, 在Windows下建立一个文件夹 ShareToUbuntu</span><br><span class="line">2, 在Ubuntu下建立一个文件夹 ShareToWin</span><br><span class="line">3, Ubuntu下执行命令</span><br><span class="line">sudo mount -t vboxsf ShareToUbuntu ShareToWin</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;实测用：&lt;br&gt;ubuntu设置屏幕分辨率&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t
      
    
    </summary>
    
    
    
      <category term="vbox" scheme="http://brightereyer.xyz/tags/vbox/"/>
    
  </entry>
  
  <entry>
    <title>[ubuntu] 设置分辨率</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304011000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304011000.html/</id>
    <published>2020-03-27T10:13:31.000Z</published>
    <updated>2020-03-27T10:13:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu设置屏幕分辨率</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrandr --output Virtual1 --mode 1440x900</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ubuntu设置屏幕分辨率&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[qt] windows平台opencv</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304010000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304010000.html/</id>
    <published>2020-03-27T10:13:30.000Z</published>
    <updated>2020-03-27T10:13:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/c244c9d01fe0" target="_blank">Qt+OpenCV环境搭建</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/c244c9d01fe0&quot; target=&quot;_blank&quot;&gt;Qt+OpenCV环境搭建&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[qt] opencv图像文字识别</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304009000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304009000.html/</id>
    <published>2020-03-27T10:13:29.000Z</published>
    <updated>2020-03-27T10:13:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/bingkuoluo/article/details/103793240#comments" target="_blank">OpenCV 文字识别（一）：图像预处理</a></p><p><a href="https://blog.csdn.net/xuxunjie147/article/details/87178774" target="_blank">OpenCV 文字检测与识别模块</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/bingkuoluo/article/details/103793240#comments&quot; target=&quot;_blank&quot;&gt;OpenCV 文字识别（一）：图像预处理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[qt] opencv图片相似度对比</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304008000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304008000.html/</id>
    <published>2020-03-27T10:13:28.000Z</published>
    <updated>2020-03-27T10:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_33548747/article/details/88089575" target="_blank">判断两张图的相似度</a></p><p><a href="https://blog.csdn.net/bingkuoluo/article/details/89318372" target="_blank">OpenCV（2）：用Vs+Qt制作一个显示两张图片的窗口程序</a><br><a href="https://blog.csdn.net/bingkuoluo/article/details/89389035" target="_blank">OpenCV(3):用Vs+Qt制作一个查看图片相似度的窗口程序</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_33548747/article/details/88089575&quot; target=&quot;_blank&quot;&gt;判断两张图的相似度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/
      
    
    </summary>
    
    
    
      <category term="qt" scheme="http://brightereyer.xyz/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>[opencv] 图片相似度对比</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304007000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304007000.html/</id>
    <published>2020-03-27T10:13:27.000Z</published>
    <updated>2020-03-27T10:13:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/wangyaninglm/article/details/43853435" target="_blank">OpenCV进行图像相似度对比的几种办法</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/wangyaninglm/article/details/43853435&quot; target=&quot;_blank&quot;&gt;OpenCV进行图像相似度对比的几种办法&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="opencv" scheme="http://brightereyer.xyz/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>[nginx] 支持websocket</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304006000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304006000.html/</id>
    <published>2020-03-27T10:13:26.000Z</published>
    <updated>2020-03-27T10:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">proxy_http_version 1.1;</span><br><span class="line">proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">proxy_read_timeout; #表明连接成功以后等待服务器响应的时候，如果不配置默认为60s；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="nginx" scheme="http://brightereyer.xyz/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>[android] opencv图片相似度对比</title>
    <link href="http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304005000.html/"/>
    <id>http://brightereyer.xyz/2020/03/27/articles/2020/03/27/1585304005000.html/</id>
    <published>2020-03-27T10:13:25.000Z</published>
    <updated>2020-03-27T10:13:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_27378951/article/details/101543122" target="_blank">android 使用opencv4 图片相似度对比</a><br><a href="https://pan.baidu.com/s/1R1bJdPmqJkPue5pgryGAEw" target="_blank">OpenCv2.zip</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">us1f</span><br></pre></td></tr></table></figure><p>库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;opencv.org&#x2F;releases&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;opencvlibrary&#x2F;files&#x2F;4.2.0&#x2F;opencv-4.2.0-android-sdk.zip</span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/7aad275745e1" target="_blank">AndroidStudio+OpenCv开发环境搭建</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_27378951/article/details/101543122&quot; target=&quot;_blank&quot;&gt;android 使用opencv4 图片相似度对比&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://p
      
    
    </summary>
    
    
    
      <category term="android" scheme="http://brightereyer.xyz/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>[ubuntu] 安装opencv</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231059000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231059000.html/</id>
    <published>2020-03-26T13:57:39.000Z</published>
    <updated>2020-03-26T13:57:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/ksws0292756/article/details/79511170" target="_blank">Ubuntu 16.04 安装opencv的各种方法（含opencv contrib扩展包安装方法）</a></p><p>选用3.4.3版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv&#x2F;releases</span><br><span class="line"></span><br><span class="line">下载opencv源码包</span><br><span class="line">https:&#x2F;&#x2F;opencv.org&#x2F;releases.html</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y libgtk2.0-dev pkg-config</span><br><span class="line"></span><br><span class="line"># 安装cmake</span><br><span class="line">sudo apt-get install -y cmake</span><br><span class="line"></span><br><span class="line"># 安装关联库</span><br><span class="line">sudo apt-get install -y python-dev python-opencv python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</span><br></pre></td></tr></table></figure><p>生成make文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv&#x2F;archive&#x2F;3.4.3.zip</span><br><span class="line">unzip 3.4.3.zip;</span><br><span class="line"></span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;opencv&#x2F;opencv&#x2F;archive&#x2F;3.4.3.tar.gz</span><br><span class="line">tar xvf 3.4.3.tar.gz;</span><br><span class="line"></span><br><span class="line"># 进入opencv文件夹</span><br><span class="line">cd opencv-3.4.3</span><br><span class="line"># 创建build文件夹</span><br><span class="line">mkdir build</span><br><span class="line"># 进入build文件夹</span><br><span class="line">cd build</span><br><span class="line"></span><br><span class="line">#cmake指令，如果没有特殊要求建议就选择默认的就可以</span><br><span class="line">#注意，后面的两个点千万不能省，代表了上级目录</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE&#x3D;Release -D CMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local ..</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;ld.so.conf.d&#x2F;opencv.conf</span><br><span class="line">#追加</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;lib</span><br></pre></td></tr></table></figure><p>接着执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">#在最末尾添加</span><br><span class="line">PKG_CONFIG_PATH&#x3D;$PKG_CONFIG_PATH:&#x2F;usr&#x2F;local&#x2F;lib&#x2F;pkgconfig</span><br><span class="line">export PKG_CONFIG_PATH</span><br></pre></td></tr></table></figure><p>保存，执行如下命令使得配置生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;etc&#x2F;bash.bashrc</span><br></pre></td></tr></table></figure><p>验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">进入源码目录-&gt;进入sample目录-&gt;进入cpp目录</span><br><span class="line">在这个目录会看到很多cpp文件，每一个文件都是一个demo，我们把其中一个文件通过g++编译出来，就可以直接运行来看结果了。</span><br><span class="line">例如，编译image.cpp文件，生成image目标文件</span><br><span class="line"></span><br><span class="line">g++ &#96;pkg-config --cflags opencv&#96; -o image image.cpp &#96;pkg-config --libs opencv&#96;</span><br><span class="line"></span><br><span class="line">.&#x2F;image</span><br></pre></td></tr></table></figure><p>其它示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ &#96;pkg-config opencv --cflags --libs opencv&#96; -o test test.cpp -I &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv -L &#x2F;usr&#x2F;local&#x2F;lib -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_objdetect -lopencv_imgcodecs</span><br></pre></td></tr></table></figure><p>在QtCreator IDE下使用OpenCV<br>1、新建一个Qt控制台工程</p><p>2、在新建的工程中打开.pro文件，添加上以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INCLUDEPATH +&#x3D; &#x2F;usr&#x2F;local&#x2F;include \</span><br><span class="line">               &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv \</span><br><span class="line">               &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv2</span><br><span class="line"></span><br><span class="line">LIBS +&#x3D; &#x2F;usr&#x2F;local&#x2F;lib&#x2F;libopencv*</span><br></pre></td></tr></table></figure><p>3、在main.cpp中添加上一下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;QCoreApplication&gt;</span><br><span class="line">#include &lt;opencv2&#x2F;core&#x2F;core.hpp&gt;</span><br><span class="line">#include &lt;opencv2&#x2F;highgui&#x2F;highgui.hpp&gt;</span><br><span class="line"></span><br><span class="line">#include &lt;opencv2&#x2F;imgproc&#x2F;imgproc.hpp&gt;</span><br><span class="line"></span><br><span class="line">using namespace cv;</span><br><span class="line">int main(int argc, char *argv[])</span><br><span class="line">&#123;</span><br><span class="line">    namedWindow( &quot;src&quot;, WINDOW_AUTOSIZE );</span><br><span class="line">    Mat src1 &#x3D; imread(&quot;&#x2F;home&#x2F;machine&#x2F;work&#x2F;test.jpg&quot; );</span><br><span class="line">    while(1)</span><br><span class="line">    &#123;</span><br><span class="line">        imshow( &quot;src&quot;, src1 );</span><br><span class="line">        char c &#x3D;  waitKey(30);</span><br><span class="line">        if( 27&#x3D;&#x3D;c )</span><br><span class="line">            return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ksws0292756/article/details/79511170&quot; target=&quot;_blank&quot;&gt;Ubuntu 16.04 安装opencv的各种方法（含opencv contrib扩展包安装方法）&lt;/
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] jpa封装返回layui数据表</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231058000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585231058000.html/</id>
    <published>2020-03-26T13:57:38.000Z</published>
    <updated>2020-03-26T13:57:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>controller</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@ResponseBody</span><br><span class="line">@PostMapping(value &#x3D; &quot;&#x2F;findAll&quot;)</span><br><span class="line">public Object findAll(@RequestParam Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">    int page &#x3D; Integer.parseInt(params.get(&quot;page&quot;).toString());</span><br><span class="line">    int limit &#x3D; Integer.parseInt(params.get(&quot;limit&quot;).toString());</span><br><span class="line">    Pageable pageable &#x3D; new PageRequest(page, limit);</span><br><span class="line"></span><br><span class="line">    return service.findAll(pageable);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public Map&lt;String,Object&gt; findAll(Pageable pageable) &#123;</span><br><span class="line">    Page&lt;MainControl&gt; all &#x3D; dao.findAll(pageable);</span><br><span class="line"></span><br><span class="line">    Map&lt;String,Object&gt; result &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">    result.put(&quot;totalElements&quot;, all.getTotalElements());</span><br><span class="line">    result.put(&quot;content&quot;, all.getTotalPages());</span><br><span class="line"></span><br><span class="line">    Map&lt;String,Object&gt; resultMap &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">    resultMap.put(&quot;code&quot;, true);</span><br><span class="line">    resultMap.put(&quot;data&quot;, result);</span><br><span class="line">    return resultMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">table.render(&#123;</span><br><span class="line">    elem: &#39;#dataTable&#39;,</span><br><span class="line">    url: &#39;&#x2F;mainControl&#x2F;findAll&#x2F;&#39;,</span><br><span class="line">    toolbar: &#39;#toolbar&#39;,</span><br><span class="line">    method: &#39;post&#39;,</span><br><span class="line">    limit: 10,&#x2F;&#x2F;注意：请务必确保 limit 参数（默认：10）是与你服务端限定的数据条数一致</span><br><span class="line">    page: true,</span><br><span class="line">    request: &#123;</span><br><span class="line">        pageName: &#39;page&#39;,&#x2F;&#x2F;页码的参数名称，默认：page</span><br><span class="line">        limitName: &#39;limit&#39; &#x2F;&#x2F;每页数据量的参数名，默认：limit</span><br><span class="line">    &#125;,</span><br><span class="line">    response: &#123;</span><br><span class="line">        statusName: &#39;code&#39;,&#x2F;&#x2F;规定数据状态的字段名称，默认：code</span><br><span class="line">        statusCode: true &#x2F;&#x2F;规定成功的状态码，默认：0</span><br><span class="line">    &#125;,</span><br><span class="line">    parseData: function (res) &#123; &#x2F;&#x2F;res 即为原始返回的数据</span><br><span class="line">        return &#123;</span><br><span class="line">            code: res.code,</span><br><span class="line">            data: res.data.content, &#x2F;&#x2F;解析数据列表</span><br><span class="line">            count: res.data.totalElements</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;controller&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[linux] 模拟can</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230861000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230861000.html/</id>
    <published>2020-03-26T13:54:21.000Z</published>
    <updated>2020-03-26T13:54:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/spoorer/p/6649303.html" target="_blank">CAN总线要点</a></p><p><a href="https://blog.csdn.net/KingOfMyHeart/article/details/97241402" target="_blank">在机器上ubuntu 16.04装了一个虚拟的can,名字为vcan</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo ip link add dev vcan0 type vcan</span><br><span class="line">sudo ip link set dev vcan0 down</span><br><span class="line">sudo ip link set vcan0 mtu 72 </span><br><span class="line">sudo ip link set dev vcan0 up</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>send.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;发送数据</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;net&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int s, nbytes;</span><br><span class="line">struct sockaddr_can addr;</span><br><span class="line">struct ifreq ifr;</span><br><span class="line">struct can_frame frame[2] &#x3D; &#123;&#123;0&#125;&#125;;</span><br><span class="line">s &#x3D; socket(PF_CAN, SOCK_RAW, CAN_RAW);&#x2F;&#x2F;创建套接字</span><br><span class="line">strcpy(ifr.ifr_name, &quot;vcan0&quot; );</span><br><span class="line">ioctl(s, SIOCGIFINDEX, &amp;ifr); &#x2F;&#x2F;指定 can0 设备</span><br><span class="line">addr.can_family &#x3D; AF_CAN;</span><br><span class="line">addr.can_ifindex &#x3D; ifr.ifr_ifindex;</span><br><span class="line">bind(s, (struct sockaddr *)&amp;addr, sizeof(addr));&#x2F;&#x2F;将套接字与 can0 绑定</span><br><span class="line">&#x2F;&#x2F;禁用过滤规则,本进程不接收报文,只负责发送</span><br><span class="line">setsockopt(s, SOL_CAN_RAW, CAN_RAW_FILTER, NULL, 0);</span><br><span class="line">&#x2F;&#x2F;生成两个报文</span><br><span class="line">frame[0].can_id &#x3D; 0x11;</span><br><span class="line">frame[0]. can_dlc &#x3D; 1;</span><br><span class="line">frame[0].data[0] &#x3D; &#39;Y&#39;;</span><br><span class="line">frame[0].can_id &#x3D; 0x22;</span><br><span class="line">frame[0]. can_dlc &#x3D; 1;</span><br><span class="line">frame[0].data[0] &#x3D; &#39;N&#39;;&#x2F;&#x2F;循环发送两个报文</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">nbytes &#x3D; write(s, &amp;frame[0], sizeof(frame[0]));</span><br><span class="line">&#x2F;&#x2F;发送 frame[0]</span><br><span class="line">if(nbytes !&#x3D; sizeof(frame[0]))</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Send Error frame[0]\n!&quot;);</span><br><span class="line">break; &#x2F;&#x2F;发送错误,退出</span><br><span class="line">&#125;</span><br><span class="line">sleep(1);</span><br><span class="line">nbytes &#x3D; write(s, &amp;frame[1], sizeof(frame[1]));</span><br><span class="line">if(nbytes !&#x3D; sizeof(frame[0]))</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Send Error frame[1]\n!&quot;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">sleep(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(s);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>receive.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;接收数据</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;net&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int s, nbytes;</span><br><span class="line">struct sockaddr_can addr;</span><br><span class="line">struct ifreq ifr;</span><br><span class="line">struct can_frame frame;</span><br><span class="line">struct can_filter rfilter[1];</span><br><span class="line">s &#x3D; socket(PF_CAN, SOCK_RAW, CAN_RAW); &#x2F;&#x2F;创建套接字</span><br><span class="line">strcpy(ifr.ifr_name, &quot;vcan0&quot; );</span><br><span class="line">ioctl(s, SIOCGIFINDEX, &amp;ifr); &#x2F;&#x2F;指定 can0 设备</span><br><span class="line">addr.can_family &#x3D; AF_CAN;</span><br><span class="line">addr.can_ifindex &#x3D; ifr.ifr_ifindex;</span><br><span class="line">bind(s, (struct sockaddr *)&amp;addr, sizeof(addr)); &#x2F;&#x2F;将套接字与 can0 绑定</span><br><span class="line">&#x2F;&#x2F;定义接收规则,只接收表示符等于 0x11 的报文</span><br><span class="line">rfilter[0].can_id&#x3D; 0x11;</span><br><span class="line">rfilter[0].can_mask &#x3D; CAN_SFF_MASK;</span><br><span class="line">&#x2F;&#x2F;设置过滤规则</span><br><span class="line">setsockopt(s,SOL_CAN_RAW,CAN_RAW_FILTER,&amp;rfilter,sizeof(rfilter));</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">nbytes &#x3D; read(s,&amp;frame,sizeof(frame));</span><br><span class="line">&#x2F;&#x2F;接收报文&#x2F;&#x2F;显示报文</span><br><span class="line">if(nbytes &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;ID&#x3D;0x%x DLC&#x3D;%d data[0]&#x3D;0x%x\n&quot;,frame.can_id,frame.can_dlc,frame.data[0]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(s);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://velep.com/wp-content/uploads/cantool.zip" target="_blank">cantool.zip</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;velep.com&#x2F;wp-content&#x2F;uploads&#x2F;cantool.zip;</span><br><span class="line">unzip cantool.zip;</span><br><span class="line">.&#x2F;cantool -p 2 -t 10 -g</span><br></pre></td></tr></table></figure><p>cantool.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;net&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">S_CanFrame sendframe, recvframe;</span><br><span class="line">byte *psendframe &#x3D; (byte *)&amp;sendframe;</span><br><span class="line">byte *precvframe &#x3D; (byte *)&amp;recvframe;</span><br><span class="line">u_canframe_data_t *psend_data &#x3D; (u_canframe_data_t *)sendframe.data;</span><br><span class="line">const int can_frame_len &#x3D; sizeof(S_CanFrame);</span><br><span class="line"></span><br><span class="line">pid_t pid &#x3D; -1;</span><br><span class="line"></span><br><span class="line">int   status;</span><br><span class="line"></span><br><span class="line">int  ret &#x3D; 0;</span><br><span class="line"></span><br><span class="line">char buf[128] &#x3D; &#123;0&#125;;</span><br><span class="line"></span><br><span class="line">bool carry_bit &#x3D; false;&#x2F;&#x2F; 进位标志</span><br><span class="line"></span><br><span class="line">int segment_id;&#x2F;&#x2F;id for shared memo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (parse_options(argc, argv)) &#123;</span><br><span class="line">usage();</span><br><span class="line">return  0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (!find_can(port))</span><br><span class="line">&#123;</span><br><span class="line">sprintf(buf, &quot;\n\t错误：CAN%d设备不存在\n\n&quot;, port + 1);</span><br><span class="line">panic(buf);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close_can(port);&#x2F;&#x2F; 必须先关闭CAN，才能成功设置CAN波特率</span><br><span class="line">set_bitrate(port, bitrate);&#x2F;&#x2F; 操作CAN之前，先要设置波特率</span><br><span class="line">open_can(port, bitrate);</span><br><span class="line"></span><br><span class="line">send_socket_fd &#x3D; socket_connect(port);</span><br><span class="line">recv_socket_fd &#x3D; socket_connect(port);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;printf(&quot;send_socket_fd &#x3D; %d, recv_socket_fd &#x3D; %d\n&quot;, send_socket_fd, recv_socket_fd);</span><br><span class="line">if (send_socket_fd &lt; 0 || send_socket_fd &lt; 0)</span><br><span class="line">&#123;</span><br><span class="line">disconnect(&amp;send_socket_fd);</span><br><span class="line">disconnect(&amp;recv_socket_fd);</span><br><span class="line">panic(&quot;\n\t打开socket can错误\n\n&quot;);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_can_filter();</span><br><span class="line">set_can_loopback(send_socket_fd, lp);</span><br><span class="line">printf_head();</span><br><span class="line">memset(&amp;sendframe, 0x00, sizeof(sendframe));</span><br><span class="line">memset(&amp;recvframe, 0x00, sizeof(recvframe));</span><br><span class="line"></span><br><span class="line">if (extended_frame) &#x2F;&#x2F; 指定发送帧类型：扩展帧或标准帧</span><br><span class="line">&#123;</span><br><span class="line">sendframe.can_id &#x3D; (send_frame_id &amp; CAN_EFF_MASK) | CAN_EFF_FLAG;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else &#123;</span><br><span class="line">sendframe.can_id &#x3D; (send_frame_id &amp; CAN_SFF_MASK);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sendframe.can_dlc &#x3D; dlc;</span><br><span class="line">memcpy(sendframe.data, send_frame_data, dlc);</span><br><span class="line"></span><br><span class="line">segment_id &#x3D; shmget(IPC_PRIVATE, sizeof(int), S_IRUSR | S_IWUSR);&#x2F;&#x2F; allocate memo</span><br><span class="line">pframeno &#x3D; (int *)shmat(segment_id, NULL, 0);&#x2F;&#x2F; attach the memo</span><br><span class="line"></span><br><span class="line">if (pframeno &#x3D;&#x3D; NULL) &#123;</span><br><span class="line">panic(&quot;\n\t创建共享内存失败\n\n&quot;);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">*pframeno &#x3D; 1;</span><br><span class="line"></span><br><span class="line">run &#x3D; true;</span><br><span class="line"></span><br><span class="line">pid &#x3D; fork();</span><br><span class="line"></span><br><span class="line">if (pid &#x3D;&#x3D; -1) &#123;</span><br><span class="line">panic(&quot;\n\t创建进程失败\n\n&quot;);</span><br><span class="line">return  -1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 子进程，用于发送CAN帧</span><br><span class="line">else if (pid &#x3D;&#x3D; 0) &#123;</span><br><span class="line">while (run &amp;&amp; (send_frame_times &gt; 0))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">ret &#x3D; send_frame(send_socket_fd, (char *)&amp;sendframe, sizeof(sendframe));</span><br><span class="line"></span><br><span class="line">printf_frame(</span><br><span class="line">    sendframe.can_id &amp; CAN_EFF_MASK,</span><br><span class="line">    sendframe.data,</span><br><span class="line">    sendframe.can_dlc,</span><br><span class="line">    ((sendframe.can_id &amp; CAN_EFF_FLAG) ? true : false),</span><br><span class="line">    ret &gt; 0 ? true : false,</span><br><span class="line">    true);</span><br><span class="line"></span><br><span class="line">delay_ms(send_frame_freq_ms);</span><br><span class="line"></span><br><span class="line">if (send_frame_id_inc_en) &#123;</span><br><span class="line">sendframe.can_id++;</span><br><span class="line">if (extended_frame) &#123;</span><br><span class="line">sendframe.can_id &#x3D; (sendframe.can_id &amp; CAN_EFF_MASK) | CAN_EFF_FLAG;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">sendframe.can_id &#x3D; (sendframe.can_id &amp; CAN_SFF_MASK);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (send_frame_data_inc_en &amp;&amp; dlc &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">if (dlc &gt; 4 &amp;&amp; psend_data-&gt;s.dl &#x3D;&#x3D; ((__u32)0xFFFFFFFF))</span><br><span class="line">&#123;</span><br><span class="line">carry_bit &#x3D; true;&#x2F;&#x2F; 发生进位</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">psend_data-&gt;s.dl++;</span><br><span class="line"></span><br><span class="line">if (dlc &lt;&#x3D; 4)</span><br><span class="line">&#123;</span><br><span class="line">if (psend_data-&gt;s.dl &gt;&#x3D; (1 &lt;&lt; (dlc * 8)))</span><br><span class="line">&#123;</span><br><span class="line">psend_data-&gt;s.dl &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else if (dlc &lt;&#x3D; 8)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if (carry_bit)</span><br><span class="line">&#123;</span><br><span class="line">psend_data-&gt;s.dh++;</span><br><span class="line">if (psend_data-&gt;s.dh &gt;&#x3D; (1 &lt;&lt; ((dlc - 4) * 8)))</span><br><span class="line">&#123;</span><br><span class="line">psend_data-&gt;s.dh &#x3D; 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">carry_bit &#x3D; false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">send_frame_times--;</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 父进程，接收CAN帧</span><br><span class="line">else &#123;</span><br><span class="line"></span><br><span class="line">install_sig();</span><br><span class="line"></span><br><span class="line">while (run) &#123;</span><br><span class="line"></span><br><span class="line">memset(precvframe, 0x00, can_frame_len);</span><br><span class="line"></span><br><span class="line">ret &#x3D; recv_frame(recv_socket_fd, precvframe, can_frame_len, 5 * 1000);</span><br><span class="line"></span><br><span class="line">if (ret &gt; 0) &#123;</span><br><span class="line"></span><br><span class="line">printf_frame(</span><br><span class="line">    recvframe.can_id &amp; CAN_EFF_MASK,</span><br><span class="line">    recvframe.data,</span><br><span class="line">    recvframe.can_dlc,</span><br><span class="line">    ((recvframe.can_id &amp; CAN_EFF_FLAG) ? true : false),</span><br><span class="line">    true,</span><br><span class="line">    false);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while (((pid &#x3D; wait(&amp;status)) &#x3D;&#x3D; -1) &amp;&amp; (errno &#x3D;&#x3D; EINTR)) &#123;</span><br><span class="line">delay_ms(10);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">disconnect(&amp;send_socket_fd);</span><br><span class="line">disconnect(&amp;recv_socket_fd);</span><br><span class="line">shmdt(pframeno);&#x2F;&#x2F; detach memo</span><br><span class="line">shmctl(segment_id, IPC_RMID, NULL);&#x2F;&#x2F; remove</span><br><span class="line">return  0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用C++实现一个SocketCan的通信：<br>socketcan.h</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#pragma once</span><br><span class="line">#include &quot;data_adapter.h&quot;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;sys&#x2F;socket.h&gt;</span><br><span class="line">#include &lt;ney&#x2F;if.h&gt;</span><br><span class="line">#include &lt;sys&#x2F;ioctl.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can.h&gt;</span><br><span class="line">#include &lt;linux&#x2F;can&#x2F;raw.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &quot;toml_parser.h&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">typedef can_frame SockCanFrame;&#x2F;&#x2F;message</span><br><span class="line">typedef can_filter CanFilter;&#x2F;&#x2F;filt</span><br><span class="line"></span><br><span class="line">class SocketCan : public DataAdapter &#123;</span><br><span class="line">public:</span><br><span class="line">  SocketCan(TomlParser *conf, std::shared_ptr&lt;cpptoml::table&gt; table);</span><br><span class="line">  ~SocketCan();</span><br><span class="line">  bool Read(pb::can_msgs::CanMessageStamped &amp;msg);</span><br><span class="line">  bool Write(const pb::can_msgs::CanMessageStamped &amp;msg);</span><br><span class="line"></span><br><span class="line">private:</span><br><span class="line">  int sockfd_;</span><br><span class="line">  std::string can_name_; &#x2F;&#x2F;can口</span><br><span class="line">  bool ready_;</span><br><span class="line">  </span><br><span class="line">private:</span><br><span class="line">  int Connect();</span><br><span class="line">  void Disconnect()</span><br><span class="line">  &#123;</span><br><span class="line">    ready_ &#x3D; false;</span><br><span class="line">    if (sockfd_ &gt; 0) &#123;</span><br><span class="line">      close(sockfd_);</span><br><span class="line">      sockfd_ &#x3D; -1;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>socketcan.cpp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;socketcan.h&quot;</span><br><span class="line">static const uint64_t KNanosecondPerSecond &#x3D; 1000000000UL;</span><br><span class="line">static const uint16_t KNanosecondPerMicroSecond &#x3D; 1000;</span><br><span class="line"></span><br><span class="line">const unsigned int kMaxRetryTimes &#x3D; 5;</span><br><span class="line">const unsigned int kBindRetryInterval &#x3D; 1;</span><br><span class="line">SocketCan::SocketCan(TomlParser *conf, std::shared_ptr&lt;cpptoml::table&gt; table):sockfd_(-1),ready_(false) &#123;</span><br><span class="line">  assert(conf !&#x3D; nullptr);</span><br><span class="line">  assert(table !&#x3D; nullptr);</span><br><span class="line">  can_name_ &#x3D;</span><br><span class="line">      conf-&gt;ParseStringsByTable(table, &quot;param&quot;, &quot;device&#x3D;can1&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;create sockfd and  bind </span><br><span class="line">int SocketCan::Connect()&#123;</span><br><span class="line"></span><br><span class="line">  sockfd_ &#x3D; socket(PF_CAN, SOCK_RAW, CAN_RAW);</span><br><span class="line">  if (sockfd_ &lt; 0) &#123;</span><br><span class="line">    return sockfd_;</span><br><span class="line">  &#125;</span><br><span class="line">  struct ifreq ifr;</span><br><span class="line">  strncpy(ifr.ifr_name, can_name_.c_str(), can_name_.length() + 1);</span><br><span class="line">  ioctl(sockfd_, SIOCGIFINDEX, &amp;ifr);</span><br><span class="line"></span><br><span class="line">  struct sockaddr_can addr;</span><br><span class="line">  addr.can_family &#x3D; AF_CAN;</span><br><span class="line">  addr.can_ifindex &#x3D; ifr.ifr_ifindex;</span><br><span class="line"></span><br><span class="line">  int res &#x3D; -1;</span><br><span class="line">  uint8_t count &#x3D; 0;</span><br><span class="line">  while (count &lt; kMaxRetryTimes) &#123;</span><br><span class="line">    ++count;</span><br><span class="line">    res &#x3D; bind(sockfd_, (struct sockaddr *)&amp;addr, sizeof(addr));</span><br><span class="line">    if (-1 &#x3D;&#x3D; res) &#123;</span><br><span class="line">      sleep(kBindRetryInterval);</span><br><span class="line">      continue;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">    if (-1 &#x3D;&#x3D; res) &#123;</span><br><span class="line">    close(sockfd_);</span><br><span class="line">    sockfd_ &#x3D; -1;</span><br><span class="line">    return sockfd_;</span><br><span class="line">    &#125;</span><br><span class="line">   ready_ &#x3D; true;</span><br><span class="line">   return sockfd_;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SocketCan::~SocketCan() &#123;</span><br><span class="line">  Disconnect();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool SocketCan::Read(pb::can_msgs::CanMessageStamped &amp;msg) &#123;</span><br><span class="line">    if (Connect()&lt;0)&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">    SockCanFrame fram;</span><br><span class="line">    int nbytes &#x3D; read(sockfd_,&amp;fram,sizeof(fram));</span><br><span class="line">    if( nbytes &lt; 0)&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">    msg.mutable_msg()-&gt;set_id(fram.can_id);</span><br><span class="line">    msg.mutable_msg()-&gt;set_dlc(fram.can_dlc);</span><br><span class="line">    msg.mutable_msg()-&gt;set_extended(false);</span><br><span class="line">    msg.mutable_msg()-&gt;set_data(fram.data, sizeof(fram.data));</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool SocketCan::Write(const pb::can_msgs::CanMessageStamped &amp;msg) &#123;</span><br><span class="line">  if (Connect()&lt;0)&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    SockCanFrame fram;</span><br><span class="line">    fram.can_id &#x3D; msg.msg().id;</span><br><span class="line">    fram.can_dlc &#x3D; msg.msg().dlc;</span><br><span class="line">    fram.data &#x3D; msg.msg().data;</span><br><span class="line"></span><br><span class="line">    int nbytes &#x3D; write(sockfd_,&amp;fram,sizeof(fram));</span><br><span class="line">    if(nbytes !&#x3D; sizeof(fram))&#123;</span><br><span class="line">      return false;</span><br><span class="line">    &#125;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/spoorer/p/6649303.html&quot; target=&quot;_blank&quot;&gt;CAN总线要点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/KingOfMyHeart/
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[linux] jdk8</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230860000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230860000.html/</id>
    <published>2020-03-26T13:54:20.000Z</published>
    <updated>2020-03-26T13:54:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1GZnUwB3nraObgperKlmBCg" target="_blank">jdk-8u221-linux-x64.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">17xx</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/12ST8ti0zJ5spIGah8fbdpg" target="_blank">jdk-8u141-linux-x64.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码:</span><br><span class="line">hrjd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1GZnUwB3nraObgperKlmBCg&quot; target=&quot;_blank&quot;&gt;jdk-8u221-linux-x64.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
    
    
      <category term="linux" scheme="http://brightereyer.xyz/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>[arm] qt5.7配置arm开发环境</title>
    <link href="http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230859000.html/"/>
    <id>http://brightereyer.xyz/2020/03/26/articles/2020/03/26/1585230859000.html/</id>
    <published>2020-03-26T13:54:19.000Z</published>
    <updated>2020-03-26T13:54:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/windfall/p/5405185.html" target="_blank">交叉编译安装ARM平台上的Qt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libx11-dev libxext-dev libxtst-dev</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/singleroot/article/details/54378078" target="_blank">QT5.7.0 arm开发环境搭建</a></p><p>Qt Versions</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Qt5.7.0(qt5.7.0) &#x2F;opt&#x2F;qt5.7.0&#x2F;bin&#x2F;qmake</span><br></pre></td></tr></table></figure><p>编译器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">名称：GCC(arm)</span><br><span class="line">编译器路径：&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-g++</span><br></pre></td></tr></table></figure><p>Debuggers</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Name：arm(gdb)</span><br><span class="line">Path：&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2014.05&#x2F;bin&#x2F;arm-none-linux-gnueabi-gdb</span><br></pre></td></tr></table></figure><p>构建套件（kit）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">名称：arm</span><br><span class="line">设备类型：桌面</span><br><span class="line">设备：Local PC（桌面 类型的默认设备）</span><br><span class="line">SysRoot：&#x2F;opt&#x2F;qt5.7.0&#x2F;bin</span><br><span class="line">编译器：GCC(arm)</span><br><span class="line">Qt版本： Qt5.7.0(qt5.7.0)</span><br><span class="line">Qt mkspec：</span><br><span class="line">Cmake Tool：System CMake at &#x2F;usr&#x2F;bin&#x2F;cmake</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/windfall/p/5405185.html&quot; target=&quot;_blank&quot;&gt;交叉编译安装ARM平台上的Qt&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[ubuntu] ubuntu16安装openjdk7</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808281000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808281000.html/</id>
    <published>2020-03-21T16:31:21.000Z</published>
    <updated>2020-03-21T16:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/bluestorm/p/5677625.html" target="_blank">Ubuntu16.04 安装openjdk-7-jdk</a></p><p>oracle openjdk ppa source</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:openjdk-r&#x2F;ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install openjdk-7-jdk</span><br><span class="line">sudo apt-get install openjdk-7-jre</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/bluestorm/p/5677625.html&quot; target=&quot;_blank&quot;&gt;Ubuntu16.04 安装openjdk-7-jdk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;oracle openjdk ppa sour
      
    
    </summary>
    
    
    
      <category term="ubuntu" scheme="http://brightereyer.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] jpa建表指定charset</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808279000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808279000.html/</id>
    <published>2020-03-21T16:31:19.000Z</published>
    <updated>2020-03-21T16:31:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/u011930705/article/details/89155489" target="_blank">1.关于jpa自动建表 DEFAULT CHARSET=latin1 的简单解决方法</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">@SuppressWarnings(&quot;deprecation&quot;)</span><br><span class="line">public class MysqlConfig extends MySQL5InnoDBDialect &#123;</span><br><span class="line">@Override</span><br><span class="line">public String getTableTypeString() &#123;</span><br><span class="line">return &quot;ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.把application.properties文件中的下面第一句注释替换为上面新建类就可以了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#spring.jpa.properties.hibernate.dialect&#x3D;org.hibernate.dialect.MySQL5InnoDBDialect</span><br><span class="line">spring.jpa.properties.hibernate.dialect&#x3D;com.neo.util.MysqlConfig</span><br></pre></td></tr></table></figure><p>3.然后去mysql看看show create table 表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEFAULT CHARSET&#x3D;utf8</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u011930705/article/details/89155489&quot; target=&quot;_blank&quot;&gt;1.关于jpa自动建表 DEFAULT CHARSET=latin1 的简单解决方法&lt;/a&gt;&lt;/p&gt;
&lt;f
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] docker+fastdfs</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808278000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808278000.html/</id>
    <published>2020-03-21T16:31:18.000Z</published>
    <updated>2020-03-21T16:31:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>拉取镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull morunchang&#x2F;fastdfs</span><br></pre></td></tr></table></figure><p>运行tracker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name tracker -p 22122:22122 --restart&#x3D;always --privileged&#x3D;true --net&#x3D;host --network&#x3D;bridge morunchang&#x2F;fastdfs sh tracker.sh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it tracker &#x2F;bin&#x2F;bash</span><br><span class="line">ps -ef|grep fdfs</span><br><span class="line">&#x2F;data&#x2F;fastdfs&#x2F;tracker&#x2F;fdfs_trackerd &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;tracker.conf | grep -v &quot;#&quot; | grep -v &quot;^$&quot;</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;mod_fastdfs.conf | grep -v &quot;#&quot; | grep -v &quot;^$&quot;</span><br></pre></td></tr></table></figure><p>用于查看tracker ip，方便storage指定tracker地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f&#x3D;&#39;&#123;&#123;.Name&#125;&#125; &#123;&#123;.NetworkSettings.IPAddress&#125;&#125; &#123;&#123;.HostConfig.PortBindings&#125;&#125;&#39; $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>运行storage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name storage -p 18080:8080 --restart&#x3D;always --privileged&#x3D;true --net&#x3D;host -e TRACKER_IP&#x3D;&lt;your tracker server address&gt;:22122 -e GROUP_NAME&#x3D;&lt;group name&gt; morunchang&#x2F;fastdfs sh storage.sh</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;your tracker server address&gt; is the tracker server&#39;s host</span><br><span class="line">&lt;group name&gt; is the storage server&#39;s group name</span><br></pre></td></tr></table></figure><p>执行示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name storage -p 18080:8080 --restart&#x3D;always --privileged&#x3D;true --net&#x3D;host --network&#x3D;bridge -e TRACKER_IP&#x3D;172.17.0.2:22122 -e GROUP_NAME&#x3D;group1 morunchang&#x2F;fastdfs sh storage.sh</span><br><span class="line"></span><br><span class="line">docker exec -it storage &#x2F;bin&#x2F;bash</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;storage.conf | grep -v &quot;^#&quot; | grep -v &quot;^$&quot;</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;client.conf | grep -v &quot;^#&quot; | grep -v &quot;^$&quot;</span><br><span class="line">cat &#x2F;etc&#x2F;fdfs&#x2F;http.conf | grep -v &quot;^#&quot; | grep -v &quot;^$&quot;</span><br><span class="line"></span><br><span class="line">ps -ef|grep -v grep|grep nginx</span><br><span class="line"></span><br><span class="line">netstat -anp|grep -v grep|grep nginx</span><br><span class="line">netstat -anp|grep -v grep|grep 22122</span><br><span class="line">netstat -anp|grep -v grep|grep 23000</span><br></pre></td></tr></table></figure><p><a href="https://www.funtl.com/zh/apache-dubbo-codeing/FastDFS-%E5%AE%89%E8%A3%85.html#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87" target="_blank">基于 Docker 安装 FastDFS</a><br><a href="https://blog.csdn.net/W_Meng_H/article/details/85402879" target="_blank">fastDFS+SpringBoot实现文件上传和下载(防盗链)</a></p><p><a href="https://www.jianshu.com/p/1038b4d95912" target="_blank">基于 Docker 安装 FastDFS</a><br><a href="http://www.ityouknow.com/springboot/2018/01/16/spring-boot-fastdfs.html" target="_blank">使用 Spring Boot 集成 FastDFS</a><br><a href="https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-fastDFS" target="_blank">spring-boot-fastDFS</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;拉取镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[mysql] 永久设置编码utf8</title>
    <link href="http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808277000.html/"/>
    <id>http://brightereyer.xyz/2020/03/22/articles/2020/03/22/1584808277000.html/</id>
    <published>2020-03-21T16:31:17.000Z</published>
    <updated>2020-03-21T16:31:17.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server&#x3D;utf8  </span><br><span class="line">init_connect&#x3D;&#39;SET NAMES utf8&#39;  </span><br><span class="line"></span><br><span class="line">service mysqld restart</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line">show variables like &#39;%char%&#39;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
    
      <category term="mysql" scheme="http://brightereyer.xyz/tags/mysql/"/>
    
  </entry>
  
</feed>
