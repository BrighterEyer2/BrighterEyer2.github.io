<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BrighterEyer</title>
  
  <subtitle>用心看清世界，驻足停留一会儿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://brightereyer.xyz/"/>
  <updated>2020-02-17T13:52:30.000Z</updated>
  <id>http://brightereyer.xyz/</id>
  
  <author>
    <name>brightereyer</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[docker] kail</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581947550000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581947550000.html/</id>
    <published>2020-02-17T13:52:30.000Z</published>
    <updated>2020-02-17T13:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/xiyuliuyang/article/details/91445855" target="_blank">docker安装kali linux</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#开始部署</span><br><span class="line">docker search kali</span><br><span class="line"></span><br><span class="line">docker pull kalilinux&#x2F;kali-linux-docker</span><br><span class="line">docker run --name kali -it -p 6022:22 kalilinux&#x2F;kali-linux-docker &#x2F;bin&#x2F;bash exit</span><br><span class="line">docker ps -a</span><br><span class="line">docker start kali</span><br><span class="line">docker attach kali</span><br><span class="line"></span><br><span class="line">#修改密码</span><br><span class="line">passwd root 123456</span><br></pre></td></tr></table></figure><p>sources.list软件源文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.bak</span><br><span class="line">vi &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali-security kali-current&#x2F;updates main contrib non-free</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali-security kali-current&#x2F;updates main contrib non-free</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y net-tools</span><br><span class="line">netstat -ant</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y openssh-server</span><br><span class="line">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">service ssh start</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装tree直接运行</span><br><span class="line">apt-get install -y sqlmap</span><br><span class="line"></span><br><span class="line">#安装kali所有的工具(10G左右)</span><br><span class="line">apt-get install -y kali-linux-all</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/xiyuliuyang/article/details/91445855&quot; target=&quot;_blank&quot;&gt;docker安装kali linux&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight 
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] gdb-multiarch调试arm程序</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581945980000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581945980000.html/</id>
    <published>2020-02-17T13:26:20.000Z</published>
    <updated>2020-02-17T13:26:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>交叉编译工具arm-linux-gnueabihf-gcc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf</span><br><span class="line">arm-linux-gnueabihf-gcc -v</span><br></pre></td></tr></table></figure><p>安装qemu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y qemu</span><br></pre></td></tr></table></figure><p>安装gdb-multiarch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gdb-multiarch</span><br></pre></td></tr></table></figure><p>安装arm文件所需要的动态库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gcc-multilib-arm-linux-gnueabi gcc-armhf-cross</span><br><span class="line"></span><br><span class="line">ln -s &#x2F;usr&#x2F;arm-linux-gnueabihf&#x2F;lib&#x2F;ld-linux-armhf.so.3 &#x2F;lib&#x2F;ld-linux-armhf.so.3</span><br><span class="line"></span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;usr&#x2F;arm-linux-gnueabihf&#x2F;lib&#x2F;:$LD_LIBRARY_PATH</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>arm程序的编译运行</p><p>hello.c</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main(void)&#123;</span><br><span class="line">printf(&quot;hello world&quot;);</span><br><span class="line"></span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arm-linux-gnueabihf-gcc -o hello-arm hello.c</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-arm hello-arm</span><br></pre></td></tr></table></figure><p>在1234端口上开启调试模式，并运行arm程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-arm -g 1234 hello-arm</span><br></pre></td></tr></table></figure><p>用gdb打开待调试文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb-multiarch hello-arm</span><br></pre></td></tr></table></figure><p>在gdb中连接调试端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">target remote 1234</span><br></pre></td></tr></table></figure><p><a href="http://blog.binpang.me/2018/07/26/qemu-arm/" target="_blank">gdb-multiarch调试arm程序</a><br><a href="https://www.jianshu.com/p/dc8e263d6466" target="_blank">Linux下ARM程序的编译运行及调试</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;交叉编译工具arm-linux-gnueabihf-gcc&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] buildroot+qemu+vexpress</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936999000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936999000.html/</id>
    <published>2020-02-17T10:56:39.000Z</published>
    <updated>2020-02-17T10:56:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/arnoldlu/p/9689585.html" target="_blank">buildroot+qemu+vexpress</a><br>配置工作环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y gcc build-essential bison flex gettext tcl sharutils libncurses-dev zlib1g-dev exuberant-ctags g++ texinfo patch vim libtool bc git</span><br></pre></td></tr></table></figure><p>安装qemu工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y qemu-system-arm</span><br></pre></td></tr></table></figure><p>下载buildroot：<br><a href="https://buildroot.org/downloads/buildroot-2017.05.2.tar.gz" target="_blank">buildroot-2017.05.2.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;arnoldlu&#x2F;buildroot.git -b arnoldlu_2017_05_2;cd buildroot</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># lzo安装：</span><br><span class="line">wget http:&#x2F;&#x2F;www.oberhumer.com&#x2F;opensource&#x2F;lzo&#x2F;download&#x2F;lzo-2.06.tar.gz</span><br><span class="line">sudo su</span><br><span class="line">tar xzvf lzo-2.06.tar.gz;cd lzo-2.06</span><br><span class="line">.&#x2F;configure --enable-shared</span><br><span class="line">make;make install</span><br><span class="line"></span><br><span class="line"># lzop安装：</span><br><span class="line">wget &#39;http:&#x2F;&#x2F;www.lzop.org&#x2F;download&#x2F;lzop-1.03.tar.gz&#39;</span><br><span class="line">tar xzvf lzop-1.03.tar.gz;cd lzop-1.03</span><br><span class="line">.&#x2F;configure</span><br></pre></td></tr></table></figure><p>配置编译buildroot：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apt install -y cpio python unzip rsync lzop</span><br><span class="line">make qemu_arm_vexpress_defconfig</span><br><span class="line">make</span><br><span class="line">#编译zImage，module以及dtb</span><br><span class="line">ls output&#x2F;images</span><br><span class="line">#zImage vexpress-v2p-ca9.dtb rootfs.ext2</span><br><span class="line"></span><br><span class="line"># zImage：内核</span><br><span class="line"># vexpress-v2p-ca9.dtb：DeviceTree文件</span><br><span class="line"># rootfs.ext2：文件系统</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M vexpress-a9 -smp 4 -m 1024M -kernel output&#x2F;images&#x2F;zImage -append &quot;root&#x3D;&#x2F;dev&#x2F;mmcblk0 console&#x3D;ttyAMA0 loglevel&#x3D;8&quot; -dtb output&#x2F;images&#x2F;vexpress-v2p-ca9.dtb -sd output&#x2F;images&#x2F;rootfs.ext2 -nographic</span><br></pre></td></tr></table></figure><p>停止qemu：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall qemu-system-arm</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/microxiami/articles/9746979.html" target="_blank">Qemu搭建ARM vexpress开发环境(一)</a><br><a href="https://www.cnblogs.com/microxiami/p/11093241.html" target="_blank">Qemu搭建ARM vexpress开发环境(二)—-通过u-boot启动Linux内核</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/arnoldlu/p/9689585.html&quot; target=&quot;_blank&quot;&gt;buildroot+qemu+vexpress&lt;/a&gt;&lt;br&gt;配置工作环境：&lt;/p&gt;
&lt;figure class=&quot;highl
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 移植QtE4.8</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936652000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936652000.html/</id>
    <published>2020-02-17T10:50:52.000Z</published>
    <updated>2020-02-17T10:50:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.veryarm.com/930.html" target="_blank">QtE4.8</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --name qte4 -itd -p 8022:22 ubuntu</span><br><span class="line">apt-get update;apt-get upgrade -y</span><br><span class="line">docker attach qte4</span><br></pre></td></tr></table></figure><p><a href="https://www.linuxidc.com/Linux/2013-07/87576.htm" target="_blank">Linux系统下Qt环境搭建</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y build-essential</span><br><span class="line">#openGL相关</span><br><span class="line">apt-get install -y libx11-dev libxau-dev libxaw7-dev libxcb1-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev</span><br><span class="line">apt-get install -y libxext-dev libxfixes-dev libxfont-dev libxft-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev</span><br><span class="line">apt-get install -y libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev</span><br><span class="line">apt-get install -y libglib2.0-dev</span><br><span class="line">apt-get install -y libssl-dev</span><br><span class="line">apt-get install -y libgtk2.0-dev</span><br><span class="line">apt-get install -y libcups2-dev</span><br><span class="line">apt-get install -y libgl1-mesa-dev libglu1-mesa-dev</span><br><span class="line">apt-get install -y libgstreamer0.10-dev</span><br><span class="line">apt-get install -y ia32-libs libc6-i386</span><br><span class="line">apt-get install -y libc6-i386</span><br><span class="line">apt-get install -y automake libtool</span><br><span class="line">apt-get install -y ia32-libs</span><br><span class="line">apt-get install -y lib32ncurses5 lib32bz2-1.0</span><br><span class="line">apt-get install -y vim</span><br><span class="line">apt-get install -y libc6-dev</span><br><span class="line">apt-get install -y build-essential </span><br><span class="line">apt-get install -y --reinstall binutils</span><br><span class="line">apt-get install -y lib32stdc++6</span><br><span class="line">apt-get install -y lib32z1 lib32ncurses5 lib32bz2-1.0</span><br></pre></td></tr></table></figure><p>安装automake、libtool 和主机上的 Qt 工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y git vim wget unzip automake</span><br><span class="line"></span><br><span class="line">apt-get install -y automake autoconf libtool m4</span><br><span class="line">apt-get install -y libX11-dev libXext-dev libXtst-dev libXrender-dev </span><br><span class="line">apt-get install -y libqt4-core libqt4-dev libqt4-webkit qt4-demos</span><br><span class="line"></span><br><span class="line">apt-get install -y pkg-config</span><br><span class="line">apt-get install -y gcc</span><br><span class="line">apt-get install -y libc6-dev</span><br><span class="line">apt-get install -y linux-libc-dev</span><br><span class="line">apt-get install -y build-essential</span><br><span class="line">apt-get install -y libpcre3</span><br><span class="line">apt-get install -y libpcre3-dev</span><br><span class="line">apt-get install -y openssl</span><br><span class="line">apt-get install -y libssl-dev</span><br><span class="line">apt-get install -y lib32ncurses5</span><br><span class="line">apt-get install -y lib32z1</span><br><span class="line">apt-get install -y gcc-multilib</span><br><span class="line">apt-get install -y g++-multilib</span><br><span class="line">apt-get install -y gdb</span><br><span class="line"></span><br><span class="line">apt-get install -y libXrender-dev</span><br><span class="line">apt-get install -y libglib2.0-dev libSM-dev libxrender-dev libfontconfig1-dev libxext-dev</span><br><span class="line">apt-get install -y libglui-dev</span><br></pre></td></tr></table></figure><p>安装arm-none-linux-gnueabi-gcc<br><a href="http://www.codesourcery.com/sgpp/lite/arm/portal/package4571/public/arm-none-linux-gnueabi/arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2" target="_blank">arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span><br><span class="line">wget http:&#x2F;&#x2F;www.codesourcery.com&#x2F;sgpp&#x2F;lite&#x2F;arm&#x2F;portal&#x2F;package4571&#x2F;public&#x2F;arm-none-linux-gnueabi&#x2F;arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</span><br><span class="line">tar xvf arm-2010q1-202-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2</span><br><span class="line">ls arm-2010q1;</span><br><span class="line"></span><br><span class="line"># PATH添加交叉编译器路径：</span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm-2010q1&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>编译tslib</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 建立工作目录</span><br><span class="line">cd ~</span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;tslib</span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">mkdir qt;cd qt</span><br><span class="line"></span><br><span class="line"># 下载与解压</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;libts&#x2F;tslib&#x2F;archive&#x2F;master.zip;</span><br><span class="line">unzip master.zip;cd tslib-master</span><br><span class="line"></span><br><span class="line"># 编译</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure CC&#x3D;arm-none-linux-gnueabi-gcc CXX&#x3D;arm-none-linux-gnueabi-g++ --host&#x3D;arm-none-linux-gnueabi  --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;tslib ac_cv_func_malloc_0_nonnull&#x3D;yes --enable-static&#x3D;yes</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">make;make install</span><br><span class="line"></span><br><span class="line">ls &#x2F;usr&#x2F;local&#x2F;tslib</span><br><span class="line"></span><br><span class="line">vim &#x2F;usr&#x2F;local&#x2F;tslib&#x2F;etc&#x2F;ts.conf</span><br><span class="line">module_raw input</span><br></pre></td></tr></table></figure><p>4 编译安装qt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 解压</span><br><span class="line">cd ~&#x2F;qt-arm</span><br><span class="line">wget http:&#x2F;&#x2F;download.qt-project.org&#x2F;archive&#x2F;qt&#x2F;4.8&#x2F;4.8.5&#x2F;qt-everywhere-opensource-src-4.8.5.tar.gz</span><br><span class="line">tar xvf qt-everywhere-opensource-src-4.8.5.tar.gz;cd qt-everywhere-opensource-src-4.8.5</span><br><span class="line"></span><br><span class="line"># 指定交叉编译器</span><br><span class="line">sed -i &quot;s&#x2F;arm-linux-&#x2F;arm-none-linux-gnueabi-&#x2F;g&quot; mkspecs&#x2F;qws&#x2F;linux-arm-g++&#x2F;qmake.conf</span><br><span class="line"></span><br><span class="line">#加上 -lts</span><br><span class="line"># modifications to g++.conf</span><br><span class="line">QMAKE_CC &#x3D; arm-none-linux-gnueabi-gcc -lts</span><br><span class="line">QMAKE_CXX &#x3D; arm-none-linux-gnueabi-g++ -lts</span><br><span class="line">QMAKE_LINK &#x3D; arm-none-linux-gnueabi-g++ -lts</span><br><span class="line">QMAKE_LINK_SHLIB &#x3D; arm-none-linux-gnueabi-g++ -lts</span><br><span class="line"># modifications to linux.conf</span><br><span class="line">QMAKE_AR &#x3D; arm-none-linux-gnueabi-ar cqs</span><br><span class="line">QMAKE_OBJCOPY &#x3D; arm-none-linux-gnueabi-objcopy</span><br><span class="line">QMAKE_STRIP &#x3D; arm-none-linux-gnueabi-strip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm;</span><br><span class="line"></span><br><span class="line"># 查看参数的详细说明</span><br><span class="line">#.&#x2F;configure --help</span><br><span class="line"></span><br><span class="line"># 配置Qt</span><br><span class="line">.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm -opensource -release -shared -Declarative -importdir &#x2F;opt&#x2F;imports -fast -no-largefile -qt-sql-sqlite -qt3support -exceptions -xmlpatterns -no-glib -no-phonon -no-mmx -no-3dnow -no-sse -no-sse2 -svg -no-webkit -qt-zlib -qt-libtiff -qt-libpng -qt-libjpeg -make libs -make tools -nomake examples -nomake docs -nomake demo -no-nis -no-cups -iconv -no-dbus -xplatform qws&#x2F;linux-arm-g++ -embedded arm -little-endian -qt-freetype -depths 16,24,32 -qt-gfx-linuxfb -qt-gfx-transformed -qt-gfx-multiscreen -no-gfx-vnc -no-gfx-qvfb -qt-kbd-linuxinput -no-kbd-qvfb -armfpa -no-mouse-qvfb -qt-mouse-linuxtp -qt-mouse-tslib -DQT_QLOCALE_USES_FCVT -DQT_NO_QWS_CURSOR -no-pch -I&#x2F;usr&#x2F;local&#x2F;tslib&#x2F;include -L&#x2F;usr&#x2F;local&#x2F;tslib&#x2F;lib -confirm-license -no-openssl</span><br><span class="line"></span><br><span class="line"># 编译安装</span><br><span class="line">make;make install</span><br><span class="line">ls &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br></pre></td></tr></table></figure><p>如果出现以下信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Basic XLib functionality test failed!</span><br><span class="line">You might need to modify the include and library search paths by editing</span><br><span class="line">QMAKE_INCDIR_X11 and QMAKE_LIBDIR_X11 in &#x2F;home&#x2F;gcgily&#x2F;qt-everywhere-opensource-src-4.8.4&#x2F;mkspecs&#x2F;linux-g++</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y libX11-dev libXext-dev libXtst-dev</span><br><span class="line">.&#x2F;configure</span><br></pre></td></tr></table></figure><p>5 配置主机Qt<br>（1）设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm&#x2F;bin</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$LD_LIBRARY_PATH:&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm&#x2F;lib</span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><p>6 移植Qt到开发板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开发板上要使用的东西就2个，一个是编译后的tslib，一个是编译后qt目录下的lib目录</span><br></pre></td></tr></table></figure><p>（1）打包lib<br>我们Qt 安装完成之后，为解决符号链接的问题，可以利用先打包，然后直接解压到开发板的做法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm;tar -zcf lib.tar.gz lib;mv lib.tar.gz &#x2F;root&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;usr&#x2F;local;tar -zcf tslib.tar.gz tslib;mv tslib.tar.gz &#x2F;root&#x2F;</span><br><span class="line"></span><br><span class="line">cd &#x2F;root;</span><br><span class="line">ls lib.tar.gz tslib.tar.gz</span><br></pre></td></tr></table></figure><p>连接开发板，在终端助手上执行<br>（1）将打包好的压缩文件 lib.tar.gz 和 tslib.tar.gz 复制到开发板，然后解压：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">tar xzvf lib.tar.gz -C &#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">tar xzvf tslib.tar.gz -C &#x2F;usr&#x2F;local</span><br></pre></td></tr></table></figure><p>（2）设置开发板上的环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vi setqtenv</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;&#x2F;lib:$LD_LIBRARY_PATH</span><br><span class="line">export QTDIR&#x3D;&#x2F;usr&#x2F;local&#x2F;qt4.8.5-arm</span><br><span class="line">export T_ROOT&#x3D;&#x2F;usr&#x2F;local&#x2F;tslib</span><br><span class="line">export PATH&#x3D;$T_ROOT&#x2F;bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH&#x3D;$T_ROOT&#x2F;lib:$QTDIR&#x2F;lib:$LD_LIBRARY_PATH</span><br><span class="line">export TSLIB_CONSOLEDEVICE&#x3D;none</span><br><span class="line">export TSLIB_FBDEVICE&#x3D;&#x2F;dev&#x2F;fb0</span><br><span class="line">export TSLIB_TSDEVICE&#x3D;&#x2F;dev&#x2F;input&#x2F;event0</span><br><span class="line">export TSLIB_PLUGINDIR&#x3D;$T_ROOT&#x2F;lib&#x2F;ts</span><br><span class="line">export TSLIB_CONFFILE&#x3D;$T_ROOT&#x2F;etc&#x2F;ts.conf</span><br><span class="line">export TSLIB_CALIBFILE&#x3D;&#x2F;etc&#x2F;pointercal</span><br><span class="line">export QWS_KEYBOARD&#x3D;USB:&#x2F;dev&#x2F;input&#x2F;event1</span><br><span class="line">export QWS_MOUSE_PROTO&#x3D;Tslib:&#x2F;dev&#x2F; input&#x2F;event0</span><br><span class="line">export QT_QWS_FONTDIR&#x3D;$QTDIR&#x2F;lib&#x2F;fonts</span><br></pre></td></tr></table></figure><p>（3）执行以下命令设置好qt环境变量的设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source setqtenv</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.veryarm.com/930.html&quot; target=&quot;_blank&quot;&gt;QtE4.8&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] 保存镜像、容器</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936651000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936651000.html/</id>
    <published>2020-02-17T10:50:51.000Z</published>
    <updated>2020-02-17T10:50:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>保存镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save ID &gt; xxx.tar</span><br><span class="line">docker load &lt; xxx.tar</span><br></pre></td></tr></table></figure><p>保存容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker export ID &gt;xxx.tar</span><br><span class="line">docker import xxx.tar containr:v1</span><br><span class="line"># 运行</span><br><span class="line">docker run -it containr:v1 bash</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;保存镜像&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[docker] ubuntu+ssh</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936650000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936650000.html/</id>
    <published>2020-02-17T10:50:50.000Z</published>
    <updated>2020-02-17T10:50:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_43914736/article/details/90608587" target="_blank">Docker Ubuntu上安装ssh和连接ssh</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br><span class="line">docker run --name qemu -itd -p 8022:22 ubuntu</span><br><span class="line"></span><br><span class="line">docker attach qemu</span><br><span class="line">apt-get update;apt-get upgrade -y</span><br><span class="line">apt-get install -y vim openssh-server</span><br><span class="line"></span><br><span class="line">#设置一个root密码</span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line">#修改配置文件</span><br><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;ssh restart</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/gezhonglei2007/article/details/51627821" target="_blank">Docker network命令</a><br><a href="https://www.cnblogs.com/jimmyhe/p/11310861.html" target="_blank">虚拟网卡与docker</a><br><a href="https://www.cnblogs.com/gispathfinder/p/5871043.html" target="_blank">Docker的4种网络模式</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_43914736/article/details/90608587&quot; target=&quot;_blank&quot;&gt;Docker Ubuntu上安装ssh和连接ssh&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] buildroot+qemu+mini2440</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936649000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936649000.html/</id>
    <published>2020-02-17T10:50:49.000Z</published>
    <updated>2020-02-17T10:50:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>相关文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;BrighterEyer&#x2F;qemu-mini2440-files</span><br></pre></td></tr></table></figure><p>下载qemu for mini2440：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y git vim zlib1g-dev libsdl-dev</span><br><span class="line"></span><br><span class="line">#方式(1)</span><br><span class="line">cd &#x2F;root;wget http:&#x2F;&#x2F;repo.or.cz&#x2F;w&#x2F;qemu&#x2F;mini2440.git&#x2F;snapshot&#x2F;HEAD.tar.gz</span><br><span class="line">tar xvf HEAD.tar.gz;mv mini2440-HEAD* mini2440;cd mini2440</span><br><span class="line"></span><br><span class="line">#方式(2)</span><br><span class="line">#git clone git:&#x2F;&#x2F;repo.or.cz&#x2F;qemu&#x2F;mini2440.git mini2440;cd mini2440</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/pengdonglin137/p/5004784.html" target="_blank">configure打补丁</a><br>configure.patch</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--- configure.orig 2013-06-13 10:56:41.516276000 +0100</span><br><span class="line">+++ configure 2013-06-13 11:20:26.010368566 +0100</span><br><span class="line">@@ -1362,7 +1362,7 @@</span><br><span class="line"> cat &gt; $TMPC &lt;&lt;EOF</span><br><span class="line"> #include</span><br><span class="line"> #include</span><br><span class="line">-int main(void) &#123; clockid_t id; return clock_gettime(id, NULL); &#125;</span><br><span class="line">+int main(void) &#123; struct itimerspec v; timer_t t; return timer_gettime (t, &amp;v); &#125;</span><br><span class="line"> EOF</span><br><span class="line"> </span><br><span class="line"> rt&#x3D;no</span><br></pre></td></tr></table></figure><p>执行(实测无用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch configure configure.patch</span><br></pre></td></tr></table></figure><p>或者修改Makefile.target(实测有用)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; Makefile.target &lt;&lt;EOF</span><br><span class="line">LIBS+&#x3D;-lz -lrt -lm</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --target-list&#x3D;arm-softmmu --prefix&#x3D;$HOME&#x2F;work&#x2F;mini2440</span><br><span class="line">make -j4;make install</span><br><span class="line">ls $HOME&#x2F;work&#x2F;mini2440</span><br><span class="line"></span><br><span class="line">#git clone git:&#x2F;&#x2F;repo.or.cz&#x2F;u-boot-openmoko&#x2F;mini2440.git uboot</span><br></pre></td></tr></table></figure><p>安装完后，添加环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">export PATH&#x3D;$PATH:$HOME&#x2F;work&#x2F;mini2440&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">qemu-system-arm --version</span><br></pre></td></tr></table></figure><p>使用buildroot一键生成uboot和linux内核及根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;arnoldlu&#x2F;buildroot.git -b arnoldlu_2017_05_2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;buildroot.org&#x2F;downloads&#x2F;buildroot-2012.05.tar.gz</span><br><span class="line">tar xvf buildroot-2012.05.tar.gz;mv buildroot-2012.05 buildroot;cd buildroot</span><br><span class="line">sudo apt-get install -y libncurses5-dev g++ bison flex gettext patch git-core xz-utils automake</span><br><span class="line"></span><br><span class="line">#打补丁</span><br><span class="line">#wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;BrighterEyer&#x2F;qemu-mini2440-files&#x2F;master&#x2F;configure.patch</span><br><span class="line">#patch configure &lt; .&#x2F;configure.patch</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; Makefile.target &lt;&lt;EOF</span><br><span class="line">LIBS+&#x3D;-lz -lrt -lm</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">make mini2440_defconfig</span><br><span class="line"></span><br><span class="line">#注意要最大化命令行窗口</span><br><span class="line">#make ARCH&#x3D;arm menuconfig</span><br><span class="line"></span><br><span class="line">apt-get install -y gcc-arm-linux-gnueabi</span><br><span class="line">arm-linux-gnueabi -v</span><br></pre></td></tr></table></figure><p>修改bug：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#注释掉：_GL_WARN_ON_USE (gets, &quot;gets is a security hole - use fgets instead&quot;）所在行</span><br><span class="line"></span><br><span class="line">#第165行</span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.in.h</span><br><span class="line"></span><br><span class="line">#第477行</span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.h</span><br></pre></td></tr></table></figure><p>menuconfig选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- Toolchain ：我选上了GDB和GDBServer方便调试。</span><br><span class="line">- Package Selection for the target ： Busybox已经包含在里面了，我们也可以选择更多的项目，比如 Qt， EFL， directfb之类的图形库。在 Graphic libraries and application子目录里选择。 </span><br><span class="line">- Filesystem images ：在 Flash Type这项，改为 NAND flash with 512B Page and 16 KB erasesize 。 </span><br><span class="line">- Kernel ：内核版本改选为 3.3.7版本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y cpio python unzip rsync</span><br><span class="line">make all</span><br><span class="line"></span><br><span class="line">ls output&#x2F;images&#x2F;</span><br><span class="line">#u-boot.bin uImage rootfs.jffs2 rootfs.tar</span><br></pre></td></tr></table></figure><p>安装texinfo 4.13：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;ftp.gnu.org&#x2F;gnu&#x2F;texinfo&#x2F;texinfo-4.13a.tar.gz</span><br><span class="line">tar -zxvf texinfo-4.13a.tar.gz;mv texinfo-4.13 texinfo;cd texinfo</span><br><span class="line">.&#x2F;configure;make;make install</span><br></pre></td></tr></table></figure><p>flashimg制作nand.bin并启动系统：<br><a href="https://gitorious.org/flashimg/flashimg.git" target="_blank">flashimg网址</a><br><a href="https://gitorious.org/flashimg/flashimg?p=flashimg:flashimg.git;a=snapshot;h=fb97139a0d50ad7f2cd2b2348f5b10312da3ed5b;sf=tgz" target="_blank">flashimgflashimg-fb97139.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#git clone https:&#x2F;&#x2F;github.com&#x2F;cailiwei&#x2F;flashimg;cd flashimg;</span><br><span class="line"></span><br><span class="line">wget -O flashimg.tar.gz --no-check-certificate &quot;https:&#x2F;&#x2F;gitorious.org&#x2F;flashimg&#x2F;flashimg?p&#x3D;flashimg:flashimg.git;a&#x3D;snapshot;h&#x3D;fb97139a0d50ad7f2cd2b2348f5b10312da3ed5b;sf&#x3D;tgz&quot;</span><br><span class="line">tar xvf flashimg.tar.gz;mv flashimgflashimg* flashimg;cd flashimg</span><br><span class="line"></span><br><span class="line">#如果没有sudo，注意从文件中去掉</span><br><span class="line">.&#x2F;autogen.sh</span><br><span class="line">.&#x2F;configure;make;make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls ..&#x2F;buildroot&#x2F;out&#x2F;images</span><br><span class="line">#u-boot.bin uImage rootfs.jffs2 rootfs.tar</span><br><span class="line">cp ..&#x2F;buildroot&#x2F;out&#x2F;images&#x2F;* .&#x2F;</span><br><span class="line">.&#x2F;flashimg -s 64M -t nand -f nand.bin -p uboot.part -w boot,u-boot.bin -w kernel,uImage -w root,rootfs.jffs2 -z 512</span><br></pre></td></tr></table></figure><p>启动方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse</span><br></pre></td></tr></table></figure><p>加载内核和根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nboot kernel </span><br><span class="line">setenv bootargs root&#x3D;&#x2F;dev&#x2F;mtdblock3 rootfstype&#x3D;jffs2 console&#x3D;ttySAC0,115200</span><br><span class="line">saveenv</span><br><span class="line">bootm</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#输入默认密码root</span><br><span class="line"></span><br><span class="line">#查看是否有网络配置</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>NFS挂在根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#安装nfs服务</span><br><span class="line">sudo apt-get install -y nfs-kernel-server</span><br><span class="line"></span><br><span class="line">#然后配置nfsroot目录</span><br><span class="line">sudo vi &#x2F;etc&#x2F;exports</span><br><span class="line">~&#x2F;work&#x2F;nfsroot *(rw,sync,no_root_squash,no_subtree_check)</span><br><span class="line"></span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server restart</span><br><span class="line"></span><br><span class="line">#新建nfsroot目录</span><br><span class="line">mkdir ~&#x2F;work&#x2F;nfsroot;cd ~&#x2F;work&#x2F;nfsroot&#x2F;</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;BrighterEyer&#x2F;qemu-mini2440-files&#x2F;raw&#x2F;master&#x2F;rootfs_qtopia_qt4-20140103.tar.gz</span><br><span class="line">tar xvf rootfs_qtopia_qt4-20140103.tar.gz;ls rootfs_qtopia_qt4;</span><br><span class="line"></span><br><span class="line">#用nfs挂载之前需要把网卡的初始化过程取消</span><br><span class="line">rm &#x2F;etc&#x2F;init.d&#x2F;if-config</span><br><span class="line"></span><br><span class="line">sudo chmod -R 777 .&#x2F;</span><br><span class="line">cd rootfs_qtopia_qt4</span><br><span class="line">cd etc&#x2F;init.d&#x2F;</span><br><span class="line">rm ifconfig-eth0</span><br><span class="line"></span><br><span class="line">#创建虚拟网卡并配置ip</span><br><span class="line">sudo apt-get install -y uml-utilities #运行tunctl必须的工具</span><br><span class="line">sudo tunctl -u $USER -t tap0</span><br><span class="line">sudo ifconfig tap0 192.168.42.1</span><br><span class="line"></span><br><span class="line">#带网络方式启动qemu</span><br><span class="line">cd &#x2F;root&#x2F;flashimg</span><br><span class="line"></span><br><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse -kernel uImage -net nic,vlan&#x3D;0 -net tap,vlan&#x3D;0,ifname&#x3D;tap0,script&#x3D;no,downscript&#x3D;no</span><br><span class="line"></span><br><span class="line">#启动后进入uboot模式，此时的qemu还不能显示，输入下面指令加载内核和根文件系统</span><br><span class="line">set bootargs noinitrd root&#x3D;&#x2F;dev&#x2F;nfs rw nfsroot&#x3D;192.168.42.1:~&#x2F;work&#x2F;nfsroot&#x2F;rootfs_qtopia_qt4&#x2F;,proto&#x3D;tcp,nfsvers&#x3D;3,nolock ip&#x3D;192.168.42.2:192.168.42.1::255.255.255.0 console&#x3D;ttySAC0,115200</span><br><span class="line">bootm</span><br></pre></td></tr></table></figure><p>安装交叉编译工具链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arm-linux-gcc-4.4.3.tar.gz</span><br><span class="line">sudo apt-get install -y lib32stdc++6 lib32z1</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/maxwell_nc/article/details/44279553" target="_blank">嵌入式linux：通过qemu模拟mini2440开发环境</a><br><a href="https://blog.csdn.net/leon1741/category_9278077.html" target="_blank">玩转mini2440开发板</a><br><a href="https://github.com/kangear/MINI2440-NO_OS" target="_blank">MINI2440程序</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相关文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] nginx+vue+express</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936648000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936648000.html/</id>
    <published>2020-02-17T10:50:48.000Z</published>
    <updated>2020-02-17T10:50:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://dockone.io/article/8834" target="_blank">手把手教你使用 Docker 部署 Vue.js 项目</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue create vueclidemo</span><br><span class="line">yarn serve &#x2F; npm run serve</span><br></pre></td></tr></table></figure><p>访问<br><a href="http://localhost:8081" target="_blank">http://localhost:8081</a></p><p>修改vueclidemo/App.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#39;axios&#39;;</span><br><span class="line">&#x2F;&#x2F;……</span><br><span class="line">axios.get(&#39;&#x2F;api&#x2F;json&#39;, &#123;</span><br><span class="line">params: &#123;&#125;</span><br><span class="line">&#125;).then(</span><br><span class="line">res &#x3D;&gt; &#123;</span><br><span class="line">console.log(res);</span><br><span class="line">&#125;</span><br><span class="line">).catch(</span><br><span class="line">error &#x3D;&gt; &#123;</span><br><span class="line">console.log(error);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build &#x2F; npm run build</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><p>default.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen       80;</span><br><span class="line">server_name  localhost;</span><br><span class="line"></span><br><span class="line">#charset koi8-r;</span><br><span class="line">access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;</span><br><span class="line">error_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log  error;</span><br><span class="line"></span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">    root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#error_page  404              &#x2F;404.html;</span><br><span class="line"></span><br><span class="line"># redirect server error pages to the static page &#x2F;50x.html</span><br><span class="line">#</span><br><span class="line">error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">    root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line">COPY dist&#x2F; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;</span><br><span class="line">COPY nginx&#x2F;default.conf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t vuenginxcontainer .</span><br><span class="line">docker image ls | grep vuenginxcontainer</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 3000:80 \</span><br><span class="line">-d --name vueApp \</span><br><span class="line">vuenginxcontainer</span><br></pre></td></tr></table></figure><p>Server.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">const express &#x3D; require(&#39;express&#39;);</span><br><span class="line">const PORT &#x3D; 8080;</span><br><span class="line">const HOST &#x3D; &#39;0.0.0.0&#39;;</span><br><span class="line"></span><br><span class="line">const app &#x3D; express();</span><br><span class="line">app.get(&#39;&#x2F;&#39;, (req, res) &#x3D;&gt; &#123;</span><br><span class="line">res.send(&#39;Hello world\n&#39;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(&#39;&#x2F;json&#39;, (req, res) &#x3D;&gt; &#123;</span><br><span class="line">res.json(&#123;</span><br><span class="line">    code: 0,</span><br><span class="line">    data :&#39;This is message from node container&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(PORT, HOST);</span><br><span class="line">console.log(&#96;Running on http:&#x2F;&#x2F;$&#123;HOST&#125;:$&#123;PORT&#125;&#96;);</span><br></pre></td></tr></table></figure><p>获取 Node 镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull node</span><br></pre></td></tr></table></figure><p>Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM node</span><br><span class="line"></span><br><span class="line">WORKDIR &#x2F;usr&#x2F;src&#x2F;app</span><br><span class="line"></span><br><span class="line">COPY package*.json .&#x2F;</span><br><span class="line"></span><br><span class="line">RUN npm install</span><br><span class="line"></span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line">CMD [ &quot;npm&quot;, &quot;start&quot; ]</span><br></pre></td></tr></table></figure><p>.dockerignore</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">npm-debug.log</span><br></pre></td></tr></table></figure><p>构建 NodeWebServer 镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t nodewebserver .</span><br></pre></td></tr></table></figure><p>启动 NodeServer 容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">-p 5000:8080 \</span><br><span class="line">-d --name nodeserver \</span><br><span class="line">nodewebserver</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:5000&#x2F;json</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://dockone.io/article/8834&quot; target=&quot;_blank&quot;&gt;手把手教你使用 Docker 部署 Vue.js 项目&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[arm] 交叉编译相关文件下载链接</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936647000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936647000.html/</id>
    <published>2020-02-17T10:50:47.000Z</published>
    <updated>2020-02-17T10:50:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.arm9.net/download.asp" target="_blank">Linux嵌入式交叉编译相关文件</a></p><p><a href="ftp://ftp.denx.de/pub/u-boot/" target="_blank">u-boot</a></p><p><a href="http://112.124.9.243/arm9net/mini2440/linux/arm-linux-gcc-4.4.3-20100728.tar.gz" target="_blank">arm-linux-gcc-4.4.3-20100728.tar.gz</a><br><a href="http://112.124.9.243/arm9net/mini2440/linux/arm-linux-gcc-4.3.2.tgz" target="_blank">arm-linux-gcc-4.3.2.tgz</a><br><a href="http://112.124.9.243/arm9net/linux/arm-qtopia-20100108.tar.gz" target="_blank">arm-qtopia-20100108.tar.gz</a><br>Qtopia-2.2.0和QtE-4.6.3双图形系统，可以自由切换运行<br><a href="http://112.124.9.243/arm9net/mini2440/linux/rootfs_qtopia_qt4-20100816.tar.gz" target="_blank">rootfs_qtopia_qt4-20100816.tar.gz</a></p><p>Linux应用编程示例代码，包含串口，PWM，I2C，LED, 线程，数学库等示例<br><a href="http://112.124.9.243/arm9net/linux/examples-20100108.tar.gz" target="_blank">examples-20100108.tar.gz</a></p><p><a href="ftp://ftp.arm.linux.org.uk/pub/linux/arm/toolchain/cross-2.95.3.tar.bz2" target="_blank">cross-2.95.3.tar.bz2</a></p><p><a href="ftp://ftp.qtopia.org.cn/mirror/ftp.trolltech.com/qtopia/source/qtopia-free-src-2.2.0.tar.gz" target="_blank">qtopia-free-src-2.2.0.tar.gz</a><br><a href="http://www.qtopia.org.cn/ftp/mirror/ftp.trolltech.com/qtopia/source/qtopia-free-src-2.2.0.tar.gz" target="_blank">qtopia-free-src-2.2.0.tar.gz</a><br><a href="ftp://ftp.trolltech.com/pub/qt/source/qtopia-free-src-2.2.0.tar.gz" target="_blank">qtopia-free-src-2.2.0.tar.gz</a></p><p><a href="http://nchc.dl.sourceforge.net/sourceforge/e2fsprogs/e2fsprogs-1.39.tar.gz" target="_blank">e2fsprogs-1.39.tar.gz</a><br><a href="http://superb-east.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.14.tar.bz2" target="_blank">jpegsrc.v6b.tar.gz</a><br><a href="http://superb-east.dl.sourceforge.net/sourceforge/libpng/libpng-1.2.14.tar.bz2" target="_blank">libpng-1.2.14.tar.bz2</a><br><a href="http://mail.pdaxrom.org/download/1.1.0beta4/src/tslib-1.3.tar.bz2" target="_blank">tslib-1.3.tar.bz2</a>(触摸屏校正工具：也可以用QT自带的，这样就不必下载)<br><a href="http://www.zlib.net/zlib-1.2.3.tar.gz" target="_blank">zlib-1.2.3.tar.bz2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.arm9.net/download.asp&quot; target=&quot;_blank&quot;&gt;Linux嵌入式交叉编译相关文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ftp://ftp.denx.de/pub/u-boot/&quot; target=&quot;_b
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] iTOP6818基于linux实现web远程控制LED</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936646000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936646000.html/</id>
    <published>2020-02-17T10:50:46.000Z</published>
    <updated>2020-02-17T10:50:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/ywueoei/article/details/83795755" target="_blank">Ubuntu16.04与ARM的NFS配置、挂载和卸载</a></p><p><a href="https://blog.csdn.net/Ningjianwen/article/details/87879668" target="_blank">Ubuntu16.04与ARM的NFS配置、挂载和卸载</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ywueoei/article/details/83795755&quot; target=&quot;_blank&quot;&gt;Ubuntu16.04与ARM的NFS配置、挂载和卸载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818基于linux实现web远程控制LED</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936645000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936645000.html/</id>
    <published>2020-02-17T10:50:45.000Z</published>
    <updated>2020-02-17T10:50:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41495871/article/details/100178807" target="_blank">基于Linux最小系统搭建Web服务器，实现Web远程控制LED</a></p><p><a href="www.boa.org" target="_blank">www.boa.org</a><br><a href="http://www.boa.org/boa-0.94.13.tar.gz" target="_blank">boa-0.94.13.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;www.boa.org&#x2F;boa-0.94.13.tar.gz</span><br><span class="line">tar xvf boa-0.94.13.tar.gz;mv boa-0.94.13 boa;cd boa;</span><br><span class="line"></span><br><span class="line">vim Makefile</span><br><span class="line">#CC &#x3D; gcc</span><br><span class="line">#CPP &#x3D; gcc -E</span><br><span class="line">CC &#x3D; arm-none-linux-gnueabi-gcc -static</span><br><span class="line">CPP &#x3D; arm-none-linux-gnueabi-gcc -E -static</span><br><span class="line"></span><br><span class="line">vim compat.h</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_41495871/article/details/100178807&quot; target=&quot;_blank&quot;&gt;基于Linux最小系统搭建Web服务器，实现Web远程控制LED&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818+Qtopia2.2.0</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936644000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936644000.html/</id>
    <published>2020-02-17T10:50:44.000Z</published>
    <updated>2020-02-17T10:50:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/wenyihu/articles/7380144.html" target="_blank">迅为6818开发板Qtopia2.2.0开发环境搭建以及编译镜像</a></p><p>docker+ubuntu</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br><span class="line">docker run --name qtopia2 -itd -p 8023:22 ubuntu</span><br><span class="line"></span><br><span class="line">docker attach qtopia2</span><br><span class="line">apt-get update;apt-get upgrade -y</span><br><span class="line">apt-get install -y vim openssh-server</span><br><span class="line"></span><br><span class="line">#设置一个root密码</span><br><span class="line">passwd</span><br><span class="line"></span><br><span class="line">#修改配置文件</span><br><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;ssh restart</span><br></pre></td></tr></table></figure><p><a href="https://launchpad.net/gcc-arm-embedded/+download" target="_blank">arm-linux-4.4.1编译器</a><br><a href="https://pan.baidu.com/s/1AeqzkboWkJDJjU9HxtXhrA" target="_blank">arm-linux-gcc-5.4.0.tar.gz</a>提取码： uzup<br>源码方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;local&#x2F;arm;cd &#x2F;usr&#x2F;local&#x2F;arm;</span><br><span class="line">tar xvf arm-linux-4.4.1.tar.gz;ls 4.4.1;</span><br><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">#export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;arm-2009q3&#x2F;bin</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;arm&#x2F;4.4.1&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br><span class="line">arm-none-linux-gnueabi-gcc -v</span><br></pre></td></tr></table></figure><p>apt-get方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y libx11-dev libxext-dev libxtst-dev</span><br><span class="line">apt-get install -y gcc-arm-linux-gnueabi</span><br><span class="line">arm-linux-gnueabi-gcc -v</span><br></pre></td></tr></table></figure><p><a href="https://pan.baidu.com/s/1PUxi_DejVo-bgChQH5bzmA" target="_blank">rootfs_qtopia_qt4-20140103.tar.gz</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">提取码：</span><br><span class="line">2dkz</span><br></pre></td></tr></table></figure><p>Qtopia2.2.0 源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;root&#x2F;yizhi;cd &#x2F;root&#x2F;yizhi</span><br><span class="line">tar xvf rootfs_qtopia_qt4-20140103.tar.gz</span><br><span class="line">ls qtopia-free-src-2.2.0.tar.gz;ls build</span><br></pre></td></tr></table></figure><p>触摸的库文件<a href="https://github.com/libts/tslib/releases" target="_blank">tslib</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;arm</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;libts&#x2F;tslib&#x2F;releases&#x2F;download&#x2F;1.21&#x2F;tslib-1.21.tar.gz</span><br><span class="line">tar xvf tslib-1.21.tar.gz;mv tslib-1.21 tslib;ls tslib</span><br></pre></td></tr></table></figure><p>02-Qtopia 补丁包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cp \</span><br><span class="line">libXext.so.6.4.0 \</span><br><span class="line">libXmu.so.6.2.0 \</span><br><span class="line">libSM.so.6.0.1 \</span><br><span class="line">libICE.so.6.3.0 \</span><br><span class="line">libXt.so.6.0.0 \</span><br><span class="line">libuuid.so.1.3.0 \</span><br><span class="line">&#x2F;usr&#x2F;lib32&#x2F;</span><br><span class="line"></span><br><span class="line">ln -s libXext.so.6.4.0 libXext.so.6</span><br><span class="line">ln -s libXext.so.6 libXext.so</span><br><span class="line">ln -s libXmu.so.6.2.0 libXmu.so.6</span><br><span class="line">ln -s libXmu.so.6 libXmu.so</span><br><span class="line">ln -s libSM.so.6.0.1 libSM.so.6</span><br><span class="line">ln -s libSM.so.6 libSM.so</span><br><span class="line">ln -s libICE.so.6.3.0 libICE.so.6</span><br><span class="line">ln -s libICE.so.6 libICE.so</span><br><span class="line">ln -s libXt.so.6.0.0 libXt.so.6</span><br><span class="line">ln -s libXt.so.6 libXt.so</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;lib32</span><br><span class="line">ln -s libuuid.so.1.3.0 libuuid.so.1</span><br><span class="line">ln -s libuuid.so.1 libuuid.so</span><br></pre></td></tr></table></figure><p>编译 Qtopia2.2.0 源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;yizhi</span><br><span class="line">.&#x2F;build</span><br><span class="line">ls qtopia-free-2.2.0</span><br></pre></td></tr></table></figure><p>处理一下字库文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r &#x2F;root&#x2F;yizhi&#x2F;qtopia-free-2.2.0&#x2F;qt2&#x2F;lib&#x2F;fonts&#x2F;helvetica* &#x2F;root&#x2F;yizhi&#x2F;qtopia-free-2.2.0&#x2F;qtopia&#x2F;image&#x2F;opt&#x2F;Qtopia&#x2F;lib&#x2F;fonts&#x2F;</span><br></pre></td></tr></table></figure><p>Qtopia</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r &#x2F;root&#x2F;yizhi&#x2F;qtopia-free-2.2.0&#x2F;qtopia&#x2F;image&#x2F;opt&#x2F;Qtopia &#x2F;opt</span><br></pre></td></tr></table></figure><p>打包工具的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;</span><br><span class="line">tar xvf linux_tools.tgz</span><br><span class="line">ls &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</span><br><span class="line">sudo apt-get install -y uboot-mkimage</span><br></pre></td></tr></table></figure><p>生成文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd lollipop-5.1.1_r6&#x2F;qt_system&#x2F;system&#x2F;opt;ls;</span><br><span class="line">cp -r &#x2F;root&#x2F;yizhi&#x2F;qtopia-free-2.2.0&#x2F;qtopia&#x2F;image&#x2F;opt&#x2F;Qtopia ~&#x2F;lollipop-5.1.1_r6&#x2F;qt_system&#x2F;system&#x2F;opt</span><br><span class="line">cd ~&#x2F;lollipop-5.1.1_r6;</span><br><span class="line">build_android.sh qt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/wenyihu/articles/7380144.html&quot; target=&quot;_blank&quot;&gt;迅为6818开发板Qtopia2.2.0开发环境搭建以及编译镜像&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;docker+ubuntu
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818-linux程序汇总</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936643000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936643000.html/</id>
    <published>2020-02-17T10:50:43.000Z</published>
    <updated>2020-02-17T10:50:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/mucheni/article/details/84848135" target="_blank">iTOP-4418/6818开发板-QtE4.7WIFI_MT6620热点</a></p><p><a href="https://blog.csdn.net/mucheni/article/details/84381893" target="_blank">iTOP-6818开发板-Android5.1修改uboot和内核开机LOGO</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls lollipop-5.1.1_r6_20170512&#x2F;device&#x2F;nexell&#x2F;s5p6818_drone&#x2F;boot</span><br><span class="line"></span><br><span class="line">#塑料框 7 寸：logo_800_1280.bmp</span><br><span class="line">9.7 寸、金属框 7 寸、金属框 10.1 寸、4.3 寸：logo.bmp</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/mucheni/article/details/81232374" target="_blank">iTOP-4418-MiniLinux-GPS_V1.0</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;topeet_gpstest &#x2F;dev&#x2F;ttyAMA3 &amp;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/mucheni/article/details/84848135&quot; target=&quot;_blank&quot;&gt;iTOP-4418/6818开发板-QtE4.7WIFI_MT6620热点&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818+gps</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936642000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936642000.html/</id>
    <published>2020-02-17T10:50:42.000Z</published>
    <updated>2020-02-17T10:50:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;gps_test &#x2F;dev&#x2F;ttyAMA3 &amp;</span><br></pre></td></tr></table></figure><details><summary>gps_test.c</summary><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;      /*标准输入输出定义*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;     /*标准函数库定义*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;     /*Unix 标准函数定义*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;termios.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  BUFF_SIZE 512</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  MAX_COM_NUM 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>  SectionID = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> GPS_time[<span class="number">20</span>];          <span class="comment">//UTC时间</span></span><br><span class="line"><span class="keyword">char</span> GPS_sv;               <span class="comment">//使用卫星</span></span><br><span class="line"><span class="keyword">char</span> GPS_wd[<span class="number">12</span>];           <span class="comment">//纬度</span></span><br><span class="line"><span class="keyword">char</span> GPS_jd[<span class="number">12</span>];           <span class="comment">//经度</span></span><br><span class="line"><span class="comment">//char GPS_warn;             //定位警告</span></span><br><span class="line"><span class="keyword">char</span> GPS_speed[<span class="number">5</span>];         <span class="comment">//速度</span></span><br><span class="line"><span class="keyword">char</span> GPS_date[<span class="number">8</span>];          <span class="comment">//UTC日期</span></span><br><span class="line"></span><br><span class="line">&#125; GPS_DATA;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">set_com_config</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> baud_rate, <span class="keyword">int</span> data_bits, <span class="keyword">char</span> parity, <span class="keyword">int</span> stop_bits)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">termios</span> <span class="title">new_cfg</span>, <span class="title">old_cfg</span>;</span></span><br><span class="line"><span class="keyword">int</span> speed;</span><br><span class="line"><span class="comment">//保存并测试现有串口参数设置，在这里如果串口号出错，会有相关的出错信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (tcgetattr(fd, &amp;old_cfg) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"tcgetattr"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">tcflush(fd, TCIOFLUSH);</span><br><span class="line">new_cfg = old_cfg;</span><br><span class="line">cfmakeraw(&amp;new_cfg);<span class="comment">//配置为原始模式</span></span><br><span class="line">new_cfg.c_cflag &amp;= ~CSIZE;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置波特率</span></span><br><span class="line"><span class="keyword">switch</span> (baud_rate)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2400</span>:</span><br><span class="line">&#123;</span><br><span class="line">speed = B2400;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4800</span>:</span><br><span class="line">&#123;</span><br><span class="line">speed = B4800;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9600</span>:</span><br><span class="line">&#123;</span><br><span class="line">speed = B9600;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">19200</span>:</span><br><span class="line">&#123;</span><br><span class="line">speed = B19200;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">38400</span>:</span><br><span class="line">&#123;</span><br><span class="line">speed = B38400;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">115200</span>:</span><br><span class="line">&#123;</span><br><span class="line">speed = B115200;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cfsetispeed(&amp;new_cfg, speed);</span><br><span class="line">cfsetospeed(&amp;new_cfg, speed);</span><br><span class="line"><span class="comment">//设置数据位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (data_bits)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag |= CS7;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag |= CS8;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置停止位</span></span><br><span class="line"><span class="keyword">switch</span> (stop_bits)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag &amp;= ~CSTOPB;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag |= CSTOPB;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置奇偶校验位</span></span><br><span class="line"><span class="keyword">switch</span> (parity)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'o'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'O'</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag |= (PARODD | PARENB);</span><br><span class="line">new_cfg.c_iflag |= (INPCK | ISTRIP);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'E'</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag |= PARENB;</span><br><span class="line">new_cfg.c_cflag &amp;= ~PARODD;</span><br><span class="line">new_cfg.c_iflag |= (INPCK | ISTRIP);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'S'</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag &amp;= ~PARENB;</span><br><span class="line">new_cfg.c_cflag &amp;= ~CSTOPB;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'n'</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="string">'N'</span>:</span><br><span class="line">&#123;</span><br><span class="line">new_cfg.c_cflag &amp;= ~PARENB;</span><br><span class="line">new_cfg.c_iflag &amp;= ~INPCK;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">new_cfg.c_cc[VTIME] = <span class="number">10</span>;</span><br><span class="line">new_cfg.c_cc[VMIN] = <span class="number">5</span>;</span><br><span class="line"><span class="comment">//处理未接收字符</span></span><br><span class="line">tcflush(fd, TCIFLUSH);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((tcsetattr(fd, TCSANOW, &amp;new_cfg)) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"tcsetattr"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//打开串口函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">open_port</span><span class="params">(<span class="keyword">char</span>* com_port)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fd;</span><br><span class="line"><span class="keyword">char</span>* dev = com_port;</span><br><span class="line"><span class="comment">//打开串口</span></span><br><span class="line"><span class="keyword">if</span> ((fd = <span class="built_in">open</span>(dev, O_RDWR | O_NOCTTY | O_NDELAY)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"open serial port"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//恢复串口为堵塞状态</span></span><br><span class="line"><span class="keyword">if</span> (fcntl(fd, F_SETFL, <span class="number">0</span>) &lt; <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"fcntl F_SETFL\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//测试是否为终端设备</span></span><br><span class="line"><span class="keyword">if</span> (isatty(STDIN_FILENO) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"standard input is not a terminal device"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_info</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//打印选择界面，即引导的字符号</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Now the receive time is %s\n"</span>, GPS_DATA.GPS_time);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The star is %c 3\n"</span>, GPS_DATA.GPS_sv);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The earth latitude is :%s\n"</span>, GPS_DATA.GPS_wd);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The earth longitude is :%s\n"</span>, GPS_DATA.GPS_jd);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The train speed is:%s km/h\n"</span>, GPS_DATA.GPS_speed);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The date is:%s\n"</span>, GPS_DATA.GPS_date);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GPS_resolve_GPRMC</span><span class="params">(<span class="keyword">char</span> data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//$GPRMC,092427.604,V,4002.1531,N,11618.3097,E,0.000,0.00,280812,,E,N*08</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (data == <span class="string">','</span>)</span><br><span class="line">&#123;</span><br><span class="line">++SectionID;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (SectionID)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//02:48:13</span></span><br><span class="line">GPS_DATA.GPS_time[i++] = data;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">2</span> || i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPS_DATA.GPS_time[i++] = <span class="string">':'</span>;</span><br><span class="line">&#125;</span><br><span class="line">GPS_DATA.GPS_time[<span class="number">8</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span> (data == <span class="string">'A'</span>)</span><br><span class="line">GPS_DATA.GPS_sv = <span class="string">'&gt;'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">GPS_DATA.GPS_sv = <span class="string">'&lt;'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="comment">//3158.4608</span></span><br><span class="line">GPS_DATA.GPS_wd[++i] = data;</span><br><span class="line">GPS_DATA.GPS_wd[<span class="number">12</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">if</span> (data == <span class="string">'N'</span>)</span><br><span class="line">GPS_DATA.GPS_wd[<span class="number">0</span>] = <span class="string">'N'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (data == <span class="string">'S'</span>)</span><br><span class="line">GPS_DATA.GPS_wd[<span class="number">0</span>] = <span class="string">'S'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:<span class="comment">//11848.3737,E</span></span><br><span class="line"></span><br><span class="line">GPS_DATA.GPS_jd[++i] = data;</span><br><span class="line">GPS_DATA.GPS_jd[<span class="number">12</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">if</span> (data == <span class="string">'E'</span>)</span><br><span class="line">GPS_DATA.GPS_jd[<span class="number">0</span>] = <span class="string">'E'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (data == <span class="string">'W'</span>)</span><br><span class="line">GPS_DATA.GPS_jd[<span class="number">0</span>] = <span class="string">'W'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:<span class="comment">//10.05</span></span><br><span class="line">GPS_DATA.GPS_speed[i++] = data;</span><br><span class="line">GPS_DATA.GPS_speed[<span class="number">4</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:<span class="comment">//15-07-06 -&gt; 06-07-15</span></span><br><span class="line">GPS_DATA.GPS_date[i++] = data;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">2</span> || i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPS_DATA.GPS_date[i++] = <span class="string">'-'</span>;</span><br><span class="line">&#125;</span><br><span class="line">GPS_DATA.GPS_date[<span class="number">8</span>] = <span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read_data</span><span class="params">(<span class="keyword">int</span> fd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">buffer</span>[BUFF_SIZE], dest[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">array</span>[<span class="number">10</span>] = <span class="string">"$GPRMC"</span>;</span><br><span class="line"><span class="keyword">int</span>  res, i = <span class="number">0</span>, j = <span class="number">0</span>, k;</span><br><span class="line"><span class="keyword">int</span> data = <span class="number">1</span>, len = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(dest, <span class="number">0</span>, <span class="keyword">sizeof</span>(dest));</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(<span class="built_in">buffer</span>, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="built_in">buffer</span>));</span><br><span class="line"><span class="comment">//$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50</span></span><br><span class="line"><span class="keyword">if</span> (res = <span class="built_in">read</span>(fd, <span class="built_in">buffer</span>, <span class="number">1</span>) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//此处源源不断传入参数，一次读到数据可能为（$GPRMC,024），res为读到长度，现在把每一位传入函数处理；</span></span><br><span class="line"><span class="built_in">strcat</span>(dest, <span class="built_in">buffer</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">buffer</span>[<span class="number">0</span>] == <span class="string">'\n'</span>)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strncmp</span>(dest, <span class="built_in">array</span>, <span class="number">6</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, dest);</span><br><span class="line">len = <span class="built_in">strlen</span>(dest);</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; len; k++)</span><br><span class="line">&#123;</span><br><span class="line">GPS_resolve_GPRMC(dest[k]);</span><br><span class="line">&#125;</span><br><span class="line">SectionID = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">print_info();</span><br><span class="line">&#125;</span><br><span class="line">bzero(dest, <span class="keyword">sizeof</span>(dest));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line"><span class="built_in">close</span>(fd);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>*argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> fd = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span>* HOST_COM_PORT = argv[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="number">2</span> != argc)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Usage:  gps_test [uart port]\r\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fd = open_port(HOST_COM_PORT);</span><br><span class="line"><span class="keyword">if</span> (fd &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"open fail!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"open sucess!\n"</span>);</span><br><span class="line"><span class="keyword">if</span> ((set_com_config(fd, <span class="number">9600</span>, <span class="number">8</span>, <span class="string">'N'</span>, <span class="number">1</span>)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">"set_com_config fail!\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The received worlds are:\n"</span>);</span><br><span class="line">read_data(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] itop6818+android串口测试</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936641000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936641000.html/</id>
    <published>2020-02-17T10:50:41.000Z</published>
    <updated>2020-02-17T10:50:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/mucheni/article/details/82378400" target="_blank">iTOP-4418/6818开发板-Android-串口测试文档（升级版）</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/mucheni/article/details/82378400&quot; target=&quot;_blank&quot;&gt;iTOP-4418/6818开发板-Android-串口测试文档（升级版）&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[arm] OpenJTAG+openocd烧写环境</title>
    <link href="http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936640000.html/"/>
    <id>http://brightereyer.xyz/2020/02/17/articles/2020/02/17/1581936640000.html/</id>
    <published>2020-02-17T10:50:40.000Z</published>
    <updated>2020-02-17T10:50:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/techping/article/details/53159844" target="_blank">在Ubuntu下搭建ARM处理器 arm-linux-gcc 交叉编译环境以及OpenJTAG + openocd 烧写环境</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y gcc-arm-linux</span><br></pre></td></tr></table></figure><p>Makefile（点亮led的例子）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">led.bin:start.o</span><br><span class="line">        arm-linux-ld -Ttext 0 -o led.elf start.o</span><br><span class="line">        arm-linux-objcopy -O binary led.elf led.bin</span><br><span class="line">        arm-linux-objdump -D led.elf &gt; led.dis</span><br><span class="line">start.o:start.s</span><br><span class="line">        arm-linux-gcc -o start.o start.s -c</span><br></pre></td></tr></table></figure><p>生成文件 led.bin</p><p>OpenJTAG可以用在Windows、Linux、MAC下，而JLink只能用在Windows</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libusb-dev</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y libconfuse-dev</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openocd是一个开源的JTAG上位机程序，目前支持很多种芯片了，并且支持的芯片还在不断增加中。</span><br><span class="line">当然，由于源代码都是公开的，并且可以自己编译，所以增加自定义的工具驱动程序也是相当容易的。</span><br></pre></td></tr></table></figure><p>安装openocd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y git</span><br><span class="line">git clone git:&#x2F;&#x2F;openocd.git.sourceforge.net&#x2F;gitroot&#x2F;openocd&#x2F;openocd</span><br><span class="line">cd openocd;</span><br><span class="line">sudo .&#x2F;bootstrap</span><br><span class="line">sudo .&#x2F;configure --enable-ftdi --enable-usb_blaster_libftdi --enable-openjtag_ftdi --enable-maintainer-mode --enable-legacy-ft2232_libftdi</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;configure --help</span><br></pre></td></tr></table></figure><p>版本信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openocd -v</span><br></pre></td></tr></table></figure><p>配置 openocd.cfg (具体视硬件而定)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...</span><br></pre></td></tr></table></figure><p>将开发板连接的OpenJTAG的USB接口接入PC，启动openocd，在终端输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openocd -f openocd.cfg</span><br></pre></td></tr></table></figure><p>成功接入之后，打开另一个终端，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet localhost 4444</span><br></pre></td></tr></table></figure><p>进入操控指令方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost.</span><br><span class="line">Escape character is &#39;^]&#39;.</span><br><span class="line">Open On-Chip Debugger</span><br><span class="line">&gt; </span><br><span class="line"></span><br><span class="line"># 输入 poll ，显示开发板当前信息</span><br><span class="line"># 输入 halt ，暂停</span><br><span class="line"># 输入 resume ，恢复</span><br><span class="line"># 输入 reset ，复位</span><br></pre></td></tr></table></figure><p>以烧写以个点亮LED的程序为例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">halt   #先暂停当前程序的运行</span><br><span class="line"></span><br><span class="line">nand probe 0   #识别出Nand Flash</span><br><span class="line"></span><br><span class="line">nand erase 0 0 0x20000   #擦除0地址开始的128K内容</span><br><span class="line"></span><br><span class="line">nand write 0 led.bin 0   #写入LED.bin</span><br><span class="line"></span><br><span class="line">reset   #复位</span><br></pre></td></tr></table></figure><p>然后就可以看到LED亮了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/techping/article/details/53159844&quot; target=&quot;_blank&quot;&gt;在Ubuntu下搭建ARM处理器 arm-linux-gcc 交叉编译环境以及OpenJTAG + openo
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
  <entry>
    <title>[docker] mysql主从复制</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/</id>
    <published>2020-02-15T03:51:39.000Z</published>
    <updated>2020-02-15T03:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3339:3306 --name mysql-master -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3340:3306 --name mysql-slave -e MYSQL_ROOT_PASSWORD&#x3D;123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql-master &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">apt-get update;apt-get -y install vim</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;mysql</span><br><span class="line"></span><br><span class="line">vi my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">## 同一局域网内注意要唯一</span><br><span class="line">server-id&#x3D;100  </span><br><span class="line">## 开启二进制日志功能，可以随便取（关键）</span><br><span class="line">log-bin&#x3D;mysql-bin</span><br><span class="line"></span><br><span class="line">service mysql restart</span><br><span class="line"></span><br><span class="line">docker start mysql-master;docker exec -it mysql-master &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">mysql -uroot -p123456</span><br><span class="line">CREATE USER &#39;slave&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;</span><br><span class="line">GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#39;slave&#39;@&#39;%&#39;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql-slave &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">apt-get update;apt-get -y install vim</span><br><span class="line"></span><br><span class="line">cd &#x2F;etc&#x2F;mysql</span><br><span class="line"></span><br><span class="line">vi my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">## 设置server_id,注意要唯一</span><br><span class="line">server-id&#x3D;101</span><br><span class="line">## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用</span><br><span class="line">log-bin&#x3D;mysql-slave-bin</span><br><span class="line">## relay_log配置中继日志</span><br><span class="line">relay_log&#x3D;edu-mysql-relay-bin</span><br><span class="line"></span><br><span class="line">service mysql restart</span><br><span class="line"></span><br><span class="line">docker start mysql-slave;docker exec -it mysql-slave &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#为防止出现错误： Got fatal error 1236 from master when reading data from binary log</span><br><span class="line">#需记下 File, Position</span><br><span class="line">flush logs;</span><br><span class="line">show master status;</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000002&#39;,MASTER_LOG_POS&#x3D;154;</span><br><span class="line">slave start;</span><br><span class="line">show slave status \G;</span><br></pre></td></tr></table></figure><p>查看master ip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format&#x3D;&#39;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#39; mysql-master</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">change master to master_host&#x3D;&#39;172.17.0.3&#39;, master_user&#x3D;&#39;slave&#39;, master_password&#x3D;&#39;123456&#39;, master_port&#x3D;3306, master_log_file&#x3D;&#39;mysql-bin.000002&#39;, master_log_pos&#x3D;154, master_connect_retry&#x3D;30;</span><br></pre></td></tr></table></figure><p>命令说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">master_host ：Master的地址，指的是容器的独立ip,可以通过docker inspect --format&#x3D;&#39;&#123;&#123;.NetworkSettings.IPAddress&#125;&#125;&#39; 容器名称|容器id查询容器的ip</span><br><span class="line"></span><br><span class="line">master_port：Master的端口号，指的是容器的端口号</span><br><span class="line"></span><br><span class="line">master_user：用于数据同步的用户</span><br><span class="line"></span><br><span class="line">master_password：用于同步的用户的密码</span><br><span class="line"></span><br><span class="line">master_log_file：指定 Slave 从哪个日志文件开始复制数据，即上文中提到的 File 字段的值</span><br><span class="line"></span><br><span class="line">master_log_pos：从哪个 Position 开始读，即上文中提到的 Position 字段的值</span><br><span class="line"></span><br><span class="line">master_connect_retry：如果连接失败，重试的时间间隔，单位是秒，默认是60秒</span><br></pre></td></tr></table></figure><p>slave(从)，开启主从同步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#开启主从复制过程</span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line">show slave status \G</span><br><span class="line"></span><br><span class="line">#SlaveIORunning 和 SlaveSQLRunning 都是Yes，说明主从复制已经开启</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop slave;</span><br></pre></td></tr></table></figure><p>测试</p><p>master(主)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database test;</span><br></pre></td></tr></table></figure><p>slave(从)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/songwenjie/p/9371422.html" target="_blank">基于Docker的Mysql主从复制搭建</a><br><a href="https://lanjingling.github.io/2015/10/26/mysql-replication-master-slave/" target="_blank">Mysql 主从复制</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;master(主)：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
      
    
    </summary>
    
    
    
      <category term="docker" scheme="http://brightereyer.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>[docker-compose] 分布式websocket</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581738699000.html/</id>
    <published>2020-02-15T03:51:39.000Z</published>
    <updated>2020-02-15T03:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://gitee.com/holynyll/dockerWeb/blob/master/webapp/docker/docker-compose.yml" target="_blank">分布式websocket</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://gitee.com/holynyll/dockerWeb/blob/master/webapp/docker/docker-compose.yml&quot; target=&quot;_blank&quot;&gt;分布式websocket&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="docker-compose" scheme="http://brightereyer.xyz/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>[springboot] 集成MQTT</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731864000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731864000.html/</id>
    <published>2020-02-15T01:57:44.000Z</published>
    <updated>2020-02-15T01:57:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000017811919" target="_blank">SpringBoot集成MQTT</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000017811919&quot; target=&quot;_blank&quot;&gt;SpringBoot集成MQTT&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://brightereyer.xyz/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>[arm] QEMU模拟mini2440开发环境</title>
    <link href="http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731060000.html/"/>
    <id>http://brightereyer.xyz/2020/02/15/articles/2020/02/15/1581731060000.html/</id>
    <published>2020-02-15T01:44:20.000Z</published>
    <updated>2020-02-15T01:44:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/zwxwill/p/9431774.html" target="_blank">嵌入式linux：通过qemu模拟mini2440开发环境</a></p><p>编译安装QEMU</p><p>首先下载qemu for mini2440</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;repo.or.cz&#x2F;w&#x2F;qemu&#x2F;mini2440.git&#x2F;snapshot&#x2F;HEAD.tar.gz</span><br><span class="line">sudo apt-get install zlib1g-dev</span><br><span class="line">sudo apt-get install libsdl-dev</span><br><span class="line">.&#x2F;configure --target-list&#x3D;arm-softmmu --prefix&#x3D;$HOME&#x2F;work&#x2F;mini2440</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完后，添加环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;bash.bashrc</span><br><span class="line">export PATH&#x3D;$PATH:$HOME&#x2F;work&#x2F;mini2440&#x2F;bin</span><br><span class="line">source &#x2F;etc&#x2F;bash.bashrc</span><br></pre></td></tr></table></figure><p>测试是否正常:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm --version</span><br></pre></td></tr></table></figure><p>使用buildroot一键生成uboot和linux内核及根文件系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;buildroot.org&#x2F;downloads&#x2F;buildroot-2012.05.tar.gz</span><br><span class="line">tar xvf buildroot-2012.05.tar.gz;mv buildroot-2012.05 buildroot;cd buildroot;</span><br><span class="line">sudo apt-get install -y libncurses5-dev</span><br><span class="line">patch configure &lt;..&#x2F;configure.patch    &#x2F;* 需要修改源码 打补丁 *&#x2F;</span><br><span class="line">make mini2440_defconfig</span><br><span class="line">make menuconfig</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y g++ bison flex gettext patch git-core xz-utils automake</span><br><span class="line">tar -zxvf texinfo-4.13a.tar.gz</span><br><span class="line">cd texinfo-4.13</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改bug（注释下面文件中：_GL_WARN_ON_USE (gets,.......  这行代码）:</span><br><span class="line"></span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.in.h</span><br><span class="line">vim output&#x2F;build&#x2F;host-m4-1.4.16&#x2F;lib&#x2F;stdio.h</span><br></pre></td></tr></table></figure><p>在安装 时间比较长（可以先用我提供的安装文件放到buildroot-2012.05/dl目录下，这样省去下载时间）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">链接：</span><br><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1PUxi_DejVo-bgChQH5bzmA</span><br><span class="line">密码：</span><br><span class="line">2dkz</span><br></pre></td></tr></table></figure><p>Flashimg制作nand.bin并启动系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 下载flashimg源码 </span><br><span class="line">git clone http:&#x2F;&#x2F;gitorious.org&#x2F;flashimg&#x2F;flashimg.git</span><br><span class="line">cd flashimg;</span><br><span class="line">.&#x2F;autogen.sh  #（要求autoconf版本大于2.67）</span><br><span class="line">.&#x2F;configure </span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>然后把我们生成的三个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u-boot.bin</span><br><span class="line">uImage</span><br><span class="line">rootfs.jffs2</span><br><span class="line">flashimg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;flashimg -s 64M -t nand -f nand.bin -p uboot.part -w boot,u-boot.bin -w kernel,uImage -w root,rootfs.jffs2 -z 512 </span><br><span class="line">即可生成nand.bin</span><br></pre></td></tr></table></figure><p>启动方法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse</span><br></pre></td></tr></table></figure><p>（若出现错误：浮点数例外启动不了qemu，请全屏最大化终端，再次执行，这是由于分辨率问题造成）</p><p>输入下面指令加载内核和根文件系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nboot kernel </span><br><span class="line">setenv bootargs root&#x3D;&#x2F;dev&#x2F;mtdblock3 rootfstype&#x3D;jffs2 console&#x3D;ttySAC0,115200 </span><br><span class="line">saveenv </span><br><span class="line">bootm</span><br></pre></td></tr></table></figure><p>启动后，输入默认密码root，即可成功登录，此时还没有配置网络。ifconfig发现没有网卡。<br>4 NFS挂在根文件系统<br>首先安装nfs服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nfs-kernel-server </span><br><span class="line"># 新建nfsroot文件夹</span><br><span class="line">mkdir ~work&#x2F;nfsroot </span><br><span class="line"># 然后配置nfs目录 </span><br><span class="line">sudo vi &#x2F;etc&#x2F;exports </span><br><span class="line"># 添加一行</span><br><span class="line">&#x2F;home&#x2F;zwx&#x2F;work&#x2F;nfsroot *(rw,sync,no_root_squash,no_subtree_check</span><br><span class="line"># 然后执行：</span><br><span class="line">sudo &#x2F;etc&#x2F;init.d&#x2F;nfs-kernel-server restart</span><br><span class="line"># 进入NFS共享目录：</span><br><span class="line">cd &#x2F;home&#x2F;zwx&#x2F;work&#x2F;nfsroot&#x2F; </span><br><span class="line"># 修改权限</span><br><span class="line">sudo chmod -R 777 .&#x2F; </span><br><span class="line"># 解压根文件系统</span><br><span class="line">tar xvzf rootfs_qtopia_qt4-20140103.tar.gz</span><br><span class="line">注意：友善之臂提供的qtopia文件系统在挂载时会初始化网卡，但我们是由nfs挂载的文件系统，这会导致nfs连接中断，挂载失败，所以用nfs挂载之前需要把网卡的初始化过程取消，对应的文件是&#x2F;etc&#x2F;init.d&#x2F;if-config，只需把该文件内容删除即可（删除文件也可以）。</span><br><span class="line"></span><br><span class="line">sudo chmod -R 777 .&#x2F; </span><br><span class="line">cd rootfs_qtopia_qt4</span><br><span class="line">cd etc&#x2F;init.d&#x2F;</span><br><span class="line">rm ifconfig-eth0</span><br><span class="line">创建虚拟网卡并配置ip</span><br><span class="line"></span><br><span class="line">sudo apt-get install uml-utilities &#x2F;&#x2F;运行tunctl必须的工具</span><br><span class="line">sudo tunctl -u $USER -t tap0</span><br><span class="line">sudo ifconfig tap0 192.168.42.1</span><br><span class="line">带网络方式启动qemu</span><br><span class="line"></span><br><span class="line">cd &#x2F;home&#x2F;zwx&#x2F;work&#x2F;qemu&#x2F;flashimgflashimg-fb97139</span><br><span class="line">qemu-system-arm -M mini2440 -serial stdio -mtdblock nand.bin -usbdevice mouse -kernel uImage -net nic,vlan&#x3D;0 -net tap,vlan&#x3D;0,ifname&#x3D;tap0,script&#x3D;no,downscript&#x3D;no</span><br><span class="line">启动后进入uboot模式，此时的qemu还不能显示，输入下面指令加载内核和根文件系统。</span><br><span class="line"></span><br><span class="line">set bootargs noinitrd root&#x3D;&#x2F;dev&#x2F;nfs rw nfsroot&#x3D;192.168.42.1:&#x2F;home&#x2F;zwx&#x2F;work&#x2F;nfsroot&#x2F;rootfs_qtopia_qt4&#x2F;,proto&#x3D;tcp,nfsvers&#x3D;3,nolock  ip&#x3D;192.168.42.2:192.168.42.1::255.255.255.0 console&#x3D;ttySAC0,115200</span><br><span class="line">bootm</span><br><span class="line">然后就可以启动了</span><br><span class="line"></span><br><span class="line"> 5 安装交叉编译工具链：</span><br><span class="line"></span><br><span class="line">arm-linux-gcc-4.4.3.tar.gz </span><br><span class="line">安装库：</span><br></pre></td></tr></table></figure><p>sudo apt-get install lib32stdc++6<br>sudo apt-get install lib32z1</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/zwxwill/p/9431774.html&quot; target=&quot;_blank&quot;&gt;嵌入式linux：通过qemu模拟mini2440开发环境&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译安装QEMU&lt;/p&gt;
&lt;p&gt;首先下载qem
      
    
    </summary>
    
    
    
      <category term="arm" scheme="http://brightereyer.xyz/tags/arm/"/>
    
  </entry>
  
</feed>
